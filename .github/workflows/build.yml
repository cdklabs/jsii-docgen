# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: build
on:
  pull_request: {}
  workflow_dispatch: {}
  merge_group: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      self_mutation_happened: ${{ steps.self_mutation.outputs.self_mutation_happened }}
    env:
      CI: "true"
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: Install dependencies
        run: yarn install --check-files
      - name: build
        run: npx projen build
      - name: Find mutations
        id: self_mutation
        run: |-
          git add .
          git diff --staged --patch --exit-code > repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT
        working-directory: ./
      - name: Upload patch
        if: steps.self_mutation.outputs.self_mutation_happened
        uses: actions/upload-artifact@v4.4.0
        with:
          name: repo.patch
          path: repo.patch
          overwrite: true
      - name: Fail build on mutation
        if: steps.self_mutation.outputs.self_mutation_happened
        run: |-
          echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
          cat repo.patch
          exit 1
  self-mutation:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: always() && needs.build.outputs.self_mutation_happened && !(github.event.pull_request.head.repo.full_name != github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Download patch
        uses: actions/download-artifact@v4
        with:
          name: repo.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: '[ -s ${{ runner.temp }}/repo.patch ] && git apply ${{ runner.temp }}/repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Push changes
        env:
          PULL_REQUEST_REF: ${{ github.event.pull_request.head.ref }}
        run: |-
          git add .
          git commit -s -m "chore: self mutation"
          git push origin HEAD:$PULL_REQUEST_REF
  rosetta-matrix:
    runs-on: ${{ matrix.os }}
    permissions: {}
    env:
      CI: "true"
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: Install Rosetta version
        run: yarn add --dev jsii-rosetta@${{ matrix.rosetta }}
      - name: Install dependencies
        run: yarn install --check-files
      - name: compile+test
        run: |-
          npx projen compile
          npx projen test --runInBand
      - name: Check Rosetta version
        run: test $(npx jsii-rosetta --version) = "${{ matrix.rosetta }}"
    strategy:
      matrix:
        include:
          - rosetta: 5.5.0
            os: windows-latest
        rosetta:
          - 1.85.0
          - 5.0.14
          - 5.1.2
          - 5.2.0
          - 5.3.0
          - 5.4.0
          - 5.5.0
        os:
          - ubuntu-latest
  rosetta-compat:
    name: Rosetta Compat Tests
    needs: rosetta-matrix
    runs-on: ubuntu-latest
    permissions: {}
    env:
      CI: "true"
    if: always()
    steps:
      - name: Tests result
        run: echo ${{needs.rosetta-matrix.result}}
      - name: Set status based on matrix build
        if: ${{ needs.rosetta-matrix.result != 'success' }}
        run: exit 1
