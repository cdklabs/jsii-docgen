// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`csharp snapshot 1`] = `
Object {
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "Amazon.CDK.AWS.ECR.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "fqn": "Amazon.CDK.AWS.ECR.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
    Object {
      "fqn": "Amazon.CDK.AWS.ECR.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
    Object {
      "fqn": "Amazon.CDK.AWS.ECR.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
  ],
  "instanceMethods": Array [
    Object {
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.AddToResourcePolicy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Statement",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.statement",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "Amazon.CDK.AWS.IAM.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "private AddToResourcePolicy(PolicyStatement Statement)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.Grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "Amazon.CDK.AWS.IAM.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Actions",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.actions",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
      ],
      "usage": "private Grant(IGrantable Grantee, string Actions)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.GrantPull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "Amazon.CDK.AWS.IAM.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "private GrantPull(IGrantable Grantee)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.GrantPullPush",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "Amazon.CDK.AWS.IAM.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "private GrantPullPush(IGrantable Grantee)",
    },
    Object {
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "Amazon.CDK.AWS.Events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "private OnCloudTrailEvent(string Id, OnEventOptions Options = null)",
    },
    Object {
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailImagePushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "Amazon.CDK.AWS.ECR.OnCloudTrailImagePushedOptions",
                "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "private OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)",
    },
    Object {
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "Amazon.CDK.AWS.Events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "private OnEvent(string Id, OnEventOptions Options = null)",
    },
    Object {
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnImageScanCompleted",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "Amazon.CDK.AWS.ECR.OnImageScanCompletedOptions",
                "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "private OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)",
    },
    Object {
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.RepositoryUriForDigest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Digest",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.digest",
          "optional": true,
          "type": Object {
            "name": "string",
          },
        },
      ],
      "usage": "private RepositoryUriForDigest(string Digest = null)",
    },
    Object {
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.RepositoryUriForTag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.parameter.Tag",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.tag",
          "optional": true,
          "type": Object {
            "name": "string",
          },
        },
      ],
      "usage": "private RepositoryUriForTag(string Tag = null)",
    },
  ],
  "interfaces": Array [
    Object {
      "fqn": "Amazon.CDK.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.Node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "Amazon.CDK.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public ConstructNode Node { get; }",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.Env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "Amazon.CDK.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public ResourceEnvironment Env { get; }",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.Stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "Amazon.CDK.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public Stack Stack { get; }",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.RepositoryArn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "name": "string",
      },
      "usage": "public string RepositoryArn { get; }",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.RepositoryName",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "name": "string",
      },
      "usage": "public string RepositoryName { get; }",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.RepositoryUri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "name": "string",
      },
      "usage": "public string RepositoryUri { get; }",
    },
  ],
}
`;

exports[`csharp snapshot 2`] = `
" IRepository <a id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* <a href=\\"#@aws-cdk/core.IResource\\">IResource</a>

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">AddToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">Grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">GrantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">GrantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">OnCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">OnCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">OnEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">OnImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">RepositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">RepositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

## \`AddToResourcePolicy\` <a id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

<pre lang=\\"csharp\\">
private AddToResourcePolicy(PolicyStatement Statement)
</pre>

### \`Statement\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.statement\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.PolicyStatement\\">PolicyStatement</a>

---

## \`Grant\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

<pre lang=\\"csharp\\">
private Grant(IGrantable Grantee, string Actions)
</pre>

### \`Grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

### \`Actions\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.actions\\"></a>

- *Type:* string

---

## \`GrantPull\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

<pre lang=\\"csharp\\">
private GrantPull(IGrantable Grantee)
</pre>

### \`Grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

## \`GrantPullPush\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

<pre lang=\\"csharp\\">
private GrantPullPush(IGrantable Grantee)
</pre>

### \`Grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

## \`OnCloudTrailEvent\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

<pre lang=\\"csharp\\">
private OnCloudTrailEvent(string Id, OnEventOptions Options = null)
</pre>

### \`Id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

### \`Options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.OnEventOptions\\">OnEventOptions</a>

Options for adding the rule.

---

## \`OnCloudTrailImagePushed\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

<pre lang=\\"csharp\\">
private OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)
</pre>

### \`Id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

### \`Options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

## \`OnEvent\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

<pre lang=\\"csharp\\">
private OnEvent(string Id, OnEventOptions Options = null)
</pre>

### \`Id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* string

---

### \`Options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.OnEventOptions\\">OnEventOptions</a>

---

## \`OnImageScanCompleted\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

<pre lang=\\"csharp\\">
private OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)
</pre>

### \`Id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

### \`Options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

## \`RepositoryUriForDigest\` <a id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

<pre lang=\\"csharp\\">
private RepositoryUriForDigest(string Digest = null)
</pre>

### \`Digest\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.digest\\"></a>

- *Type:* string

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

## \`RepositoryUriForTag\` <a id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

<pre lang=\\"csharp\\">
private RepositoryUriForTag(string Tag = null)
</pre>

### \`Tag\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.tag\\"></a>

- *Type:* string

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

# Properties <a id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">Node</a></code> | <code><a href=\\"#@aws-cdk/core.ConstructNode\\">ConstructNode</a></code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">Env</a></code> | <code><a href=\\"#@aws-cdk/core.ResourceEnvironment\\">ResourceEnvironment</a></code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">Stack</a></code> | <code><a href=\\"#@aws-cdk/core.Stack\\">Stack</a></code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">RepositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

## \`Node\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

<pre lang=\\"csharp\\">
public ConstructNode Node { get; }
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.ConstructNode\\">ConstructNode</a>

The construct tree node for this construct.

---

## \`Env\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

<pre lang=\\"csharp\\">
public ResourceEnvironment Env { get; }
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.ResourceEnvironment\\">ResourceEnvironment</a>

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

## \`Stack\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

<pre lang=\\"csharp\\">
public Stack Stack { get; }
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.Stack\\">Stack</a>

The stack in which this resource is defined.

---

## \`RepositoryArn\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

<pre lang=\\"csharp\\">
public string RepositoryArn { get; }
</pre>

- *Type:* string

The ARN of the repository.

---

## \`RepositoryName\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

<pre lang=\\"csharp\\">
public string RepositoryName { get; }
</pre>

- *Type:* string

The name of the repository.

---

## \`RepositoryUri\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

<pre lang=\\"csharp\\">
public string RepositoryUri { get; }
</pre>

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`java snapshot 1`] = `
Object {
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "software.amazon.awscdk.services.ecr.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "fqn": "software.amazon.awscdk.services.ecr.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
    Object {
      "fqn": "software.amazon.awscdk.services.ecr.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
    Object {
      "fqn": "software.amazon.awscdk.services.ecr.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
  ],
  "instanceMethods": Array [
    Object {
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.addToResourcePolicy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.statement",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.statement",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "software.amazon.awscdk.services.iam.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public addToResourcePolicy(PolicyStatement statement)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "software.amazon.awscdk.services.iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.actions",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.actions",
          "optional": undefined,
          "type": Object {
            "name": "java.lang.String",
          },
        },
      ],
      "usage": "public grant(IGrantable grantee, java.lang.String actions)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.grantPull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "software.amazon.awscdk.services.iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public grantPull(IGrantable grantee)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.grantPullPush",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "software.amazon.awscdk.services.iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public grantPullPush(IGrantable grantee)",
    },
    Object {
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.onCloudTrailEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "java.lang.String",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "software.amazon.awscdk.services.events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public onCloudTrailEvent(java.lang.String id)
public onCloudTrailEvent(java.lang.String id, OnEventOptions options)",
    },
    Object {
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.onCloudTrailImagePushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "java.lang.String",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "software.amazon.awscdk.services.ecr.OnCloudTrailImagePushedOptions",
                "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public onCloudTrailImagePushed(java.lang.String id)
public onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)",
    },
    Object {
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.onEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "java.lang.String",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "software.amazon.awscdk.services.events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public onEvent(java.lang.String id)
public onEvent(java.lang.String id, OnEventOptions options)",
    },
    Object {
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.onImageScanCompleted",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "java.lang.String",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "software.amazon.awscdk.services.ecr.OnImageScanCompletedOptions",
                "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public onImageScanCompleted(java.lang.String id)
public onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)",
    },
    Object {
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.repositoryUriForDigest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.digest",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.digest",
          "optional": true,
          "type": Object {
            "name": "java.lang.String",
          },
        },
      ],
      "usage": "public repositoryUriForDigest()
public repositoryUriForDigest(java.lang.String digest)",
    },
    Object {
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.repositoryUriForTag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.parameter.tag",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.tag",
          "optional": true,
          "type": Object {
            "name": "java.lang.String",
          },
        },
      ],
      "usage": "public repositoryUriForTag()
public repositoryUriForTag(java.lang.String tag)",
    },
  ],
  "interfaces": Array [
    Object {
      "fqn": "software.amazon.awscdk.core.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "software.amazon.awscdk.core.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public ConstructNode getNode();",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "software.amazon.awscdk.core.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public ResourceEnvironment getEnv();",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "software.amazon.awscdk.core.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public Stack getStack();",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.repositoryArn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "name": "java.lang.String",
      },
      "usage": "public java.lang.String getRepositoryArn();",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.repositoryName",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "name": "java.lang.String",
      },
      "usage": "public java.lang.String getRepositoryName();",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.repositoryUri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "name": "java.lang.String",
      },
      "usage": "public java.lang.String getRepositoryUri();",
    },
  ],
}
`;

exports[`java snapshot 2`] = `
" IRepository <a id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* <a href=\\"#@aws-cdk/core.IResource\\">IResource</a>

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

## \`addToResourcePolicy\` <a id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

<pre lang=\\"java\\">
public addToResourcePolicy(PolicyStatement statement)
</pre>

### \`statement\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.statement\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.PolicyStatement\\">PolicyStatement</a>

---

## \`grant\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

<pre lang=\\"java\\">
public grant(IGrantable grantee, java.lang.String actions)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

### \`actions\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.actions\\"></a>

- *Type:* java.lang.String

---

## \`grantPull\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

<pre lang=\\"java\\">
public grantPull(IGrantable grantee)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

## \`grantPullPush\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

<pre lang=\\"java\\">
public grantPullPush(IGrantable grantee)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

## \`onCloudTrailEvent\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

<pre lang=\\"java\\">
public onCloudTrailEvent(java.lang.String id)
public onCloudTrailEvent(java.lang.String id, OnEventOptions options)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.OnEventOptions\\">OnEventOptions</a>

Options for adding the rule.

---

## \`onCloudTrailImagePushed\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

<pre lang=\\"java\\">
public onCloudTrailImagePushed(java.lang.String id)
public onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

## \`onEvent\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

<pre lang=\\"java\\">
public onEvent(java.lang.String id)
public onEvent(java.lang.String id, OnEventOptions options)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* java.lang.String

---

### \`options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.OnEventOptions\\">OnEventOptions</a>

---

## \`onImageScanCompleted\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

<pre lang=\\"java\\">
public onImageScanCompleted(java.lang.String id)
public onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

## \`repositoryUriForDigest\` <a id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

<pre lang=\\"java\\">
public repositoryUriForDigest()
public repositoryUriForDigest(java.lang.String digest)
</pre>

### \`digest\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.digest\\"></a>

- *Type:* java.lang.String

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

## \`repositoryUriForTag\` <a id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

<pre lang=\\"java\\">
public repositoryUriForTag()
public repositoryUriForTag(java.lang.String tag)
</pre>

### \`tag\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.tag\\"></a>

- *Type:* java.lang.String

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

# Properties <a id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code><a href=\\"#@aws-cdk/core.ConstructNode\\">ConstructNode</a></code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code><a href=\\"#@aws-cdk/core.ResourceEnvironment\\">ResourceEnvironment</a></code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code><a href=\\"#@aws-cdk/core.Stack\\">Stack</a></code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repositoryUri</a></code> | <code>java.lang.String</code> | The URI of this repository (represents the latest image):. |

---

## \`node\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

<pre lang=\\"java\\">
public ConstructNode getNode();
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.ConstructNode\\">ConstructNode</a>

The construct tree node for this construct.

---

## \`env\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

<pre lang=\\"java\\">
public ResourceEnvironment getEnv();
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.ResourceEnvironment\\">ResourceEnvironment</a>

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

## \`stack\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

<pre lang=\\"java\\">
public Stack getStack();
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.Stack\\">Stack</a>

The stack in which this resource is defined.

---

## \`repositoryArn\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

<pre lang=\\"java\\">
public java.lang.String getRepositoryArn();
</pre>

- *Type:* java.lang.String

The ARN of the repository.

---

## \`repositoryName\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

<pre lang=\\"java\\">
public java.lang.String getRepositoryName();
</pre>

- *Type:* java.lang.String

The name of the repository.

---

## \`repositoryUri\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

<pre lang=\\"java\\">
public java.lang.String getRepositoryUri();
</pre>

- *Type:* java.lang.String

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`python snapshot 1`] = `
Object {
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "aws_cdk.aws_ecr.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "fqn": "aws_cdk.aws_ecr.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
    Object {
      "fqn": "aws_cdk.aws_ecr.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
    Object {
      "fqn": "aws_cdk.aws_ecr.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
  ],
  "instanceMethods": Array [
    Object {
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.add_to_resource_policy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.statement",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.statement",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_iam.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "def add_to_resource_policy(
  statement: PolicyStatement
)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.actions",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.actions",
          "optional": undefined,
          "type": Object {
            "name": "str",
          },
        },
      ],
      "usage": "def grant(
  grantee: IGrantable,
  actions: str
)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "def grant_pull(
  grantee: IGrantable
)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull_push",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "def grant_pull_push(
  grantee: IGrantable
)",
    },
    Object {
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No description",
          "docs": Object {
            "summary": "A description of the rule's purpose.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.description",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.description",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No additional filtering based on an event pattern.",
          "docs": Object {
            "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
            "see": "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
            "summary": "Additional restrictions for the event to route to the specified target.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.event_pattern",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.eventPattern",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_events.EventPattern",
                "id": "@aws-cdk/aws-events.EventPattern",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": "AWS CloudFormation generates a unique physical ID.",
          "docs": Object {
            "summary": "A name for the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.rule_name",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.ruleName",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
          "docs": Object {
            "summary": "The target to register for the event.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.target",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.target",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_events.IRuleTarget",
                "id": "@aws-cdk/aws-events.IRuleTarget",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)",
    },
    Object {
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No description",
          "docs": Object {
            "summary": "A description of the rule's purpose.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.description",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.description",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No additional filtering based on an event pattern.",
          "docs": Object {
            "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
            "see": "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
            "summary": "Additional restrictions for the event to route to the specified target.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.event_pattern",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.eventPattern",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_events.EventPattern",
                "id": "@aws-cdk/aws-events.EventPattern",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": "AWS CloudFormation generates a unique physical ID.",
          "docs": Object {
            "summary": "A name for the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.rule_name",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.ruleName",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
          "docs": Object {
            "summary": "The target to register for the event.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.target",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.target",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_events.IRuleTarget",
                "id": "@aws-cdk/aws-events.IRuleTarget",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": "- Watch changes to all tags",
          "docs": Object {
            "summary": "Only watch changes to this image tag.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.image_tag",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.imageTag",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
      ],
      "usage": "def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)",
    },
    Object {
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.on_event",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No description",
          "docs": Object {
            "summary": "A description of the rule's purpose.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.description",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.description",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No additional filtering based on an event pattern.",
          "docs": Object {
            "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
            "see": "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
            "summary": "Additional restrictions for the event to route to the specified target.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.event_pattern",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.eventPattern",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_events.EventPattern",
                "id": "@aws-cdk/aws-events.EventPattern",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": "AWS CloudFormation generates a unique physical ID.",
          "docs": Object {
            "summary": "A name for the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.rule_name",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.ruleName",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
          "docs": Object {
            "summary": "The target to register for the event.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.target",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.target",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_events.IRuleTarget",
                "id": "@aws-cdk/aws-events.IRuleTarget",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)",
    },
    Object {
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No description",
          "docs": Object {
            "summary": "A description of the rule's purpose.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.description",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.description",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No additional filtering based on an event pattern.",
          "docs": Object {
            "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
            "see": "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
            "summary": "Additional restrictions for the event to route to the specified target.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.event_pattern",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.eventPattern",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_events.EventPattern",
                "id": "@aws-cdk/aws-events.EventPattern",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": "AWS CloudFormation generates a unique physical ID.",
          "docs": Object {
            "summary": "A name for the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.rule_name",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.ruleName",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
        Object {
          "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
          "docs": Object {
            "summary": "The target to register for the event.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.target",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.target",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "aws_cdk.aws_events.IRuleTarget",
                "id": "@aws-cdk/aws-events.IRuleTarget",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": "- Watch the changes to the repository with all image tags",
          "docs": Object {
            "remarks": "Leave it undefined to watch the full repository.",
            "summary": "Only watch changes to the image tags spedified.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.image_tags",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.imageTags",
          "optional": true,
          "type": Object {
            "name": "typing.List[%]",
            "types": Array [
              Object {
                "name": "str",
              },
            ],
          },
        },
      ],
      "usage": "def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)",
    },
    Object {
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_digest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.digest",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.digest",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
      ],
      "usage": "def repository_uri_for_digest(
  digest: str = None
)",
    },
    Object {
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_tag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.parameter.tag",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.tag",
          "optional": true,
          "type": Object {
            "name": "str",
          },
        },
      ],
      "usage": "def repository_uri_for_tag(
  tag: str = None
)",
    },
  ],
  "interfaces": Array [
    Object {
      "fqn": "aws_cdk.core.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "aws_cdk.core.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "node: ConstructNode",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "aws_cdk.core.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "env: ResourceEnvironment",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "aws_cdk.core.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "stack: Stack",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_arn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "name": "str",
      },
      "usage": "repository_arn: str",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_name",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "name": "str",
      },
      "usage": "repository_name: str",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_uri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "name": "str",
      },
      "usage": "repository_uri: str",
    },
  ],
}
`;

exports[`python snapshot 2`] = `
" IRepository <a id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* <a href=\\"#@aws-cdk/core.IResource\\">IResource</a>

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">add_to_resource_policy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grant_pull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grant_pull_push</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">on_cloud_trail_event</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">on_cloud_trail_image_pushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">on_event</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">on_image_scan_completed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repository_uri_for_digest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repository_uri_for_tag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

## \`add_to_resource_policy\` <a id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

<pre lang=\\"python\\">
def add_to_resource_policy(
  statement: PolicyStatement
)
</pre>

### \`statement\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.statement\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.PolicyStatement\\">PolicyStatement</a>

---

## \`grant\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

<pre lang=\\"python\\">
def grant(
  grantee: IGrantable,
  actions: str
)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

### \`actions\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.actions\\"></a>

- *Type:* str

---

## \`grant_pull\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

<pre lang=\\"python\\">
def grant_pull(
  grantee: IGrantable
)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

## \`grant_pull_push\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

<pre lang=\\"python\\">
def grant_pull_push(
  grantee: IGrantable
)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

## \`on_cloud_trail_event\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

<pre lang=\\"python\\">
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

### \`description\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

### \`event_pattern\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.eventPattern\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.EventPattern\\">EventPattern</a>
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

### \`rule_name\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

### \`target\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.target\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.IRuleTarget\\">IRuleTarget</a>
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

## \`on_cloud_trail_image_pushed\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

<pre lang=\\"python\\">
def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

### \`description\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

### \`event_pattern\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.eventPattern\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.EventPattern\\">EventPattern</a>
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

### \`rule_name\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

### \`target\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.target\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.IRuleTarget\\">IRuleTarget</a>
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

### \`image_tag\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.imageTag\\"></a>

- *Type:* str
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

## \`on_event\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

<pre lang=\\"python\\">
def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* str

---

### \`description\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

### \`event_pattern\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.eventPattern\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.EventPattern\\">EventPattern</a>
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

### \`rule_name\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

### \`target\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.target\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.IRuleTarget\\">IRuleTarget</a>
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

## \`on_image_scan_completed\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

<pre lang=\\"python\\">
def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

### \`description\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

### \`event_pattern\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.eventPattern\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.EventPattern\\">EventPattern</a>
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

### \`rule_name\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

### \`target\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.target\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.IRuleTarget\\">IRuleTarget</a>
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

### \`image_tags\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.imageTags\\"></a>

- *Type:* typing.List[str]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

## \`repository_uri_for_digest\` <a id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

<pre lang=\\"python\\">
def repository_uri_for_digest(
  digest: str = None
)
</pre>

### \`digest\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.digest\\"></a>

- *Type:* str

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

## \`repository_uri_for_tag\` <a id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

<pre lang=\\"python\\">
def repository_uri_for_tag(
  tag: str = None
)
</pre>

### \`tag\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.tag\\"></a>

- *Type:* str

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

# Properties <a id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code><a href=\\"#@aws-cdk/core.ConstructNode\\">ConstructNode</a></code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code><a href=\\"#@aws-cdk/core.ResourceEnvironment\\">ResourceEnvironment</a></code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code><a href=\\"#@aws-cdk/core.Stack\\">Stack</a></code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repository_uri</a></code> | <code>str</code> | The URI of this repository (represents the latest image):. |

---

## \`node\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

<pre lang=\\"python\\">
node: ConstructNode
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.ConstructNode\\">ConstructNode</a>

The construct tree node for this construct.

---

## \`env\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

<pre lang=\\"python\\">
env: ResourceEnvironment
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.ResourceEnvironment\\">ResourceEnvironment</a>

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

## \`stack\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

<pre lang=\\"python\\">
stack: Stack
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.Stack\\">Stack</a>

The stack in which this resource is defined.

---

## \`repository_arn\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

<pre lang=\\"python\\">
repository_arn: str
</pre>

- *Type:* str

The ARN of the repository.

---

## \`repository_name\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

<pre lang=\\"python\\">
repository_name: str
</pre>

- *Type:* str

The name of the repository.

---

## \`repository_uri\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

<pre lang=\\"python\\">
repository_uri: str
</pre>

- *Type:* str

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`typescript snapshot 1`] = `
Object {
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "@aws-cdk/aws-ecr.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "fqn": "@aws-cdk/aws-ecr.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
    Object {
      "fqn": "@aws-cdk/aws-ecr.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
    Object {
      "fqn": "@aws-cdk/aws-ecr.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
  ],
  "instanceMethods": Array [
    Object {
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.statement",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.statement",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public addToResourcePolicy(statement: PolicyStatement)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.actions",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.actions",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
      ],
      "usage": "public grant(grantee: IGrantable, actions: string)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public grantPull(grantee: IGrantable)",
    },
    Object {
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public grantPullPush(grantee: IGrantable)",
    },
    Object {
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "@aws-cdk/aws-events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public onCloudTrailEvent(id: string, options?: OnEventOptions)",
    },
    Object {
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions)",
    },
    Object {
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "@aws-cdk/aws-events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public onEvent(id: string, options?: OnEventOptions)",
    },
    Object {
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.id",
          "optional": undefined,
          "type": Object {
            "name": "string",
          },
        },
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.options",
          "optional": true,
          "type": Object {
            "name": "%",
            "types": Array [
              Object {
                "fqn": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "1.106.0",
                "submodule": undefined,
              },
            ],
          },
        },
      ],
      "usage": "public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions)",
    },
    Object {
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.digest",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.digest",
          "optional": true,
          "type": Object {
            "name": "string",
          },
        },
      ],
      "usage": "public repositoryUriForDigest(digest?: string)",
    },
    Object {
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.parameter.tag",
          "id": "@aws-cdk/aws-ecr.IRepository.parameter.tag",
          "optional": true,
          "type": Object {
            "name": "string",
          },
        },
      ],
      "usage": "public repositoryUriForTag(tag?: string)",
    },
  ],
  "interfaces": Array [
    Object {
      "fqn": "@aws-cdk/core.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
      "submodule": undefined,
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "@aws-cdk/core.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public readonly node: ConstructNode;",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "@aws-cdk/core.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public readonly env: ResourceEnvironment;",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "name": "%",
        "types": Array [
          Object {
            "fqn": "@aws-cdk/core.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
      },
      "usage": "public readonly stack: Stack;",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "name": "string",
      },
      "usage": "public readonly repositoryArn: string;",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "name": "string",
      },
      "usage": "public readonly repositoryName: string;",
    },
    Object {
      "default": undefined,
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "name": "string",
      },
      "usage": "public readonly repositoryUri: string;",
    },
  ],
}
`;

exports[`typescript snapshot 2`] = `
" IRepository <a id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* <a href=\\"#@aws-cdk/core.IResource\\">IResource</a>

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

## \`addToResourcePolicy\` <a id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

<pre lang=\\"typescript\\">
public addToResourcePolicy(statement: PolicyStatement)
</pre>

### \`statement\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.statement\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.PolicyStatement\\">PolicyStatement</a>

---

## \`grant\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

<pre lang=\\"typescript\\">
public grant(grantee: IGrantable, actions: string)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

### \`actions\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.actions\\"></a>

- *Type:* string

---

## \`grantPull\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

<pre lang=\\"typescript\\">
public grantPull(grantee: IGrantable)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

## \`grantPullPush\` <a id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

<pre lang=\\"typescript\\">
public grantPullPush(grantee: IGrantable)
</pre>

### \`grantee\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-iam.IGrantable\\">IGrantable</a>

---

## \`onCloudTrailEvent\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

<pre lang=\\"typescript\\">
public onCloudTrailEvent(id: string, options?: OnEventOptions)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.OnEventOptions\\">OnEventOptions</a>

Options for adding the rule.

---

## \`onCloudTrailImagePushed\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

<pre lang=\\"typescript\\">
public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

## \`onEvent\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

<pre lang=\\"typescript\\">
public onEvent(id: string, options?: OnEventOptions)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* string

---

### \`options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-events.OnEventOptions\\">OnEventOptions</a>

---

## \`onImageScanCompleted\` <a id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

<pre lang=\\"typescript\\">
public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions)
</pre>

### \`id\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

## \`repositoryUriForDigest\` <a id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

<pre lang=\\"typescript\\">
public repositoryUriForDigest(digest?: string)
</pre>

### \`digest\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.digest\\"></a>

- *Type:* string

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

## \`repositoryUriForTag\` <a id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

<pre lang=\\"typescript\\">
public repositoryUriForTag(tag?: string)
</pre>

### \`tag\`<sup>Optional</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.parameter.tag\\"></a>

- *Type:* string

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

# Properties <a id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code><a href=\\"#@aws-cdk/core.ConstructNode\\">ConstructNode</a></code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code><a href=\\"#@aws-cdk/core.ResourceEnvironment\\">ResourceEnvironment</a></code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code><a href=\\"#@aws-cdk/core.Stack\\">Stack</a></code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

## \`node\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

<pre lang=\\"typescript\\">
public readonly node: ConstructNode;
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.ConstructNode\\">ConstructNode</a>

The construct tree node for this construct.

---

## \`env\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

<pre lang=\\"typescript\\">
public readonly env: ResourceEnvironment;
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.ResourceEnvironment\\">ResourceEnvironment</a>

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

## \`stack\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

<pre lang=\\"typescript\\">
public readonly stack: Stack;
</pre>

- *Type:* <a href=\\"#@aws-cdk/core.Stack\\">Stack</a>

The stack in which this resource is defined.

---

## \`repositoryArn\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

<pre lang=\\"typescript\\">
public readonly repositoryArn: string;
</pre>

- *Type:* string

The ARN of the repository.

---

## \`repositoryName\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

<pre lang=\\"typescript\\">
public readonly repositoryName: string;
</pre>

- *Type:* string

The name of the repository.

---

## \`repositoryUri\`<sup>Required</sup> <a id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

<pre lang=\\"typescript\\">
public readonly repositoryUri: string;
</pre>

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;
