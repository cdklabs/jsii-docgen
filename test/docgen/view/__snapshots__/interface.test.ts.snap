// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`csharp snapshot 1`] = `
" IRepository <a name=\\"Amazon.CDK.AWS.ECR.IRepository\\" id=\\"amazoncdkawsecrirepository\\"></a>

- *Extends:* [\`Amazon.CDK.IResource\`](#Amazon.CDK.IResource)

- *Implemented By:* [\`Amazon.CDK.AWS.ECR.Repository\`](#Amazon.CDK.AWS.ECR.Repository), [\`Amazon.CDK.AWS.ECR.RepositoryBase\`](#Amazon.CDK.AWS.ECR.RepositoryBase), [\`Amazon.CDK.AWS.ECR.IRepository\`](#Amazon.CDK.AWS.ECR.IRepository)

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| [\`AddToResourcePolicy\`](#amazoncdkawsecrirepositoryaddtoresourcepolicy) | Add a policy statement to the repository's resource policy. |
| [\`Grant\`](#amazoncdkawsecrirepositorygrant) | Grant the given principal identity permissions to perform the actions on this repository. |
| [\`GrantPull\`](#amazoncdkawsecrirepositorygrantpull) | Grant the given identity permissions to pull images in this repository. |
| [\`GrantPullPush\`](#amazoncdkawsecrirepositorygrantpullpush) | Grant the given identity permissions to pull and push images to this repository. |
| [\`OnCloudTrailEvent\`](#amazoncdkawsecrirepositoryoncloudtrailevent) | Define a CloudWatch event that triggers when something happens to this repository. |
| [\`OnCloudTrailImagePushed\`](#amazoncdkawsecrirepositoryoncloudtrailimagepushed) | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| [\`OnEvent\`](#amazoncdkawsecrirepositoryonevent) | Defines a CloudWatch event rule which triggers for repository events. |
| [\`OnImageScanCompleted\`](#amazoncdkawsecrirepositoryonimagescancompleted) | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| [\`RepositoryUriForDigest\`](#amazoncdkawsecrirepositoryrepositoryurifordigest) | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| [\`RepositoryUriForTag\`](#amazoncdkawsecrirepositoryrepositoryurifortag) | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

## \`AddToResourcePolicy\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.AddToResourcePolicy\\" id=\\"amazoncdkawsecrirepositoryaddtoresourcepolicy\\"></a>

\`\`\`csharp
private AddToResourcePolicy(PolicyStatement Statement)
\`\`\`

### \`Statement\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Statement\\" id=\\"amazoncdkawsecrirepositoryparameterstatement\\"></a>

- *Type:* [\`Amazon.CDK.AWS.IAM.PolicyStatement\`](#Amazon.CDK.AWS.IAM.PolicyStatement)

---

## \`Grant\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.Grant\\" id=\\"amazoncdkawsecrirepositorygrant\\"></a>

\`\`\`csharp
private Grant(IGrantable Grantee, string Actions)
\`\`\`

### \`Grantee\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Grantee\\" id=\\"amazoncdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`Amazon.CDK.AWS.IAM.IGrantable\`](#Amazon.CDK.AWS.IAM.IGrantable)

---

### \`Actions\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Actions\\" id=\\"amazoncdkawsecrirepositoryparameteractions\\"></a>

- *Type:* \`string\`

---

## \`GrantPull\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.GrantPull\\" id=\\"amazoncdkawsecrirepositorygrantpull\\"></a>

\`\`\`csharp
private GrantPull(IGrantable Grantee)
\`\`\`

### \`Grantee\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Grantee\\" id=\\"amazoncdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`Amazon.CDK.AWS.IAM.IGrantable\`](#Amazon.CDK.AWS.IAM.IGrantable)

---

## \`GrantPullPush\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.GrantPullPush\\" id=\\"amazoncdkawsecrirepositorygrantpullpush\\"></a>

\`\`\`csharp
private GrantPullPush(IGrantable Grantee)
\`\`\`

### \`Grantee\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Grantee\\" id=\\"amazoncdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`Amazon.CDK.AWS.IAM.IGrantable\`](#Amazon.CDK.AWS.IAM.IGrantable)

---

## \`OnCloudTrailEvent\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailEvent\\" id=\\"amazoncdkawsecrirepositoryoncloudtrailevent\\"></a>

\`\`\`csharp
private OnCloudTrailEvent(string Id, OnEventOptions Options = null)
\`\`\`

### \`Id\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Id\\" id=\\"amazoncdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`string\`

The id of the rule.

---

### \`Options\`<sup>Optional</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Options\\" id=\\"amazoncdkawsecrirepositoryparameteroptions\\"></a>

- *Type:* [\`Amazon.CDK.AWS.Events.OnEventOptions\`](#Amazon.CDK.AWS.Events.OnEventOptions)

Options for adding the rule.

---

## \`OnCloudTrailImagePushed\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailImagePushed\\" id=\\"amazoncdkawsecrirepositoryoncloudtrailimagepushed\\"></a>

\`\`\`csharp
private OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)
\`\`\`

### \`Id\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Id\\" id=\\"amazoncdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`string\`

The id of the rule.

---

### \`Options\`<sup>Optional</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Options\\" id=\\"amazoncdkawsecrirepositoryparameteroptions\\"></a>

- *Type:* [\`Amazon.CDK.AWS.ECR.OnCloudTrailImagePushedOptions\`](#Amazon.CDK.AWS.ECR.OnCloudTrailImagePushedOptions)

Options for adding the rule.

---

## \`OnEvent\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.OnEvent\\" id=\\"amazoncdkawsecrirepositoryonevent\\"></a>

\`\`\`csharp
private OnEvent(string Id, OnEventOptions Options = null)
\`\`\`

### \`Id\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Id\\" id=\\"amazoncdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`string\`

---

### \`Options\`<sup>Optional</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Options\\" id=\\"amazoncdkawsecrirepositoryparameteroptions\\"></a>

- *Type:* [\`Amazon.CDK.AWS.Events.OnEventOptions\`](#Amazon.CDK.AWS.Events.OnEventOptions)

---

## \`OnImageScanCompleted\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.OnImageScanCompleted\\" id=\\"amazoncdkawsecrirepositoryonimagescancompleted\\"></a>

\`\`\`csharp
private OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)
\`\`\`

### \`Id\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Id\\" id=\\"amazoncdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`string\`

The id of the rule.

---

### \`Options\`<sup>Optional</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Options\\" id=\\"amazoncdkawsecrirepositoryparameteroptions\\"></a>

- *Type:* [\`Amazon.CDK.AWS.ECR.OnImageScanCompletedOptions\`](#Amazon.CDK.AWS.ECR.OnImageScanCompletedOptions)

Options for adding the rule.

---

## \`RepositoryUriForDigest\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.RepositoryUriForDigest\\" id=\\"amazoncdkawsecrirepositoryrepositoryurifordigest\\"></a>

\`\`\`csharp
private RepositoryUriForDigest(string Digest = null)
\`\`\`

### \`Digest\`<sup>Optional</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Digest\\" id=\\"amazoncdkawsecrirepositoryparameterdigest\\"></a>

- *Type:* \`string\`

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

## \`RepositoryUriForTag\` <a name=\\"Amazon.CDK.AWS.ECR.IRepository.RepositoryUriForTag\\" id=\\"amazoncdkawsecrirepositoryrepositoryurifortag\\"></a>

\`\`\`csharp
private RepositoryUriForTag(string Tag = null)
\`\`\`

### \`Tag\`<sup>Optional</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.parameter.Tag\\" id=\\"amazoncdkawsecrirepositoryparametertag\\"></a>

- *Type:* \`string\`

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

# Properties <a name=\\"Properties\\" id=\\"properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| [\`Node\`](#amazoncdkawsecrirepositorypropertynode)<span title=\\"Required\\">*</span> | [\`Amazon.CDK.ConstructNode\`](#Amazon.CDK.ConstructNode) | The construct tree node for this construct. |
| [\`Env\`](#amazoncdkawsecrirepositorypropertyenv)<span title=\\"Required\\">*</span> | [\`Amazon.CDK.ResourceEnvironment\`](#Amazon.CDK.ResourceEnvironment) | The environment this resource belongs to. |
| [\`Stack\`](#amazoncdkawsecrirepositorypropertystack)<span title=\\"Required\\">*</span> | [\`Amazon.CDK.Stack\`](#Amazon.CDK.Stack) | The stack in which this resource is defined. |
| [\`RepositoryArn\`](#amazoncdkawsecrirepositorypropertyrepositoryarn)<span title=\\"Required\\">*</span> | \`string\` | The ARN of the repository. |
| [\`RepositoryName\`](#amazoncdkawsecrirepositorypropertyrepositoryname)<span title=\\"Required\\">*</span> | \`string\` | The name of the repository. |
| [\`RepositoryUri\`](#amazoncdkawsecrirepositorypropertyrepositoryuri)<span title=\\"Required\\">*</span> | \`string\` | The URI of this repository (represents the latest image):. |

---

## \`Node\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.property.Node\\" id=\\"amazoncdkawsecrirepositorypropertynode\\"></a>

\`\`\`csharp
public ConstructNode Node { get; }
\`\`\`

- *Type:* [\`Amazon.CDK.ConstructNode\`](#Amazon.CDK.ConstructNode)

The construct tree node for this construct.

---

## \`Env\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.property.Env\\" id=\\"amazoncdkawsecrirepositorypropertyenv\\"></a>

\`\`\`csharp
public ResourceEnvironment Env { get; }
\`\`\`

- *Type:* [\`Amazon.CDK.ResourceEnvironment\`](#Amazon.CDK.ResourceEnvironment)

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

## \`Stack\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.property.Stack\\" id=\\"amazoncdkawsecrirepositorypropertystack\\"></a>

\`\`\`csharp
public Stack Stack { get; }
\`\`\`

- *Type:* [\`Amazon.CDK.Stack\`](#Amazon.CDK.Stack)

The stack in which this resource is defined.

---

## \`RepositoryArn\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.property.RepositoryArn\\" id=\\"amazoncdkawsecrirepositorypropertyrepositoryarn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; }
\`\`\`

- *Type:* \`string\`

The ARN of the repository.

---

## \`RepositoryName\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.property.RepositoryName\\" id=\\"amazoncdkawsecrirepositorypropertyrepositoryname\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* \`string\`

The name of the repository.

---

## \`RepositoryUri\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.IRepository.property.RepositoryUri\\" id=\\"amazoncdkawsecrirepositorypropertyrepositoryuri\\"></a>

\`\`\`csharp
public string RepositoryUri { get; }
\`\`\`

- *Type:* \`string\`

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`java snapshot 1`] = `
" IRepository <a name=\\"software.amazon.awscdk.services.ecr.IRepository\\" id=\\"softwareamazonawscdkservicesecrirepository\\"></a>

- *Extends:* [\`software.amazon.awscdk.core.IResource\`](#software.amazon.awscdk.core.IResource)

- *Implemented By:* [\`software.amazon.awscdk.services.ecr.Repository\`](#software.amazon.awscdk.services.ecr.Repository), [\`software.amazon.awscdk.services.ecr.RepositoryBase\`](#software.amazon.awscdk.services.ecr.RepositoryBase), [\`software.amazon.awscdk.services.ecr.IRepository\`](#software.amazon.awscdk.services.ecr.IRepository)

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| [\`addToResourcePolicy\`](#softwareamazonawscdkservicesecrirepositoryaddtoresourcepolicy) | Add a policy statement to the repository's resource policy. |
| [\`grant\`](#softwareamazonawscdkservicesecrirepositorygrant) | Grant the given principal identity permissions to perform the actions on this repository. |
| [\`grantPull\`](#softwareamazonawscdkservicesecrirepositorygrantpull) | Grant the given identity permissions to pull images in this repository. |
| [\`grantPullPush\`](#softwareamazonawscdkservicesecrirepositorygrantpullpush) | Grant the given identity permissions to pull and push images to this repository. |
| [\`onCloudTrailEvent\`](#softwareamazonawscdkservicesecrirepositoryoncloudtrailevent) | Define a CloudWatch event that triggers when something happens to this repository. |
| [\`onCloudTrailImagePushed\`](#softwareamazonawscdkservicesecrirepositoryoncloudtrailimagepushed) | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| [\`onEvent\`](#softwareamazonawscdkservicesecrirepositoryonevent) | Defines a CloudWatch event rule which triggers for repository events. |
| [\`onImageScanCompleted\`](#softwareamazonawscdkservicesecrirepositoryonimagescancompleted) | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| [\`repositoryUriForDigest\`](#softwareamazonawscdkservicesecrirepositoryrepositoryurifordigest) | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| [\`repositoryUriForTag\`](#softwareamazonawscdkservicesecrirepositoryrepositoryurifortag) | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

## \`addToResourcePolicy\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.addToResourcePolicy\\" id=\\"softwareamazonawscdkservicesecrirepositoryaddtoresourcepolicy\\"></a>

\`\`\`java
public addToResourcePolicy(PolicyStatement statement)
\`\`\`

### \`statement\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.statement\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameterstatement\\"></a>

- *Type:* [\`software.amazon.awscdk.services.iam.PolicyStatement\`](#software.amazon.awscdk.services.iam.PolicyStatement)

---

## \`grant\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.grant\\" id=\\"softwareamazonawscdkservicesecrirepositorygrant\\"></a>

\`\`\`java
public grant(IGrantable grantee, java.lang.String actions)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.grantee\\" id=\\"softwareamazonawscdkservicesecrirepositoryparametergrantee\\"></a>

- *Type:* [\`software.amazon.awscdk.services.iam.IGrantable\`](#software.amazon.awscdk.services.iam.IGrantable)

---

### \`actions\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.actions\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameteractions\\"></a>

- *Type:* \`java.lang.String\`

---

## \`grantPull\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.grantPull\\" id=\\"softwareamazonawscdkservicesecrirepositorygrantpull\\"></a>

\`\`\`java
public grantPull(IGrantable grantee)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.grantee\\" id=\\"softwareamazonawscdkservicesecrirepositoryparametergrantee\\"></a>

- *Type:* [\`software.amazon.awscdk.services.iam.IGrantable\`](#software.amazon.awscdk.services.iam.IGrantable)

---

## \`grantPullPush\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.grantPullPush\\" id=\\"softwareamazonawscdkservicesecrirepositorygrantpullpush\\"></a>

\`\`\`java
public grantPullPush(IGrantable grantee)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.grantee\\" id=\\"softwareamazonawscdkservicesecrirepositoryparametergrantee\\"></a>

- *Type:* [\`software.amazon.awscdk.services.iam.IGrantable\`](#software.amazon.awscdk.services.iam.IGrantable)

---

## \`onCloudTrailEvent\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.onCloudTrailEvent\\" id=\\"softwareamazonawscdkservicesecrirepositoryoncloudtrailevent\\"></a>

\`\`\`java
public onCloudTrailEvent(java.lang.String id)
public onCloudTrailEvent(java.lang.String id, OnEventOptions options)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.id\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameterid\\"></a>

- *Type:* \`java.lang.String\`

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.options\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameteroptions\\"></a>

- *Type:* [\`software.amazon.awscdk.services.events.OnEventOptions\`](#software.amazon.awscdk.services.events.OnEventOptions)

Options for adding the rule.

---

## \`onCloudTrailImagePushed\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.onCloudTrailImagePushed\\" id=\\"softwareamazonawscdkservicesecrirepositoryoncloudtrailimagepushed\\"></a>

\`\`\`java
public onCloudTrailImagePushed(java.lang.String id)
public onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.id\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameterid\\"></a>

- *Type:* \`java.lang.String\`

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.options\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameteroptions\\"></a>

- *Type:* [\`software.amazon.awscdk.services.ecr.OnCloudTrailImagePushedOptions\`](#software.amazon.awscdk.services.ecr.OnCloudTrailImagePushedOptions)

Options for adding the rule.

---

## \`onEvent\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.onEvent\\" id=\\"softwareamazonawscdkservicesecrirepositoryonevent\\"></a>

\`\`\`java
public onEvent(java.lang.String id)
public onEvent(java.lang.String id, OnEventOptions options)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.id\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameterid\\"></a>

- *Type:* \`java.lang.String\`

---

### \`options\`<sup>Optional</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.options\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameteroptions\\"></a>

- *Type:* [\`software.amazon.awscdk.services.events.OnEventOptions\`](#software.amazon.awscdk.services.events.OnEventOptions)

---

## \`onImageScanCompleted\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.onImageScanCompleted\\" id=\\"softwareamazonawscdkservicesecrirepositoryonimagescancompleted\\"></a>

\`\`\`java
public onImageScanCompleted(java.lang.String id)
public onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.id\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameterid\\"></a>

- *Type:* \`java.lang.String\`

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.options\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameteroptions\\"></a>

- *Type:* [\`software.amazon.awscdk.services.ecr.OnImageScanCompletedOptions\`](#software.amazon.awscdk.services.ecr.OnImageScanCompletedOptions)

Options for adding the rule.

---

## \`repositoryUriForDigest\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.repositoryUriForDigest\\" id=\\"softwareamazonawscdkservicesecrirepositoryrepositoryurifordigest\\"></a>

\`\`\`java
public repositoryUriForDigest()
public repositoryUriForDigest(java.lang.String digest)
\`\`\`

### \`digest\`<sup>Optional</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.digest\\" id=\\"softwareamazonawscdkservicesecrirepositoryparameterdigest\\"></a>

- *Type:* \`java.lang.String\`

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

## \`repositoryUriForTag\` <a name=\\"software.amazon.awscdk.services.ecr.IRepository.repositoryUriForTag\\" id=\\"softwareamazonawscdkservicesecrirepositoryrepositoryurifortag\\"></a>

\`\`\`java
public repositoryUriForTag()
public repositoryUriForTag(java.lang.String tag)
\`\`\`

### \`tag\`<sup>Optional</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.parameter.tag\\" id=\\"softwareamazonawscdkservicesecrirepositoryparametertag\\"></a>

- *Type:* \`java.lang.String\`

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

# Properties <a name=\\"Properties\\" id=\\"properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| [\`node\`](#softwareamazonawscdkservicesecrirepositorypropertynode)<span title=\\"Required\\">*</span> | [\`software.amazon.awscdk.core.ConstructNode\`](#software.amazon.awscdk.core.ConstructNode) | The construct tree node for this construct. |
| [\`env\`](#softwareamazonawscdkservicesecrirepositorypropertyenv)<span title=\\"Required\\">*</span> | [\`software.amazon.awscdk.core.ResourceEnvironment\`](#software.amazon.awscdk.core.ResourceEnvironment) | The environment this resource belongs to. |
| [\`stack\`](#softwareamazonawscdkservicesecrirepositorypropertystack)<span title=\\"Required\\">*</span> | [\`software.amazon.awscdk.core.Stack\`](#software.amazon.awscdk.core.Stack) | The stack in which this resource is defined. |
| [\`repositoryArn\`](#softwareamazonawscdkservicesecrirepositorypropertyrepositoryarn)<span title=\\"Required\\">*</span> | \`java.lang.String\` | The ARN of the repository. |
| [\`repositoryName\`](#softwareamazonawscdkservicesecrirepositorypropertyrepositoryname)<span title=\\"Required\\">*</span> | \`java.lang.String\` | The name of the repository. |
| [\`repositoryUri\`](#softwareamazonawscdkservicesecrirepositorypropertyrepositoryuri)<span title=\\"Required\\">*</span> | \`java.lang.String\` | The URI of this repository (represents the latest image):. |

---

## \`node\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.property.node\\" id=\\"softwareamazonawscdkservicesecrirepositorypropertynode\\"></a>

\`\`\`java
public ConstructNode getNode();
\`\`\`

- *Type:* [\`software.amazon.awscdk.core.ConstructNode\`](#software.amazon.awscdk.core.ConstructNode)

The construct tree node for this construct.

---

## \`env\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.property.env\\" id=\\"softwareamazonawscdkservicesecrirepositorypropertyenv\\"></a>

\`\`\`java
public ResourceEnvironment getEnv();
\`\`\`

- *Type:* [\`software.amazon.awscdk.core.ResourceEnvironment\`](#software.amazon.awscdk.core.ResourceEnvironment)

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

## \`stack\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.property.stack\\" id=\\"softwareamazonawscdkservicesecrirepositorypropertystack\\"></a>

\`\`\`java
public Stack getStack();
\`\`\`

- *Type:* [\`software.amazon.awscdk.core.Stack\`](#software.amazon.awscdk.core.Stack)

The stack in which this resource is defined.

---

## \`repositoryArn\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.property.repositoryArn\\" id=\\"softwareamazonawscdkservicesecrirepositorypropertyrepositoryarn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* \`java.lang.String\`

The ARN of the repository.

---

## \`repositoryName\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.property.repositoryName\\" id=\\"softwareamazonawscdkservicesecrirepositorypropertyrepositoryname\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* \`java.lang.String\`

The name of the repository.

---

## \`repositoryUri\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.IRepository.property.repositoryUri\\" id=\\"softwareamazonawscdkservicesecrirepositorypropertyrepositoryuri\\"></a>

\`\`\`java
public java.lang.String getRepositoryUri();
\`\`\`

- *Type:* \`java.lang.String\`

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`python snapshot 1`] = `
" IRepository <a name=\\"aws_cdk.aws_ecr.IRepository\\" id=\\"awscdkawsecrirepository\\"></a>

- *Extends:* [\`aws_cdk.core.IResource\`](#aws_cdk.core.IResource)

- *Implemented By:* [\`aws_cdk.aws_ecr.Repository\`](#aws_cdk.aws_ecr.Repository), [\`aws_cdk.aws_ecr.RepositoryBase\`](#aws_cdk.aws_ecr.RepositoryBase), [\`aws_cdk.aws_ecr.IRepository\`](#aws_cdk.aws_ecr.IRepository)

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| [\`add_to_resource_policy\`](#awscdkawsecrirepositoryaddtoresourcepolicy) | Add a policy statement to the repository's resource policy. |
| [\`grant\`](#awscdkawsecrirepositorygrant) | Grant the given principal identity permissions to perform the actions on this repository. |
| [\`grant_pull\`](#awscdkawsecrirepositorygrantpull) | Grant the given identity permissions to pull images in this repository. |
| [\`grant_pull_push\`](#awscdkawsecrirepositorygrantpullpush) | Grant the given identity permissions to pull and push images to this repository. |
| [\`on_cloud_trail_event\`](#awscdkawsecrirepositoryoncloudtrailevent) | Define a CloudWatch event that triggers when something happens to this repository. |
| [\`on_cloud_trail_image_pushed\`](#awscdkawsecrirepositoryoncloudtrailimagepushed) | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| [\`on_event\`](#awscdkawsecrirepositoryonevent) | Defines a CloudWatch event rule which triggers for repository events. |
| [\`on_image_scan_completed\`](#awscdkawsecrirepositoryonimagescancompleted) | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| [\`repository_uri_for_digest\`](#awscdkawsecrirepositoryrepositoryurifordigest) | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| [\`repository_uri_for_tag\`](#awscdkawsecrirepositoryrepositoryurifortag) | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

## \`add_to_resource_policy\` <a name=\\"aws_cdk.aws_ecr.IRepository.add_to_resource_policy\\" id=\\"awscdkawsecrirepositoryaddtoresourcepolicy\\"></a>

\`\`\`python
def add_to_resource_policy(
  statement: PolicyStatement
)
\`\`\`

### \`statement\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.statement\\" id=\\"awscdkawsecrirepositoryparameterstatement\\"></a>

- *Type:* [\`aws_cdk.aws_iam.PolicyStatement\`](#aws_cdk.aws_iam.PolicyStatement)

---

## \`grant\` <a name=\\"aws_cdk.aws_ecr.IRepository.grant\\" id=\\"awscdkawsecrirepositorygrant\\"></a>

\`\`\`python
def grant(
  grantee: IGrantable,
  actions: str
)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.grantee\\" id=\\"awscdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`aws_cdk.aws_iam.IGrantable\`](#aws_cdk.aws_iam.IGrantable)

---

### \`actions\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.actions\\" id=\\"awscdkawsecrirepositoryparameteractions\\"></a>

- *Type:* \`str\`

---

## \`grant_pull\` <a name=\\"aws_cdk.aws_ecr.IRepository.grant_pull\\" id=\\"awscdkawsecrirepositorygrantpull\\"></a>

\`\`\`python
def grant_pull(
  grantee: IGrantable
)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.grantee\\" id=\\"awscdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`aws_cdk.aws_iam.IGrantable\`](#aws_cdk.aws_iam.IGrantable)

---

## \`grant_pull_push\` <a name=\\"aws_cdk.aws_ecr.IRepository.grant_pull_push\\" id=\\"awscdkawsecrirepositorygrantpullpush\\"></a>

\`\`\`python
def grant_pull_push(
  grantee: IGrantable
)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.grantee\\" id=\\"awscdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`aws_cdk.aws_iam.IGrantable\`](#aws_cdk.aws_iam.IGrantable)

---

## \`on_cloud_trail_event\` <a name=\\"aws_cdk.aws_ecr.IRepository.on_cloud_trail_event\\" id=\\"awscdkawsecrirepositoryoncloudtrailevent\\"></a>

\`\`\`python
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.id\\" id=\\"awscdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`str\`

The id of the rule.

---

### \`description\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_events.OnEventOptions.parameter.description\\" id=\\"awscdkawseventsoneventoptionsparameterdescription\\"></a>

- *Type:* \`str\`
- *Default:* No description

A description of the rule's purpose.

---

### \`event_pattern\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_events.OnEventOptions.parameter.event_pattern\\" id=\\"awscdkawseventsoneventoptionsparametereventpattern\\"></a>

- *Type:* [\`aws_cdk.aws_events.EventPattern\`](#aws_cdk.aws_events.EventPattern)
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html

---

### \`rule_name\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_events.OnEventOptions.parameter.rule_name\\" id=\\"awscdkawseventsoneventoptionsparameterrulename\\"></a>

- *Type:* \`str\`
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

### \`target\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_events.OnEventOptions.parameter.target\\" id=\\"awscdkawseventsoneventoptionsparametertarget\\"></a>

- *Type:* [\`aws_cdk.aws_events.IRuleTarget\`](#aws_cdk.aws_events.IRuleTarget)
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

## \`on_cloud_trail_image_pushed\` <a name=\\"aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed\\" id=\\"awscdkawsecrirepositoryoncloudtrailimagepushed\\"></a>

\`\`\`python
def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.id\\" id=\\"awscdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`str\`

The id of the rule.

---

### \`description\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.parameter.description\\" id=\\"awscdkawsecroncloudtrailimagepushedoptionsparameterdescription\\"></a>

- *Type:* \`str\`
- *Default:* No description

A description of the rule's purpose.

---

### \`event_pattern\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.parameter.event_pattern\\" id=\\"awscdkawsecroncloudtrailimagepushedoptionsparametereventpattern\\"></a>

- *Type:* [\`aws_cdk.aws_events.EventPattern\`](#aws_cdk.aws_events.EventPattern)
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html

---

### \`rule_name\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.parameter.rule_name\\" id=\\"awscdkawsecroncloudtrailimagepushedoptionsparameterrulename\\"></a>

- *Type:* \`str\`
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

### \`target\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.parameter.target\\" id=\\"awscdkawsecroncloudtrailimagepushedoptionsparametertarget\\"></a>

- *Type:* [\`aws_cdk.aws_events.IRuleTarget\`](#aws_cdk.aws_events.IRuleTarget)
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

### \`image_tag\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.parameter.image_tag\\" id=\\"awscdkawsecroncloudtrailimagepushedoptionsparameterimagetag\\"></a>

- *Type:* \`str\`
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

## \`on_event\` <a name=\\"aws_cdk.aws_ecr.IRepository.on_event\\" id=\\"awscdkawsecrirepositoryonevent\\"></a>

\`\`\`python
def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.id\\" id=\\"awscdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`str\`

---

### \`description\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_events.OnEventOptions.parameter.description\\" id=\\"awscdkawseventsoneventoptionsparameterdescription\\"></a>

- *Type:* \`str\`
- *Default:* No description

A description of the rule's purpose.

---

### \`event_pattern\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_events.OnEventOptions.parameter.event_pattern\\" id=\\"awscdkawseventsoneventoptionsparametereventpattern\\"></a>

- *Type:* [\`aws_cdk.aws_events.EventPattern\`](#aws_cdk.aws_events.EventPattern)
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html

---

### \`rule_name\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_events.OnEventOptions.parameter.rule_name\\" id=\\"awscdkawseventsoneventoptionsparameterrulename\\"></a>

- *Type:* \`str\`
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

### \`target\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_events.OnEventOptions.parameter.target\\" id=\\"awscdkawseventsoneventoptionsparametertarget\\"></a>

- *Type:* [\`aws_cdk.aws_events.IRuleTarget\`](#aws_cdk.aws_events.IRuleTarget)
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

## \`on_image_scan_completed\` <a name=\\"aws_cdk.aws_ecr.IRepository.on_image_scan_completed\\" id=\\"awscdkawsecrirepositoryonimagescancompleted\\"></a>

\`\`\`python
def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.id\\" id=\\"awscdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`str\`

The id of the rule.

---

### \`description\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnImageScanCompletedOptions.parameter.description\\" id=\\"awscdkawsecronimagescancompletedoptionsparameterdescription\\"></a>

- *Type:* \`str\`
- *Default:* No description

A description of the rule's purpose.

---

### \`event_pattern\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnImageScanCompletedOptions.parameter.event_pattern\\" id=\\"awscdkawsecronimagescancompletedoptionsparametereventpattern\\"></a>

- *Type:* [\`aws_cdk.aws_events.EventPattern\`](#aws_cdk.aws_events.EventPattern)
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html

---

### \`rule_name\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnImageScanCompletedOptions.parameter.rule_name\\" id=\\"awscdkawsecronimagescancompletedoptionsparameterrulename\\"></a>

- *Type:* \`str\`
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

### \`target\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnImageScanCompletedOptions.parameter.target\\" id=\\"awscdkawsecronimagescancompletedoptionsparametertarget\\"></a>

- *Type:* [\`aws_cdk.aws_events.IRuleTarget\`](#aws_cdk.aws_events.IRuleTarget)
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

### \`image_tags\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.OnImageScanCompletedOptions.parameter.image_tags\\" id=\\"awscdkawsecronimagescancompletedoptionsparameterimagetags\\"></a>

- *Type:* typing.List[\`str\`]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

## \`repository_uri_for_digest\` <a name=\\"aws_cdk.aws_ecr.IRepository.repository_uri_for_digest\\" id=\\"awscdkawsecrirepositoryrepositoryurifordigest\\"></a>

\`\`\`python
def repository_uri_for_digest(
  digest: str = None
)
\`\`\`

### \`digest\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.digest\\" id=\\"awscdkawsecrirepositoryparameterdigest\\"></a>

- *Type:* \`str\`

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

## \`repository_uri_for_tag\` <a name=\\"aws_cdk.aws_ecr.IRepository.repository_uri_for_tag\\" id=\\"awscdkawsecrirepositoryrepositoryurifortag\\"></a>

\`\`\`python
def repository_uri_for_tag(
  tag: str = None
)
\`\`\`

### \`tag\`<sup>Optional</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.parameter.tag\\" id=\\"awscdkawsecrirepositoryparametertag\\"></a>

- *Type:* \`str\`

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

# Properties <a name=\\"Properties\\" id=\\"properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| [\`node\`](#awscdkawsecrirepositorypropertynode)<span title=\\"Required\\">*</span> | [\`aws_cdk.core.ConstructNode\`](#aws_cdk.core.ConstructNode) | The construct tree node for this construct. |
| [\`env\`](#awscdkawsecrirepositorypropertyenv)<span title=\\"Required\\">*</span> | [\`aws_cdk.core.ResourceEnvironment\`](#aws_cdk.core.ResourceEnvironment) | The environment this resource belongs to. |
| [\`stack\`](#awscdkawsecrirepositorypropertystack)<span title=\\"Required\\">*</span> | [\`aws_cdk.core.Stack\`](#aws_cdk.core.Stack) | The stack in which this resource is defined. |
| [\`repository_arn\`](#awscdkawsecrirepositorypropertyrepositoryarn)<span title=\\"Required\\">*</span> | \`str\` | The ARN of the repository. |
| [\`repository_name\`](#awscdkawsecrirepositorypropertyrepositoryname)<span title=\\"Required\\">*</span> | \`str\` | The name of the repository. |
| [\`repository_uri\`](#awscdkawsecrirepositorypropertyrepositoryuri)<span title=\\"Required\\">*</span> | \`str\` | The URI of this repository (represents the latest image):. |

---

## \`node\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.property.node\\" id=\\"awscdkawsecrirepositorypropertynode\\"></a>

\`\`\`python
node: ConstructNode
\`\`\`

- *Type:* [\`aws_cdk.core.ConstructNode\`](#aws_cdk.core.ConstructNode)

The construct tree node for this construct.

---

## \`env\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.property.env\\" id=\\"awscdkawsecrirepositorypropertyenv\\"></a>

\`\`\`python
env: ResourceEnvironment
\`\`\`

- *Type:* [\`aws_cdk.core.ResourceEnvironment\`](#aws_cdk.core.ResourceEnvironment)

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

## \`stack\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.property.stack\\" id=\\"awscdkawsecrirepositorypropertystack\\"></a>

\`\`\`python
stack: Stack
\`\`\`

- *Type:* [\`aws_cdk.core.Stack\`](#aws_cdk.core.Stack)

The stack in which this resource is defined.

---

## \`repository_arn\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.property.repository_arn\\" id=\\"awscdkawsecrirepositorypropertyrepositoryarn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* \`str\`

The ARN of the repository.

---

## \`repository_name\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.property.repository_name\\" id=\\"awscdkawsecrirepositorypropertyrepositoryname\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* \`str\`

The name of the repository.

---

## \`repository_uri\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.IRepository.property.repository_uri\\" id=\\"awscdkawsecrirepositorypropertyrepositoryuri\\"></a>

\`\`\`python
repository_uri: str
\`\`\`

- *Type:* \`str\`

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`typescript snapshot 1`] = `
" IRepository <a name=\\"@aws-cdk/aws-ecr.IRepository\\" id=\\"awscdkawsecrirepository\\"></a>

- *Extends:* [\`@aws-cdk/core.IResource\`](#@aws-cdk/core.IResource)

- *Implemented By:* [\`@aws-cdk/aws-ecr.Repository\`](#@aws-cdk/aws-ecr.Repository), [\`@aws-cdk/aws-ecr.RepositoryBase\`](#@aws-cdk/aws-ecr.RepositoryBase), [\`@aws-cdk/aws-ecr.IRepository\`](#@aws-cdk/aws-ecr.IRepository)

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| [\`addToResourcePolicy\`](#awscdkawsecrirepositoryaddtoresourcepolicy) | Add a policy statement to the repository's resource policy. |
| [\`grant\`](#awscdkawsecrirepositorygrant) | Grant the given principal identity permissions to perform the actions on this repository. |
| [\`grantPull\`](#awscdkawsecrirepositorygrantpull) | Grant the given identity permissions to pull images in this repository. |
| [\`grantPullPush\`](#awscdkawsecrirepositorygrantpullpush) | Grant the given identity permissions to pull and push images to this repository. |
| [\`onCloudTrailEvent\`](#awscdkawsecrirepositoryoncloudtrailevent) | Define a CloudWatch event that triggers when something happens to this repository. |
| [\`onCloudTrailImagePushed\`](#awscdkawsecrirepositoryoncloudtrailimagepushed) | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| [\`onEvent\`](#awscdkawsecrirepositoryonevent) | Defines a CloudWatch event rule which triggers for repository events. |
| [\`onImageScanCompleted\`](#awscdkawsecrirepositoryonimagescancompleted) | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| [\`repositoryUriForDigest\`](#awscdkawsecrirepositoryrepositoryurifordigest) | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| [\`repositoryUriForTag\`](#awscdkawsecrirepositoryrepositoryurifortag) | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

## \`addToResourcePolicy\` <a name=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\" id=\\"awscdkawsecrirepositoryaddtoresourcepolicy\\"></a>

\`\`\`typescript
public addToResourcePolicy(statement: PolicyStatement)
\`\`\`

### \`statement\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.statement\\" id=\\"awscdkawsecrirepositoryparameterstatement\\"></a>

- *Type:* [\`@aws-cdk/aws-iam.PolicyStatement\`](#@aws-cdk/aws-iam.PolicyStatement)

---

## \`grant\` <a name=\\"@aws-cdk/aws-ecr.IRepository.grant\\" id=\\"awscdkawsecrirepositorygrant\\"></a>

\`\`\`typescript
public grant(grantee: IGrantable, actions: string)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\" id=\\"awscdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`@aws-cdk/aws-iam.IGrantable\`](#@aws-cdk/aws-iam.IGrantable)

---

### \`actions\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.actions\\" id=\\"awscdkawsecrirepositoryparameteractions\\"></a>

- *Type:* \`string\`

---

## \`grantPull\` <a name=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\" id=\\"awscdkawsecrirepositorygrantpull\\"></a>

\`\`\`typescript
public grantPull(grantee: IGrantable)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\" id=\\"awscdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`@aws-cdk/aws-iam.IGrantable\`](#@aws-cdk/aws-iam.IGrantable)

---

## \`grantPullPush\` <a name=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\" id=\\"awscdkawsecrirepositorygrantpullpush\\"></a>

\`\`\`typescript
public grantPullPush(grantee: IGrantable)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.grantee\\" id=\\"awscdkawsecrirepositoryparametergrantee\\"></a>

- *Type:* [\`@aws-cdk/aws-iam.IGrantable\`](#@aws-cdk/aws-iam.IGrantable)

---

## \`onCloudTrailEvent\` <a name=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\" id=\\"awscdkawsecrirepositoryoncloudtrailevent\\"></a>

\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnEventOptions)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\" id=\\"awscdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`string\`

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\" id=\\"awscdkawsecrirepositoryparameteroptions\\"></a>

- *Type:* [\`@aws-cdk/aws-events.OnEventOptions\`](#@aws-cdk/aws-events.OnEventOptions)

Options for adding the rule.

---

## \`onCloudTrailImagePushed\` <a name=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\" id=\\"awscdkawsecrirepositoryoncloudtrailimagepushed\\"></a>

\`\`\`typescript
public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\" id=\\"awscdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`string\`

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\" id=\\"awscdkawsecrirepositoryparameteroptions\\"></a>

- *Type:* [\`@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\`](#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions)

Options for adding the rule.

---

## \`onEvent\` <a name=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\" id=\\"awscdkawsecrirepositoryonevent\\"></a>

\`\`\`typescript
public onEvent(id: string, options?: OnEventOptions)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\" id=\\"awscdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`string\`

---

### \`options\`<sup>Optional</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\" id=\\"awscdkawsecrirepositoryparameteroptions\\"></a>

- *Type:* [\`@aws-cdk/aws-events.OnEventOptions\`](#@aws-cdk/aws-events.OnEventOptions)

---

## \`onImageScanCompleted\` <a name=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\" id=\\"awscdkawsecrirepositoryonimagescancompleted\\"></a>

\`\`\`typescript
public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions)
\`\`\`

### \`id\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.id\\" id=\\"awscdkawsecrirepositoryparameterid\\"></a>

- *Type:* \`string\`

The id of the rule.

---

### \`options\`<sup>Optional</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.options\\" id=\\"awscdkawsecrirepositoryparameteroptions\\"></a>

- *Type:* [\`@aws-cdk/aws-ecr.OnImageScanCompletedOptions\`](#@aws-cdk/aws-ecr.OnImageScanCompletedOptions)

Options for adding the rule.

---

## \`repositoryUriForDigest\` <a name=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\" id=\\"awscdkawsecrirepositoryrepositoryurifordigest\\"></a>

\`\`\`typescript
public repositoryUriForDigest(digest?: string)
\`\`\`

### \`digest\`<sup>Optional</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.digest\\" id=\\"awscdkawsecrirepositoryparameterdigest\\"></a>

- *Type:* \`string\`

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

## \`repositoryUriForTag\` <a name=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\" id=\\"awscdkawsecrirepositoryrepositoryurifortag\\"></a>

\`\`\`typescript
public repositoryUriForTag(tag?: string)
\`\`\`

### \`tag\`<sup>Optional</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.parameter.tag\\" id=\\"awscdkawsecrirepositoryparametertag\\"></a>

- *Type:* \`string\`

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

# Properties <a name=\\"Properties\\" id=\\"properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| [\`node\`](#awscdkawsecrirepositorypropertynode)<span title=\\"Required\\">*</span> | [\`@aws-cdk/core.ConstructNode\`](#@aws-cdk/core.ConstructNode) | The construct tree node for this construct. |
| [\`env\`](#awscdkawsecrirepositorypropertyenv)<span title=\\"Required\\">*</span> | [\`@aws-cdk/core.ResourceEnvironment\`](#@aws-cdk/core.ResourceEnvironment) | The environment this resource belongs to. |
| [\`stack\`](#awscdkawsecrirepositorypropertystack)<span title=\\"Required\\">*</span> | [\`@aws-cdk/core.Stack\`](#@aws-cdk/core.Stack) | The stack in which this resource is defined. |
| [\`repositoryArn\`](#awscdkawsecrirepositorypropertyrepositoryarn)<span title=\\"Required\\">*</span> | \`string\` | The ARN of the repository. |
| [\`repositoryName\`](#awscdkawsecrirepositorypropertyrepositoryname)<span title=\\"Required\\">*</span> | \`string\` | The name of the repository. |
| [\`repositoryUri\`](#awscdkawsecrirepositorypropertyrepositoryuri)<span title=\\"Required\\">*</span> | \`string\` | The URI of this repository (represents the latest image):. |

---

## \`node\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.property.node\\" id=\\"awscdkawsecrirepositorypropertynode\\"></a>

\`\`\`typescript
public readonly node: ConstructNode;
\`\`\`

- *Type:* [\`@aws-cdk/core.ConstructNode\`](#@aws-cdk/core.ConstructNode)

The construct tree node for this construct.

---

## \`env\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.property.env\\" id=\\"awscdkawsecrirepositorypropertyenv\\"></a>

\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* [\`@aws-cdk/core.ResourceEnvironment\`](#@aws-cdk/core.ResourceEnvironment)

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

## \`stack\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\" id=\\"awscdkawsecrirepositorypropertystack\\"></a>

\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* [\`@aws-cdk/core.Stack\`](#@aws-cdk/core.Stack)

The stack in which this resource is defined.

---

## \`repositoryArn\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\" id=\\"awscdkawsecrirepositorypropertyrepositoryarn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* \`string\`

The ARN of the repository.

---

## \`repositoryName\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\" id=\\"awscdkawsecrirepositorypropertyrepositoryname\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* \`string\`

The name of the repository.

---

## \`repositoryUri\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\" id=\\"awscdkawsecrirepositorypropertyrepositoryuri\\"></a>

\`\`\`typescript
public readonly repositoryUri: string;
\`\`\`

- *Type:* \`string\`

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;
