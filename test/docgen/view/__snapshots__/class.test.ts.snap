// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`csharp snapshot 1`] = `
" AuthorizationToken <a name=\\"Amazon.CDK.AWS.ECR.AuthorizationToken\\" id=\\"amazoncdkawsecrauthorizationtoken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html


# Static Functions <a name=\\"Static Functions\\" id=\\"static-functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| [\`GrantRead\`](#amazoncdkawsecrauthorizationtokengrantread) | Grant access to retrieve an authorization token. |

---

## \`GrantRead\` <a name=\\"Amazon.CDK.AWS.ECR.AuthorizationToken.GrantRead\\" id=\\"amazoncdkawsecrauthorizationtokengrantread\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

AuthorizationToken.GrantRead(IGrantable Grantee);
\`\`\`

### \`Grantee\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.AuthorizationToken.parameter.Grantee\\" id=\\"amazoncdkawsecrauthorizationtokenparametergrantee\\"></a>

- *Type:* [\`Amazon.CDK.AWS.IAM.IGrantable\`](#Amazon.CDK.AWS.IAM.IGrantable)

---


"
`;

exports[`java snapshot 1`] = `
" AuthorizationToken <a name=\\"software.amazon.awscdk.services.ecr.AuthorizationToken\\" id=\\"softwareamazonawscdkservicesecrauthorizationtoken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html


# Static Functions <a name=\\"Static Functions\\" id=\\"static-functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| [\`grantRead\`](#softwareamazonawscdkservicesecrauthorizationtokengrantread) | Grant access to retrieve an authorization token. |

---

## \`grantRead\` <a name=\\"software.amazon.awscdk.services.ecr.AuthorizationToken.grantRead\\" id=\\"softwareamazonawscdkservicesecrauthorizationtokengrantread\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.AuthorizationToken;

AuthorizationToken.grantRead(IGrantable grantee)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.AuthorizationToken.parameter.grantee\\" id=\\"softwareamazonawscdkservicesecrauthorizationtokenparametergrantee\\"></a>

- *Type:* [\`software.amazon.awscdk.services.iam.IGrantable\`](#software.amazon.awscdk.services.iam.IGrantable)

---


"
`;

exports[`python snapshot 1`] = `
" AuthorizationToken <a name=\\"aws_cdk.aws_ecr.AuthorizationToken\\" id=\\"awscdkawsecrauthorizationtoken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html


# Static Functions <a name=\\"Static Functions\\" id=\\"static-functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| [\`grant_read\`](#awscdkawsecrauthorizationtokengrantread) | Grant access to retrieve an authorization token. |

---

## \`grant_read\` <a name=\\"aws_cdk.aws_ecr.AuthorizationToken.grant_read\\" id=\\"awscdkawsecrauthorizationtokengrantread\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.AuthorizationToken.grant_read(
  grantee: IGrantable
)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.AuthorizationToken.parameter.grantee\\" id=\\"awscdkawsecrauthorizationtokenparametergrantee\\"></a>

- *Type:* [\`aws_cdk.aws_iam.IGrantable\`](#aws_cdk.aws_iam.IGrantable)

---


"
`;

exports[`typescript snapshot 1`] = `
" AuthorizationToken <a name=\\"@aws-cdk/aws-ecr.AuthorizationToken\\" id=\\"awscdkawsecrauthorizationtoken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html


# Static Functions <a name=\\"Static Functions\\" id=\\"static-functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| [\`grantRead\`](#awscdkawsecrauthorizationtokengrantread) | Grant access to retrieve an authorization token. |

---

## \`grantRead\` <a name=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\" id=\\"awscdkawsecrauthorizationtokengrantread\\"></a>

\`\`\`typescript
import { AuthorizationToken } from '@aws-cdk/aws-ecr'

AuthorizationToken.grantRead(grantee: IGrantable)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.AuthorizationToken.parameter.grantee\\" id=\\"awscdkawsecrauthorizationtokenparametergrantee\\"></a>

- *Type:* [\`@aws-cdk/aws-iam.IGrantable\`](#@aws-cdk/aws-iam.IGrantable)

---


"
`;
