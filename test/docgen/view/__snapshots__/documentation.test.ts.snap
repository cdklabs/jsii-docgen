// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`csharp for package 1`] = `
"# Amazon ECR Construct Library

<!--BEGIN STABILITY BANNER-->---


![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
var repository = new ecr.Repository(this, \\"Repository\\");
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
var repository = new ecr.Repository(stack, \\"Repo\\", new Struct {
    ImageScanOnPush = true
});
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
repository.OnImageScanCompleted(\\"ImageScanComplete\\").AddTarget(...);
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
using Amazon.CDK.AWS.IAM;
using Amazon.CDK.AWS.ECR;

User user = new User(this, \\"User\\", new UserProps { ... });
AuthorizationToken.GrantRead(user);
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
using Amazon.CDK.AWS.IAM;
using Amazon.CDK.AWS.ECR;

User user = new User(this, \\"User\\", new UserProps { ... });
PublicGalleryAuthorizationToken.GrantRead(user);
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
new ecr.Repository(stack, \\"Repo\\", new Struct { ImageTagMutability = ecr.TagMutability.IMMUTABLE });
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
repository.AddLifecycleRule(new Struct { TagPrefixList = new [] { \\"prod\\" }, MaxImageCount = 9999 });
repository.AddLifecycleRule(new Struct { MaxImageAge = cdk.Duration.Days(30) });
\`\`\`
# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### CfnPublicRepository <a name=\\"CfnPublicRepository\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnPublicRepository(Construct Scope, string Id, CfnPublicRepositoryProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\">CfnPublicRepositoryProps</a></code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\">CfnPublicRepositoryProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::ECR::PublicRepository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\">RepositoryCatalogData</a></code> | <code>object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\">RepositoryPolicyText</a></code> | <code>object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

##### \`RepositoryCatalogData\`<sup>Required</sup> <a name=\\"RepositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\"></a>

\`\`\`csharp
public object RepositoryCatalogData { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`RepositoryPolicyText\`<sup>Required</sup> <a name=\\"RepositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\"></a>

\`\`\`csharp
public object RepositoryPolicyText { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnRegistryPolicy <a name=\\"CfnRegistryPolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnRegistryPolicy(Construct Scope, string Id, CfnRegistryPolicyProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\">CfnRegistryPolicyProps</a></code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\">CfnRegistryPolicyProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\">AttrRegistryId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\">PolicyText</a></code> | <code>object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`AttrRegistryId\`<sup>Required</sup> <a name=\\"AttrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\"></a>

\`\`\`csharp
public string AttrRegistryId { get; }
\`\`\`

- *Type:* string

---

##### \`PolicyText\`<sup>Required</sup> <a name=\\"PolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\"></a>

\`\`\`csharp
public object PolicyText { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnReplicationConfiguration <a name=\\"CfnReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnReplicationConfiguration(Construct Scope, string Id, CfnReplicationConfigurationProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\">CfnReplicationConfigurationProps</a></code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\">CfnReplicationConfigurationProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\">AttrRegistryId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\">ReplicationConfiguration</a></code> | <code>object</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`AttrRegistryId\`<sup>Required</sup> <a name=\\"AttrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\"></a>

\`\`\`csharp
public string AttrRegistryId { get; }
\`\`\`

- *Type:* string

---

##### \`ReplicationConfiguration\`<sup>Required</sup> <a name=\\"ReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\"></a>

\`\`\`csharp
public object ReplicationConfiguration { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnRepository <a name=\\"CfnRepository\\" id=\\"@aws-cdk/aws-ecr.CfnRepository\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnRepository(Construct Scope, string Id, CfnRepositoryProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps\\">CfnRepositoryProps</a></code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps\\">CfnRepositoryProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\">AttrRepositoryUri</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::ECR::Repository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\">EncryptionConfiguration</a></code> | <code>object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\">ImageScanningConfiguration</a></code> | <code>object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\">RepositoryPolicyText</a></code> | <code>object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\">ImageTagMutability</a></code> | <code>string</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\">LifecyclePolicy</a></code> | <code>object</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | \`AWS::ECR::Repository.RepositoryName\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`AttrRepositoryUri\`<sup>Required</sup> <a name=\\"AttrRepositoryUri\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\"></a>

\`\`\`csharp
public string AttrRepositoryUri { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

##### \`EncryptionConfiguration\`<sup>Required</sup> <a name=\\"EncryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\"></a>

\`\`\`csharp
public object EncryptionConfiguration { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`ImageScanningConfiguration\`<sup>Required</sup> <a name=\\"ImageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\"></a>

\`\`\`csharp
public object ImageScanningConfiguration { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`RepositoryPolicyText\`<sup>Required</sup> <a name=\\"RepositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\"></a>

\`\`\`csharp
public object RepositoryPolicyText { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`ImageTagMutability\`<sup>Optional</sup> <a name=\\"ImageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\"></a>

\`\`\`csharp
public string ImageTagMutability { get; }
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`LifecyclePolicy\`<sup>Optional</sup> <a name=\\"LifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\"></a>

\`\`\`csharp
public object LifecyclePolicy { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### Repository <a name=\\"Repository\\" id=\\"@aws-cdk/aws-ecr.Repository\\"></a>

Define an ECR repository.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new Repository(Construct Scope, string Id, RepositoryProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps\\">RepositoryProps</a></code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryProps\\">RepositoryProps</a>

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addLifecycleRule\\">AddLifecycleRule</a></code> | Add a life cycle rule to the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\">AddToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |

---

##### \`AddLifecycleRule\` <a name=\\"AddLifecycleRule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule\\"></a>

\`\`\`csharp
private AddLifecycleRule(LifecycleRule Rule)
\`\`\`

###### \`Rule\`<sup>Required</sup> <a name=\\"Rule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rule\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>

---

##### \`AddToResourcePolicy\` <a name=\\"AddToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\"></a>

\`\`\`csharp
private AddToResourcePolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.PolicyStatement

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\">ArnForLocalRepository</a></code> | Returns an ECR ARN for a repository that resides in the same account/region as the current stack. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\">FromRepositoryArn</a></code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\">FromRepositoryAttributes</a></code> | Import a repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryName\\">FromRepositoryName</a></code> | *No description.* |

---

##### \`ArnForLocalRepository\` <a name=\\"ArnForLocalRepository\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

Repository.ArnForLocalRepository(string RepositoryName, IConstruct Scope, string Account = null);
\`\`\`

###### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName\\"></a>

- *Type:* string

---

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope\\"></a>

- *Type:* Constructs.IConstruct

---

###### \`Account\`<sup>Optional</sup> <a name=\\"Account\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account\\"></a>

- *Type:* string

---

##### \`FromRepositoryArn\` <a name=\\"FromRepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

Repository.FromRepositoryArn(Construct Scope, string Id, string RepositoryArn);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id\\"></a>

- *Type:* string

---

###### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn\\"></a>

- *Type:* string

---

##### \`FromRepositoryAttributes\` <a name=\\"FromRepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

Repository.FromRepositoryAttributes(Construct Scope, string Id, RepositoryAttributes Attrs);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id\\"></a>

- *Type:* string

---

###### \`Attrs\`<sup>Required</sup> <a name=\\"Attrs\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.attrs\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes\\">RepositoryAttributes</a>

---

##### \`FromRepositoryName\` <a name=\\"FromRepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

Repository.FromRepositoryName(Construct Scope, string Id, string RepositoryName);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id\\"></a>

- *Type:* string

---

###### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName\\"></a>

- *Type:* string

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | The name of the repository. |

---

##### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryArn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; }
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

The name of the repository.

---


### RepositoryBase <a name=\\"RepositoryBase\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase\\"></a>

- *Implements:* <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Base class for ECR repository.

Reused between imported repositories and owned repositories.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new RepositoryBase(Construct Scope, string Id, ResourceProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.ResourceProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.ResourceProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\">AddToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grant\\">Grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPull\\">GrantPull</a></code> | Grant the given identity permissions to use the images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\">GrantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\">OnCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\">OnCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onEvent\\">OnEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\">OnImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\">RepositoryUriForDigest</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\">RepositoryUriForTag</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |

---

##### \`AddToResourcePolicy\` <a name=\\"AddToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\"></a>

\`\`\`csharp
private AddToResourcePolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.PolicyStatement

---

##### \`Grant\` <a name=\\"Grant\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant\\"></a>

\`\`\`csharp
private Grant(IGrantable Grantee, string Actions)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

###### \`Actions\`<sup>Required</sup> <a name=\\"Actions\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions\\"></a>

- *Type:* string

---

##### \`GrantPull\` <a name=\\"GrantPull\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull\\"></a>

\`\`\`csharp
private GrantPull(IGrantable Grantee)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

##### \`GrantPullPush\` <a name=\\"GrantPullPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\"></a>

\`\`\`csharp
private GrantPullPush(IGrantable Grantee)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

##### \`OnCloudTrailEvent\` <a name=\\"OnCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\"></a>

\`\`\`csharp
private OnCloudTrailEvent(string Id, OnEventOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* Amazon.CDK.AWS.Events.OnEventOptions

Options for adding the rule.

---

##### \`OnCloudTrailImagePushed\` <a name=\\"OnCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\"></a>

\`\`\`csharp
private OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`OnEvent\` <a name=\\"OnEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent\\"></a>

\`\`\`csharp
private OnEvent(string Id, OnEventOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id\\"></a>

- *Type:* string

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.options\\"></a>

- *Type:* Amazon.CDK.AWS.Events.OnEventOptions

---

##### \`OnImageScanCompleted\` <a name=\\"OnImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\"></a>

\`\`\`csharp
private OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`RepositoryUriForDigest\` <a name=\\"RepositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\"></a>

\`\`\`csharp
private RepositoryUriForDigest(string Digest = null)
\`\`\`

###### \`Digest\`<sup>Optional</sup> <a name=\\"Digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* string

Optional image digest.

---

##### \`RepositoryUriForTag\` <a name=\\"RepositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\"></a>

\`\`\`csharp
private RepositoryUriForTag(string Tag = null)
\`\`\`

###### \`Tag\`<sup>Optional</sup> <a name=\\"Tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* string

Optional image tag.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\">RepositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

##### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; }
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

The name of the repository.

---

##### \`RepositoryUri\`<sup>Required</sup> <a name=\\"RepositoryUri\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\"></a>

\`\`\`csharp
public string RepositoryUri { get; }
\`\`\`

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### CfnPublicRepositoryProps <a name=\\"CfnPublicRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnPublicRepositoryProps {
    object RepositoryCatalogData = null,
    string RepositoryName = null,
    object RepositoryPolicyText = null,
    CfnTag[] Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\">RepositoryCatalogData</a></code> | <code>object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\">RepositoryPolicyText</a></code> | <code>object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\">Tags</a></code> | <code>Amazon.CDK.CfnTag[]</code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`RepositoryCatalogData\`<sup>Optional</sup> <a name=\\"RepositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\"></a>

\`\`\`csharp
public object RepositoryCatalogData { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; set; }
\`\`\`

- *Type:* string

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`RepositoryPolicyText\`<sup>Optional</sup> <a name=\\"RepositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`csharp
public object RepositoryPolicyText { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\"></a>

\`\`\`csharp
public CfnTag[] Tags { get; set; }
\`\`\`

- *Type:* Amazon.CDK.CfnTag[]

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

### CfnRegistryPolicyProps <a name=\\"CfnRegistryPolicyProps\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\"></a>

Properties for defining a \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnRegistryPolicyProps {
    object PolicyText
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\">PolicyText</a></code> | <code>object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`PolicyText\`<sup>Required</sup> <a name=\\"PolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\"></a>

\`\`\`csharp
public object PolicyText { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

### CfnReplicationConfigurationProps <a name=\\"CfnReplicationConfigurationProps\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\"></a>

Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnReplicationConfigurationProps {
    object ReplicationConfiguration
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\">ReplicationConfiguration</a></code> | <code>object</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`ReplicationConfiguration\`<sup>Required</sup> <a name=\\"ReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\"></a>

\`\`\`csharp
public object ReplicationConfiguration { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

### CfnRepositoryProps <a name=\\"CfnRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnRepositoryProps {
    object EncryptionConfiguration = null,
    object ImageScanningConfiguration = null,
    string ImageTagMutability = null,
    object LifecyclePolicy = null,
    string RepositoryName = null,
    object RepositoryPolicyText = null,
    CfnTag[] Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\">EncryptionConfiguration</a></code> | <code>object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\">ImageScanningConfiguration</a></code> | <code>object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\">ImageTagMutability</a></code> | <code>string</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\">LifecyclePolicy</a></code> | <code>object</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\">RepositoryPolicyText</a></code> | <code>object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\">Tags</a></code> | <code>Amazon.CDK.CfnTag[]</code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`EncryptionConfiguration\`<sup>Optional</sup> <a name=\\"EncryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\"></a>

\`\`\`csharp
public object EncryptionConfiguration { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`ImageScanningConfiguration\`<sup>Optional</sup> <a name=\\"ImageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\"></a>

\`\`\`csharp
public object ImageScanningConfiguration { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`ImageTagMutability\`<sup>Optional</sup> <a name=\\"ImageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\"></a>

\`\`\`csharp
public string ImageTagMutability { get; set; }
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`LifecyclePolicy\`<sup>Optional</sup> <a name=\\"LifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\"></a>

\`\`\`csharp
public object LifecyclePolicy { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; set; }
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`RepositoryPolicyText\`<sup>Optional</sup> <a name=\\"RepositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`csharp
public object RepositoryPolicyText { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\"></a>

\`\`\`csharp
public CfnTag[] Tags { get; set; }
\`\`\`

- *Type:* Amazon.CDK.CfnTag[]

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

### LifecyclePolicyProperty <a name=\\"LifecyclePolicyProperty\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new LifecyclePolicyProperty {
    string LifecyclePolicyText = null,
    string RegistryId = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\">LifecyclePolicyText</a></code> | <code>string</code> | \`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\">RegistryId</a></code> | <code>string</code> | \`CfnRepository.LifecyclePolicyProperty.RegistryId\`. |

---

##### \`LifecyclePolicyText\`<sup>Optional</sup> <a name=\\"LifecyclePolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\"></a>

\`\`\`csharp
public string LifecyclePolicyText { get; set; }
\`\`\`

- *Type:* string

\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext)

---

##### \`RegistryId\`<sup>Optional</sup> <a name=\\"RegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\"></a>

\`\`\`csharp
public string RegistryId { get; set; }
\`\`\`

- *Type:* string

\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid)

---

### LifecycleRule <a name=\\"LifecycleRule\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule\\"></a>

An ECR life cycle rule.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new LifecycleRule {
    string Description = null,
    Duration MaxImageAge = null,
    double MaxImageCount = null,
    double RulePriority = null,
    string[] TagPrefixList = null,
    TagStatus TagStatus = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.description\\">Description</a></code> | <code>string</code> | Describes the purpose of the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\">MaxImageAge</a></code> | <code>Amazon.CDK.Duration</code> | The maximum age of images to retain. The value must represent a number of days. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\">MaxImageCount</a></code> | <code>double</code> | The maximum number of images to retain. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\">RulePriority</a></code> | <code>double</code> | Controls the order in which rules are evaluated (low to high). |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\">TagPrefixList</a></code> | <code>string[]</code> | Select images that have ALL the given prefixes in their tag. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\">TagStatus</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a></code> | Select images based on tags. |

---

##### \`Description\`<sup>Optional</sup> <a name=\\"Description\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.description\\"></a>

\`\`\`csharp
public string Description { get; set; }
\`\`\`

- *Type:* string
- *Default:* No description

Describes the purpose of the rule.

---

##### \`MaxImageAge\`<sup>Optional</sup> <a name=\\"MaxImageAge\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\"></a>

\`\`\`csharp
public Duration MaxImageAge { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`MaxImageCount\`<sup>Optional</sup> <a name=\\"MaxImageCount\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\"></a>

\`\`\`csharp
public double MaxImageCount { get; set; }
\`\`\`

- *Type:* double

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`RulePriority\`<sup>Optional</sup> <a name=\\"RulePriority\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\"></a>

\`\`\`csharp
public double RulePriority { get; set; }
\`\`\`

- *Type:* double
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

##### \`TagPrefixList\`<sup>Optional</sup> <a name=\\"TagPrefixList\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\"></a>

\`\`\`csharp
public string[] TagPrefixList { get; set; }
\`\`\`

- *Type:* string[]

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

##### \`TagStatus\`<sup>Optional</sup> <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\"></a>

\`\`\`csharp
public TagStatus TagStatus { get; set; }
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

### OnCloudTrailImagePushedOptions <a name=\\"OnCloudTrailImagePushedOptions\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\"></a>

Options for the onCloudTrailImagePushed method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new OnCloudTrailImagePushedOptions {
    string Description = null,
    EventPattern EventPattern = null,
    string RuleName = null,
    IRuleTarget Target = null,
    string ImageTag = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\">Description</a></code> | <code>string</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\">EventPattern</a></code> | <code>Amazon.CDK.AWS.Events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\">RuleName</a></code> | <code>string</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\">Target</a></code> | <code>Amazon.CDK.AWS.Events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\">ImageTag</a></code> | <code>string</code> | Only watch changes to this image tag. |

---

##### \`Description\`<sup>Optional</sup> <a name=\\"Description\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\"></a>

\`\`\`csharp
public string Description { get; set; }
\`\`\`

- *Type:* string
- *Default:* No description

A description of the rule's purpose.

---

##### \`EventPattern\`<sup>Optional</sup> <a name=\\"EventPattern\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\"></a>

\`\`\`csharp
public EventPattern EventPattern { get; set; }
\`\`\`

- *Type:* Amazon.CDK.AWS.Events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`RuleName\`<sup>Optional</sup> <a name=\\"RuleName\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\"></a>

\`\`\`csharp
public string RuleName { get; set; }
\`\`\`

- *Type:* string
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`Target\`<sup>Optional</sup> <a name=\\"Target\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\"></a>

\`\`\`csharp
public IRuleTarget Target { get; set; }
\`\`\`

- *Type:* Amazon.CDK.AWS.Events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`ImageTag\`<sup>Optional</sup> <a name=\\"ImageTag\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\"></a>

\`\`\`csharp
public string ImageTag { get; set; }
\`\`\`

- *Type:* string
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

### OnImageScanCompletedOptions <a name=\\"OnImageScanCompletedOptions\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\"></a>

Options for the OnImageScanCompleted method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new OnImageScanCompletedOptions {
    string Description = null,
    EventPattern EventPattern = null,
    string RuleName = null,
    IRuleTarget Target = null,
    string[] ImageTags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\">Description</a></code> | <code>string</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\">EventPattern</a></code> | <code>Amazon.CDK.AWS.Events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\">RuleName</a></code> | <code>string</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\">Target</a></code> | <code>Amazon.CDK.AWS.Events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\">ImageTags</a></code> | <code>string[]</code> | Only watch changes to the image tags spedified. |

---

##### \`Description\`<sup>Optional</sup> <a name=\\"Description\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\"></a>

\`\`\`csharp
public string Description { get; set; }
\`\`\`

- *Type:* string
- *Default:* No description

A description of the rule's purpose.

---

##### \`EventPattern\`<sup>Optional</sup> <a name=\\"EventPattern\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\"></a>

\`\`\`csharp
public EventPattern EventPattern { get; set; }
\`\`\`

- *Type:* Amazon.CDK.AWS.Events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`RuleName\`<sup>Optional</sup> <a name=\\"RuleName\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\"></a>

\`\`\`csharp
public string RuleName { get; set; }
\`\`\`

- *Type:* string
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`Target\`<sup>Optional</sup> <a name=\\"Target\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\"></a>

\`\`\`csharp
public IRuleTarget Target { get; set; }
\`\`\`

- *Type:* Amazon.CDK.AWS.Events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`ImageTags\`<sup>Optional</sup> <a name=\\"ImageTags\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\"></a>

\`\`\`csharp
public string[] ImageTags { get; set; }
\`\`\`

- *Type:* string[]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

### ReplicationConfigurationProperty <a name=\\"ReplicationConfigurationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new ReplicationConfigurationProperty {
    object Rules
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\">Rules</a></code> | <code>object</code> | \`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`. |

---

##### \`Rules\`<sup>Required</sup> <a name=\\"Rules\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\"></a>

\`\`\`csharp
public object Rules { get; set; }
\`\`\`

- *Type:* object

\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules)

---

### ReplicationDestinationProperty <a name=\\"ReplicationDestinationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new ReplicationDestinationProperty {
    string Region,
    string RegistryId
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\">Region</a></code> | <code>string</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\">RegistryId</a></code> | <code>string</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`. |

---

##### \`Region\`<sup>Required</sup> <a name=\\"Region\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\"></a>

\`\`\`csharp
public string Region { get; set; }
\`\`\`

- *Type:* string

\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region)

---

##### \`RegistryId\`<sup>Required</sup> <a name=\\"RegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\"></a>

\`\`\`csharp
public string RegistryId { get; set; }
\`\`\`

- *Type:* string

\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid)

---

### ReplicationRuleProperty <a name=\\"ReplicationRuleProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new ReplicationRuleProperty {
    object Destinations
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\">Destinations</a></code> | <code>object</code> | \`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`. |

---

##### \`Destinations\`<sup>Required</sup> <a name=\\"Destinations\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\"></a>

\`\`\`csharp
public object Destinations { get; set; }
\`\`\`

- *Type:* object

\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations)

---

### RepositoryAttributes <a name=\\"RepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new RepositoryAttributes {
    string RepositoryArn,
    string RepositoryName
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | *No description.* |

---

##### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; set; }
\`\`\`

- *Type:* string

---

##### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; set; }
\`\`\`

- *Type:* string

---

### RepositoryProps <a name=\\"RepositoryProps\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new RepositoryProps {
    bool ImageScanOnPush = null,
    TagMutability ImageTagMutability = null,
    string LifecycleRegistryId = null,
    LifecycleRule[] LifecycleRules = null,
    RemovalPolicy RemovalPolicy = null,
    string RepositoryName = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\">ImageScanOnPush</a></code> | <code>bool</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\">ImageTagMutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\">LifecycleRegistryId</a></code> | <code>string</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\">LifecycleRules</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>[]</code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\">RemovalPolicy</a></code> | <code>Amazon.CDK.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | Name for this repository. |

---

##### \`ImageScanOnPush\`<sup>Optional</sup> <a name=\\"ImageScanOnPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\"></a>

\`\`\`csharp
public bool ImageScanOnPush { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`ImageTagMutability\`<sup>Optional</sup> <a name=\\"ImageTagMutability\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\"></a>

\`\`\`csharp
public TagMutability ImageTagMutability { get; set; }
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`LifecycleRegistryId\`<sup>Optional</sup> <a name=\\"LifecycleRegistryId\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\"></a>

\`\`\`csharp
public string LifecycleRegistryId { get; set; }
\`\`\`

- *Type:* string
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`LifecycleRules\`<sup>Optional</sup> <a name=\\"LifecycleRules\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\"></a>

\`\`\`csharp
public LifecycleRule[] LifecycleRules { get; set; }
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>[]
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`RemovalPolicy\`<sup>Optional</sup> <a name=\\"RemovalPolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\"></a>

\`\`\`csharp
public RemovalPolicy RemovalPolicy { get; set; }
\`\`\`

- *Type:* Amazon.CDK.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name.

Name for this repository.

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\">GrantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`GrantRead\` <a name=\\"GrantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

AuthorizationToken.GrantRead(IGrantable Grantee);
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---



### PublicGalleryAuthorizationToken <a name=\\"PublicGalleryAuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken\\"></a>

Authorization token to access the global public ECR Gallery via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\">GrantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`GrantRead\` <a name=\\"GrantRead\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

PublicGalleryAuthorizationToken.GrantRead(IGrantable Grantee);
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---



## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* Amazon.CDK.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">AddToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">Grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">GrantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">GrantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">OnCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">OnCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">OnEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">OnImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">RepositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">RepositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

##### \`AddToResourcePolicy\` <a name=\\"AddToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

\`\`\`csharp
private AddToResourcePolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.PolicyStatement

---

##### \`Grant\` <a name=\\"Grant\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

\`\`\`csharp
private Grant(IGrantable Grantee, string Actions)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

###### \`Actions\`<sup>Required</sup> <a name=\\"Actions\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.actions\\"></a>

- *Type:* string

---

##### \`GrantPull\` <a name=\\"GrantPull\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

\`\`\`csharp
private GrantPull(IGrantable Grantee)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

##### \`GrantPullPush\` <a name=\\"GrantPullPush\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

\`\`\`csharp
private GrantPullPush(IGrantable Grantee)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

##### \`OnCloudTrailEvent\` <a name=\\"OnCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

\`\`\`csharp
private OnCloudTrailEvent(string Id, OnEventOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* Amazon.CDK.AWS.Events.OnEventOptions

Options for adding the rule.

---

##### \`OnCloudTrailImagePushed\` <a name=\\"OnCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

\`\`\`csharp
private OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`OnEvent\` <a name=\\"OnEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

\`\`\`csharp
private OnEvent(string Id, OnEventOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id\\"></a>

- *Type:* string

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options\\"></a>

- *Type:* Amazon.CDK.AWS.Events.OnEventOptions

---

##### \`OnImageScanCompleted\` <a name=\\"OnImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

\`\`\`csharp
private OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`RepositoryUriForDigest\` <a name=\\"RepositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

\`\`\`csharp
private RepositoryUriForDigest(string Digest = null)
\`\`\`

###### \`Digest\`<sup>Optional</sup> <a name=\\"Digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* string

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

##### \`RepositoryUriForTag\` <a name=\\"RepositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

\`\`\`csharp
private RepositoryUriForTag(string Tag = null)
\`\`\`

###### \`Tag\`<sup>Optional</sup> <a name=\\"Tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* string

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">Node</a></code> | <code>Amazon.CDK.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">Env</a></code> | <code>Amazon.CDK.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">Stack</a></code> | <code>Amazon.CDK.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">RepositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

##### \`Node\`<sup>Required</sup> <a name=\\"Node\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

\`\`\`csharp
public ConstructNode Node { get; }
\`\`\`

- *Type:* Amazon.CDK.ConstructNode

The construct tree node for this construct.

---

##### \`Env\`<sup>Required</sup> <a name=\\"Env\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

\`\`\`csharp
public ResourceEnvironment Env { get; }
\`\`\`

- *Type:* Amazon.CDK.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`Stack\`<sup>Required</sup> <a name=\\"Stack\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

\`\`\`csharp
public Stack Stack { get; }
\`\`\`

- *Type:* Amazon.CDK.Stack

The stack in which this resource is defined.

---

##### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; }
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

The name of the repository.

---

##### \`RepositoryUri\`<sup>Required</sup> <a name=\\"RepositoryUri\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

\`\`\`csharp
public string RepositoryUri { get; }
\`\`\`

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### TagMutability <a name=\\"TagMutability\\" id=\\"@aws-cdk/aws-ecr.TagMutability\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.MUTABLE\\">MUTABLE</a></code> | allow image tags to be overwritten. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\">IMMUTABLE</a></code> | all image tags within the repository will be immutable which will prevent them from being overwritten. |

---

The tag mutability setting for your repository.

#### \`MUTABLE\` <a name=\\"MUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.MUTABLE\\"></a>

allow image tags to be overwritten.

---


#### \`IMMUTABLE\` <a name=\\"IMMUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\"></a>

all image tags within the repository will be immutable which will prevent them from being overwritten.

---


### TagStatus <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.TagStatus\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.ANY\\">ANY</a></code> | Rule applies to all images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.TAGGED\\">TAGGED</a></code> | Rule applies to tagged images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\">UNTAGGED</a></code> | Rule applies to untagged images. |

---

Select images based on tags.

#### \`ANY\` <a name=\\"ANY\\" id=\\"@aws-cdk/aws-ecr.TagStatus.ANY\\"></a>

Rule applies to all images.

---


#### \`TAGGED\` <a name=\\"TAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.TAGGED\\"></a>

Rule applies to tagged images.

---


#### \`UNTAGGED\` <a name=\\"UNTAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\"></a>

Rule applies to untagged images.

---

"
`;

exports[`csharp snapshot - root module 1`] = `
"# Amazon ECR Construct Library

<!--BEGIN STABILITY BANNER-->---


![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
var repository = new ecr.Repository(this, \\"Repository\\");
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
var repository = new ecr.Repository(stack, \\"Repo\\", new Struct {
    ImageScanOnPush = true
});
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
repository.OnImageScanCompleted(\\"ImageScanComplete\\").AddTarget(...);
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
using Aws.Cdk.Aws.Iam;
using Aws.Cdk.Aws.Ecr;

var user = new User(this, \\"User\\", new Struct { ... });
AuthorizationToken.GrantRead(user);
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
using Aws.Cdk.Aws.Iam;
using Aws.Cdk.Aws.Ecr;

var user = new User(this, \\"User\\", new Struct { ... });
PublicGalleryAuthorizationToken.GrantRead(user);
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
new ecr.Repository(stack, \\"Repo\\", new Struct { ImageTagMutability = ecr.TagMutability.IMMUTABLE });
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`csharp
// Example automatically generated from non-compiling source. May contain errors.
repository.AddLifecycleRule(new Struct { TagPrefixList = new [] { \\"prod\\" }, MaxImageCount = 9999 });
repository.AddLifecycleRule(new Struct { MaxImageAge = cdk.Duration.Days(30) });
\`\`\`
# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### CfnPublicRepository <a name=\\"CfnPublicRepository\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnPublicRepository(Construct Scope, string Id, CfnPublicRepositoryProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\">CfnPublicRepositoryProps</a></code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\">CfnPublicRepositoryProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::ECR::PublicRepository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\">RepositoryCatalogData</a></code> | <code>object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\">RepositoryPolicyText</a></code> | <code>object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

##### \`RepositoryCatalogData\`<sup>Required</sup> <a name=\\"RepositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\"></a>

\`\`\`csharp
public object RepositoryCatalogData { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`RepositoryPolicyText\`<sup>Required</sup> <a name=\\"RepositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\"></a>

\`\`\`csharp
public object RepositoryPolicyText { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnRegistryPolicy <a name=\\"CfnRegistryPolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnRegistryPolicy(Construct Scope, string Id, CfnRegistryPolicyProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\">CfnRegistryPolicyProps</a></code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\">CfnRegistryPolicyProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\">AttrRegistryId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\">PolicyText</a></code> | <code>object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`AttrRegistryId\`<sup>Required</sup> <a name=\\"AttrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\"></a>

\`\`\`csharp
public string AttrRegistryId { get; }
\`\`\`

- *Type:* string

---

##### \`PolicyText\`<sup>Required</sup> <a name=\\"PolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\"></a>

\`\`\`csharp
public object PolicyText { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnReplicationConfiguration <a name=\\"CfnReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnReplicationConfiguration(Construct Scope, string Id, CfnReplicationConfigurationProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\">CfnReplicationConfigurationProps</a></code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\">CfnReplicationConfigurationProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\">AttrRegistryId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\">ReplicationConfiguration</a></code> | <code>object</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`AttrRegistryId\`<sup>Required</sup> <a name=\\"AttrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\"></a>

\`\`\`csharp
public string AttrRegistryId { get; }
\`\`\`

- *Type:* string

---

##### \`ReplicationConfiguration\`<sup>Required</sup> <a name=\\"ReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\"></a>

\`\`\`csharp
public object ReplicationConfiguration { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnRepository <a name=\\"CfnRepository\\" id=\\"@aws-cdk/aws-ecr.CfnRepository\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnRepository(Construct Scope, string Id, CfnRepositoryProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps\\">CfnRepositoryProps</a></code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps\\">CfnRepositoryProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\">AttrRepositoryUri</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::ECR::Repository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\">EncryptionConfiguration</a></code> | <code>object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\">ImageScanningConfiguration</a></code> | <code>object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\">RepositoryPolicyText</a></code> | <code>object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\">ImageTagMutability</a></code> | <code>string</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\">LifecyclePolicy</a></code> | <code>object</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | \`AWS::ECR::Repository.RepositoryName\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`AttrRepositoryUri\`<sup>Required</sup> <a name=\\"AttrRepositoryUri\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\"></a>

\`\`\`csharp
public string AttrRepositoryUri { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

##### \`EncryptionConfiguration\`<sup>Required</sup> <a name=\\"EncryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\"></a>

\`\`\`csharp
public object EncryptionConfiguration { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`ImageScanningConfiguration\`<sup>Required</sup> <a name=\\"ImageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\"></a>

\`\`\`csharp
public object ImageScanningConfiguration { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`RepositoryPolicyText\`<sup>Required</sup> <a name=\\"RepositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\"></a>

\`\`\`csharp
public object RepositoryPolicyText { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`ImageTagMutability\`<sup>Optional</sup> <a name=\\"ImageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\"></a>

\`\`\`csharp
public string ImageTagMutability { get; }
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`LifecyclePolicy\`<sup>Optional</sup> <a name=\\"LifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\"></a>

\`\`\`csharp
public object LifecyclePolicy { get; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### Repository <a name=\\"Repository\\" id=\\"@aws-cdk/aws-ecr.Repository\\"></a>

Define an ECR repository.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new Repository(Construct Scope, string Id, RepositoryProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.props\\">Props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps\\">RepositoryProps</a></code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryProps\\">RepositoryProps</a>

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addLifecycleRule\\">AddLifecycleRule</a></code> | Add a life cycle rule to the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\">AddToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |

---

##### \`AddLifecycleRule\` <a name=\\"AddLifecycleRule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule\\"></a>

\`\`\`csharp
private AddLifecycleRule(LifecycleRule Rule)
\`\`\`

###### \`Rule\`<sup>Required</sup> <a name=\\"Rule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rule\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>

---

##### \`AddToResourcePolicy\` <a name=\\"AddToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\"></a>

\`\`\`csharp
private AddToResourcePolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.PolicyStatement

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\">ArnForLocalRepository</a></code> | Returns an ECR ARN for a repository that resides in the same account/region as the current stack. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\">FromRepositoryArn</a></code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\">FromRepositoryAttributes</a></code> | Import a repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryName\\">FromRepositoryName</a></code> | *No description.* |

---

##### \`ArnForLocalRepository\` <a name=\\"ArnForLocalRepository\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

Repository.ArnForLocalRepository(string RepositoryName, IConstruct Scope, string Account = null);
\`\`\`

###### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName\\"></a>

- *Type:* string

---

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope\\"></a>

- *Type:* Constructs.IConstruct

---

###### \`Account\`<sup>Optional</sup> <a name=\\"Account\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account\\"></a>

- *Type:* string

---

##### \`FromRepositoryArn\` <a name=\\"FromRepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

Repository.FromRepositoryArn(Construct Scope, string Id, string RepositoryArn);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id\\"></a>

- *Type:* string

---

###### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn\\"></a>

- *Type:* string

---

##### \`FromRepositoryAttributes\` <a name=\\"FromRepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

Repository.FromRepositoryAttributes(Construct Scope, string Id, RepositoryAttributes Attrs);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id\\"></a>

- *Type:* string

---

###### \`Attrs\`<sup>Required</sup> <a name=\\"Attrs\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.attrs\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes\\">RepositoryAttributes</a>

---

##### \`FromRepositoryName\` <a name=\\"FromRepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

Repository.FromRepositoryName(Construct Scope, string Id, string RepositoryName);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id\\"></a>

- *Type:* string

---

###### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName\\"></a>

- *Type:* string

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | The name of the repository. |

---

##### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryArn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; }
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

The name of the repository.

---


### RepositoryBase <a name=\\"RepositoryBase\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase\\"></a>

- *Implements:* <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Base class for ECR repository.

Reused between imported repositories and owned repositories.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new RepositoryBase(Construct Scope, string Id, ResourceProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.ResourceProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.ResourceProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\">AddToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grant\\">Grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPull\\">GrantPull</a></code> | Grant the given identity permissions to use the images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\">GrantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\">OnCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\">OnCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onEvent\\">OnEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\">OnImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\">RepositoryUriForDigest</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\">RepositoryUriForTag</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |

---

##### \`AddToResourcePolicy\` <a name=\\"AddToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\"></a>

\`\`\`csharp
private AddToResourcePolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.PolicyStatement

---

##### \`Grant\` <a name=\\"Grant\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant\\"></a>

\`\`\`csharp
private Grant(IGrantable Grantee, string Actions)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

###### \`Actions\`<sup>Required</sup> <a name=\\"Actions\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions\\"></a>

- *Type:* string

---

##### \`GrantPull\` <a name=\\"GrantPull\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull\\"></a>

\`\`\`csharp
private GrantPull(IGrantable Grantee)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

##### \`GrantPullPush\` <a name=\\"GrantPullPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\"></a>

\`\`\`csharp
private GrantPullPush(IGrantable Grantee)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

##### \`OnCloudTrailEvent\` <a name=\\"OnCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\"></a>

\`\`\`csharp
private OnCloudTrailEvent(string Id, OnEventOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* Amazon.CDK.AWS.Events.OnEventOptions

Options for adding the rule.

---

##### \`OnCloudTrailImagePushed\` <a name=\\"OnCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\"></a>

\`\`\`csharp
private OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`OnEvent\` <a name=\\"OnEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent\\"></a>

\`\`\`csharp
private OnEvent(string Id, OnEventOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id\\"></a>

- *Type:* string

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.options\\"></a>

- *Type:* Amazon.CDK.AWS.Events.OnEventOptions

---

##### \`OnImageScanCompleted\` <a name=\\"OnImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\"></a>

\`\`\`csharp
private OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`RepositoryUriForDigest\` <a name=\\"RepositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\"></a>

\`\`\`csharp
private RepositoryUriForDigest(string Digest = null)
\`\`\`

###### \`Digest\`<sup>Optional</sup> <a name=\\"Digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* string

Optional image digest.

---

##### \`RepositoryUriForTag\` <a name=\\"RepositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\"></a>

\`\`\`csharp
private RepositoryUriForTag(string Tag = null)
\`\`\`

###### \`Tag\`<sup>Optional</sup> <a name=\\"Tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* string

Optional image tag.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\">RepositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

##### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; }
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

The name of the repository.

---

##### \`RepositoryUri\`<sup>Required</sup> <a name=\\"RepositoryUri\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\"></a>

\`\`\`csharp
public string RepositoryUri { get; }
\`\`\`

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### CfnPublicRepositoryProps <a name=\\"CfnPublicRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnPublicRepositoryProps {
    object RepositoryCatalogData = null,
    string RepositoryName = null,
    object RepositoryPolicyText = null,
    CfnTag[] Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\">RepositoryCatalogData</a></code> | <code>object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\">RepositoryPolicyText</a></code> | <code>object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\">Tags</a></code> | <code>Amazon.CDK.CfnTag[]</code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`RepositoryCatalogData\`<sup>Optional</sup> <a name=\\"RepositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\"></a>

\`\`\`csharp
public object RepositoryCatalogData { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; set; }
\`\`\`

- *Type:* string

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`RepositoryPolicyText\`<sup>Optional</sup> <a name=\\"RepositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`csharp
public object RepositoryPolicyText { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\"></a>

\`\`\`csharp
public CfnTag[] Tags { get; set; }
\`\`\`

- *Type:* Amazon.CDK.CfnTag[]

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

### CfnRegistryPolicyProps <a name=\\"CfnRegistryPolicyProps\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\"></a>

Properties for defining a \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnRegistryPolicyProps {
    object PolicyText
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\">PolicyText</a></code> | <code>object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`PolicyText\`<sup>Required</sup> <a name=\\"PolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\"></a>

\`\`\`csharp
public object PolicyText { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

### CfnReplicationConfigurationProps <a name=\\"CfnReplicationConfigurationProps\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\"></a>

Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnReplicationConfigurationProps {
    object ReplicationConfiguration
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\">ReplicationConfiguration</a></code> | <code>object</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`ReplicationConfiguration\`<sup>Required</sup> <a name=\\"ReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\"></a>

\`\`\`csharp
public object ReplicationConfiguration { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

### CfnRepositoryProps <a name=\\"CfnRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new CfnRepositoryProps {
    object EncryptionConfiguration = null,
    object ImageScanningConfiguration = null,
    string ImageTagMutability = null,
    object LifecyclePolicy = null,
    string RepositoryName = null,
    object RepositoryPolicyText = null,
    CfnTag[] Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\">EncryptionConfiguration</a></code> | <code>object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\">ImageScanningConfiguration</a></code> | <code>object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\">ImageTagMutability</a></code> | <code>string</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\">LifecyclePolicy</a></code> | <code>object</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\">RepositoryPolicyText</a></code> | <code>object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\">Tags</a></code> | <code>Amazon.CDK.CfnTag[]</code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`EncryptionConfiguration\`<sup>Optional</sup> <a name=\\"EncryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\"></a>

\`\`\`csharp
public object EncryptionConfiguration { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`ImageScanningConfiguration\`<sup>Optional</sup> <a name=\\"ImageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\"></a>

\`\`\`csharp
public object ImageScanningConfiguration { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`ImageTagMutability\`<sup>Optional</sup> <a name=\\"ImageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\"></a>

\`\`\`csharp
public string ImageTagMutability { get; set; }
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`LifecyclePolicy\`<sup>Optional</sup> <a name=\\"LifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\"></a>

\`\`\`csharp
public object LifecyclePolicy { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; set; }
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`RepositoryPolicyText\`<sup>Optional</sup> <a name=\\"RepositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`csharp
public object RepositoryPolicyText { get; set; }
\`\`\`

- *Type:* object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\"></a>

\`\`\`csharp
public CfnTag[] Tags { get; set; }
\`\`\`

- *Type:* Amazon.CDK.CfnTag[]

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

### LifecyclePolicyProperty <a name=\\"LifecyclePolicyProperty\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new LifecyclePolicyProperty {
    string LifecyclePolicyText = null,
    string RegistryId = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\">LifecyclePolicyText</a></code> | <code>string</code> | \`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\">RegistryId</a></code> | <code>string</code> | \`CfnRepository.LifecyclePolicyProperty.RegistryId\`. |

---

##### \`LifecyclePolicyText\`<sup>Optional</sup> <a name=\\"LifecyclePolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\"></a>

\`\`\`csharp
public string LifecyclePolicyText { get; set; }
\`\`\`

- *Type:* string

\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext)

---

##### \`RegistryId\`<sup>Optional</sup> <a name=\\"RegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\"></a>

\`\`\`csharp
public string RegistryId { get; set; }
\`\`\`

- *Type:* string

\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid)

---

### LifecycleRule <a name=\\"LifecycleRule\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule\\"></a>

An ECR life cycle rule.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new LifecycleRule {
    string Description = null,
    Duration MaxImageAge = null,
    double MaxImageCount = null,
    double RulePriority = null,
    string[] TagPrefixList = null,
    TagStatus TagStatus = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.description\\">Description</a></code> | <code>string</code> | Describes the purpose of the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\">MaxImageAge</a></code> | <code>Amazon.CDK.Duration</code> | The maximum age of images to retain. The value must represent a number of days. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\">MaxImageCount</a></code> | <code>double</code> | The maximum number of images to retain. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\">RulePriority</a></code> | <code>double</code> | Controls the order in which rules are evaluated (low to high). |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\">TagPrefixList</a></code> | <code>string[]</code> | Select images that have ALL the given prefixes in their tag. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\">TagStatus</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a></code> | Select images based on tags. |

---

##### \`Description\`<sup>Optional</sup> <a name=\\"Description\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.description\\"></a>

\`\`\`csharp
public string Description { get; set; }
\`\`\`

- *Type:* string
- *Default:* No description

Describes the purpose of the rule.

---

##### \`MaxImageAge\`<sup>Optional</sup> <a name=\\"MaxImageAge\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\"></a>

\`\`\`csharp
public Duration MaxImageAge { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`MaxImageCount\`<sup>Optional</sup> <a name=\\"MaxImageCount\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\"></a>

\`\`\`csharp
public double MaxImageCount { get; set; }
\`\`\`

- *Type:* double

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`RulePriority\`<sup>Optional</sup> <a name=\\"RulePriority\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\"></a>

\`\`\`csharp
public double RulePriority { get; set; }
\`\`\`

- *Type:* double
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

##### \`TagPrefixList\`<sup>Optional</sup> <a name=\\"TagPrefixList\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\"></a>

\`\`\`csharp
public string[] TagPrefixList { get; set; }
\`\`\`

- *Type:* string[]

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

##### \`TagStatus\`<sup>Optional</sup> <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\"></a>

\`\`\`csharp
public TagStatus TagStatus { get; set; }
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

### OnCloudTrailImagePushedOptions <a name=\\"OnCloudTrailImagePushedOptions\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\"></a>

Options for the onCloudTrailImagePushed method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new OnCloudTrailImagePushedOptions {
    string Description = null,
    EventPattern EventPattern = null,
    string RuleName = null,
    IRuleTarget Target = null,
    string ImageTag = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\">Description</a></code> | <code>string</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\">EventPattern</a></code> | <code>Amazon.CDK.AWS.Events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\">RuleName</a></code> | <code>string</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\">Target</a></code> | <code>Amazon.CDK.AWS.Events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\">ImageTag</a></code> | <code>string</code> | Only watch changes to this image tag. |

---

##### \`Description\`<sup>Optional</sup> <a name=\\"Description\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\"></a>

\`\`\`csharp
public string Description { get; set; }
\`\`\`

- *Type:* string
- *Default:* No description

A description of the rule's purpose.

---

##### \`EventPattern\`<sup>Optional</sup> <a name=\\"EventPattern\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\"></a>

\`\`\`csharp
public EventPattern EventPattern { get; set; }
\`\`\`

- *Type:* Amazon.CDK.AWS.Events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`RuleName\`<sup>Optional</sup> <a name=\\"RuleName\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\"></a>

\`\`\`csharp
public string RuleName { get; set; }
\`\`\`

- *Type:* string
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`Target\`<sup>Optional</sup> <a name=\\"Target\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\"></a>

\`\`\`csharp
public IRuleTarget Target { get; set; }
\`\`\`

- *Type:* Amazon.CDK.AWS.Events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`ImageTag\`<sup>Optional</sup> <a name=\\"ImageTag\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\"></a>

\`\`\`csharp
public string ImageTag { get; set; }
\`\`\`

- *Type:* string
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

### OnImageScanCompletedOptions <a name=\\"OnImageScanCompletedOptions\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\"></a>

Options for the OnImageScanCompleted method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new OnImageScanCompletedOptions {
    string Description = null,
    EventPattern EventPattern = null,
    string RuleName = null,
    IRuleTarget Target = null,
    string[] ImageTags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\">Description</a></code> | <code>string</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\">EventPattern</a></code> | <code>Amazon.CDK.AWS.Events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\">RuleName</a></code> | <code>string</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\">Target</a></code> | <code>Amazon.CDK.AWS.Events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\">ImageTags</a></code> | <code>string[]</code> | Only watch changes to the image tags spedified. |

---

##### \`Description\`<sup>Optional</sup> <a name=\\"Description\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\"></a>

\`\`\`csharp
public string Description { get; set; }
\`\`\`

- *Type:* string
- *Default:* No description

A description of the rule's purpose.

---

##### \`EventPattern\`<sup>Optional</sup> <a name=\\"EventPattern\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\"></a>

\`\`\`csharp
public EventPattern EventPattern { get; set; }
\`\`\`

- *Type:* Amazon.CDK.AWS.Events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`RuleName\`<sup>Optional</sup> <a name=\\"RuleName\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\"></a>

\`\`\`csharp
public string RuleName { get; set; }
\`\`\`

- *Type:* string
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`Target\`<sup>Optional</sup> <a name=\\"Target\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\"></a>

\`\`\`csharp
public IRuleTarget Target { get; set; }
\`\`\`

- *Type:* Amazon.CDK.AWS.Events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`ImageTags\`<sup>Optional</sup> <a name=\\"ImageTags\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\"></a>

\`\`\`csharp
public string[] ImageTags { get; set; }
\`\`\`

- *Type:* string[]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

### ReplicationConfigurationProperty <a name=\\"ReplicationConfigurationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new ReplicationConfigurationProperty {
    object Rules
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\">Rules</a></code> | <code>object</code> | \`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`. |

---

##### \`Rules\`<sup>Required</sup> <a name=\\"Rules\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\"></a>

\`\`\`csharp
public object Rules { get; set; }
\`\`\`

- *Type:* object

\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules)

---

### ReplicationDestinationProperty <a name=\\"ReplicationDestinationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new ReplicationDestinationProperty {
    string Region,
    string RegistryId
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\">Region</a></code> | <code>string</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\">RegistryId</a></code> | <code>string</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`. |

---

##### \`Region\`<sup>Required</sup> <a name=\\"Region\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\"></a>

\`\`\`csharp
public string Region { get; set; }
\`\`\`

- *Type:* string

\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region)

---

##### \`RegistryId\`<sup>Required</sup> <a name=\\"RegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\"></a>

\`\`\`csharp
public string RegistryId { get; set; }
\`\`\`

- *Type:* string

\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid)

---

### ReplicationRuleProperty <a name=\\"ReplicationRuleProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new ReplicationRuleProperty {
    object Destinations
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\">Destinations</a></code> | <code>object</code> | \`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`. |

---

##### \`Destinations\`<sup>Required</sup> <a name=\\"Destinations\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\"></a>

\`\`\`csharp
public object Destinations { get; set; }
\`\`\`

- *Type:* object

\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations)

---

### RepositoryAttributes <a name=\\"RepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new RepositoryAttributes {
    string RepositoryArn,
    string RepositoryName
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | *No description.* |

---

##### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; set; }
\`\`\`

- *Type:* string

---

##### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; set; }
\`\`\`

- *Type:* string

---

### RepositoryProps <a name=\\"RepositoryProps\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

new RepositoryProps {
    bool ImageScanOnPush = null,
    TagMutability ImageTagMutability = null,
    string LifecycleRegistryId = null,
    LifecycleRule[] LifecycleRules = null,
    RemovalPolicy RemovalPolicy = null,
    string RepositoryName = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\">ImageScanOnPush</a></code> | <code>bool</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\">ImageTagMutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\">LifecycleRegistryId</a></code> | <code>string</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\">LifecycleRules</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>[]</code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\">RemovalPolicy</a></code> | <code>Amazon.CDK.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | Name for this repository. |

---

##### \`ImageScanOnPush\`<sup>Optional</sup> <a name=\\"ImageScanOnPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\"></a>

\`\`\`csharp
public bool ImageScanOnPush { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`ImageTagMutability\`<sup>Optional</sup> <a name=\\"ImageTagMutability\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\"></a>

\`\`\`csharp
public TagMutability ImageTagMutability { get; set; }
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`LifecycleRegistryId\`<sup>Optional</sup> <a name=\\"LifecycleRegistryId\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\"></a>

\`\`\`csharp
public string LifecycleRegistryId { get; set; }
\`\`\`

- *Type:* string
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`LifecycleRules\`<sup>Optional</sup> <a name=\\"LifecycleRules\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\"></a>

\`\`\`csharp
public LifecycleRule[] LifecycleRules { get; set; }
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>[]
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`RemovalPolicy\`<sup>Optional</sup> <a name=\\"RemovalPolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\"></a>

\`\`\`csharp
public RemovalPolicy RemovalPolicy { get; set; }
\`\`\`

- *Type:* Amazon.CDK.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`RepositoryName\`<sup>Optional</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name.

Name for this repository.

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\">GrantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`GrantRead\` <a name=\\"GrantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

AuthorizationToken.GrantRead(IGrantable Grantee);
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---



### PublicGalleryAuthorizationToken <a name=\\"PublicGalleryAuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken\\"></a>

Authorization token to access the global public ECR Gallery via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\">GrantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`GrantRead\` <a name=\\"GrantRead\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

PublicGalleryAuthorizationToken.GrantRead(IGrantable Grantee);
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---



## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* Amazon.CDK.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">AddToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">Grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">GrantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">GrantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">OnCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">OnCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">OnEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">OnImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">RepositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">RepositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

##### \`AddToResourcePolicy\` <a name=\\"AddToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

\`\`\`csharp
private AddToResourcePolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.PolicyStatement

---

##### \`Grant\` <a name=\\"Grant\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

\`\`\`csharp
private Grant(IGrantable Grantee, string Actions)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

###### \`Actions\`<sup>Required</sup> <a name=\\"Actions\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.actions\\"></a>

- *Type:* string

---

##### \`GrantPull\` <a name=\\"GrantPull\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

\`\`\`csharp
private GrantPull(IGrantable Grantee)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

##### \`GrantPullPush\` <a name=\\"GrantPullPush\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

\`\`\`csharp
private GrantPullPush(IGrantable Grantee)
\`\`\`

###### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee\\"></a>

- *Type:* Amazon.CDK.AWS.IAM.IGrantable

---

##### \`OnCloudTrailEvent\` <a name=\\"OnCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

\`\`\`csharp
private OnCloudTrailEvent(string Id, OnEventOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* Amazon.CDK.AWS.Events.OnEventOptions

Options for adding the rule.

---

##### \`OnCloudTrailImagePushed\` <a name=\\"OnCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

\`\`\`csharp
private OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`OnEvent\` <a name=\\"OnEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

\`\`\`csharp
private OnEvent(string Id, OnEventOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id\\"></a>

- *Type:* string

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options\\"></a>

- *Type:* Amazon.CDK.AWS.Events.OnEventOptions

---

##### \`OnImageScanCompleted\` <a name=\\"OnImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

\`\`\`csharp
private OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`RepositoryUriForDigest\` <a name=\\"RepositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

\`\`\`csharp
private RepositoryUriForDigest(string Digest = null)
\`\`\`

###### \`Digest\`<sup>Optional</sup> <a name=\\"Digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* string

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

##### \`RepositoryUriForTag\` <a name=\\"RepositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

\`\`\`csharp
private RepositoryUriForTag(string Tag = null)
\`\`\`

###### \`Tag\`<sup>Optional</sup> <a name=\\"Tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* string

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">Node</a></code> | <code>Amazon.CDK.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">Env</a></code> | <code>Amazon.CDK.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">Stack</a></code> | <code>Amazon.CDK.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">RepositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">RepositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">RepositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

##### \`Node\`<sup>Required</sup> <a name=\\"Node\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

\`\`\`csharp
public ConstructNode Node { get; }
\`\`\`

- *Type:* Amazon.CDK.ConstructNode

The construct tree node for this construct.

---

##### \`Env\`<sup>Required</sup> <a name=\\"Env\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

\`\`\`csharp
public ResourceEnvironment Env { get; }
\`\`\`

- *Type:* Amazon.CDK.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`Stack\`<sup>Required</sup> <a name=\\"Stack\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

\`\`\`csharp
public Stack Stack { get; }
\`\`\`

- *Type:* Amazon.CDK.Stack

The stack in which this resource is defined.

---

##### \`RepositoryArn\`<sup>Required</sup> <a name=\\"RepositoryArn\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

\`\`\`csharp
public string RepositoryArn { get; }
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`RepositoryName\`<sup>Required</sup> <a name=\\"RepositoryName\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* string

The name of the repository.

---

##### \`RepositoryUri\`<sup>Required</sup> <a name=\\"RepositoryUri\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

\`\`\`csharp
public string RepositoryUri { get; }
\`\`\`

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### TagMutability <a name=\\"TagMutability\\" id=\\"@aws-cdk/aws-ecr.TagMutability\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.MUTABLE\\">MUTABLE</a></code> | allow image tags to be overwritten. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\">IMMUTABLE</a></code> | all image tags within the repository will be immutable which will prevent them from being overwritten. |

---

The tag mutability setting for your repository.

#### \`MUTABLE\` <a name=\\"MUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.MUTABLE\\"></a>

allow image tags to be overwritten.

---


#### \`IMMUTABLE\` <a name=\\"IMMUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\"></a>

all image tags within the repository will be immutable which will prevent them from being overwritten.

---


### TagStatus <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.TagStatus\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.ANY\\">ANY</a></code> | Rule applies to all images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.TAGGED\\">TAGGED</a></code> | Rule applies to tagged images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\">UNTAGGED</a></code> | Rule applies to untagged images. |

---

Select images based on tags.

#### \`ANY\` <a name=\\"ANY\\" id=\\"@aws-cdk/aws-ecr.TagStatus.ANY\\"></a>

Rule applies to all images.

---


#### \`TAGGED\` <a name=\\"TAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.TAGGED\\"></a>

Rule applies to tagged images.

---


#### \`UNTAGGED\` <a name=\\"UNTAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\"></a>

Rule applies to untagged images.

---

"
`;

exports[`csharp snapshot - submodules 1`] = `
"# Amazon EKS Construct Library
<!--BEGIN STABILITY BANNER-->

---

![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---

<!--END STABILITY BANNER-->

This construct library allows you to define [Amazon Elastic Container Service for Kubernetes (EKS)](https://aws.amazon.com/eks/) clusters.
In addition, the library also supports defining Kubernetes resource manifests within EKS clusters.

## Table Of Contents

* [Quick Start](#quick-start)
* [API Reference](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-eks-readme.html)
* [Architectural Overview](#architectural-overview)
* [Provisioning clusters](#provisioning-clusters)
  * [Managed node groups](#managed-node-groups)
  * [Fargate Profiles](#fargate-profiles)
  * [Self-managed nodes](#self-managed-nodes)
  * [Endpoint Access](#endpoint-access)
  * [VPC Support](#vpc-support)
  * [Kubectl Support](#kubectl-support)
  * [ARM64 Support](#arm64-support)
  * [Masters Role](#masters-role)
  * [Encryption](#encryption)
* [Permissions and Security](#permissions-and-security)
* [Applying Kubernetes Resources](#applying-kubernetes-resources)
  * [Kubernetes Manifests](#kubernetes-manifests)
  * [Helm Charts](#helm-charts)
  * [CDK8s Charts](#cdk8s-charts)
* [Patching Kubernetes Resources](#patching-kubernetes-resources)
* [Querying Kubernetes Resources](#querying-kubernetes-resources)
* [Using existing clusters](#using-existing-clusters)
* [Known Issues and Limitations](#known-issues-and-limitations)

## Quick Start

This example defines an Amazon EKS cluster with the following configuration:

* Dedicated VPC with default configuration (Implicitly created using [ec2.Vpc](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#vpc))
* A Kubernetes pod with a container based on the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes) image.

\`\`\`ts
// provisiong a cluster
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
});

// apply a kubernetes manifest to the cluster
cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ]
      }
    ]
  }
});
\`\`\`

In order to interact with your cluster through \`kubectl\`, you can use the \`aws eks update-kubeconfig\` [AWS CLI command](https://docs.aws.amazon.com/cli/latest/reference/eks/update-kubeconfig.html)
to configure your local kubeconfig. The EKS module will define a CloudFormation output in your stack which contains the command to run. For example:

\`\`\`plaintext
Outputs:
ClusterConfigCommand43AAE40F = aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
\`\`\`

Execute the \`aws eks update-kubeconfig ...\` command in your terminal to create or update a local kubeconfig context:

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

And now you can simply use \`kubectl\`:

\`\`\`console
$ kubectl get all -n kube-system
NAME                           READY   STATUS    RESTARTS   AGE
pod/aws-node-fpmwv             1/1     Running   0          21m
pod/aws-node-m9htf             1/1     Running   0          21m
pod/coredns-5cb4fb54c7-q222j   1/1     Running   0          23m
pod/coredns-5cb4fb54c7-v9nxx   1/1     Running   0          23m
...
\`\`\`

## Architectural Overview

The following is a qualitative diagram of the various possible components involved in the cluster deployment.

\`\`\`text
 +-----------------------------------------------+               +-----------------+
 |                 EKS Cluster                   |    kubectl    |                 |
 |-----------------------------------------------|<-------------+| Kubectl Handler |
 |                                               |               |                 |
 |                                               |               +-----------------+
 | +--------------------+    +-----------------+ |
 | |                    |    |                 | |
 | | Managed Node Group |    | Fargate Profile | |               +-----------------+
 | |                    |    |                 | |               |                 |
 | +--------------------+    +-----------------+ |               | Cluster Handler |
 |                                               |               |                 |
 +-----------------------------------------------+               +-----------------+
    ^                                   ^                          +
    |                                   |                          |
    | connect self managed capacity     |                          | aws-sdk
    |                                   | create/update/delete     |
    +                                   |                          v
 +--------------------+                 +              +-------------------+
 |                    |                 --------------+| eks.amazonaws.com |
 | Auto Scaling Group |                                +-------------------+
 |                    |
 +--------------------+
\`\`\`

In a nutshell:

* \`EKS Cluster\` - The cluster endpoint created by EKS.
* \`Managed Node Group\` - EC2 worker nodes managed by EKS.
* \`Fargate Profile\` - Fargate worker nodes managed by EKS.
* \`Auto Scaling Group\` - EC2 worker nodes managed by the user.
* \`KubectlHandler\` - Lambda function for invoking \`kubectl\` commands on the cluster - created by CDK.
* \`ClusterHandler\` - Lambda function for interacting with EKS API to manage the cluster lifecycle - created by CDK.

A more detailed breakdown of each is provided further down this README.

## Provisioning clusters

Creating a new cluster is done using the \`Cluster\` or \`FargateCluster\` constructs. The only required property is the kubernetes \`version\`.

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

You can also use \`FargateCluster\` to provision a cluster that uses only fargate workers.

\`\`\`ts
new eks.FargateCluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

> **NOTE: Only 1 cluster per stack is supported.** If you have a use-case for multiple clusters per stack, or would like to understand more about this limitation, see <https://github.com/aws/aws-cdk/issues/10073>.

Below you'll find a few important cluster configuration options. First of which is Capacity.
Capacity is the amount and the type of worker nodes that are available to the cluster for deploying resources. Amazon EKS offers 3 ways of configuring capacity, which you can combine as you like:

### Managed node groups

Amazon EKS managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters.
With Amazon EKS managed node groups, you don’t need to separately provision or register the Amazon EC2 instances that provide compute capacity to run your Kubernetes applications. You can create, update, or terminate nodes for your cluster with a single operation. Nodes run using the latest Amazon EKS optimized AMIs in your AWS account while node updates and terminations gracefully drain nodes to ensure that your applications stay available.

> For more details visit [Amazon EKS Managed Node Groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).

**Managed Node Groups are the recommended way to allocate cluster capacity.**

By default, this library will allocate a managed node group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).

At cluster instantiation time, you can customize the number of instances and their type:

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 5,
  defaultCapacityInstance: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.SMALL),
});
\`\`\`

To access the node group that was created on your behalf, you can use \`cluster.defaultNodegroup\`.

Additional customizations are available post instantiation. To apply them, set the default capacity to 0, and use the \`cluster.addNodegroupCapacity\` method:

\`\`\`ts
const cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 0,
});

cluster.addNodegroupCapacity('custom-node-group', {
  instanceTypes: [new ec2.InstanceType('m5.large')],
  minSize: 4,
  diskSize: 100,
  amiType: eks.NodegroupAmiType.AL2_X86_64_GPU,
  ...
});
\`\`\`

#### Spot Instances Support

Use \`capacityType\` to create managed node groups comprised of spot instances. To maximize the availability of your applications while using
Spot Instances, we recommend that you configure a Spot managed node group to use multiple instance types with the \`instanceTypes\` property.

> For more details visit [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types).


\`\`\`ts
cluster.addNodegroupCapacity('extra-ng-spot', {
  instanceTypes: [
    new ec2.InstanceType('c5.large'),
    new ec2.InstanceType('c5a.large'),
    new ec2.InstanceType('c5d.large'),
  ],
  minSize: 3,
  capacityType: eks.CapacityType.SPOT,
});

\`\`\`

#### Launch Template Support

You can specify a launch template that the node group will use. For example, this can be useful if you want to use
a custom AMI or add custom user data.

When supplying a custom user data script, it must be encoded in the MIME multi-part archive format, since Amazon EKS merges with its own user data. Visit the [Launch Template Docs](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html#launch-template-user-data)
for mode details.

\`\`\`ts
const userData = \`MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\\"==MYBOUNDARY==\\"

--==MYBOUNDARY==
Content-Type: text/x-shellscript; charset=\\"us-ascii\\"

#!/bin/bash
echo \\"Running custom user data script\\"

--==MYBOUNDARY==--\\\\\\\\
\`;
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    instanceType: 't3.small',
    userData: Fn.base64(userData),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});

\`\`\`

Note that when using a custom AMI, Amazon EKS doesn't merge any user data. Which means you do not need the multi-part encoding. and are responsible for supplying the required bootstrap commands for nodes to join the cluster.
In the following example, \`/ect/eks/bootstrap.sh\` from the AMI will be used to bootstrap the node.

\`\`\`ts
const userData = ec2.UserData.forLinux();
userData.addCommands(
  'set -o xtrace',
  \`/etc/eks/bootstrap.sh \${cluster.clusterName}\`,
);
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    imageId: 'some-ami-id', // custom AMI
    instanceType: 't3.small',
    userData: Fn.base64(userData.render()),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});
\`\`\`

You may specify one \`instanceType\` in the launch template or multiple \`instanceTypes\` in the node group, **but not both**.

> For more details visit [Launch Template Support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).

Graviton 2 instance types are supported including \`c6g\`, \`m6g\`, \`r6g\` and \`t4g\`.

### Fargate profiles

AWS Fargate is a technology that provides on-demand, right-sized compute
capacity for containers. With AWS Fargate, you no longer have to provision,
configure, or scale groups of virtual machines to run containers. This removes
the need to choose server types, decide when to scale your node groups, or
optimize cluster packing.

You can control which pods start on Fargate and how they run with Fargate
Profiles, which are defined as part of your Amazon EKS cluster.

See [Fargate Considerations](https://docs.aws.amazon.com/eks/latest/userguide/fargate.html#fargate-considerations) in the AWS EKS User Guide.

You can add Fargate Profiles to any EKS cluster defined in your CDK app
through the \`addFargateProfile()\` method. The following example adds a profile
that will match all pods from the \\"default\\" namespace:

\`\`\`ts
cluster.addFargateProfile('MyProfile', {
  selectors: [ { namespace: 'default' } ]
});
\`\`\`

You can also directly use the \`FargateProfile\` construct to create profiles under different scopes:

\`\`\`ts
new eks.FargateProfile(scope, 'MyProfile', {
  cluster,
  ...
});
\`\`\`

To create an EKS cluster that **only** uses Fargate capacity, you can use \`FargateCluster\`.
The following code defines an Amazon EKS cluster with a default Fargate Profile that matches all pods from the \\"kube-system\\" and \\"default\\" namespaces. It is also configured to [run CoreDNS on Fargate](https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html#fargate-gs-coredns).

\`\`\`ts
const cluster = new eks.FargateCluster(this, 'MyCluster', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

**NOTE**: Classic Load Balancers and Network Load Balancers are not supported on
pods running on Fargate. For ingress, we recommend that you use the [ALB Ingress
Controller](https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html)
on Amazon EKS (minimum version v1.1.4).

### Self-managed nodes

Another way of allocating capacity to an EKS cluster is by using self-managed nodes.
EC2 instances that are part of the auto-scaling group will serve as worker nodes for the cluster.
This type of capacity is also commonly referred to as *EC2 Capacity** or *EC2 Nodes*.

For a detailed overview please visit [Self Managed Nodes](https://docs.aws.amazon.com/eks/latest/userguide/worker.html).

Creating an auto-scaling group and connecting it to the cluster is done using the \`cluster.addAutoScalingGroupCapacity\` method:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('frontend-nodes', {
  instanceType: new ec2.InstanceType('t2.medium'),
  minCapacity: 3,
  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC }
});
\`\`\`

To connect an already initialized auto-scaling group, use the \`cluster.connectAutoScalingGroupCapacity()\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...);
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

In both cases, the [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html#cluster-sg) will be automatically attached to
the auto-scaling group, allowing for traffic to flow freely between managed and self-managed nodes.

> **Note:** The default \`updateType\` for auto-scaling groups does not replace existing nodes. Since security groups are determined at launch time, self-managed nodes that were provisioned with version \`1.78.0\` or lower, will not be updated.
> To apply the new configuration on all your self-managed nodes, you'll need to replace the nodes using the \`UpdateType.REPLACING_UPDATE\` policy for the [\`updateType\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.AutoScalingGroup.html#updatetypespan-classapi-icon-api-icon-deprecated-titlethis-api-element-is-deprecated-its-use-is-not-recommended%EF%B8%8Fspan) property.

You can customize the [/etc/eks/boostrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh) script, which is responsible
for bootstrapping the node to the EKS cluster. For example, you can use \`kubeletExtraArgs\` to add custom node labels or taints.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  instanceType: new ec2.InstanceType('t3.large'),
  minCapacity: 2,
  bootstrapOptions: {
    kubeletExtraArgs: '--node-labels foo=bar,goo=far',
    awsApiRetryAttempts: 5
  }
});
\`\`\`

To disable bootstrapping altogether (i.e. to fully customize user-data), set \`bootstrapEnabled\` to \`false\`.
You can also configure the cluster to use an auto-scaling group as the default capacity:

\`\`\`ts
cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacityType: eks.DefaultCapacityType.EC2,
});
\`\`\`

This will allocate an auto-scaling group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).
To access the \`AutoScalingGroup\` that was created on your behalf, you can use \`cluster.defaultCapacity\`.
You can also independently create an \`AutoScalingGroup\` and connect it to the cluster using the \`cluster.connectAutoScalingGroupCapacity\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...)
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

This will add the necessary user-data to access the apiserver and configure all connections, roles, and tags needed for the instances in the auto-scaling group to properly join the cluster.

#### Spot Instances

When using self-managed nodes, you can configure the capacity to use spot instances, greatly reducing capacity cost.
To enable spot capacity, use the \`spotPrice\` property:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  spotPrice: '0.1094',
  instanceType: new ec2.InstanceType('t3.large'),
  maxCapacity: 10
});
\`\`\`

> Spot instance nodes will be labeled with \`lifecycle=Ec2Spot\` and tainted with \`PreferNoSchedule\`.

The [AWS Node Termination Handler](https://github.com/aws/aws-node-termination-handler) \`DaemonSet\` will be
installed from [Amazon EKS Helm chart repository](https://github.com/aws/eks-charts/tree/master/stable/aws-node-termination-handler) on these nodes.
The termination handler ensures that the Kubernetes control plane responds appropriately to events that
can cause your EC2 instance to become unavailable, such as [EC2 maintenance events](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html)
and [EC2 Spot interruptions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html) and helps gracefully stop all pods running on spot nodes that are about to be
terminated.

> Handler Version: [1.7.0](https://github.com/aws/aws-node-termination-handler/releases/tag/v1.7.0)
>
> Chart Version: [0.9.5](https://github.com/aws/eks-charts/blob/v0.0.28/stable/aws-node-termination-handler/Chart.yaml)

To disable the installation of the termination handler, set the \`spotInterruptHandler\` property to \`false\`. This applies both to \`addAutoScalingGroupCapacity\` and \`connectAutoScalingGroupCapacity\`.

#### Bottlerocket

[Bottlerocket](https://aws.amazon.com/bottlerocket/) is a Linux-based open-source operating system that is purpose-built by Amazon Web Services for running containers on virtual machines or bare metal hosts.
At this moment, \`Bottlerocket\` is only supported when using self-managed auto-scaling groups.

> **NOTICE**: Bottlerocket is only available in [some supported AWS regions](https://github.com/bottlerocket-os/bottlerocket/blob/develop/QUICKSTART-EKS.md#finding-an-ami).

The following example will create an auto-scaling group of 2 \`t3.small\` Linux instances running with the \`Bottlerocket\` AMI.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('BottlerocketNodes', {
  instanceType: new ec2.InstanceType('t3.small'),
  minCapacity:  2,
  machineImageType: eks.MachineImageType.BOTTLEROCKET
});
\`\`\`

The specific Bottlerocket AMI variant will be auto selected according to the k8s version for the \`x86_64\` architecture.
For example, if the Amazon EKS cluster version is \`1.17\`, the Bottlerocket AMI variant will be auto selected as
\`aws-k8s-1.17\` behind the scene.

> See [Variants](https://github.com/bottlerocket-os/bottlerocket/blob/develop/README.md#variants) for more details.

Please note Bottlerocket does not allow to customize bootstrap options and \`bootstrapOptions\` properties is not supported when you create the \`Bottlerocket\` capacity.

### Endpoint Access

When you create a new cluster, Amazon EKS creates an endpoint for the managed Kubernetes API server that you use to communicate with your cluster (using Kubernetes management tools such as \`kubectl\`)

By default, this API server endpoint is public to the internet, and access to the API server is secured using a combination of
AWS Identity and Access Management (IAM) and native Kubernetes [Role Based Access Control](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) (RBAC).

You can configure the [cluster endpoint access](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) by using the \`endpointAccess\` property:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  endpointAccess: eks.EndpointAccess.PRIVATE // No access outside of your VPC.
});
\`\`\`

The default value is \`eks.EndpointAccess.PUBLIC_AND_PRIVATE\`. Which means the cluster endpoint is accessible from outside of your VPC, but worker node traffic and \`kubectl\` commands issued by this library stay within your VPC.

### VPC Support

You can specify the VPC of the cluster using the \`vpc\` and \`vpcSubnets\` properties:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');

new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  vpc,
  vpcSubnets: [{ subnetType: ec2.SubnetType.PRIVATE }]
});
\`\`\`

> Note: Isolated VPCs (i.e with no internet access) are not currently supported. See https://github.com/aws/aws-cdk/issues/12171

If you do not specify a VPC, one will be created on your behalf, which you can then access via \`cluster.vpc\`. The cluster VPC will be associated to any EKS managed capacity (i.e Managed Node Groups and Fargate Profiles).

If you allocate self managed capacity, you can specify which subnets should the auto-scaling group use:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');
cluster.addAutoScalingGroupCapacity('nodes', {
  vpcSubnets: { subnets: vpc.privateSubnets }
});
\`\`\`

There are two additional components you might want to provision within the VPC.

#### Kubectl Handler

The \`KubectlHandler\` is a Lambda function responsible to issuing \`kubectl\` and \`helm\` commands against the cluster when you add resource manifests to the cluster.

The handler association to the VPC is derived from the \`endpointAccess\` configuration. The rule of thumb is: *If the cluster VPC can be associated, it will be*.

Breaking this down, it means that if the endpoint exposes private access (via \`EndpointAccess.PRIVATE\` or \`EndpointAccess.PUBLIC_AND_PRIVATE\`), and the VPC contains **private** subnets, the Lambda function will be provisioned inside the VPC and use the private subnets to interact with the cluster. This is the common use-case.

If the endpoint does not expose private access (via \`EndpointAccess.PUBLIC\`) **or** the VPC does not contain private subnets, the function will not be provisioned within the VPC.

#### Cluster Handler

The \`ClusterHandler\` is a Lambda function responsible to interact with the EKS API in order to control the cluster lifecycle. To provision this function inside the VPC, set the \`placeClusterHandlerInVpc\` property to \`true\`. This will place the function inside the private subnets of the VPC based on the selection strategy specified in the [\`vpcSubnets\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.Cluster.html#vpcsubnetsspan-classapi-icon-api-icon-experimental-titlethis-api-element-is-experimental-it-may-change-without-noticespan) property.

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  clusterHandlerEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

### Kubectl Support

The resources are created in the cluster by running \`kubectl apply\` from a python lambda function.

#### Environment

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  kubectlEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

#### Runtime

The kubectl handler uses \`kubectl\`, \`helm\` and the \`aws\` CLI in order to
interact with the cluster. These are bundled into AWS Lambda layers included in
the \`@aws-cdk/lambda-layer-awscli\` and \`@aws-cdk/lambda-layer-kubectl\` modules.

You can specify a custom \`lambda.LayerVersion\` if you wish to use a different
version of these tools. The handler expects the layer to include the following
three executables:

\`\`\`text
helm/helm
kubectl/kubectl
awscli/aws
\`\`\`

See more information in the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-awscli/layer) for @aws-cdk/lambda-layer-awscli
and the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-kubectl/layer) for @aws-cdk/lambda-layer-kubectl.

\`\`\`ts
const layer = new lambda.LayerVersion(this, 'KubectlLayer', {
  code: lambda.Code.fromAsset('layer.zip'),
});
\`\`\`

Now specify when the cluster is defined:

\`\`\`ts
const cluster = new eks.Cluster(this, 'MyCluster', {
  kubectlLayer: layer,
});

// or
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlLayer: layer,
});
\`\`\`

#### Memory

By default, the kubectl provider is configured with 1024MiB of memory. You can use the \`kubectlMemory\` option to specify the memory size for the AWS Lambda function:

\`\`\`ts
import { Size } from 'aws-cdk-lib';

new eks.Cluster(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});

// or
eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});
\`\`\`

### ARM64 Support

Instance types with \`ARM64\` architecture are supported in both managed nodegroup and self-managed capacity. Simply specify an ARM64 \`instanceType\` (such as \`m6g.medium\`), and the latest
Amazon Linux 2 AMI for ARM64 will be automatically selected.

\`\`\`ts
// add a managed ARM64 nodegroup
cluster.addNodegroupCapacity('extra-ng-arm', {
  instanceTypes: [new ec2.InstanceType('m6g.medium')],
  minSize: 2,
});

// add a self-managed ARM64 nodegroup
cluster.addAutoScalingGroupCapacity('self-ng-arm', {
  instanceType: new ec2.InstanceType('m6g.medium'),
  minCapacity: 2,
})
\`\`\`

### Masters Role

When you create a cluster, you can specify a \`mastersRole\`. The \`Cluster\` construct will associate this role with the \`system:masters\` [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) group, giving it super-user access to the cluster.

\`\`\`ts
const role = new iam.Role(...);
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  mastersRole: role,
});
\`\`\`

If you do not specify it, a default role will be created on your behalf, that can be assumed by anyone in the account with \`sts:AssumeRole\` permissions for this role.

This is the role you see as part of the stack outputs mentioned in the [Quick Start](#quick-start).

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

### Encryption

When you create an Amazon EKS cluster, envelope encryption of Kubernetes secrets using the AWS Key Management Service (AWS KMS) can be enabled.
The documentation on [creating a cluster](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html)
can provide more details about the customer master key (CMK) that can be used for the encryption.

You can use the \`secretsEncryptionKey\` to configure which key the cluster will use to encrypt Kubernetes secrets. By default, an AWS Managed key will be used.

> This setting can only be specified when the cluster is created and cannot be updated.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.Cluster(this, 'MyCluster', {
  secretsEncryptionKey: secretsKey,
  // ...
});
\`\`\`

You can also use a similar configuration for running a cluster built using the FargateCluster construct.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.FargateCluster(this, 'MyFargateCluster', {
  secretsEncryptionKey: secretsKey
});
\`\`\`

The Amazon Resource Name (ARN) for that CMK can be retrieved.

\`\`\`ts
const clusterEncryptionConfigKeyArn = cluster.clusterEncryptionConfigKeyArn;
\`\`\`

## Permissions and Security

Amazon EKS provides several mechanism of securing the cluster and granting permissions to specific IAM users and roles.

### AWS IAM Mapping

As described in the [Amazon EKS User Guide](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html), you can map AWS IAM users and roles to [Kubernetes Role-based access control (RBAC)](https://kubernetes.io/docs/reference/access-authn-authz/rbac).

The Amazon EKS construct manages the *aws-auth* \`ConfigMap\` Kubernetes resource on your behalf and exposes an API through the \`cluster.awsAuth\` for mapping
users, roles and accounts.

Furthermore, when auto-scaling group capacity is added to the cluster, the IAM instance role of the auto-scaling group will be automatically mapped to RBAC so nodes can connect to the cluster. No manual mapping is required.

For example, let's say you want to grant an IAM user administrative privileges on your cluster:

\`\`\`ts
const adminUser = new iam.User(this, 'Admin');
cluster.awsAuth.addUserMapping(adminUser, { groups: [ 'system:masters' ]});
\`\`\`

A convenience method for mapping a role to the \`system:masters\` group is also available:

\`\`\`ts
cluster.awsAuth.addMastersRole(role)
\`\`\`

### Cluster Security Group

When you create an Amazon EKS cluster, a [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
is automatically created as well. This security group is designed to allow all traffic from the control plane and managed node groups to flow freely
between each other.

The ID for that security group can be retrieved after creating the cluster.

\`\`\`ts
const clusterSecurityGroupId = cluster.clusterSecurityGroupId;
\`\`\`

### Node SSH Access

If you want to be able to SSH into your worker nodes, you must already have an SSH key in the region you're connecting to and pass it when
you add capacity to the cluster. You must also be able to connect to the hosts (meaning they must have a public IP and you
should be allowed to connect to them on port 22):

See [SSH into nodes](test/example.ssh-into-nodes.lit.ts) for a code example.

If you want to SSH into nodes in a private subnet, you should set up a bastion host in a public subnet. That setup is recommended, but is
unfortunately beyond the scope of this documentation.

### Service Accounts

With services account you can provide Kubernetes Pods access to AWS resources.

\`\`\`ts
// add service account
const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

const mypod = cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    serviceAccountName: sa.serviceAccountName
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ],

      }
    ]
  }
});

// create the resource after the service account.
mypod.node.addDependency(sa);

// print the IAM role arn for this service account
new cdk.CfnOutput(this, 'ServiceAccountIamRole', { value: sa.role.roleArn })
\`\`\`

Note that using \`sa.serviceAccountName\` above **does not** translate into a resource dependency.
This is why an explicit dependency is needed. See <https://github.com/aws/aws-cdk/issues/9910> for more details.

You can also add service accounts to existing clusters.
To do so, pass the \`openIdConnectProvider\` property when you import the cluster into the application.

\`\`\`ts
// you can import an existing provider
const provider = eks.OpenIdConnectProvider.fromOpenIdConnectProviderArn(this, 'Provider', 'arn:aws:iam::123456:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/AB123456ABC');

// or create a new one using an existing issuer url
const provider = new eks.OpenIdConnectProvider(this, 'Provider', issuerUrl);

const cluster = eks.Cluster.fromClusterAttributes({
  clusterName: 'Cluster',
  openIdConnectProvider: provider,
  kubectlRoleArn: 'arn:aws:iam::123456:role/service-role/k8sservicerole',
});

const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

// ...
\`\`\`

Note that adding service accounts requires running \`kubectl\` commands against the cluster.
This means you must also pass the \`kubectlRoleArn\` when importing the cluster.
See [Using existing Clusters](https://github.com/aws/aws-cdk/tree/master/packages/@aws-cdk/aws-eks#using-existing-clusters).

## Applying Kubernetes Resources

The library supports several popular resource deployment mechanisms, among which are:

### Kubernetes Manifests

The \`KubernetesManifest\` construct or \`cluster.addManifest\` method can be used
to apply Kubernetes resource manifests to this cluster.

> When using \`cluster.addManifest\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new KubernetesManifest\` to create the manifest in the scope of the other stack.

The following examples will deploy the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes)
service on the cluster:

\`\`\`ts
const appLabel = { app: \\"hello-kubernetes\\" };

const deployment = {
  apiVersion: \\"apps/v1\\",
  kind: \\"Deployment\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    replicas: 3,
    selector: { matchLabels: appLabel },
    template: {
      metadata: { labels: appLabel },
      spec: {
        containers: [
          {
            name: \\"hello-kubernetes\\",
            image: \\"paulbouwer/hello-kubernetes:1.5\\",
            ports: [ { containerPort: 8080 } ]
          }
        ]
      }
    }
  }
};

const service = {
  apiVersion: \\"v1\\",
  kind: \\"Service\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    type: \\"LoadBalancer\\",
    ports: [ { port: 80, targetPort: 8080 } ],
    selector: appLabel
  }
};

// option 1: use a construct
new KubernetesManifest(this, 'hello-kub', {
  cluster,
  manifest: [ deployment, service ]
});

// or, option2: use \`addManifest\`
cluster.addManifest('hello-kub', service, deployment);
\`\`\`

#### Adding resources from a URL

The following example will deploy the resource manifest hosting on remote server:

\`\`\`ts
import * as yaml from 'js-yaml';
import * as request from 'sync-request';

const manifestUrl = 'https://url/of/manifest.yaml';
const manifest = yaml.safeLoadAll(request('GET', manifestUrl).getBody());
cluster.addManifest('my-resource', ...manifest);
\`\`\`

#### Dependencies

There are cases where Kubernetes resources must be deployed in a specific order.
For example, you cannot define a resource in a Kubernetes namespace before the
namespace was created.

You can represent dependencies between \`KubernetesManifest\`s using
\`resource.node.addDependency()\`:

\`\`\`ts
const namespace = cluster.addManifest('my-namespace', {
  apiVersion: 'v1',
  kind: 'Namespace',
  metadata: { name: 'my-app' }
});

const service = cluster.addManifest('my-service', {
  metadata: {
    name: 'myservice',
    namespace: 'my-app'
  },
  spec: // ...
});

service.node.addDependency(namespace); // will apply \`my-namespace\` before \`my-service\`.
\`\`\`

**NOTE:** when a \`KubernetesManifest\` includes multiple resources (either directly
or through \`cluster.addManifest()\`) (e.g. \`cluster.addManifest('foo', r1, r2,
r3,...)\`), these resources will be applied as a single manifest via \`kubectl\`
and will be applied sequentially (the standard behavior in \`kubectl\`).

---

Since Kubernetes manifests are implemented as CloudFormation resources in the
CDK. This means that if the manifest is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`kubectl delete\` command and the
Kubernetes resources in that manifest will be deleted.

#### Resource Pruning

When a resource is deleted from a Kubernetes manifest, the EKS module will
automatically delete these resources by injecting a _prune label_ to all
manifest resources. This label is then passed to [\`kubectl apply --prune\`].

[\`kubectl apply --prune\`]: https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label

Pruning is enabled by default but can be disabled through the \`prune\` option
when a cluster is defined:

\`\`\`ts
new Cluster(this, 'MyCluster', {
  prune: false
});
\`\`\`

#### Manifests Validation

The \`kubectl\` CLI supports applying a manifest by skipping the validation.
This can be accomplished by setting the \`skipValidation\` flag to \`true\` in the \`KubernetesManifest\` props.

\`\`\`ts
new eks.KubernetesManifest(this, 'HelloAppWithoutValidation', {
  cluster: this.cluster,
  manifest: [ deployment, service ],
  skipValidation: true,
});
\`\`\`

### Helm Charts

The \`HelmChart\` construct or \`cluster.addHelmChart\` method can be used
to add Kubernetes resources to this cluster using Helm.

> When using \`cluster.addHelmChart\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new HelmChart\` to create the chart in the scope of the other stack.

The following example will install the [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/) to your cluster using Helm.

\`\`\`ts
// option 1: use a construct
new HelmChart(this, 'NginxIngress', {
  cluster,
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});

// or, option2: use \`addHelmChart\`
cluster.addHelmChart('NginxIngress', {
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});
\`\`\`

Helm charts will be installed and updated using \`helm upgrade --install\`, where a few parameters
are being passed down (such as \`repo\`, \`values\`, \`version\`, \`namespace\`, \`wait\`, \`timeout\`, etc).
This means that if the chart is added to CDK with the same release name, it will try to update
the chart in the cluster.

Helm charts are implemented as CloudFormation resources in CDK.
This means that if the chart is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`helm uninstall\` command and the
Helm chart will be deleted.

When there is no \`release\` defined, a unique ID will be allocated for the release based
on the construct path.

By default, all Helm charts will be installed concurrently. In some cases, this
could cause race conditions where two Helm charts attempt to deploy the same
resource or if Helm charts depend on each other. You can use
\`chart.node.addDependency()\` in order to declare a dependency order between
charts:

\`\`\`ts
const chart1 = cluster.addHelmChart(...);
const chart2 = cluster.addHelmChart(...);

chart2.node.addDependency(chart1);
\`\`\`

#### CDK8s Charts

[CDK8s](https://cdk8s.io/) is an open-source library that enables Kubernetes manifest authoring using familiar programming languages. It is founded on the same technologies as the AWS CDK, such as [\`constructs\`](https://github.com/aws/constructs) and [\`jsii\`](https://github.com/aws/jsii).

> To learn more about cdk8s, visit the [Getting Started](https://github.com/awslabs/cdk8s/tree/master/docs/getting-started) tutorials.

The EKS module natively integrates with cdk8s and allows you to apply cdk8s charts on AWS EKS clusters via the \`cluster.addCdk8sChart\` method.

In addition to \`cdk8s\`, you can also use [\`cdk8s+\`](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-plus), which provides higher level abstraction for the core kubernetes api objects.
You can think of it like the \`L2\` constructs for Kubernetes. Any other \`cdk8s\` based libraries are also supported, for example [\`cdk8s-debore\`](https://github.com/toricls/cdk8s-debore).

To get started, add the following dependencies to your \`package.json\` file:

\`\`\`json
\\"dependencies\\": {
  \\"cdk8s\\": \\"0.30.0\\",
  \\"cdk8s-plus\\": \\"0.30.0\\",
  \\"constructs\\": \\"3.0.4\\"
}
\`\`\`

> Note that the version of \`cdk8s\` must be \`>=0.30.0\`.

Similarly to how you would create a stack by extending \`@aws-cdk/core.Stack\`, we recommend you create a chart of your own that extends \`cdk8s.Chart\`,
and add your kubernetes resources to it. You can use \`aws-cdk\` construct attributes and properties inside your \`cdk8s\` construct freely.

In this example we create a chart that accepts an \`s3.Bucket\` and passes its name to a kubernetes pod as an environment variable.

Notice that the chart must accept a \`constructs.Construct\` type as its scope, not an \`@aws-cdk/core.Construct\` as you would normally use.
For this reason, to avoid possible confusion, we will create the chart in a separate file:

\`+ my-chart.ts\`

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface MyChartProps {
  readonly bucket: s3.Bucket;
}

export class MyChart extends cdk8s.Chart {
  constructor(scope: constructs.Construct, id: string, props: MyChartProps) {
    super(scope, id);

    new kplus.Pod(this, 'Pod', {
      spec: {
        containers: [
          new kplus.Container({
            image: 'my-image',
            env: {
              BUCKET_NAME: kplus.EnvValue.fromValue(props.bucket.bucketName),
            },
          }),
        ],
      },
    });
  }
}
\`\`\`

Then, in your AWS CDK app:

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as cdk8s from 'cdk8s';
import { MyChart } from './my-chart';

// some bucket..
const bucket = new s3.Bucket(this, 'Bucket');

// create a cdk8s chart and use \`cdk8s.App\` as the scope.
const myChart = new MyChart(new cdk8s.App(), 'MyChart', { bucket });

// add the cdk8s chart to the cluster
cluster.addCdk8sChart('my-chart', myChart);
\`\`\`

##### Custom CDK8s Constructs

You can also compose a few stock \`cdk8s+\` constructs into your own custom construct. However, since mixing scopes between \`aws-cdk\` and \`cdk8s\` is currently not supported, the \`Construct\` class
you'll need to use is the one from the [\`constructs\`](https://github.com/aws/constructs) module, and not from \`@aws-cdk/core\` like you normally would.
This is why we used \`new cdk8s.App()\` as the scope of the chart above.

\`\`\`ts
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface LoadBalancedWebService {
  readonly port: number;
  readonly image: string;
  readonly replicas: number;
}

export class LoadBalancedWebService extends constructs.Construct {
  constructor(scope: constructs.Construct, id: string, props: LoadBalancedWebService) {
    super(scope, id);

    const deployment = new kplus.Deployment(chart, 'Deployment', {
      spec: {
        replicas: props.replicas,
        podSpecTemplate: {
          containers: [ new kplus.Container({ image: props.image }) ]
        }
      },
    });

    deployment.expose({port: props.port, serviceType: kplus.ServiceType.LOAD_BALANCER})

  }
}
\`\`\`

##### Manually importing k8s specs and CRD's

If you find yourself unable to use \`cdk8s+\`, or just like to directly use the \`k8s\` native objects or CRD's, you can do so by manually importing them using the \`cdk8s-cli\`.

See [Importing kubernetes objects](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-cli#import) for detailed instructions.

## Patching Kubernetes Resources

The \`KubernetesPatch\` construct can be used to update existing kubernetes
resources. The following example can be used to patch the \`hello-kubernetes\`
deployment from the example above with 5 replicas.

\`\`\`ts
new KubernetesPatch(this, 'hello-kub-deployment-label', {
  cluster,
  resourceName: \\"deployment/hello-kubernetes\\",
  applyPatch: { spec: { replicas: 5 } },
  restorePatch: { spec: { replicas: 3 } }
})
\`\`\`

## Querying Kubernetes Resources

The \`KubernetesObjectValue\` construct can be used to query for information about kubernetes objects,
and use that as part of your CDK application.

For example, you can fetch the address of a [\`LoadBalancer\`](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer) type service:

\`\`\`ts
// query the load balancer address
const myServiceAddress = new KubernetesObjectValue(this, 'LoadBalancerAttribute', {
  cluster: cluster,
  objectType: 'service',
  objectName: 'my-service',
  jsonPath: '.status.loadBalancer.ingress[0].hostname', // https://kubernetes.io/docs/reference/kubectl/jsonpath/
});

// pass the address to a lambda function
const proxyFunction = new lambda.Function(this, 'ProxyFunction', {
  ...
  environment: {
    myServiceAddress: myServiceAddress.value
  },
})
\`\`\`

Specifically, since the above use-case is quite common, there is an easier way to access that information:

\`\`\`ts
const loadBalancerAddress = cluster.getServiceLoadBalancerAddress('my-service');
\`\`\`

## Using existing clusters

The Amazon EKS library allows defining Kubernetes resources such as [Kubernetes
manifests](#kubernetes-resources) and [Helm charts](#helm-charts) on clusters
that are not defined as part of your CDK app.

First, you'll need to \\"import\\" a cluster to your CDK app. To do that, use the
\`eks.Cluster.fromClusterAttributes()\` static method:

\`\`\`ts
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  clusterName: 'my-cluster-name',
  kubectlRoleArn: 'arn:aws:iam::1111111:role/iam-role-that-has-masters-access',
});
\`\`\`

Then, you can use \`addManifest\` or \`addHelmChart\` to define resources inside
your Kubernetes cluster. For example:

\`\`\`ts
cluster.addManifest('Test', {
  apiVersion: 'v1',
  kind: 'ConfigMap',
  metadata: {
    name: 'myconfigmap',
  },
  data: {
    Key: 'value',
    Another: '123454',
  },
});
\`\`\`

At the minimum, when importing clusters for \`kubectl\` management, you will need
to specify:

* \`clusterName\` - the name of the cluster.
* \`kubectlRoleArn\` - the ARN of an IAM role mapped to the \`system:masters\` RBAC
  role. If the cluster you are importing was created using the AWS CDK, the
  CloudFormation stack has an output that includes an IAM role that can be used.
  Otherwise, you can create an IAM role and map it to \`system:masters\` manually.
  The trust policy of this role should include the the
  \`arn:aws::iam::\${accountId}:root\` principal in order to allow the execution
  role of the kubectl resource to assume it.

If the cluster is configured with private-only or private and restricted public
Kubernetes [endpoint access](#endpoint-access), you must also specify:

* \`kubectlSecurityGroupId\` - the ID of an EC2 security group that is allowed
  connections to the cluster's control security group. For example, the EKS managed [cluster security group](#cluster-security-group).
* \`kubectlPrivateSubnetIds\` - a list of private VPC subnets IDs that will be used
  to access the Kubernetes endpoint.

## Known Issues and Limitations

* [One cluster per stack](https://github.com/aws/aws-cdk/issues/10073)
* [Service Account dependencies](https://github.com/aws/aws-cdk/issues/9910)
* [Support isolated VPCs](https://github.com/aws/aws-cdk/issues/12171)

# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### AwsAuth <a name=\\"AwsAuth\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth\\"></a>

Manages mapping between IAM users and roles to Kubernetes RBAC configuration.

> [https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AwsAuth(Construct Scope, string Id, AwsAuthProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.AwsAuthProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.AwsAuthProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addAccount\\">AddAccount</a></code> | Additional AWS account to add to the aws-auth configmap. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addMastersRole\\">AddMastersRole</a></code> | Adds the specified IAM role to the \`system:masters\` RBAC group, which means that anyone that can assume it will be able to administer this Kubernetes system. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping\\">AddRoleMapping</a></code> | Adds a mapping between an IAM role to a Kubernetes user and groups. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addUserMapping\\">AddUserMapping</a></code> | Adds a mapping between an IAM user to a Kubernetes user and groups. |

---

##### \`AddAccount\` <a name=\\"AddAccount\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addAccount\\"></a>

\`\`\`csharp
private AddAccount(string AccountId)
\`\`\`

###### \`AccountId\`<sup>Required</sup> <a name=\\"AccountId\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addAccount.parameter.accountId\\"></a>

- *Type:* string

account number.

---

##### \`AddMastersRole\` <a name=\\"AddMastersRole\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole\\"></a>

\`\`\`csharp
private AddMastersRole(IRole Role, string Username = null)
\`\`\`

###### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole.parameter.role\\"></a>

- *Type:* Amazon.CDK.aws_iam.IRole

The IAM role to add.

---

###### \`Username\`<sup>Optional</sup> <a name=\\"Username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole.parameter.username\\"></a>

- *Type:* string

Optional user (defaults to the role ARN).

---

##### \`AddRoleMapping\` <a name=\\"AddRoleMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping\\"></a>

\`\`\`csharp
private AddRoleMapping(IRole Role, AwsAuthMapping Mapping)
\`\`\`

###### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.role\\"></a>

- *Type:* Amazon.CDK.aws_iam.IRole

The IAM role to map.

---

###### \`Mapping\`<sup>Required</sup> <a name=\\"Mapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.mapping\\"></a>

- *Type:* Amazon.CDK.aws_eks.AwsAuthMapping

Mapping to k8s user name and groups.

---

##### \`AddUserMapping\` <a name=\\"AddUserMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping\\"></a>

\`\`\`csharp
private AddUserMapping(IUser User, AwsAuthMapping Mapping)
\`\`\`

###### \`User\`<sup>Required</sup> <a name=\\"User\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.user\\"></a>

- *Type:* Amazon.CDK.aws_iam.IUser

The IAM user to map.

---

###### \`Mapping\`<sup>Required</sup> <a name=\\"Mapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.mapping\\"></a>

- *Type:* Amazon.CDK.aws_eks.AwsAuthMapping

Mapping to k8s user name and groups.

---




### CfnAddon <a name=\\"CfnAddon\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnAddon(Construct Scope, string Id, CfnAddonProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.CfnAddonProps</code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.CfnAddonProps

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::EKS::Addon.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.addonName\\">AddonName</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.addonVersion\\">AddonVersion</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.resolveConflicts\\">ResolveConflicts</a></code> | <code>string</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.serviceAccountRoleArn\\">ServiceAccountRoleArn</a></code> | <code>string</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

##### \`AddonName\`<sup>Required</sup> <a name=\\"AddonName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.addonName\\"></a>

\`\`\`csharp
public string AddonName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`AddonVersion\`<sup>Optional</sup> <a name=\\"AddonVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.addonVersion\\"></a>

\`\`\`csharp
public string AddonVersion { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`ResolveConflicts\`<sup>Optional</sup> <a name=\\"ResolveConflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.resolveConflicts\\"></a>

\`\`\`csharp
public string ResolveConflicts { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`ServiceAccountRoleArn\`<sup>Optional</sup> <a name=\\"ServiceAccountRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.serviceAccountRoleArn\\"></a>

\`\`\`csharp
public string ServiceAccountRoleArn { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnCluster <a name=\\"CfnCluster\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnCluster(Construct Scope, string Id, CfnClusterProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.CfnClusterProps</code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.CfnClusterProps

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\">AttrCertificateAuthorityData</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\">AttrClusterSecurityGroupId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\">AttrEncryptionConfigKeyArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrEndpoint\\">AttrEndpoint</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\">AttrOpenIdConnectIssuerUrl</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.resourcesVpcConfig\\">ResourcesVpcConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.roleArn\\">RoleArn</a></code> | <code>string</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.encryptionConfig\\">EncryptionConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\">KubernetesNetworkConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.name\\">Name</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.version\\">Version</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`AttrCertificateAuthorityData\`<sup>Required</sup> <a name=\\"AttrCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\"></a>

\`\`\`csharp
public string AttrCertificateAuthorityData { get; }
\`\`\`

- *Type:* string

---

##### \`AttrClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"AttrClusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\"></a>

\`\`\`csharp
public string AttrClusterSecurityGroupId { get; }
\`\`\`

- *Type:* string

---

##### \`AttrEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"AttrEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\"></a>

\`\`\`csharp
public string AttrEncryptionConfigKeyArn { get; }
\`\`\`

- *Type:* string

---

##### \`AttrEndpoint\`<sup>Required</sup> <a name=\\"AttrEndpoint\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrEndpoint\\"></a>

\`\`\`csharp
public string AttrEndpoint { get; }
\`\`\`

- *Type:* string

---

##### \`AttrOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"AttrOpenIdConnectIssuerUrl\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\"></a>

\`\`\`csharp
public string AttrOpenIdConnectIssuerUrl { get; }
\`\`\`

- *Type:* string

---

##### \`ResourcesVpcConfig\`<sup>Required</sup> <a name=\\"ResourcesVpcConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.resourcesVpcConfig\\"></a>

\`\`\`csharp
public object ResourcesVpcConfig { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`RoleArn\`<sup>Required</sup> <a name=\\"RoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.roleArn\\"></a>

\`\`\`csharp
public string RoleArn { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`EncryptionConfig\`<sup>Optional</sup> <a name=\\"EncryptionConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.encryptionConfig\\"></a>

\`\`\`csharp
public object EncryptionConfig { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`KubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"KubernetesNetworkConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\"></a>

\`\`\`csharp
public object KubernetesNetworkConfig { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.name\\"></a>

\`\`\`csharp
public string Name { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.version\\"></a>

\`\`\`csharp
public string Version { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnFargateProfile <a name=\\"CfnFargateProfile\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnFargateProfile(Construct Scope, string Id, CfnFargateProfileProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.CfnFargateProfileProps</code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.CfnFargateProfileProps

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::EKS::FargateProfile.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\">PodExecutionRoleArn</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.selectors\\">Selectors</a></code> | <code>object</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.subnets\\">Subnets</a></code> | <code>string[]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`PodExecutionRoleArn\`<sup>Required</sup> <a name=\\"PodExecutionRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\"></a>

\`\`\`csharp
public string PodExecutionRoleArn { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`Selectors\`<sup>Required</sup> <a name=\\"Selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.selectors\\"></a>

\`\`\`csharp
public object Selectors { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`FargateProfileName\`<sup>Optional</sup> <a name=\\"FargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`Subnets\`<sup>Optional</sup> <a name=\\"Subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.subnets\\"></a>

\`\`\`csharp
public string[] Subnets { get; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnNodegroup <a name=\\"CfnNodegroup\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnNodegroup(Construct Scope, string Id, CfnNodegroupProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.CfnNodegroupProps</code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.CfnNodegroupProps

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrClusterName\\">AttrClusterName</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrNodegroupName\\">AttrNodegroupName</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.labels\\">Labels</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.nodeRole\\">NodeRole</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.subnets\\">Subnets</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.amiType\\">AmiType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.capacityType\\">CapacityType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.diskSize\\">DiskSize</a></code> | <code>double</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\">ForceUpdateEnabled</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.instanceTypes\\">InstanceTypes</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.launchTemplate\\">LaunchTemplate</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.releaseVersion\\">ReleaseVersion</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.remoteAccess\\">RemoteAccess</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.scalingConfig\\">ScalingConfig</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.taints\\">Taints</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.version\\">Version</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`AttrClusterName\`<sup>Required</sup> <a name=\\"AttrClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrClusterName\\"></a>

\`\`\`csharp
public string AttrClusterName { get; }
\`\`\`

- *Type:* string

---

##### \`AttrNodegroupName\`<sup>Required</sup> <a name=\\"AttrNodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrNodegroupName\\"></a>

\`\`\`csharp
public string AttrNodegroupName { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`Labels\`<sup>Required</sup> <a name=\\"Labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.labels\\"></a>

\`\`\`csharp
public object Labels { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`NodeRole\`<sup>Required</sup> <a name=\\"NodeRole\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.nodeRole\\"></a>

\`\`\`csharp
public string NodeRole { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`Subnets\`<sup>Required</sup> <a name=\\"Subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.subnets\\"></a>

\`\`\`csharp
public string[] Subnets { get; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`AmiType\`<sup>Optional</sup> <a name=\\"AmiType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.amiType\\"></a>

\`\`\`csharp
public string AmiType { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`CapacityType\`<sup>Optional</sup> <a name=\\"CapacityType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.capacityType\\"></a>

\`\`\`csharp
public string CapacityType { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`DiskSize\`<sup>Optional</sup> <a name=\\"DiskSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.diskSize\\"></a>

\`\`\`csharp
public double DiskSize { get; }
\`\`\`

- *Type:* double

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`ForceUpdateEnabled\`<sup>Optional</sup> <a name=\\"ForceUpdateEnabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\"></a>

\`\`\`csharp
public object ForceUpdateEnabled { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`InstanceTypes\`<sup>Optional</sup> <a name=\\"InstanceTypes\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.instanceTypes\\"></a>

\`\`\`csharp
public string[] InstanceTypes { get; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`LaunchTemplate\`<sup>Optional</sup> <a name=\\"LaunchTemplate\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.launchTemplate\\"></a>

\`\`\`csharp
public object LaunchTemplate { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`NodegroupName\`<sup>Optional</sup> <a name=\\"NodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`ReleaseVersion\`<sup>Optional</sup> <a name=\\"ReleaseVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.releaseVersion\\"></a>

\`\`\`csharp
public string ReleaseVersion { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`RemoteAccess\`<sup>Optional</sup> <a name=\\"RemoteAccess\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.remoteAccess\\"></a>

\`\`\`csharp
public object RemoteAccess { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`ScalingConfig\`<sup>Optional</sup> <a name=\\"ScalingConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.scalingConfig\\"></a>

\`\`\`csharp
public object ScalingConfig { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`Taints\`<sup>Optional</sup> <a name=\\"Taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.taints\\"></a>

\`\`\`csharp
public object Taints { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.version\\"></a>

\`\`\`csharp
public string Version { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### Cluster <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.Cluster\\"></a>

- *Implements:* Amazon.CDK.aws_eks.ICluster

A Cluster represents a managed Kubernetes Service (EKS).

This is a fully managed cluster of API Servers (control-plane) The user is still required to create the worker nodes.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new Cluster(Construct Scope, string Id, ClusterProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | a Construct, most likely a cdk.Stack created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | the id of the Construct to create. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.ClusterProps</code> | properties in the IClusterProps interface. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

a Construct, most likely a cdk.Stack created.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.id\\"></a>

- *Type:* string

the id of the Construct to create.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.ClusterProps

properties in the IClusterProps interface.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity\\">AddAutoScalingGroupCapacity</a></code> | Add nodes to this EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addCdk8sChart\\">AddCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addFargateProfile\\">AddFargateProfile</a></code> | Adds a Fargate profile to this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addHelmChart\\">AddHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addManifest\\">AddManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity\\">AddNodegroupCapacity</a></code> | Add managed nodegroup to this Amazon EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addServiceAccount\\">AddServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity\\">ConnectAutoScalingGroupCapacity</a></code> | Connect capacity in the form of an existing AutoScalingGroup to the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress\\">GetServiceLoadBalancerAddress</a></code> | Fetch the load balancer address of a service of type 'LoadBalancer'. |

---

##### \`AddAutoScalingGroupCapacity\` <a name=\\"AddAutoScalingGroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity\\"></a>

\`\`\`csharp
private AddAutoScalingGroupCapacity(string Id, AutoScalingGroupCapacityOptions Options)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.id\\"></a>

- *Type:* string

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.AutoScalingGroupCapacityOptions

---

##### \`AddCdk8sChart\` <a name=\\"AddCdk8sChart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart\\"></a>

\`\`\`csharp
private AddCdk8sChart(string Id, Construct Chart)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`Chart\`<sup>Required</sup> <a name=\\"Chart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* Constructs.Construct

the cdk8s chart.

---

##### \`AddFargateProfile\` <a name=\\"AddFargateProfile\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile\\"></a>

\`\`\`csharp
private AddFargateProfile(string Id, FargateProfileOptions Options)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.id\\"></a>

- *Type:* string

the id of this profile.

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.FargateProfileOptions

profile options.

---

##### \`AddHelmChart\` <a name=\\"AddHelmChart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart\\"></a>

\`\`\`csharp
private AddHelmChart(string Id, HelmChartOptions Options)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.HelmChartOptions

options of this chart.

---

##### \`AddManifest\` <a name=\\"AddManifest\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest\\"></a>

\`\`\`csharp
private AddManifest(string Id, System.Collections.Generic.IDictionary<string, object> Manifest)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest.parameter.id\\"></a>

- *Type:* string

logical id of this manifest.

---

###### \`Manifest\`<sup>Required</sup> <a name=\\"Manifest\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest.parameter.manifest\\"></a>

- *Type:* System.Collections.Generic.IDictionary<string, object>

a list of Kubernetes resource specifications.

---

##### \`AddNodegroupCapacity\` <a name=\\"AddNodegroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity\\"></a>

\`\`\`csharp
private AddNodegroupCapacity(string Id, NodegroupOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.id\\"></a>

- *Type:* string

The ID of the nodegroup.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.NodegroupOptions

options for creating a new nodegroup.

---

##### \`AddServiceAccount\` <a name=\\"AddServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount\\"></a>

\`\`\`csharp
private AddServiceAccount(string Id, ServiceAccountOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.id\\"></a>

- *Type:* string

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.ServiceAccountOptions

---

##### \`ConnectAutoScalingGroupCapacity\` <a name=\\"ConnectAutoScalingGroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity\\"></a>

\`\`\`csharp
private ConnectAutoScalingGroupCapacity(AutoScalingGroup AutoScalingGroup, AutoScalingGroupOptions Options)
\`\`\`

###### \`AutoScalingGroup\`<sup>Required</sup> <a name=\\"AutoScalingGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.autoScalingGroup\\"></a>

- *Type:* Amazon.CDK.aws_autoscaling.AutoScalingGroup

[disable-awslint:ref-via-interface].

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.AutoScalingGroupOptions

options for adding auto scaling groups, like customizing the bootstrap script.

---

##### \`GetServiceLoadBalancerAddress\` <a name=\\"GetServiceLoadBalancerAddress\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress\\"></a>

\`\`\`csharp
private GetServiceLoadBalancerAddress(string ServiceName, ServiceLoadBalancerAddressOptions Options = null)
\`\`\`

###### \`ServiceName\`<sup>Required</sup> <a name=\\"ServiceName\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.serviceName\\"></a>

- *Type:* string

The name of the service.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.ServiceLoadBalancerAddressOptions

Additional operation options.

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes\\">FromClusterAttributes</a></code> | Import an existing cluster. |

---

##### \`FromClusterAttributes\` <a name=\\"FromClusterAttributes\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes\\"></a>

\`\`\`csharp
using Amazon.CDK;

Cluster.FromClusterAttributes(Construct Scope, string Id, ClusterAttributes Attrs);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.scope\\"></a>

- *Type:* Constructs.Construct

the construct scope, in most cases 'this'.

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.id\\"></a>

- *Type:* string

the id or name to import as.

---

###### \`Attrs\`<sup>Required</sup> <a name=\\"Attrs\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.attrs\\"></a>

- *Type:* Amazon.CDK.aws_eks.ClusterAttributes

the cluster properties to use for importing information.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.adminRole\\">AdminRole</a></code> | <code>Amazon.CDK.aws_iam.Role</code> | An IAM role with administrative permissions to create or update the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.awsAuth\\">AwsAuth</a></code> | <code>Amazon.CDK.aws_eks.AwsAuth</code> | Lazily creates the AwsAuth resource, which manages AWS authentication mapping. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterArn\\">ClusterArn</a></code> | <code>string</code> | The AWS generated ARN for the Cluster resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterCertificateAuthorityData\\">ClusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\">ClusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterEndpoint\\">ClusterEndpoint</a></code> | <code>string</code> | The endpoint URL for the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterName\\">ClusterName</a></code> | <code>string</code> | The Name of the created EKS Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\">ClusterOpenIdConnectIssuer</a></code> | <code>string</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\">ClusterOpenIdConnectIssuerUrl</a></code> | <code>string</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer url. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroup\\">ClusterSecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroupId\\">ClusterSecurityGroupId</a></code> | <code>string</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.connections\\">Connections</a></code> | <code>Amazon.CDK.aws_ec2.Connections</code> | Manages connection rules (Security Group Rules) for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.openIdConnectProvider\\">OpenIdConnectProvider</a></code> | <code>Amazon.CDK.aws_iam.IOpenIdConnectProvider</code> | An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.prune\\">Prune</a></code> | <code>bool</code> | Determines if Kubernetes resources can be pruned automatically. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | IAM role assumed by the EKS Control Plane. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.defaultCapacity\\">DefaultCapacity</a></code> | <code>Amazon.CDK.aws_autoscaling.AutoScalingGroup</code> | The auto scaling group that hosts the default capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.defaultNodegroup\\">DefaultNodegroup</a></code> | <code>Amazon.CDK.aws_eks.Nodegroup</code> | The node group that hosts the default capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | The amount of memory allocated to the kubectl provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlPrivateSubnets\\">KubectlPrivateSubnets</a></code> | <code>Amazon.CDK.aws_ec2.ISubnet[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlRole\\">KubectlRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlSecurityGroup\\">KubectlSecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`AdminRole\`<sup>Required</sup> <a name=\\"AdminRole\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.adminRole\\"></a>

\`\`\`csharp
public Role AdminRole { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.Role

An IAM role with administrative permissions to create or update the cluster.

This role also has \`systems:master\` permissions.

---

##### \`AwsAuth\`<sup>Required</sup> <a name=\\"AwsAuth\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.awsAuth\\"></a>

\`\`\`csharp
public AwsAuth AwsAuth { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.AwsAuth

Lazily creates the AwsAuth resource, which manages AWS authentication mapping.

---

##### \`ClusterArn\`<sup>Required</sup> <a name=\\"ClusterArn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterArn\\"></a>

\`\`\`csharp
public string ClusterArn { get; }
\`\`\`

- *Type:* string

The AWS generated ARN for the Cluster resource.

---

##### \`ClusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"ClusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`csharp
public string ClusterCertificateAuthorityData { get; }
\`\`\`

- *Type:* string

The certificate-authority-data for your cluster.

---

##### \`ClusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"ClusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`csharp
public string ClusterEncryptionConfigKeyArn { get; }
\`\`\`

- *Type:* string

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`ClusterEndpoint\`<sup>Required</sup> <a name=\\"ClusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterEndpoint\\"></a>

\`\`\`csharp
public string ClusterEndpoint { get; }
\`\`\`

- *Type:* string

The endpoint URL for the Cluster.

This is the URL inside the kubeconfig file to use with kubectl

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

The Name of the created EKS Cluster.

---

##### \`ClusterOpenIdConnectIssuer\`<sup>Required</sup> <a name=\\"ClusterOpenIdConnectIssuer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\"></a>

\`\`\`csharp
public string ClusterOpenIdConnectIssuer { get; }
\`\`\`

- *Type:* string

If this cluster is kubectl-enabled, returns the OpenID Connect issuer.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`ClusterOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"ClusterOpenIdConnectIssuerUrl\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\"></a>

\`\`\`csharp
public string ClusterOpenIdConnectIssuerUrl { get; }
\`\`\`

- *Type:* string

If this cluster is kubectl-enabled, returns the OpenID Connect issuer url.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`ClusterSecurityGroup\`<sup>Required</sup> <a name=\\"ClusterSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup ClusterSecurityGroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`ClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"ClusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroupId\\"></a>

\`\`\`csharp
public string ClusterSecurityGroupId { get; }
\`\`\`

- *Type:* string

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`Connections\`<sup>Required</sup> <a name=\\"Connections\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.connections\\"></a>

\`\`\`csharp
public Connections Connections { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.Connections

Manages connection rules (Security Group Rules) for the cluster.

---

##### \`OpenIdConnectProvider\`<sup>Required</sup> <a name=\\"OpenIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.openIdConnectProvider\\"></a>

\`\`\`csharp
public IOpenIdConnectProvider OpenIdConnectProvider { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IOpenIdConnectProvider

An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM.

A provider will only be defined if this property is accessed (lazy initialization).

---

##### \`Prune\`<sup>Required</sup> <a name=\\"Prune\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; }
\`\`\`

- *Type:* bool

Determines if Kubernetes resources can be pruned automatically.

---

##### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

IAM role assumed by the EKS Control Plane.

---

##### \`Vpc\`<sup>Required</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`DefaultCapacity\`<sup>Optional</sup> <a name=\\"DefaultCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.defaultCapacity\\"></a>

\`\`\`csharp
public AutoScalingGroup DefaultCapacity { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.AutoScalingGroup

The auto scaling group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is not \`EC2\` or \`defaultCapacityType\` is \`EC2\` but default capacity is set to 0.

---

##### \`DefaultNodegroup\`<sup>Optional</sup> <a name=\\"DefaultNodegroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.defaultNodegroup\\"></a>

\`\`\`csharp
public Nodegroup DefaultNodegroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Nodegroup

The node group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is \`EC2\` or \`defaultCapacityType\` is \`NODEGROUP\` but default capacity is set to 0.

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion

The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI.

If undefined, a SAR app that contains this layer will be used.

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; }
\`\`\`

- *Type:* Amazon.CDK.Size

The amount of memory allocated to the kubectl provider's lambda function.

---

##### \`KubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"KubectlPrivateSubnets\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`csharp
public ISubnet[] KubectlPrivateSubnets { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISubnet[]
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

Subnets to host the \`kubectl\` compute resources.

---

##### \`KubectlRole\`<sup>Optional</sup> <a name=\\"KubectlRole\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlRole\\"></a>

\`\`\`csharp
public IRole KubectlRole { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`KubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"KubectlSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlSecurityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup KubectlSecurityGroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

A security group to use for \`kubectl\` execution.

---


### FargateCluster <a name=\\"FargateCluster\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster\\"></a>

Defines an EKS cluster that runs entirely on AWS Fargate.

The cluster is created with a default Fargate Profile that matches the \\"default\\" and \\"kube-system\\" namespaces. You can add additional profiles using \`addFargateProfile\`.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateCluster(Construct Scope, string Id, FargateClusterProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.FargateClusterProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.FargateClusterProps

---





### FargateProfile <a name=\\"FargateProfile\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile\\"></a>

- *Implements:* Amazon.CDK.ITaggable

Fargate profiles allows an administrator to declare which pods run on Fargate.

This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and optional labels. You must define a namespace for every selector. The label field consists of multiple optional key-value pairs. Pods that match a selector (by matching a namespace for the selector and all of the labels specified in the selector) are scheduled on Fargate. If a namespace selector is defined without any labels, Amazon EKS will attempt to schedule all pods that run in that namespace onto Fargate using the profile. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is scheduled on Fargate.  If a pod matches multiple Fargate profiles, Amazon EKS picks one of the matches at random. In this case, you can specify which profile a pod should use by adding the following Kubernetes label to the pod specification: eks.amazonaws.com/fargate-profile: profile_name. However, the pod must still match a selector in that profile in order to be scheduled onto Fargate.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateProfile(Construct Scope, string Id, FargateProfileProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.FargateProfileProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.FargateProfileProps

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileArn\\">FargateProfileArn</a></code> | <code>string</code> | The full Amazon Resource Name (ARN) of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.podExecutionRole\\">PodExecutionRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | Resource tags. |

---

##### \`FargateProfileArn\`<sup>Required</sup> <a name=\\"FargateProfileArn\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileArn\\"></a>

\`\`\`csharp
public string FargateProfileArn { get; }
\`\`\`

- *Type:* string

The full Amazon Resource Name (ARN) of the Fargate profile.

---

##### \`FargateProfileName\`<sup>Required</sup> <a name=\\"FargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; }
\`\`\`

- *Type:* string

The name of the Fargate profile.

---

##### \`PodExecutionRole\`<sup>Required</sup> <a name=\\"PodExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.podExecutionRole\\"></a>

\`\`\`csharp
public IRole PodExecutionRole { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

Resource tags.

---


### HelmChart <a name=\\"HelmChart\\" id=\\"aws-cdk-lib.aws_eks.HelmChart\\"></a>

Represents a helm chart within the Kubernetes system.

Applies/deletes the resources using \`kubectl\` in sync with the resource.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new HelmChart(Construct Scope, string Id, HelmChartProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.HelmChartProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.HelmChartProps

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.property.RESOURCE_TYPE\\">ResourceType</a></code> | <code>string</code> | The CloudFormation resource type. |

---

##### \`ResourceType\`<sup>Required</sup> <a name=\\"ResourceType\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.property.RESOURCE_TYPE\\"></a>

\`\`\`csharp
public string ResourceType { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type.

---

### KubernetesManifest <a name=\\"KubernetesManifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest\\"></a>

Represents a manifest within the Kubernetes system.

Alternatively, you can use \`cluster.addManifest(resource[, resource, ...])\` to define resources on this cluster.  Applies/deletes the manifest using \`kubectl\`.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesManifest(Construct Scope, string Id, KubernetesManifestProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.KubernetesManifestProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.KubernetesManifestProps

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\">ResourceType</a></code> | <code>string</code> | The CloudFormation reosurce type. |

---

##### \`ResourceType\`<sup>Required</sup> <a name=\\"ResourceType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\"></a>

\`\`\`csharp
public string ResourceType { get; }
\`\`\`

- *Type:* string

The CloudFormation reosurce type.

---

### KubernetesObjectValue <a name=\\"KubernetesObjectValue\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue\\"></a>

Represents a value of a specific object deployed in the cluster.

Use this to fetch any information available by the \`kubectl get\` command.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesObjectValue(Construct Scope, string Id, KubernetesObjectValueProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.KubernetesObjectValueProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.KubernetesObjectValueProps

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.property.value\\">Value</a></code> | <code>string</code> | The value as a string token. |

---

##### \`Value\`<sup>Required</sup> <a name=\\"Value\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.property.value\\"></a>

\`\`\`csharp
public string Value { get; }
\`\`\`

- *Type:* string

The value as a string token.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\">ResourceType</a></code> | <code>string</code> | The CloudFormation reosurce type. |

---

##### \`ResourceType\`<sup>Required</sup> <a name=\\"ResourceType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\"></a>

\`\`\`csharp
public string ResourceType { get; }
\`\`\`

- *Type:* string

The CloudFormation reosurce type.

---

### KubernetesPatch <a name=\\"KubernetesPatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch\\"></a>

A CloudFormation resource which applies/restores a JSON patch into a Kubernetes resource.

> [https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/](https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesPatch(Construct Scope, string Id, KubernetesPatchProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.KubernetesPatchProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.KubernetesPatchProps

---





### Nodegroup <a name=\\"Nodegroup\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup\\"></a>

- *Implements:* Amazon.CDK.aws_eks.INodegroup

The Nodegroup resource class.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new Nodegroup(Construct Scope, string Id, NodegroupProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.NodegroupProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.NodegroupProps

---


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName\\">FromNodegroupName</a></code> | Import the Nodegroup from attributes. |

---

##### \`FromNodegroupName\` <a name=\\"FromNodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName\\"></a>

\`\`\`csharp
using Amazon.CDK;

Nodegroup.FromNodegroupName(Construct Scope, string Id, string NodegroupName);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.id\\"></a>

- *Type:* string

---

###### \`NodegroupName\`<sup>Required</sup> <a name=\\"NodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.nodegroupName\\"></a>

- *Type:* string

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | the Amazon EKS cluster resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupArn\\">NodegroupArn</a></code> | <code>string</code> | ARN of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | Nodegroup name. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | IAM role of the instance profile for the nodegroup. |

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

the Amazon EKS cluster resource.

---

##### \`NodegroupArn\`<sup>Required</sup> <a name=\\"NodegroupArn\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupArn\\"></a>

\`\`\`csharp
public string NodegroupArn { get; }
\`\`\`

- *Type:* string

ARN of the nodegroup.

---

##### \`NodegroupName\`<sup>Required</sup> <a name=\\"NodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; }
\`\`\`

- *Type:* string

Nodegroup name.

---

##### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

IAM role of the instance profile for the nodegroup.

---


### OpenIdConnectProvider <a name=\\"OpenIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider\\"></a>

IAM OIDC identity providers are entities in IAM that describe an external identity provider (IdP) service that supports the OpenID Connect (OIDC) standard, such as Google or Salesforce.

You use an IAM OIDC identity provider when you want to establish trust between an OIDC-compatible IdP and your AWS account.  This implementation has default values for thumbprints and clientIds props that will be compatible with the eks cluster

> [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new OpenIdConnectProvider(Construct Scope, string Id, OpenIdConnectProviderProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | The definition scope. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | Construct ID. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.OpenIdConnectProviderProps</code> | Initialization properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

The definition scope.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\"></a>

- *Type:* string

Construct ID.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.OpenIdConnectProviderProps

Initialization properties.

---





### ServiceAccount <a name=\\"ServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount\\"></a>

- *Implements:* Amazon.CDK.aws_iam.IPrincipal

Service Account.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ServiceAccount(Construct Scope, string Id, ServiceAccountProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.ServiceAccountProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.ServiceAccountProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy\\">AddToPrincipalPolicy</a></code> | Add to the policy of this principal. |

---

##### \`AddToPrincipalPolicy\` <a name=\\"AddToPrincipalPolicy\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy\\"></a>

\`\`\`csharp
private AddToPrincipalPolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.aws_iam.PolicyStatement

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.assumeRoleAction\\">AssumeRoleAction</a></code> | <code>string</code> | When this Principal is used in an AssumeRole policy, the action to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.grantPrincipal\\">GrantPrincipal</a></code> | <code>Amazon.CDK.aws_iam.IPrincipal</code> | The principal to grant permissions to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.policyFragment\\">PolicyFragment</a></code> | <code>Amazon.CDK.aws_iam.PrincipalPolicyFragment</code> | Return the policy fragment that identifies this principal in a Policy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The role which is linked to the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountName\\">ServiceAccountName</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountNamespace\\">ServiceAccountNamespace</a></code> | <code>string</code> | The namespace where the service account is located in. |

---

##### \`AssumeRoleAction\`<sup>Required</sup> <a name=\\"AssumeRoleAction\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.assumeRoleAction\\"></a>

\`\`\`csharp
public string AssumeRoleAction { get; }
\`\`\`

- *Type:* string

When this Principal is used in an AssumeRole policy, the action to use.

---

##### \`GrantPrincipal\`<sup>Required</sup> <a name=\\"GrantPrincipal\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.grantPrincipal\\"></a>

\`\`\`csharp
public IPrincipal GrantPrincipal { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IPrincipal

The principal to grant permissions to.

---

##### \`PolicyFragment\`<sup>Required</sup> <a name=\\"PolicyFragment\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.policyFragment\\"></a>

\`\`\`csharp
public PrincipalPolicyFragment PolicyFragment { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.PrincipalPolicyFragment

Return the policy fragment that identifies this principal in a Policy.

---

##### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

The role which is linked to the service account.

---

##### \`ServiceAccountName\`<sup>Required</sup> <a name=\\"ServiceAccountName\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountName\\"></a>

\`\`\`csharp
public string ServiceAccountName { get; }
\`\`\`

- *Type:* string

The name of the service account.

---

##### \`ServiceAccountNamespace\`<sup>Required</sup> <a name=\\"ServiceAccountNamespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountNamespace\\"></a>

\`\`\`csharp
public string ServiceAccountNamespace { get; }
\`\`\`

- *Type:* string

The namespace where the service account is located in.

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### AutoScalingGroupCapacityOptions <a name=\\"AutoScalingGroupCapacityOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions\\"></a>

Options for adding worker nodes.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AutoScalingGroupCapacityOptions {
    bool AllowAllOutbound = null,
    bool AssociatePublicIpAddress = null,
    string AutoScalingGroupName = null,
    BlockDevice[] BlockDevices = null,
    Duration Cooldown = null,
    double DesiredCapacity = null,
    GroupMetrics[] GroupMetrics = null,
    HealthCheck HealthCheck = null,
    bool IgnoreUnmodifiedSizeProperties = null,
    Monitoring InstanceMonitoring = null,
    string KeyName = null,
    double MaxCapacity = null,
    Duration MaxInstanceLifetime = null,
    double MinCapacity = null,
    bool NewInstancesProtectedFromScaleIn = null,
    NotificationConfiguration[] Notifications = null,
    Signals Signals = null,
    string SpotPrice = null,
    UpdatePolicy UpdatePolicy = null,
    SubnetSelection VpcSubnets = null,
    InstanceType InstanceType,
    bool BootstrapEnabled = null,
    BootstrapOptions BootstrapOptions = null,
    MachineImageType MachineImageType = null,
    bool MapRole = null,
    bool SpotInterruptHandler = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\">AllowAllOutbound</a></code> | <code>bool</code> | Whether the instances can initiate connections to anywhere by default. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\">AssociatePublicIpAddress</a></code> | <code>bool</code> | Whether instances in the Auto Scaling Group should have public IP addresses associated with them. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\">AutoScalingGroupName</a></code> | <code>string</code> | The name of the Auto Scaling group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\">BlockDevices</a></code> | <code>Amazon.CDK.aws_autoscaling.BlockDevice[]</code> | Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\">Cooldown</a></code> | <code>Amazon.CDK.Duration</code> | Default scaling cooldown for this AutoScalingGroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\">DesiredCapacity</a></code> | <code>double</code> | Initial amount of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\">GroupMetrics</a></code> | <code>Amazon.CDK.aws_autoscaling.GroupMetrics[]</code> | Enable monitoring for group metrics, these metrics describe the group rather than any of its instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\">HealthCheck</a></code> | <code>Amazon.CDK.aws_autoscaling.HealthCheck</code> | Configuration for health checks. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\">IgnoreUnmodifiedSizeProperties</a></code> | <code>bool</code> | If the ASG has scheduled actions, don't reset unchanged group sizes. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\">InstanceMonitoring</a></code> | <code>Amazon.CDK.aws_autoscaling.Monitoring</code> | Controls whether instances in this group are launched with detailed or basic monitoring. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\">KeyName</a></code> | <code>string</code> | Name of SSH keypair to grant access to instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\">MaxCapacity</a></code> | <code>double</code> | Maximum number of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\">MaxInstanceLifetime</a></code> | <code>Amazon.CDK.Duration</code> | The maximum amount of time that an instance can be in service. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\">MinCapacity</a></code> | <code>double</code> | Minimum number of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\">NewInstancesProtectedFromScaleIn</a></code> | <code>bool</code> | Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\">Notifications</a></code> | <code>Amazon.CDK.aws_autoscaling.NotificationConfiguration[]</code> | Configure autoscaling group to send notifications about fleet changes to an SNS topic(s). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\">Signals</a></code> | <code>Amazon.CDK.aws_autoscaling.Signals</code> | Configure waiting for signals during deployment. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\">SpotPrice</a></code> | <code>string</code> | The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\">UpdatePolicy</a></code> | <code>Amazon.CDK.aws_autoscaling.UpdatePolicy</code> | What to do when an AutoScalingGroup's instance configuration is changed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | Where to place instances within the VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\">InstanceType</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType</code> | Instance type of the instances to start. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\">BootstrapEnabled</a></code> | <code>bool</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\">BootstrapOptions</a></code> | <code>Amazon.CDK.aws_eks.BootstrapOptions</code> | EKS node bootstrapping options. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\">MachineImageType</a></code> | <code>Amazon.CDK.aws_eks.MachineImageType</code> | Machine image type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\">MapRole</a></code> | <code>bool</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\">SpotInterruptHandler</a></code> | <code>bool</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`AllowAllOutbound\`<sup>Optional</sup> <a name=\\"AllowAllOutbound\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\"></a>

\`\`\`csharp
public bool AllowAllOutbound { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Whether the instances can initiate connections to anywhere by default.

---

##### \`AssociatePublicIpAddress\`<sup>Optional</sup> <a name=\\"AssociatePublicIpAddress\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\"></a>

\`\`\`csharp
public bool AssociatePublicIpAddress { get; set; }
\`\`\`

- *Type:* bool
- *Default:* Use subnet setting.

Whether instances in the Auto Scaling Group should have public IP addresses associated with them.

---

##### \`AutoScalingGroupName\`<sup>Optional</sup> <a name=\\"AutoScalingGroupName\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\"></a>

\`\`\`csharp
public string AutoScalingGroupName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Auto generated by CloudFormation

The name of the Auto Scaling group.

This name must be unique per Region per account.

---

##### \`BlockDevices\`<sup>Optional</sup> <a name=\\"BlockDevices\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\"></a>

\`\`\`csharp
public BlockDevice[] BlockDevices { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.BlockDevice[]
- *Default:* Uses the block device mapping of the AMI

Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.

Each instance that is launched has an associated root device volume, either an Amazon EBS volume or an instance store volume. You can use block device mappings to specify additional EBS volumes or instance store volumes to attach to an instance when it is launched.

> [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)

---

##### \`Cooldown\`<sup>Optional</sup> <a name=\\"Cooldown\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\"></a>

\`\`\`csharp
public Duration Cooldown { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Default scaling cooldown for this AutoScalingGroup.

---

##### \`DesiredCapacity\`<sup>Optional</sup> <a name=\\"DesiredCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\"></a>

\`\`\`csharp
public double DesiredCapacity { get; set; }
\`\`\`

- *Type:* double
- *Default:* minCapacity, and leave unchanged during deployment

Initial amount of instances in the fleet.

If this is set to a number, every deployment will reset the amount of instances to this number. It is recommended to leave this value blank.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity)

---

##### \`GroupMetrics\`<sup>Optional</sup> <a name=\\"GroupMetrics\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\"></a>

\`\`\`csharp
public GroupMetrics[] GroupMetrics { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.GroupMetrics[]
- *Default:* no group metrics will be reported

Enable monitoring for group metrics, these metrics describe the group rather than any of its instances.

To report all group metrics use \`GroupMetrics.all()\` Group metrics are reported in a granularity of 1 minute at no additional charge.

---

##### \`HealthCheck\`<sup>Optional</sup> <a name=\\"HealthCheck\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\"></a>

\`\`\`csharp
public HealthCheck HealthCheck { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.HealthCheck
- *Default:* HealthCheck.ec2 with no grace period

Configuration for health checks.

---

##### \`IgnoreUnmodifiedSizeProperties\`<sup>Optional</sup> <a name=\\"IgnoreUnmodifiedSizeProperties\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\"></a>

\`\`\`csharp
public bool IgnoreUnmodifiedSizeProperties { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

If the ASG has scheduled actions, don't reset unchanged group sizes.

Only used if the ASG has scheduled actions (which may scale your ASG up or down regardless of cdk deployments). If true, the size of the group will only be reset if it has been changed in the CDK app. If false, the sizes will always be changed back to what they were in the CDK app on deployment.

---

##### \`InstanceMonitoring\`<sup>Optional</sup> <a name=\\"InstanceMonitoring\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\"></a>

\`\`\`csharp
public Monitoring InstanceMonitoring { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.Monitoring
- *Default:* Monitoring.DETAILED

Controls whether instances in this group are launched with detailed or basic monitoring.

When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.

> [https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics](https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics)

---

##### \`KeyName\`<sup>Optional</sup> <a name=\\"KeyName\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\"></a>

\`\`\`csharp
public string KeyName { get; set; }
\`\`\`

- *Type:* string
- *Default:* No SSH access will be possible.

Name of SSH keypair to grant access to instances.

---

##### \`MaxCapacity\`<sup>Optional</sup> <a name=\\"MaxCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\"></a>

\`\`\`csharp
public double MaxCapacity { get; set; }
\`\`\`

- *Type:* double
- *Default:* desiredCapacity

Maximum number of instances in the fleet.

---

##### \`MaxInstanceLifetime\`<sup>Optional</sup> <a name=\\"MaxInstanceLifetime\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\"></a>

\`\`\`csharp
public Duration MaxInstanceLifetime { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* none

The maximum amount of time that an instance can be in service.

The maximum duration applies to all current and future instances in the group. As an instance approaches its maximum duration, it is terminated and replaced, and cannot be used again.  You must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, leave this property undefined.

> [https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)

---

##### \`MinCapacity\`<sup>Optional</sup> <a name=\\"MinCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\"></a>

\`\`\`csharp
public double MinCapacity { get; set; }
\`\`\`

- *Type:* double
- *Default:* 1

Minimum number of instances in the fleet.

---

##### \`NewInstancesProtectedFromScaleIn\`<sup>Optional</sup> <a name=\\"NewInstancesProtectedFromScaleIn\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\"></a>

\`\`\`csharp
public bool NewInstancesProtectedFromScaleIn { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.

By default, Auto Scaling can terminate an instance at any time after launch when scaling in an Auto Scaling Group, subject to the group's termination policy. However, you may wish to protect newly-launched instances from being scaled in if they are going to run critical applications that should not be prematurely terminated.  This flag must be enabled if the Auto Scaling Group will be associated with an ECS Capacity Provider with managed termination protection.

---

##### \`Notifications\`<sup>Optional</sup> <a name=\\"Notifications\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\"></a>

\`\`\`csharp
public NotificationConfiguration[] Notifications { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.NotificationConfiguration[]
- *Default:* No fleet change notifications will be sent.

Configure autoscaling group to send notifications about fleet changes to an SNS topic(s).

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations)

---

##### \`Signals\`<sup>Optional</sup> <a name=\\"Signals\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\"></a>

\`\`\`csharp
public Signals Signals { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.Signals
- *Default:* Do not wait for signals

Configure waiting for signals during deployment.

Use this to pause the CloudFormation deployment to wait for the instances in the AutoScalingGroup to report successful startup during creation and updates. The UserData script needs to invoke \`cfn-signal\` with a success or failure code after it is done setting up the instance.  Without waiting for signals, the CloudFormation deployment will proceed as soon as the AutoScalingGroup has been created or updated but before the instances in the group have been started.  For example, to have instances wait for an Elastic Load Balancing health check before they signal success, add a health-check verification by using the cfn-init helper script. For an example, see the verify_instance_health command in the Auto Scaling rolling updates sample template:  https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml

---

##### \`SpotPrice\`<sup>Optional</sup> <a name=\\"SpotPrice\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\"></a>

\`\`\`csharp
public string SpotPrice { get; set; }
\`\`\`

- *Type:* string
- *Default:* none

The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request.

Spot Instances are launched when the price you specify exceeds the current Spot market price.

---

##### \`UpdatePolicy\`<sup>Optional</sup> <a name=\\"UpdatePolicy\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\"></a>

\`\`\`csharp
public UpdatePolicy UpdatePolicy { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.UpdatePolicy
- *Default:* \`UpdatePolicy.rollingUpdate()\` if using \`init\`, \`UpdatePolicy.none()\` otherwise

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* All Private subnets.

Where to place instances within the VPC.

---

##### \`InstanceType\`<sup>Required</sup> <a name=\\"InstanceType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\"></a>

\`\`\`csharp
public InstanceType InstanceType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType

Instance type of the instances to start.

---

##### \`BootstrapEnabled\`<sup>Optional</sup> <a name=\\"BootstrapEnabled\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\"></a>

\`\`\`csharp
public bool BootstrapEnabled { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`BootstrapOptions\`<sup>Optional</sup> <a name=\\"BootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\"></a>

\`\`\`csharp
public BootstrapOptions BootstrapOptions { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.BootstrapOptions
- *Default:* none

EKS node bootstrapping options.

---

##### \`MachineImageType\`<sup>Optional</sup> <a name=\\"MachineImageType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\"></a>

\`\`\`csharp
public MachineImageType MachineImageType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.MachineImageType
- *Default:* MachineImageType.AMAZON_LINUX_2

Machine image type.

---

##### \`MapRole\`<sup>Optional</sup> <a name=\\"MapRole\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\"></a>

\`\`\`csharp
public bool MapRole { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`SpotInterruptHandler\`<sup>Optional</sup> <a name=\\"SpotInterruptHandler\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\"></a>

\`\`\`csharp
public bool SpotInterruptHandler { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is used.

---

### AutoScalingGroupOptions <a name=\\"AutoScalingGroupOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions\\"></a>

Options for adding an AutoScalingGroup as capacity.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AutoScalingGroupOptions {
    bool BootstrapEnabled = null,
    BootstrapOptions BootstrapOptions = null,
    MachineImageType MachineImageType = null,
    bool MapRole = null,
    bool SpotInterruptHandler = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\">BootstrapEnabled</a></code> | <code>bool</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\">BootstrapOptions</a></code> | <code>Amazon.CDK.aws_eks.BootstrapOptions</code> | Allows options for node bootstrapping through EC2 user data. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.machineImageType\\">MachineImageType</a></code> | <code>Amazon.CDK.aws_eks.MachineImageType</code> | Allow options to specify different machine image type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.mapRole\\">MapRole</a></code> | <code>bool</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\">SpotInterruptHandler</a></code> | <code>bool</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`BootstrapEnabled\`<sup>Optional</sup> <a name=\\"BootstrapEnabled\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\"></a>

\`\`\`csharp
public bool BootstrapEnabled { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`BootstrapOptions\`<sup>Optional</sup> <a name=\\"BootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\"></a>

\`\`\`csharp
public BootstrapOptions BootstrapOptions { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.BootstrapOptions
- *Default:* default options

Allows options for node bootstrapping through EC2 user data.

---

##### \`MachineImageType\`<sup>Optional</sup> <a name=\\"MachineImageType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.machineImageType\\"></a>

\`\`\`csharp
public MachineImageType MachineImageType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.MachineImageType
- *Default:* MachineImageType.AMAZON_LINUX_2

Allow options to specify different machine image type.

---

##### \`MapRole\`<sup>Optional</sup> <a name=\\"MapRole\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.mapRole\\"></a>

\`\`\`csharp
public bool MapRole { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`SpotInterruptHandler\`<sup>Optional</sup> <a name=\\"SpotInterruptHandler\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\"></a>

\`\`\`csharp
public bool SpotInterruptHandler { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is configured on the auto-scaling group.

---

### AwsAuthMapping <a name=\\"AwsAuthMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping\\"></a>

AwsAuth mapping.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AwsAuthMapping {
    string[] Groups,
    string Username = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping.property.groups\\">Groups</a></code> | <code>string[]</code> | A list of groups within Kubernetes to which the role is mapped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping.property.username\\">Username</a></code> | <code>string</code> | The user name within Kubernetes to map to the IAM role. |

---

##### \`Groups\`<sup>Required</sup> <a name=\\"Groups\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.property.groups\\"></a>

\`\`\`csharp
public string[] Groups { get; set; }
\`\`\`

- *Type:* string[]

A list of groups within Kubernetes to which the role is mapped.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`Username\`<sup>Optional</sup> <a name=\\"Username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.property.username\\"></a>

\`\`\`csharp
public string Username { get; set; }
\`\`\`

- *Type:* string
- *Default:* By default, the user name is the ARN of the IAM role.

The user name within Kubernetes to map to the IAM role.

---

### AwsAuthProps <a name=\\"AwsAuthProps\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps\\"></a>

Configuration props for the AwsAuth construct.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AwsAuthProps {
    Cluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.Cluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps.property.cluster\\"></a>

\`\`\`csharp
public Cluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Cluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### BootstrapOptions <a name=\\"BootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions\\"></a>

EKS node bootstrapping options.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new BootstrapOptions {
    string AdditionalArgs = null,
    double AwsApiRetryAttempts = null,
    string DnsClusterIp = null,
    string DockerConfigJson = null,
    bool EnableDockerBridge = null,
    string KubeletExtraArgs = null,
    bool UseMaxPods = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.additionalArgs\\">AdditionalArgs</a></code> | <code>string</code> | Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\">AwsApiRetryAttempts</a></code> | <code>double</code> | Number of retry attempts for AWS API call (DescribeCluster). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.dnsClusterIp\\">DnsClusterIp</a></code> | <code>string</code> | Overrides the IP address to use for DNS queries within the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.dockerConfigJson\\">DockerConfigJson</a></code> | <code>string</code> | The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.enableDockerBridge\\">EnableDockerBridge</a></code> | <code>bool</code> | Restores the docker default bridge network. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\">KubeletExtraArgs</a></code> | <code>string</code> | Extra arguments to add to the kubelet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.useMaxPods\\">UseMaxPods</a></code> | <code>bool</code> | Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance. |

---

##### \`AdditionalArgs\`<sup>Optional</sup> <a name=\\"AdditionalArgs\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.additionalArgs\\"></a>

\`\`\`csharp
public string AdditionalArgs { get; set; }
\`\`\`

- *Type:* string
- *Default:* none

Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command.

> [https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh)

---

##### \`AwsApiRetryAttempts\`<sup>Optional</sup> <a name=\\"AwsApiRetryAttempts\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\"></a>

\`\`\`csharp
public double AwsApiRetryAttempts { get; set; }
\`\`\`

- *Type:* double
- *Default:* 3

Number of retry attempts for AWS API call (DescribeCluster).

---

##### \`DnsClusterIp\`<sup>Optional</sup> <a name=\\"DnsClusterIp\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.dnsClusterIp\\"></a>

\`\`\`csharp
public string DnsClusterIp { get; set; }
\`\`\`

- *Type:* string
- *Default:* 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface.

Overrides the IP address to use for DNS queries within the cluster.

---

##### \`DockerConfigJson\`<sup>Optional</sup> <a name=\\"DockerConfigJson\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.dockerConfigJson\\"></a>

\`\`\`csharp
public string DockerConfigJson { get; set; }
\`\`\`

- *Type:* string
- *Default:* none

The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI.

---

##### \`EnableDockerBridge\`<sup>Optional</sup> <a name=\\"EnableDockerBridge\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.enableDockerBridge\\"></a>

\`\`\`csharp
public bool EnableDockerBridge { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Restores the docker default bridge network.

---

##### \`KubeletExtraArgs\`<sup>Optional</sup> <a name=\\"KubeletExtraArgs\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\"></a>

\`\`\`csharp
public string KubeletExtraArgs { get; set; }
\`\`\`

- *Type:* string
- *Default:* none

Extra arguments to add to the kubelet.

Useful for adding labels or taints.

---

##### \`UseMaxPods\`<sup>Optional</sup> <a name=\\"UseMaxPods\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.useMaxPods\\"></a>

\`\`\`csharp
public bool UseMaxPods { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance.

---

### CfnAddonProps <a name=\\"CfnAddonProps\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps\\"></a>

Properties for defining a \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnAddonProps {
    string AddonName,
    string ClusterName,
    string AddonVersion = null,
    string ResolveConflicts = null,
    string ServiceAccountRoleArn = null,
    CfnTag[] Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.addonName\\">AddonName</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.addonVersion\\">AddonVersion</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.resolveConflicts\\">ResolveConflicts</a></code> | <code>string</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\">ServiceAccountRoleArn</a></code> | <code>string</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.tags\\">Tags</a></code> | <code>Amazon.CDK.CfnTag[]</code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`AddonName\`<sup>Required</sup> <a name=\\"AddonName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.addonName\\"></a>

\`\`\`csharp
public string AddonName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`AddonVersion\`<sup>Optional</sup> <a name=\\"AddonVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.addonVersion\\"></a>

\`\`\`csharp
public string AddonVersion { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`ResolveConflicts\`<sup>Optional</sup> <a name=\\"ResolveConflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.resolveConflicts\\"></a>

\`\`\`csharp
public string ResolveConflicts { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`ServiceAccountRoleArn\`<sup>Optional</sup> <a name=\\"ServiceAccountRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\"></a>

\`\`\`csharp
public string ServiceAccountRoleArn { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.tags\\"></a>

\`\`\`csharp
public CfnTag[] Tags { get; set; }
\`\`\`

- *Type:* Amazon.CDK.CfnTag[]

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

### CfnClusterProps <a name=\\"CfnClusterProps\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps\\"></a>

Properties for defining a \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnClusterProps {
    object ResourcesVpcConfig,
    string RoleArn,
    object EncryptionConfig = null,
    object KubernetesNetworkConfig = null,
    string Name = null,
    string Version = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\">ResourcesVpcConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.roleArn\\">RoleArn</a></code> | <code>string</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.encryptionConfig\\">EncryptionConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\">KubernetesNetworkConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.name\\">Name</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.version\\">Version</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`ResourcesVpcConfig\`<sup>Required</sup> <a name=\\"ResourcesVpcConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\"></a>

\`\`\`csharp
public object ResourcesVpcConfig { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`RoleArn\`<sup>Required</sup> <a name=\\"RoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.roleArn\\"></a>

\`\`\`csharp
public string RoleArn { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`EncryptionConfig\`<sup>Optional</sup> <a name=\\"EncryptionConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.encryptionConfig\\"></a>

\`\`\`csharp
public object EncryptionConfig { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`KubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"KubernetesNetworkConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\"></a>

\`\`\`csharp
public object KubernetesNetworkConfig { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.name\\"></a>

\`\`\`csharp
public string Name { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

### CfnFargateProfileProps <a name=\\"CfnFargateProfileProps\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps\\"></a>

Properties for defining a \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnFargateProfileProps {
    string ClusterName,
    string PodExecutionRoleArn,
    object Selectors,
    string FargateProfileName = null,
    string[] Subnets = null,
    CfnTag[] Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\">PodExecutionRoleArn</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.selectors\\">Selectors</a></code> | <code>object</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.subnets\\">Subnets</a></code> | <code>string[]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.tags\\">Tags</a></code> | <code>Amazon.CDK.CfnTag[]</code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`PodExecutionRoleArn\`<sup>Required</sup> <a name=\\"PodExecutionRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\"></a>

\`\`\`csharp
public string PodExecutionRoleArn { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`Selectors\`<sup>Required</sup> <a name=\\"Selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.selectors\\"></a>

\`\`\`csharp
public object Selectors { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`FargateProfileName\`<sup>Optional</sup> <a name=\\"FargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`Subnets\`<sup>Optional</sup> <a name=\\"Subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.subnets\\"></a>

\`\`\`csharp
public string[] Subnets { get; set; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.tags\\"></a>

\`\`\`csharp
public CfnTag[] Tags { get; set; }
\`\`\`

- *Type:* Amazon.CDK.CfnTag[]

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

### CfnNodegroupProps <a name=\\"CfnNodegroupProps\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps\\"></a>

Properties for defining a \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnNodegroupProps {
    string ClusterName,
    string NodeRole,
    string[] Subnets,
    string AmiType = null,
    string CapacityType = null,
    double DiskSize = null,
    object ForceUpdateEnabled = null,
    string[] InstanceTypes = null,
    object Labels = null,
    object LaunchTemplate = null,
    string NodegroupName = null,
    string ReleaseVersion = null,
    object RemoteAccess = null,
    object ScalingConfig = null,
    object Tags = null,
    object Taints = null,
    string Version = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodeRole\\">NodeRole</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.subnets\\">Subnets</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.amiType\\">AmiType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.capacityType\\">CapacityType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.diskSize\\">DiskSize</a></code> | <code>double</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\">ForceUpdateEnabled</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.instanceTypes\\">InstanceTypes</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.labels\\">Labels</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.launchTemplate\\">LaunchTemplate</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.releaseVersion\\">ReleaseVersion</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.remoteAccess\\">RemoteAccess</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.scalingConfig\\">ScalingConfig</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.tags\\">Tags</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.taints\\">Taints</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.version\\">Version</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`NodeRole\`<sup>Required</sup> <a name=\\"NodeRole\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodeRole\\"></a>

\`\`\`csharp
public string NodeRole { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`Subnets\`<sup>Required</sup> <a name=\\"Subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.subnets\\"></a>

\`\`\`csharp
public string[] Subnets { get; set; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`AmiType\`<sup>Optional</sup> <a name=\\"AmiType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.amiType\\"></a>

\`\`\`csharp
public string AmiType { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`CapacityType\`<sup>Optional</sup> <a name=\\"CapacityType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.capacityType\\"></a>

\`\`\`csharp
public string CapacityType { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`DiskSize\`<sup>Optional</sup> <a name=\\"DiskSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.diskSize\\"></a>

\`\`\`csharp
public double DiskSize { get; set; }
\`\`\`

- *Type:* double

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`ForceUpdateEnabled\`<sup>Optional</sup> <a name=\\"ForceUpdateEnabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\"></a>

\`\`\`csharp
public object ForceUpdateEnabled { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`InstanceTypes\`<sup>Optional</sup> <a name=\\"InstanceTypes\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.instanceTypes\\"></a>

\`\`\`csharp
public string[] InstanceTypes { get; set; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.labels\\"></a>

\`\`\`csharp
public object Labels { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`LaunchTemplate\`<sup>Optional</sup> <a name=\\"LaunchTemplate\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.launchTemplate\\"></a>

\`\`\`csharp
public object LaunchTemplate { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`NodegroupName\`<sup>Optional</sup> <a name=\\"NodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`ReleaseVersion\`<sup>Optional</sup> <a name=\\"ReleaseVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.releaseVersion\\"></a>

\`\`\`csharp
public string ReleaseVersion { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`RemoteAccess\`<sup>Optional</sup> <a name=\\"RemoteAccess\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.remoteAccess\\"></a>

\`\`\`csharp
public object RemoteAccess { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`ScalingConfig\`<sup>Optional</sup> <a name=\\"ScalingConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.scalingConfig\\"></a>

\`\`\`csharp
public object ScalingConfig { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.tags\\"></a>

\`\`\`csharp
public object Tags { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`Taints\`<sup>Optional</sup> <a name=\\"Taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.taints\\"></a>

\`\`\`csharp
public object Taints { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

### ClusterAttributes <a name=\\"ClusterAttributes\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes\\"></a>

Attributes for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ClusterAttributes {
    string ClusterName,
    string ClusterCertificateAuthorityData = null,
    string ClusterEncryptionConfigKeyArn = null,
    string ClusterEndpoint = null,
    string ClusterSecurityGroupId = null,
    System.Collections.Generic.IDictionary<string, string> KubectlEnvironment = null,
    ILayerVersion KubectlLayer = null,
    Size KubectlMemory = null,
    string[] KubectlPrivateSubnetIds = null,
    string KubectlRoleArn = null,
    string KubectlSecurityGroupId = null,
    IOpenIdConnectProvider OpenIdConnectProvider = null,
    bool Prune = null,
    string[] SecurityGroupIds = null,
    IVpc Vpc = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterName\\">ClusterName</a></code> | <code>string</code> | The physical name of the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\">ClusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\">ClusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEndpoint\\">ClusterEndpoint</a></code> | <code>string</code> | The API Server endpoint URL. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\">ClusterSecurityGroupId</a></code> | <code>string</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Environment variables to use when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\">KubectlPrivateSubnetIds</a></code> | <code>string[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlRoleArn\\">KubectlRoleArn</a></code> | <code>string</code> | An IAM role with cluster administrator and \\"system:masters\\" permissions. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\">KubectlSecurityGroupId</a></code> | <code>string</code> | A security group to use for \`kubectl\` execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.openIdConnectProvider\\">OpenIdConnectProvider</a></code> | <code>Amazon.CDK.aws_iam.IOpenIdConnectProvider</code> | An Open ID Connect provider for this cluster that can be used to configure service accounts. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.securityGroupIds\\">SecurityGroupIds</a></code> | <code>string[]</code> | Additional security groups associated with this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string

The physical name of the Cluster.

---

##### \`ClusterCertificateAuthorityData\`<sup>Optional</sup> <a name=\\"ClusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\"></a>

\`\`\`csharp
public string ClusterCertificateAuthorityData { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterCertificateAuthorityData\` will throw an error

The certificate-authority-data for your cluster.

---

##### \`ClusterEncryptionConfigKeyArn\`<sup>Optional</sup> <a name=\\"ClusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`csharp
public string ClusterEncryptionConfigKeyArn { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterEncryptionConfigKeyArn\` will throw an error

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`ClusterEndpoint\`<sup>Optional</sup> <a name=\\"ClusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEndpoint\\"></a>

\`\`\`csharp
public string ClusterEndpoint { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterEndpoint\` will throw an error.

The API Server endpoint URL.

---

##### \`ClusterSecurityGroupId\`<sup>Optional</sup> <a name=\\"ClusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\"></a>

\`\`\`csharp
public string ClusterSecurityGroupId { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterSecurityGroupId\` will throw an error

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* no additional variables

Environment variables to use when running \`kubectl\` against this cluster.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion
- *Default:* a layer bundled with this module.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

This layer is used by the kubectl handler to apply manifests and install helm charts.  The handler expects the layer to include the following executables:  \`\`\` helm/helm kubectl/kubectl awscli/aws \`\`\`

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`KubectlPrivateSubnetIds\`<sup>Optional</sup> <a name=\\"KubectlPrivateSubnetIds\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\"></a>

\`\`\`csharp
public string[] KubectlPrivateSubnetIds { get; set; }
\`\`\`

- *Type:* string[]
- *Default:* k8s endpoint is expected to be accessible publicly

Subnets to host the \`kubectl\` compute resources.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`KubectlRoleArn\`<sup>Optional</sup> <a name=\\"KubectlRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlRoleArn\\"></a>

\`\`\`csharp
public string KubectlRoleArn { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified, it not be possible to issue \`kubectl\` commands against an imported cluster.

An IAM role with cluster administrator and \\"system:masters\\" permissions.

---

##### \`KubectlSecurityGroupId\`<sup>Optional</sup> <a name=\\"KubectlSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\"></a>

\`\`\`csharp
public string KubectlSecurityGroupId { get; set; }
\`\`\`

- *Type:* string
- *Default:* k8s endpoint is expected to be accessible publicly

A security group to use for \`kubectl\` execution.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`OpenIdConnectProvider\`<sup>Optional</sup> <a name=\\"OpenIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.openIdConnectProvider\\"></a>

\`\`\`csharp
public IOpenIdConnectProvider OpenIdConnectProvider { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IOpenIdConnectProvider
- *Default:* if not specified \`cluster.openIdConnectProvider\` and \`cluster.addServiceAccount\` will throw an error.

An Open ID Connect provider for this cluster that can be used to configure service accounts.

You can either import an existing provider using \`iam.OpenIdConnectProvider.fromProviderArn\`, or create a new provider using \`new eks.OpenIdConnectProvider\`

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`SecurityGroupIds\`<sup>Optional</sup> <a name=\\"SecurityGroupIds\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.securityGroupIds\\"></a>

\`\`\`csharp
public string[] SecurityGroupIds { get; set; }
\`\`\`

- *Type:* string[]
- *Default:* if not specified, no additional security groups will be considered in \`cluster.connections\`.

Additional security groups associated with this cluster.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* if not specified \`cluster.vpc\` will throw an error

The VPC in which this Cluster was created.

---

### ClusterOptions <a name=\\"ClusterOptions\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions\\"></a>

Options for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ClusterOptions {
    KubernetesVersion Version,
    string ClusterName = null,
    bool OutputClusterName = null,
    bool OutputConfigCommand = null,
    IRole Role = null,
    ISecurityGroup SecurityGroup = null,
    IVpc Vpc = null,
    SubnetSelection[] VpcSubnets = null,
    System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment = null,
    CoreDnsComputeType CoreDnsComputeType = null,
    EndpointAccess EndpointAccess = null,
    System.Collections.Generic.IDictionary<string, string> KubectlEnvironment = null,
    ILayerVersion KubectlLayer = null,
    Size KubectlMemory = null,
    IRole MastersRole = null,
    bool OutputMastersRoleArn = null,
    bool PlaceClusterHandlerInVpc = null,
    bool Prune = null,
    IKey SecretsEncryptionKey = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.version\\">Version</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.clusterName\\">ClusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputClusterName\\">OutputClusterName</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputConfigCommand\\">OutputConfigCommand</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.securityGroup\\">SecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\">ClusterHandlerEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.coreDnsComputeType\\">CoreDnsComputeType</a></code> | <code>Amazon.CDK.aws_eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.endpointAccess\\">EndpointAccess</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.mastersRole\\">MastersRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputMastersRoleArn\\">OutputMastersRoleArn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\">PlaceClusterHandlerInVpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.secretsEncryptionKey\\">SecretsEncryptionKey</a></code> | <code>Amazon.CDK.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.version\\"></a>

\`\`\`csharp
public KubernetesVersion Version { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`ClusterName\`<sup>Optional</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`OutputClusterName\`<sup>Optional</sup> <a name=\\"OutputClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputClusterName\\"></a>

\`\`\`csharp
public bool OutputClusterName { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`OutputConfigCommand\`<sup>Optional</sup> <a name=\\"OutputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`csharp
public bool OutputConfigCommand { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`Role\`<sup>Optional</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`SecurityGroup\`<sup>Optional</sup> <a name=\\"SecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.securityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup SecurityGroup { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection[] VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`ClusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"ClusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`CoreDnsComputeType\`<sup>Optional</sup> <a name=\\"CoreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.coreDnsComputeType\\"></a>

\`\`\`csharp
public CoreDnsComputeType CoreDnsComputeType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`EndpointAccess\`<sup>Optional</sup> <a name=\\"EndpointAccess\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.endpointAccess\\"></a>

\`\`\`csharp
public EndpointAccess EndpointAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. var layer = new lambda.LayerVersion(this, \\"kubectl-layer\\", new Struct {     Code = lambda.Code.FromAsset($\\"{__dirname}/layer.zip\\") });[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`MastersRole\`<sup>Optional</sup> <a name=\\"MastersRole\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.mastersRole\\"></a>

\`\`\`csharp
public IRole MastersRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`OutputMastersRoleArn\`<sup>Optional</sup> <a name=\\"OutputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputMastersRoleArn\\"></a>

\`\`\`csharp
public bool OutputMastersRoleArn { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`PlaceClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"PlaceClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\"></a>

\`\`\`csharp
public bool PlaceClusterHandlerInVpc { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`SecretsEncryptionKey\`<sup>Optional</sup> <a name=\\"SecretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.secretsEncryptionKey\\"></a>

\`\`\`csharp
public IKey SecretsEncryptionKey { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

### ClusterProps <a name=\\"ClusterProps\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps\\"></a>

Common configuration props for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ClusterProps {
    KubernetesVersion Version,
    string ClusterName = null,
    bool OutputClusterName = null,
    bool OutputConfigCommand = null,
    IRole Role = null,
    ISecurityGroup SecurityGroup = null,
    IVpc Vpc = null,
    SubnetSelection[] VpcSubnets = null,
    System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment = null,
    CoreDnsComputeType CoreDnsComputeType = null,
    EndpointAccess EndpointAccess = null,
    System.Collections.Generic.IDictionary<string, string> KubectlEnvironment = null,
    ILayerVersion KubectlLayer = null,
    Size KubectlMemory = null,
    IRole MastersRole = null,
    bool OutputMastersRoleArn = null,
    bool PlaceClusterHandlerInVpc = null,
    bool Prune = null,
    IKey SecretsEncryptionKey = null,
    double DefaultCapacity = null,
    InstanceType DefaultCapacityInstance = null,
    DefaultCapacityType DefaultCapacityType = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.version\\">Version</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputClusterName\\">OutputClusterName</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputConfigCommand\\">OutputConfigCommand</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.securityGroup\\">SecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\">ClusterHandlerEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.coreDnsComputeType\\">CoreDnsComputeType</a></code> | <code>Amazon.CDK.aws_eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.endpointAccess\\">EndpointAccess</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.mastersRole\\">MastersRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputMastersRoleArn\\">OutputMastersRoleArn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\">PlaceClusterHandlerInVpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.secretsEncryptionKey\\">SecretsEncryptionKey</a></code> | <code>Amazon.CDK.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacity\\">DefaultCapacity</a></code> | <code>double</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityInstance\\">DefaultCapacityInstance</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityType\\">DefaultCapacityType</a></code> | <code>Amazon.CDK.aws_eks.DefaultCapacityType</code> | The default capacity type for the cluster. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.version\\"></a>

\`\`\`csharp
public KubernetesVersion Version { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`ClusterName\`<sup>Optional</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`OutputClusterName\`<sup>Optional</sup> <a name=\\"OutputClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputClusterName\\"></a>

\`\`\`csharp
public bool OutputClusterName { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`OutputConfigCommand\`<sup>Optional</sup> <a name=\\"OutputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputConfigCommand\\"></a>

\`\`\`csharp
public bool OutputConfigCommand { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`Role\`<sup>Optional</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`SecurityGroup\`<sup>Optional</sup> <a name=\\"SecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.securityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup SecurityGroup { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection[] VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`ClusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"ClusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`CoreDnsComputeType\`<sup>Optional</sup> <a name=\\"CoreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`csharp
public CoreDnsComputeType CoreDnsComputeType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`EndpointAccess\`<sup>Optional</sup> <a name=\\"EndpointAccess\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.endpointAccess\\"></a>

\`\`\`csharp
public EndpointAccess EndpointAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. var layer = new lambda.LayerVersion(this, \\"kubectl-layer\\", new Struct {     Code = lambda.Code.FromAsset($\\"{__dirname}/layer.zip\\") });[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`MastersRole\`<sup>Optional</sup> <a name=\\"MastersRole\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.mastersRole\\"></a>

\`\`\`csharp
public IRole MastersRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`OutputMastersRoleArn\`<sup>Optional</sup> <a name=\\"OutputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`csharp
public bool OutputMastersRoleArn { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`PlaceClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"PlaceClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`csharp
public bool PlaceClusterHandlerInVpc { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`SecretsEncryptionKey\`<sup>Optional</sup> <a name=\\"SecretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`csharp
public IKey SecretsEncryptionKey { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`DefaultCapacity\`<sup>Optional</sup> <a name=\\"DefaultCapacity\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacity\\"></a>

\`\`\`csharp
public double DefaultCapacity { get; set; }
\`\`\`

- *Type:* double
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`DefaultCapacityInstance\`<sup>Optional</sup> <a name=\\"DefaultCapacityInstance\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityInstance\\"></a>

\`\`\`csharp
public InstanceType DefaultCapacityInstance { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`DefaultCapacityType\`<sup>Optional</sup> <a name=\\"DefaultCapacityType\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityType\\"></a>

\`\`\`csharp
public DefaultCapacityType DefaultCapacityType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.DefaultCapacityType
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

### CommonClusterOptions <a name=\\"CommonClusterOptions\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions\\"></a>

Options for configuring an EKS cluster.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CommonClusterOptions {
    KubernetesVersion Version,
    string ClusterName = null,
    bool OutputClusterName = null,
    bool OutputConfigCommand = null,
    IRole Role = null,
    ISecurityGroup SecurityGroup = null,
    IVpc Vpc = null,
    SubnetSelection[] VpcSubnets = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.version\\">Version</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.clusterName\\">ClusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputClusterName\\">OutputClusterName</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputConfigCommand\\">OutputConfigCommand</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.securityGroup\\">SecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.version\\"></a>

\`\`\`csharp
public KubernetesVersion Version { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`ClusterName\`<sup>Optional</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`OutputClusterName\`<sup>Optional</sup> <a name=\\"OutputClusterName\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputClusterName\\"></a>

\`\`\`csharp
public bool OutputClusterName { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`OutputConfigCommand\`<sup>Optional</sup> <a name=\\"OutputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`csharp
public bool OutputConfigCommand { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`Role\`<sup>Optional</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`SecurityGroup\`<sup>Optional</sup> <a name=\\"SecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.securityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup SecurityGroup { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection[] VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

### EksOptimizedImageProps <a name=\\"EksOptimizedImageProps\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps\\"></a>

Properties for EksOptimizedImage.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new EksOptimizedImageProps {
    CpuArch CpuArch = null,
    string KubernetesVersion = null,
    NodeType NodeType = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.cpuArch\\">CpuArch</a></code> | <code>Amazon.CDK.aws_eks.CpuArch</code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\">KubernetesVersion</a></code> | <code>string</code> | The Kubernetes version to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.nodeType\\">NodeType</a></code> | <code>Amazon.CDK.aws_eks.NodeType</code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`CpuArch\`<sup>Optional</sup> <a name=\\"CpuArch\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.cpuArch\\"></a>

\`\`\`csharp
public CpuArch CpuArch { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CpuArch
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`KubernetesVersion\`<sup>Optional</sup> <a name=\\"KubernetesVersion\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\"></a>

\`\`\`csharp
public string KubernetesVersion { get; set; }
\`\`\`

- *Type:* string
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`NodeType\`<sup>Optional</sup> <a name=\\"NodeType\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.nodeType\\"></a>

\`\`\`csharp
public NodeType NodeType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodeType
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

### EncryptionConfigProperty <a name=\\"EncryptionConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new EncryptionConfigProperty {
    object Provider = null,
    string[] Resources = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\">Provider</a></code> | <code>object</code> | \`CfnCluster.EncryptionConfigProperty.Provider\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\">Resources</a></code> | <code>string[]</code> | \`CfnCluster.EncryptionConfigProperty.Resources\`. |

---

##### \`Provider\`<sup>Optional</sup> <a name=\\"Provider\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\"></a>

\`\`\`csharp
public object Provider { get; set; }
\`\`\`

- *Type:* object

\`CfnCluster.EncryptionConfigProperty.Provider\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider)

---

##### \`Resources\`<sup>Optional</sup> <a name=\\"Resources\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\"></a>

\`\`\`csharp
public string[] Resources { get; set; }
\`\`\`

- *Type:* string[]

\`CfnCluster.EncryptionConfigProperty.Resources\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources)

---

### FargateClusterProps <a name=\\"FargateClusterProps\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps\\"></a>

Configuration props for EKS Fargate.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateClusterProps {
    KubernetesVersion Version,
    string ClusterName = null,
    bool OutputClusterName = null,
    bool OutputConfigCommand = null,
    IRole Role = null,
    ISecurityGroup SecurityGroup = null,
    IVpc Vpc = null,
    SubnetSelection[] VpcSubnets = null,
    System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment = null,
    CoreDnsComputeType CoreDnsComputeType = null,
    EndpointAccess EndpointAccess = null,
    System.Collections.Generic.IDictionary<string, string> KubectlEnvironment = null,
    ILayerVersion KubectlLayer = null,
    Size KubectlMemory = null,
    IRole MastersRole = null,
    bool OutputMastersRoleArn = null,
    bool PlaceClusterHandlerInVpc = null,
    bool Prune = null,
    IKey SecretsEncryptionKey = null,
    FargateProfileOptions DefaultProfile = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.version\\">Version</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputClusterName\\">OutputClusterName</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputConfigCommand\\">OutputConfigCommand</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.securityGroup\\">SecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\">ClusterHandlerEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.coreDnsComputeType\\">CoreDnsComputeType</a></code> | <code>Amazon.CDK.aws_eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.endpointAccess\\">EndpointAccess</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.mastersRole\\">MastersRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\">OutputMastersRoleArn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\">PlaceClusterHandlerInVpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\">SecretsEncryptionKey</a></code> | <code>Amazon.CDK.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.defaultProfile\\">DefaultProfile</a></code> | <code>Amazon.CDK.aws_eks.FargateProfileOptions</code> | Fargate Profile to create along with the cluster. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.version\\"></a>

\`\`\`csharp
public KubernetesVersion Version { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`ClusterName\`<sup>Optional</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`OutputClusterName\`<sup>Optional</sup> <a name=\\"OutputClusterName\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputClusterName\\"></a>

\`\`\`csharp
public bool OutputClusterName { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`OutputConfigCommand\`<sup>Optional</sup> <a name=\\"OutputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputConfigCommand\\"></a>

\`\`\`csharp
public bool OutputConfigCommand { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`Role\`<sup>Optional</sup> <a name=\\"Role\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`SecurityGroup\`<sup>Optional</sup> <a name=\\"SecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.securityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup SecurityGroup { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection[] VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`ClusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"ClusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`CoreDnsComputeType\`<sup>Optional</sup> <a name=\\"CoreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`csharp
public CoreDnsComputeType CoreDnsComputeType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`EndpointAccess\`<sup>Optional</sup> <a name=\\"EndpointAccess\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.endpointAccess\\"></a>

\`\`\`csharp
public EndpointAccess EndpointAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. var layer = new lambda.LayerVersion(this, \\"kubectl-layer\\", new Struct {     Code = lambda.Code.FromAsset($\\"{__dirname}/layer.zip\\") });[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`MastersRole\`<sup>Optional</sup> <a name=\\"MastersRole\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.mastersRole\\"></a>

\`\`\`csharp
public IRole MastersRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`OutputMastersRoleArn\`<sup>Optional</sup> <a name=\\"OutputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`csharp
public bool OutputMastersRoleArn { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`PlaceClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"PlaceClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`csharp
public bool PlaceClusterHandlerInVpc { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`SecretsEncryptionKey\`<sup>Optional</sup> <a name=\\"SecretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`csharp
public IKey SecretsEncryptionKey { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`DefaultProfile\`<sup>Optional</sup> <a name=\\"DefaultProfile\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.defaultProfile\\"></a>

\`\`\`csharp
public FargateProfileOptions DefaultProfile { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.FargateProfileOptions
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---

### FargateProfileOptions <a name=\\"FargateProfileOptions\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions\\"></a>

Options for defining EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateProfileOptions {
    Selector[] Selectors,
    string FargateProfileName = null,
    IRole PodExecutionRole = null,
    SubnetSelection SubnetSelection = null,
    IVpc Vpc = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.selectors\\">Selectors</a></code> | <code>Amazon.CDK.aws_eks.Selector[]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.podExecutionRole\\">PodExecutionRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.subnetSelection\\">SubnetSelection</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |

---

##### \`Selectors\`<sup>Required</sup> <a name=\\"Selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.selectors\\"></a>

\`\`\`csharp
public Selector[] Selectors { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Selector[]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`FargateProfileName\`<sup>Optional</sup> <a name=\\"FargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; set; }
\`\`\`

- *Type:* string
- *Default:* generated

The name of the Fargate profile.

---

##### \`PodExecutionRole\`<sup>Optional</sup> <a name=\\"PodExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.podExecutionRole\\"></a>

\`\`\`csharp
public IRole PodExecutionRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`SubnetSelection\`<sup>Optional</sup> <a name=\\"SubnetSelection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.subnetSelection\\"></a>

\`\`\`csharp
public SubnetSelection SubnetSelection { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

### FargateProfileProps <a name=\\"FargateProfileProps\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps\\"></a>

Configuration props for EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateProfileProps {
    Selector[] Selectors,
    string FargateProfileName = null,
    IRole PodExecutionRole = null,
    SubnetSelection SubnetSelection = null,
    IVpc Vpc = null,
    Cluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.selectors\\">Selectors</a></code> | <code>Amazon.CDK.aws_eks.Selector[]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.podExecutionRole\\">PodExecutionRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.subnetSelection\\">SubnetSelection</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.Cluster</code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`Selectors\`<sup>Required</sup> <a name=\\"Selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.selectors\\"></a>

\`\`\`csharp
public Selector[] Selectors { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Selector[]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`FargateProfileName\`<sup>Optional</sup> <a name=\\"FargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; set; }
\`\`\`

- *Type:* string
- *Default:* generated

The name of the Fargate profile.

---

##### \`PodExecutionRole\`<sup>Optional</sup> <a name=\\"PodExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.podExecutionRole\\"></a>

\`\`\`csharp
public IRole PodExecutionRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`SubnetSelection\`<sup>Optional</sup> <a name=\\"SubnetSelection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.subnetSelection\\"></a>

\`\`\`csharp
public SubnetSelection SubnetSelection { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.cluster\\"></a>

\`\`\`csharp
public Cluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Cluster

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---

### HelmChartOptions <a name=\\"HelmChartOptions\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions\\"></a>

Helm Chart options.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new HelmChartOptions {
    string Chart,
    bool CreateNamespace = null,
    string Namespace = null,
    string Release = null,
    string Repository = null,
    Duration Timeout = null,
    System.Collections.Generic.IDictionary<string, object> Values = null,
    string Version = null,
    bool Wait = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.chart\\">Chart</a></code> | <code>string</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.createNamespace\\">CreateNamespace</a></code> | <code>bool</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.namespace\\">Namespace</a></code> | <code>string</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.release\\">Release</a></code> | <code>string</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.repository\\">Repository</a></code> | <code>string</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.timeout\\">Timeout</a></code> | <code>Amazon.CDK.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.values\\">Values</a></code> | <code>System.Collections.Generic.IDictionary<string, object></code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.version\\">Version</a></code> | <code>string</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.wait\\">Wait</a></code> | <code>bool</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |

---

##### \`Chart\`<sup>Required</sup> <a name=\\"Chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.chart\\"></a>

\`\`\`csharp
public string Chart { get; set; }
\`\`\`

- *Type:* string

The name of the chart.

---

##### \`CreateNamespace\`<sup>Optional</sup> <a name=\\"CreateNamespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.createNamespace\\"></a>

\`\`\`csharp
public bool CreateNamespace { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`Release\`<sup>Optional</sup> <a name=\\"Release\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.release\\"></a>

\`\`\`csharp
public string Release { get; set; }
\`\`\`

- *Type:* string
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`Repository\`<sup>Optional</sup> <a name=\\"Repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.repository\\"></a>

\`\`\`csharp
public string Repository { get; set; }
\`\`\`

- *Type:* string
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`Timeout\`<sup>Optional</sup> <a name=\\"Timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.timeout\\"></a>

\`\`\`csharp
public Duration Timeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`Values\`<sup>Optional</sup> <a name=\\"Values\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.values\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object> Values { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`Wait\`<sup>Optional</sup> <a name=\\"Wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.wait\\"></a>

\`\`\`csharp
public bool Wait { get; set; }
\`\`\`

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

### HelmChartProps <a name=\\"HelmChartProps\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps\\"></a>

Helm Chart properties.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new HelmChartProps {
    string Chart,
    bool CreateNamespace = null,
    string Namespace = null,
    string Release = null,
    string Repository = null,
    Duration Timeout = null,
    System.Collections.Generic.IDictionary<string, object> Values = null,
    string Version = null,
    bool Wait = null,
    ICluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.chart\\">Chart</a></code> | <code>string</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.createNamespace\\">CreateNamespace</a></code> | <code>bool</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.namespace\\">Namespace</a></code> | <code>string</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.release\\">Release</a></code> | <code>string</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.repository\\">Repository</a></code> | <code>string</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.timeout\\">Timeout</a></code> | <code>Amazon.CDK.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.values\\">Values</a></code> | <code>System.Collections.Generic.IDictionary<string, object></code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.version\\">Version</a></code> | <code>string</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.wait\\">Wait</a></code> | <code>bool</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`Chart\`<sup>Required</sup> <a name=\\"Chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.chart\\"></a>

\`\`\`csharp
public string Chart { get; set; }
\`\`\`

- *Type:* string

The name of the chart.

---

##### \`CreateNamespace\`<sup>Optional</sup> <a name=\\"CreateNamespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.createNamespace\\"></a>

\`\`\`csharp
public bool CreateNamespace { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`Release\`<sup>Optional</sup> <a name=\\"Release\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.release\\"></a>

\`\`\`csharp
public string Release { get; set; }
\`\`\`

- *Type:* string
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`Repository\`<sup>Optional</sup> <a name=\\"Repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.repository\\"></a>

\`\`\`csharp
public string Repository { get; set; }
\`\`\`

- *Type:* string
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`Timeout\`<sup>Optional</sup> <a name=\\"Timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.timeout\\"></a>

\`\`\`csharp
public Duration Timeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`Values\`<sup>Optional</sup> <a name=\\"Values\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.values\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object> Values { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`Wait\`<sup>Optional</sup> <a name=\\"Wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.wait\\"></a>

\`\`\`csharp
public bool Wait { get; set; }
\`\`\`

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### KubernetesManifestOptions <a name=\\"KubernetesManifestOptions\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions\\"></a>

Options for \`KubernetesManifest\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesManifestOptions {
    bool Prune = null,
    bool SkipValidation = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.prune\\">Prune</a></code> | <code>bool</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.skipValidation\\">SkipValidation</a></code> | <code>bool</code> | A flag to signify if the manifest validation should be skipped. |

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`SkipValidation\`<sup>Optional</sup> <a name=\\"SkipValidation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.skipValidation\\"></a>

\`\`\`csharp
public bool SkipValidation { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

### KubernetesManifestProps <a name=\\"KubernetesManifestProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps\\"></a>

Properties for KubernetesManifest.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesManifestProps {
    bool Prune = null,
    bool SkipValidation = null,
    ICluster Cluster,
    System.Collections.Generic.IDictionary<string, object>[] Manifest,
    bool Overwrite = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.prune\\">Prune</a></code> | <code>bool</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.skipValidation\\">SkipValidation</a></code> | <code>bool</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.manifest\\">Manifest</a></code> | <code>System.Collections.Generic.IDictionary<string, object>[]</code> | The manifest to apply. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.overwrite\\">Overwrite</a></code> | <code>bool</code> | Overwrite any existing resources. |

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`SkipValidation\`<sup>Optional</sup> <a name=\\"SkipValidation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.skipValidation\\"></a>

\`\`\`csharp
public bool SkipValidation { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`Manifest\`<sup>Required</sup> <a name=\\"Manifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.manifest\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object>[] Manifest { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>[]

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`Overwrite\`<sup>Optional</sup> <a name=\\"Overwrite\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.overwrite\\"></a>

\`\`\`csharp
public bool Overwrite { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---

### KubernetesNetworkConfigProperty <a name=\\"KubernetesNetworkConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesNetworkConfigProperty {
    string ServiceIpv4Cidr = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\">ServiceIpv4Cidr</a></code> | <code>string</code> | \`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`. |

---

##### \`ServiceIpv4Cidr\`<sup>Optional</sup> <a name=\\"ServiceIpv4Cidr\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\"></a>

\`\`\`csharp
public string ServiceIpv4Cidr { get; set; }
\`\`\`

- *Type:* string

\`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr)

---

### KubernetesObjectValueProps <a name=\\"KubernetesObjectValueProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps\\"></a>

Properties for KubernetesObjectValue.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesObjectValueProps {
    ICluster Cluster,
    string JsonPath,
    string ObjectName,
    string ObjectType,
    string ObjectNamespace = null,
    Duration Timeout = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.jsonPath\\">JsonPath</a></code> | <code>string</code> | JSONPath to the specific value. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectName\\">ObjectName</a></code> | <code>string</code> | The name of the object to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectType\\">ObjectType</a></code> | <code>string</code> | The object type to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\">ObjectNamespace</a></code> | <code>string</code> | The namespace the object belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.timeout\\">Timeout</a></code> | <code>Amazon.CDK.Duration</code> | Timeout for waiting on a value. |

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`JsonPath\`<sup>Required</sup> <a name=\\"JsonPath\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.jsonPath\\"></a>

\`\`\`csharp
public string JsonPath { get; set; }
\`\`\`

- *Type:* string

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`ObjectName\`<sup>Required</sup> <a name=\\"ObjectName\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectName\\"></a>

\`\`\`csharp
public string ObjectName { get; set; }
\`\`\`

- *Type:* string

The name of the object to query.

---

##### \`ObjectType\`<sup>Required</sup> <a name=\\"ObjectType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectType\\"></a>

\`\`\`csharp
public string ObjectType { get; set; }
\`\`\`

- *Type:* string

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`ObjectNamespace\`<sup>Optional</sup> <a name=\\"ObjectNamespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\"></a>

\`\`\`csharp
public string ObjectNamespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`Timeout\`<sup>Optional</sup> <a name=\\"Timeout\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.timeout\\"></a>

\`\`\`csharp
public Duration Timeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---

### KubernetesPatchProps <a name=\\"KubernetesPatchProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps\\"></a>

Properties for KubernetesPatch.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesPatchProps {
    System.Collections.Generic.IDictionary<string, object> ApplyPatch,
    ICluster Cluster,
    string ResourceName,
    System.Collections.Generic.IDictionary<string, object> RestorePatch,
    PatchType PatchType = null,
    string ResourceNamespace = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.applyPatch\\">ApplyPatch</a></code> | <code>System.Collections.Generic.IDictionary<string, object></code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The cluster to apply the patch to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceName\\">ResourceName</a></code> | <code>string</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.restorePatch\\">RestorePatch</a></code> | <code>System.Collections.Generic.IDictionary<string, object></code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.patchType\\">PatchType</a></code> | <code>Amazon.CDK.aws_eks.PatchType</code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceNamespace\\">ResourceNamespace</a></code> | <code>string</code> | The kubernetes API namespace. |

---

##### \`ApplyPatch\`<sup>Required</sup> <a name=\\"ApplyPatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.applyPatch\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object> ApplyPatch { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`ResourceName\`<sup>Required</sup> <a name=\\"ResourceName\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceName\\"></a>

\`\`\`csharp
public string ResourceName { get; set; }
\`\`\`

- *Type:* string

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`RestorePatch\`<sup>Required</sup> <a name=\\"RestorePatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.restorePatch\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object> RestorePatch { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`PatchType\`<sup>Optional</sup> <a name=\\"PatchType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.patchType\\"></a>

\`\`\`csharp
public PatchType PatchType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.PatchType
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`ResourceNamespace\`<sup>Optional</sup> <a name=\\"ResourceNamespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceNamespace\\"></a>

\`\`\`csharp
public string ResourceNamespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The kubernetes API namespace.

---

### LabelProperty <a name=\\"LabelProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new LabelProperty {
    string Key,
    string Value
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.key\\">Key</a></code> | <code>string</code> | \`CfnFargateProfile.LabelProperty.Key\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.value\\">Value</a></code> | <code>string</code> | \`CfnFargateProfile.LabelProperty.Value\`. |

---

##### \`Key\`<sup>Required</sup> <a name=\\"Key\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.key\\"></a>

\`\`\`csharp
public string Key { get; set; }
\`\`\`

- *Type:* string

\`CfnFargateProfile.LabelProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key)

---

##### \`Value\`<sup>Required</sup> <a name=\\"Value\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.value\\"></a>

\`\`\`csharp
public string Value { get; set; }
\`\`\`

- *Type:* string

\`CfnFargateProfile.LabelProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value)

---

### LaunchTemplateSpec <a name=\\"LaunchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec\\"></a>

Launch template property specification.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new LaunchTemplateSpec {
    string Id,
    string Version = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.id\\">Id</a></code> | <code>string</code> | The Launch template ID. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.version\\">Version</a></code> | <code>string</code> | The launch template version to be used (optional). |

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.id\\"></a>

\`\`\`csharp
public string Id { get; set; }
\`\`\`

- *Type:* string

The Launch template ID.

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string
- *Default:* the default version of the launch template

The launch template version to be used (optional).

---

### LaunchTemplateSpecificationProperty <a name=\\"LaunchTemplateSpecificationProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new LaunchTemplateSpecificationProperty {
    string Id = null,
    string Name = null,
    string Version = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\">Id</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\">Name</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\">Version</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`. |

---

##### \`Id\`<sup>Optional</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\"></a>

\`\`\`csharp
public string Id { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id)

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\"></a>

\`\`\`csharp
public string Name { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version)

---

### NodegroupOptions <a name=\\"NodegroupOptions\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions\\"></a>

The Nodegroup Options for addNodeGroup() method.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new NodegroupOptions {
    NodegroupAmiType AmiType = null,
    CapacityType CapacityType = null,
    double DesiredSize = null,
    double DiskSize = null,
    bool ForceUpdate = null,
    InstanceType[] InstanceTypes = null,
    System.Collections.Generic.IDictionary<string, string> Labels = null,
    LaunchTemplateSpec LaunchTemplateSpec = null,
    double MaxSize = null,
    double MinSize = null,
    string NodegroupName = null,
    IRole NodeRole = null,
    string ReleaseVersion = null,
    NodegroupRemoteAccess RemoteAccess = null,
    SubnetSelection Subnets = null,
    System.Collections.Generic.IDictionary<string, string> Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.amiType\\">AmiType</a></code> | <code>Amazon.CDK.aws_eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.capacityType\\">CapacityType</a></code> | <code>Amazon.CDK.aws_eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.desiredSize\\">DesiredSize</a></code> | <code>double</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.diskSize\\">DiskSize</a></code> | <code>double</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.forceUpdate\\">ForceUpdate</a></code> | <code>bool</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.instanceTypes\\">InstanceTypes</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType[]</code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.labels\\">Labels</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.launchTemplateSpec\\">LaunchTemplateSpec</a></code> | <code>Amazon.CDK.aws_eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.maxSize\\">MaxSize</a></code> | <code>double</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.minSize\\">MinSize</a></code> | <code>double</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.nodeRole\\">NodeRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.releaseVersion\\">ReleaseVersion</a></code> | <code>string</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.remoteAccess\\">RemoteAccess</a></code> | <code>Amazon.CDK.aws_eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.subnets\\">Subnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.tags\\">Tags</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The metadata to apply to the node group to assist with categorization and organization. |

---

##### \`AmiType\`<sup>Optional</sup> <a name=\\"AmiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.amiType\\"></a>

\`\`\`csharp
public NodegroupAmiType AmiType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`CapacityType\`<sup>Optional</sup> <a name=\\"CapacityType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.capacityType\\"></a>

\`\`\`csharp
public CapacityType CapacityType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`DesiredSize\`<sup>Optional</sup> <a name=\\"DesiredSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.desiredSize\\"></a>

\`\`\`csharp
public double DesiredSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`DiskSize\`<sup>Optional</sup> <a name=\\"DiskSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.diskSize\\"></a>

\`\`\`csharp
public double DiskSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`ForceUpdate\`<sup>Optional</sup> <a name=\\"ForceUpdate\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.forceUpdate\\"></a>

\`\`\`csharp
public bool ForceUpdate { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`InstanceTypes\`<sup>Optional</sup> <a name=\\"InstanceTypes\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.instanceTypes\\"></a>

\`\`\`csharp
public InstanceType[] InstanceTypes { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType[]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.labels\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Labels { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`LaunchTemplateSpec\`<sup>Optional</sup> <a name=\\"LaunchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.launchTemplateSpec\\"></a>

\`\`\`csharp
public LaunchTemplateSpec LaunchTemplateSpec { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`MaxSize\`<sup>Optional</sup> <a name=\\"MaxSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.maxSize\\"></a>

\`\`\`csharp
public double MaxSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`MinSize\`<sup>Optional</sup> <a name=\\"MinSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.minSize\\"></a>

\`\`\`csharp
public double MinSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`NodegroupName\`<sup>Optional</sup> <a name=\\"NodegroupName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; set; }
\`\`\`

- *Type:* string
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`NodeRole\`<sup>Optional</sup> <a name=\\"NodeRole\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.nodeRole\\"></a>

\`\`\`csharp
public IRole NodeRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`ReleaseVersion\`<sup>Optional</sup> <a name=\\"ReleaseVersion\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.releaseVersion\\"></a>

\`\`\`csharp
public string ReleaseVersion { get; set; }
\`\`\`

- *Type:* string
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`RemoteAccess\`<sup>Optional</sup> <a name=\\"RemoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.remoteAccess\\"></a>

\`\`\`csharp
public NodegroupRemoteAccess RemoteAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`Subnets\`<sup>Optional</sup> <a name=\\"Subnets\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.subnets\\"></a>

\`\`\`csharp
public SubnetSelection Subnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.tags\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Tags { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

### NodegroupProps <a name=\\"NodegroupProps\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps\\"></a>

NodeGroup properties interface.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new NodegroupProps {
    NodegroupAmiType AmiType = null,
    CapacityType CapacityType = null,
    double DesiredSize = null,
    double DiskSize = null,
    bool ForceUpdate = null,
    InstanceType[] InstanceTypes = null,
    System.Collections.Generic.IDictionary<string, string> Labels = null,
    LaunchTemplateSpec LaunchTemplateSpec = null,
    double MaxSize = null,
    double MinSize = null,
    string NodegroupName = null,
    IRole NodeRole = null,
    string ReleaseVersion = null,
    NodegroupRemoteAccess RemoteAccess = null,
    SubnetSelection Subnets = null,
    System.Collections.Generic.IDictionary<string, string> Tags = null,
    ICluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.amiType\\">AmiType</a></code> | <code>Amazon.CDK.aws_eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.capacityType\\">CapacityType</a></code> | <code>Amazon.CDK.aws_eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.desiredSize\\">DesiredSize</a></code> | <code>double</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.diskSize\\">DiskSize</a></code> | <code>double</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.forceUpdate\\">ForceUpdate</a></code> | <code>bool</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.instanceTypes\\">InstanceTypes</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType[]</code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.labels\\">Labels</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.launchTemplateSpec\\">LaunchTemplateSpec</a></code> | <code>Amazon.CDK.aws_eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.maxSize\\">MaxSize</a></code> | <code>double</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.minSize\\">MinSize</a></code> | <code>double</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.nodeRole\\">NodeRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.releaseVersion\\">ReleaseVersion</a></code> | <code>string</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.remoteAccess\\">RemoteAccess</a></code> | <code>Amazon.CDK.aws_eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.subnets\\">Subnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.tags\\">Tags</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | Cluster resource. |

---

##### \`AmiType\`<sup>Optional</sup> <a name=\\"AmiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.amiType\\"></a>

\`\`\`csharp
public NodegroupAmiType AmiType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`CapacityType\`<sup>Optional</sup> <a name=\\"CapacityType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.capacityType\\"></a>

\`\`\`csharp
public CapacityType CapacityType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`DesiredSize\`<sup>Optional</sup> <a name=\\"DesiredSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.desiredSize\\"></a>

\`\`\`csharp
public double DesiredSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`DiskSize\`<sup>Optional</sup> <a name=\\"DiskSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.diskSize\\"></a>

\`\`\`csharp
public double DiskSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`ForceUpdate\`<sup>Optional</sup> <a name=\\"ForceUpdate\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.forceUpdate\\"></a>

\`\`\`csharp
public bool ForceUpdate { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`InstanceTypes\`<sup>Optional</sup> <a name=\\"InstanceTypes\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.instanceTypes\\"></a>

\`\`\`csharp
public InstanceType[] InstanceTypes { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType[]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.labels\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Labels { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`LaunchTemplateSpec\`<sup>Optional</sup> <a name=\\"LaunchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.launchTemplateSpec\\"></a>

\`\`\`csharp
public LaunchTemplateSpec LaunchTemplateSpec { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`MaxSize\`<sup>Optional</sup> <a name=\\"MaxSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.maxSize\\"></a>

\`\`\`csharp
public double MaxSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`MinSize\`<sup>Optional</sup> <a name=\\"MinSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.minSize\\"></a>

\`\`\`csharp
public double MinSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`NodegroupName\`<sup>Optional</sup> <a name=\\"NodegroupName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; set; }
\`\`\`

- *Type:* string
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`NodeRole\`<sup>Optional</sup> <a name=\\"NodeRole\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.nodeRole\\"></a>

\`\`\`csharp
public IRole NodeRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`ReleaseVersion\`<sup>Optional</sup> <a name=\\"ReleaseVersion\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.releaseVersion\\"></a>

\`\`\`csharp
public string ReleaseVersion { get; set; }
\`\`\`

- *Type:* string
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`RemoteAccess\`<sup>Optional</sup> <a name=\\"RemoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.remoteAccess\\"></a>

\`\`\`csharp
public NodegroupRemoteAccess RemoteAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`Subnets\`<sup>Optional</sup> <a name=\\"Subnets\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.subnets\\"></a>

\`\`\`csharp
public SubnetSelection Subnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.tags\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Tags { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

Cluster resource.

---

### NodegroupRemoteAccess <a name=\\"NodegroupRemoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\"></a>

The remote access (SSH) configuration to use with your node group.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new NodegroupRemoteAccess {
    string SshKeyName,
    ISecurityGroup[] SourceSecurityGroups = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\">SshKeyName</a></code> | <code>string</code> | The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\">SourceSecurityGroups</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup[]</code> | The security groups that are allowed SSH access (port 22) to the worker nodes. |

---

##### \`SshKeyName\`<sup>Required</sup> <a name=\\"SshKeyName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\"></a>

\`\`\`csharp
public string SshKeyName { get; set; }
\`\`\`

- *Type:* string

The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group.

---

##### \`SourceSecurityGroups\`<sup>Optional</sup> <a name=\\"SourceSecurityGroups\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\"></a>

\`\`\`csharp
public ISecurityGroup[] SourceSecurityGroups { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup[]
- *Default:* port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

The security groups that are allowed SSH access (port 22) to the worker nodes.

If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0).

---

### OpenIdConnectProviderProps <a name=\\"OpenIdConnectProviderProps\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps\\"></a>

Initialization properties for \`OpenIdConnectProvider\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new OpenIdConnectProviderProps {
    string Url
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.property.url\\">Url</a></code> | <code>string</code> | The URL of the identity provider. |

---

##### \`Url\`<sup>Required</sup> <a name=\\"Url\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.property.url\\"></a>

\`\`\`csharp
public string Url { get; set; }
\`\`\`

- *Type:* string

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---

### ProviderProperty <a name=\\"ProviderProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ProviderProperty {
    string KeyArn = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\">KeyArn</a></code> | <code>string</code> | \`CfnCluster.ProviderProperty.KeyArn\`. |

---

##### \`KeyArn\`<sup>Optional</sup> <a name=\\"KeyArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\"></a>

\`\`\`csharp
public string KeyArn { get; set; }
\`\`\`

- *Type:* string

\`CfnCluster.ProviderProperty.KeyArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn)

---

### RemoteAccessProperty <a name=\\"RemoteAccessProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new RemoteAccessProperty {
    string Ec2SshKey,
    string[] SourceSecurityGroups = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\">Ec2SshKey</a></code> | <code>string</code> | \`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\">SourceSecurityGroups</a></code> | <code>string[]</code> | \`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`. |

---

##### \`Ec2SshKey\`<sup>Required</sup> <a name=\\"Ec2SshKey\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\"></a>

\`\`\`csharp
public string Ec2SshKey { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey)

---

##### \`SourceSecurityGroups\`<sup>Optional</sup> <a name=\\"SourceSecurityGroups\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\"></a>

\`\`\`csharp
public string[] SourceSecurityGroups { get; set; }
\`\`\`

- *Type:* string[]

\`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups)

---

### ResourcesVpcConfigProperty <a name=\\"ResourcesVpcConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ResourcesVpcConfigProperty {
    string[] SubnetIds,
    string[] SecurityGroupIds = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\">SubnetIds</a></code> | <code>string[]</code> | \`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\">SecurityGroupIds</a></code> | <code>string[]</code> | \`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`. |

---

##### \`SubnetIds\`<sup>Required</sup> <a name=\\"SubnetIds\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\"></a>

\`\`\`csharp
public string[] SubnetIds { get; set; }
\`\`\`

- *Type:* string[]

\`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids)

---

##### \`SecurityGroupIds\`<sup>Optional</sup> <a name=\\"SecurityGroupIds\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\"></a>

\`\`\`csharp
public string[] SecurityGroupIds { get; set; }
\`\`\`

- *Type:* string[]

\`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids)

---

### ScalingConfigProperty <a name=\\"ScalingConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ScalingConfigProperty {
    double DesiredSize = null,
    double MaxSize = null,
    double MinSize = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\">DesiredSize</a></code> | <code>double</code> | \`CfnNodegroup.ScalingConfigProperty.DesiredSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\">MaxSize</a></code> | <code>double</code> | \`CfnNodegroup.ScalingConfigProperty.MaxSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\">MinSize</a></code> | <code>double</code> | \`CfnNodegroup.ScalingConfigProperty.MinSize\`. |

---

##### \`DesiredSize\`<sup>Optional</sup> <a name=\\"DesiredSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\"></a>

\`\`\`csharp
public double DesiredSize { get; set; }
\`\`\`

- *Type:* double

\`CfnNodegroup.ScalingConfigProperty.DesiredSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize)

---

##### \`MaxSize\`<sup>Optional</sup> <a name=\\"MaxSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\"></a>

\`\`\`csharp
public double MaxSize { get; set; }
\`\`\`

- *Type:* double

\`CfnNodegroup.ScalingConfigProperty.MaxSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize)

---

##### \`MinSize\`<sup>Optional</sup> <a name=\\"MinSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\"></a>

\`\`\`csharp
public double MinSize { get; set; }
\`\`\`

- *Type:* double

\`CfnNodegroup.ScalingConfigProperty.MinSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize)

---

### Selector <a name=\\"Selector\\" id=\\"aws-cdk-lib.aws_eks.Selector\\"></a>

Fargate profile selector.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.Selector.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new Selector {
    string Namespace,
    System.Collections.Generic.IDictionary<string, string> Labels = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Selector.property.namespace\\">Namespace</a></code> | <code>string</code> | The Kubernetes namespace that the selector should match. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Selector.property.labels\\">Labels</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The Kubernetes labels that the selector should match. |

---

##### \`Namespace\`<sup>Required</sup> <a name=\\"Namespace\\" id=\\"aws-cdk-lib.aws_eks.Selector.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string

The Kubernetes namespace that the selector should match.

You must specify a namespace for a selector. The selector only matches pods that are created in this namespace, but you can create multiple selectors to target multiple namespaces.

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"aws-cdk-lib.aws_eks.Selector.property.labels\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Labels { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* all pods within the namespace will be selected.

The Kubernetes labels that the selector should match.

A pod must contain all of the labels that are specified in the selector for it to be considered a match.

---

### SelectorProperty <a name=\\"SelectorProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new SelectorProperty {
    string Namespace,
    object Labels = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\">Namespace</a></code> | <code>string</code> | \`CfnFargateProfile.SelectorProperty.Namespace\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\">Labels</a></code> | <code>object</code> | \`CfnFargateProfile.SelectorProperty.Labels\`. |

---

##### \`Namespace\`<sup>Required</sup> <a name=\\"Namespace\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string

\`CfnFargateProfile.SelectorProperty.Namespace\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace)

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\"></a>

\`\`\`csharp
public object Labels { get; set; }
\`\`\`

- *Type:* object

\`CfnFargateProfile.SelectorProperty.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels)

---

### ServiceAccountOptions <a name=\\"ServiceAccountOptions\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions\\"></a>

Options for \`ServiceAccount\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ServiceAccountOptions {
    string Name = null,
    string Namespace = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions.property.name\\">Name</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions.property.namespace\\">Namespace</a></code> | <code>string</code> | The namespace of the service account. |

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.property.name\\"></a>

\`\`\`csharp
public string Name { get; set; }
\`\`\`

- *Type:* string
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The namespace of the service account.

---

### ServiceAccountProps <a name=\\"ServiceAccountProps\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps\\"></a>

Properties for defining service accounts.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ServiceAccountProps {
    string Name = null,
    string Namespace = null,
    ICluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.name\\">Name</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.namespace\\">Namespace</a></code> | <code>string</code> | The namespace of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The cluster to apply the patch to. |

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.name\\"></a>

\`\`\`csharp
public string Name { get; set; }
\`\`\`

- *Type:* string
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The cluster to apply the patch to.

---

### ServiceLoadBalancerAddressOptions <a name=\\"ServiceLoadBalancerAddressOptions\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions\\"></a>

Options for fetching a ServiceLoadBalancerAddress.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ServiceLoadBalancerAddressOptions {
    string Namespace = null,
    Duration Timeout = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\">Namespace</a></code> | <code>string</code> | The namespace the service belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\">Timeout</a></code> | <code>Amazon.CDK.Duration</code> | Timeout for waiting on the load balancer address. |

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* 'default'

The namespace the service belongs to.

---

##### \`Timeout\`<sup>Optional</sup> <a name=\\"Timeout\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\"></a>

\`\`\`csharp
public Duration Timeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on the load balancer address.

---

### TaintProperty <a name=\\"TaintProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new TaintProperty {
    string Effect = null,
    string Key = null,
    string Value = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.effect\\">Effect</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Effect\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.key\\">Key</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Key\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.value\\">Value</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Value\`. |

---

##### \`Effect\`<sup>Optional</sup> <a name=\\"Effect\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.effect\\"></a>

\`\`\`csharp
public string Effect { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Effect\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect)

---

##### \`Key\`<sup>Optional</sup> <a name=\\"Key\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.key\\"></a>

\`\`\`csharp
public string Key { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key)

---

##### \`Value\`<sup>Optional</sup> <a name=\\"Value\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.value\\"></a>

\`\`\`csharp
public string Value { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value)

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### EksOptimizedImage <a name=\\"EksOptimizedImage\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage\\"></a>

- *Implements:* Amazon.CDK.aws_ec2.IMachineImage

Construct an Amazon Linux 2 image from the latest EKS Optimized AMI published in SSM.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new EksOptimizedImage(EksOptimizedImageProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.EksOptimizedImageProps</code> | *No description.* |

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.EksOptimizedImageProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.getImage\\">GetImage</a></code> | Return the correct image. |

---

##### \`GetImage\` <a name=\\"GetImage\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.getImage\\"></a>

\`\`\`csharp
private GetImage(Construct Scope)
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.getImage.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---




### EndpointAccess <a name=\\"EndpointAccess\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess\\"></a>

Endpoint access characteristics.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom\\">OnlyFrom</a></code> | Restrict public access to specific CIDR blocks. |

---

##### \`OnlyFrom\` <a name=\\"OnlyFrom\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom\\"></a>

\`\`\`csharp
private OnlyFrom(string Cidr)
\`\`\`

###### \`Cidr\`<sup>Required</sup> <a name=\\"Cidr\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom.parameter.cidr\\"></a>

- *Type:* string

CIDR blocks.

---



#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PRIVATE\\">Private</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | The cluster endpoint is only accessible through your VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC\\">Public</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | The cluster endpoint is accessible from outside of your VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\">PublicAndPrivate</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | The cluster endpoint is accessible from outside of your VPC. |

---

##### \`Private\`<sup>Required</sup> <a name=\\"Private\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PRIVATE\\"></a>

\`\`\`csharp
public EndpointAccess Private { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess

The cluster endpoint is only accessible through your VPC.

Worker node traffic to the endpoint will stay within your VPC.

---

##### \`Public\`<sup>Required</sup> <a name=\\"Public\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC\\"></a>

\`\`\`csharp
public EndpointAccess Public { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic will leave your VPC to connect to the endpoint.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

##### \`PublicAndPrivate\`<sup>Required</sup> <a name=\\"PublicAndPrivate\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\"></a>

\`\`\`csharp
public EndpointAccess PublicAndPrivate { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic to the endpoint will stay within your VPC.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC_AND_PRIVATE.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

### KubernetesVersion <a name=\\"KubernetesVersion\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion\\"></a>

Kubernetes cluster version.


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.of\\">Of</a></code> | Custom cluster version. |

---

##### \`Of\` <a name=\\"Of\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.of\\"></a>

\`\`\`csharp
using Amazon.CDK;

KubernetesVersion.Of(string Version);
\`\`\`

###### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.of.parameter.version\\"></a>

- *Type:* string

custom version number.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.version\\">Version</a></code> | <code>string</code> | cluster version number. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.version\\"></a>

\`\`\`csharp
public string Version { get; }
\`\`\`

- *Type:* string

cluster version number.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_14\\">V114</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.14. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_15\\">V115</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.15. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_16\\">V116</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.16. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_17\\">V117</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.17. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_18\\">V118</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.18. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_19\\">V119</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.19. |

---

##### \`V114\`<sup>Required</sup> <a name=\\"V114\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_14\\"></a>

\`\`\`csharp
public KubernetesVersion V114 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.14.

---

##### \`V115\`<sup>Required</sup> <a name=\\"V115\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_15\\"></a>

\`\`\`csharp
public KubernetesVersion V115 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.15.

---

##### \`V116\`<sup>Required</sup> <a name=\\"V116\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_16\\"></a>

\`\`\`csharp
public KubernetesVersion V116 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.16.

---

##### \`V117\`<sup>Required</sup> <a name=\\"V117\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_17\\"></a>

\`\`\`csharp
public KubernetesVersion V117 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.17.

---

##### \`V118\`<sup>Required</sup> <a name=\\"V118\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_18\\"></a>

\`\`\`csharp
public KubernetesVersion V118 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.18.

---

##### \`V119\`<sup>Required</sup> <a name=\\"V119\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_19\\"></a>

\`\`\`csharp
public KubernetesVersion V119 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.19.

---

## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### ICluster <a name=\\"ICluster\\" id=\\"aws-cdk-lib.aws_eks.ICluster\\"></a>

- *Extends:* Amazon.CDK.IResource, Amazon.CDK.aws_ec2.IConnectable

- *Implemented By:* Amazon.CDK.aws_eks.Cluster, Amazon.CDK.aws_eks.FargateCluster, Amazon.CDK.aws_eks.ICluster

An EKS cluster.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addCdk8sChart\\">AddCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addHelmChart\\">AddHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addManifest\\">AddManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addServiceAccount\\">AddServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |

---

##### \`AddCdk8sChart\` <a name=\\"AddCdk8sChart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart\\"></a>

\`\`\`csharp
private AddCdk8sChart(string Id, Construct Chart)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`Chart\`<sup>Required</sup> <a name=\\"Chart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* Constructs.Construct

the cdk8s chart.

---

##### \`AddHelmChart\` <a name=\\"AddHelmChart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart\\"></a>

\`\`\`csharp
private AddHelmChart(string Id, HelmChartOptions Options)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.HelmChartOptions

options of this chart.

---

##### \`AddManifest\` <a name=\\"AddManifest\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest\\"></a>

\`\`\`csharp
private AddManifest(string Id, System.Collections.Generic.IDictionary<string, object> Manifest)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest.parameter.id\\"></a>

- *Type:* string

logical id of this manifest.

---

###### \`Manifest\`<sup>Required</sup> <a name=\\"Manifest\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest.parameter.manifest\\"></a>

- *Type:* System.Collections.Generic.IDictionary<string, object>

a list of Kubernetes resource specifications.

---

##### \`AddServiceAccount\` <a name=\\"AddServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount\\"></a>

\`\`\`csharp
private AddServiceAccount(string Id, ServiceAccountOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.id\\"></a>

- *Type:* string

logical id of service account.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.ServiceAccountOptions

service account options.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.node\\">Node</a></code> | <code>Constructs.Node</code> | The tree node. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.env\\">Env</a></code> | <code>Amazon.CDK.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.stack\\">Stack</a></code> | <code>Amazon.CDK.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.connections\\">Connections</a></code> | <code>Amazon.CDK.aws_ec2.Connections</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterArn\\">ClusterArn</a></code> | <code>string</code> | The unique ARN assigned to the service by AWS in the form of arn:aws:eks:. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterCertificateAuthorityData\\">ClusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\">ClusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterEndpoint\\">ClusterEndpoint</a></code> | <code>string</code> | The API Server endpoint URL. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterName\\">ClusterName</a></code> | <code>string</code> | The physical name of the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroup\\">ClusterSecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroupId\\">ClusterSecurityGroupId</a></code> | <code>string</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.openIdConnectProvider\\">OpenIdConnectProvider</a></code> | <code>Amazon.CDK.aws_iam.IOpenIdConnectProvider</code> | The Open ID Connect Provider of the cluster used to configure Service Accounts. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlPrivateSubnets\\">KubectlPrivateSubnets</a></code> | <code>Amazon.CDK.aws_ec2.ISubnet[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlRole\\">KubectlRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlSecurityGroup\\">KubectlSecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`Node\`<sup>Required</sup> <a name=\\"Node\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.node\\"></a>

\`\`\`csharp
public Node Node { get; }
\`\`\`

- *Type:* Constructs.Node

The tree node.

---

##### \`Env\`<sup>Required</sup> <a name=\\"Env\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.env\\"></a>

\`\`\`csharp
public ResourceEnvironment Env { get; }
\`\`\`

- *Type:* Amazon.CDK.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`Stack\`<sup>Required</sup> <a name=\\"Stack\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.stack\\"></a>

\`\`\`csharp
public Stack Stack { get; }
\`\`\`

- *Type:* Amazon.CDK.Stack

The stack in which this resource is defined.

---

##### \`Connections\`<sup>Required</sup> <a name=\\"Connections\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.connections\\"></a>

\`\`\`csharp
public Connections Connections { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.Connections

---

##### \`ClusterArn\`<sup>Required</sup> <a name=\\"ClusterArn\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterArn\\"></a>

\`\`\`csharp
public string ClusterArn { get; }
\`\`\`

- *Type:* string

The unique ARN assigned to the service by AWS in the form of arn:aws:eks:.

---

##### \`ClusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"ClusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`csharp
public string ClusterCertificateAuthorityData { get; }
\`\`\`

- *Type:* string

The certificate-authority-data for your cluster.

---

##### \`ClusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"ClusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`csharp
public string ClusterEncryptionConfigKeyArn { get; }
\`\`\`

- *Type:* string

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`ClusterEndpoint\`<sup>Required</sup> <a name=\\"ClusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterEndpoint\\"></a>

\`\`\`csharp
public string ClusterEndpoint { get; }
\`\`\`

- *Type:* string

The API Server endpoint URL.

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

The physical name of the Cluster.

---

##### \`ClusterSecurityGroup\`<sup>Required</sup> <a name=\\"ClusterSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup ClusterSecurityGroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`ClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"ClusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroupId\\"></a>

\`\`\`csharp
public string ClusterSecurityGroupId { get; }
\`\`\`

- *Type:* string

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`OpenIdConnectProvider\`<sup>Required</sup> <a name=\\"OpenIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.openIdConnectProvider\\"></a>

\`\`\`csharp
public IOpenIdConnectProvider OpenIdConnectProvider { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IOpenIdConnectProvider

The Open ID Connect Provider of the cluster used to configure Service Accounts.

---

##### \`Prune\`<sup>Required</sup> <a name=\\"Prune\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; }
\`\`\`

- *Type:* bool

Indicates whether Kubernetes resources can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`Vpc\`<sup>Required</sup> <a name=\\"Vpc\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion

An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI.

If not defined, a default layer will be used.

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; }
\`\`\`

- *Type:* Amazon.CDK.Size

Amount of memory to allocate to the provider's lambda function.

---

##### \`KubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"KubectlPrivateSubnets\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`csharp
public ISubnet[] KubectlPrivateSubnets { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISubnet[]

Subnets to host the \`kubectl\` compute resources.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

##### \`KubectlRole\`<sup>Optional</sup> <a name=\\"KubectlRole\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlRole\\"></a>

\`\`\`csharp
public IRole KubectlRole { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`KubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"KubectlSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlSecurityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup KubectlSecurityGroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup

A security group to use for \`kubectl\` execution.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

### INodegroup <a name=\\"INodegroup\\" id=\\"aws-cdk-lib.aws_eks.INodegroup\\"></a>

- *Extends:* Amazon.CDK.IResource

- *Implemented By:* Amazon.CDK.aws_eks.Nodegroup, Amazon.CDK.aws_eks.INodegroup

NodeGroup interface.


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.node\\">Node</a></code> | <code>Constructs.Node</code> | The tree node. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.env\\">Env</a></code> | <code>Amazon.CDK.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.stack\\">Stack</a></code> | <code>Amazon.CDK.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | Name of the nodegroup. |

---

##### \`Node\`<sup>Required</sup> <a name=\\"Node\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.node\\"></a>

\`\`\`csharp
public Node Node { get; }
\`\`\`

- *Type:* Constructs.Node

The tree node.

---

##### \`Env\`<sup>Required</sup> <a name=\\"Env\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.env\\"></a>

\`\`\`csharp
public ResourceEnvironment Env { get; }
\`\`\`

- *Type:* Amazon.CDK.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`Stack\`<sup>Required</sup> <a name=\\"Stack\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.stack\\"></a>

\`\`\`csharp
public Stack Stack { get; }
\`\`\`

- *Type:* Amazon.CDK.Stack

The stack in which this resource is defined.

---

##### \`NodegroupName\`<sup>Required</sup> <a name=\\"NodegroupName\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; }
\`\`\`

- *Type:* string

Name of the nodegroup.

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### CapacityType <a name=\\"CapacityType\\" id=\\"aws-cdk-lib.aws_eks.CapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType.SPOT\\">SPOT</a></code> | spot instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType.ON_DEMAND\\">ON_DEMAND</a></code> | on-demand instances. |

---

Capacity type of the managed node group.

#### \`SPOT\` <a name=\\"SPOT\\" id=\\"aws-cdk-lib.aws_eks.CapacityType.SPOT\\"></a>

spot instances.

---


#### \`ON_DEMAND\` <a name=\\"ON_DEMAND\\" id=\\"aws-cdk-lib.aws_eks.CapacityType.ON_DEMAND\\"></a>

on-demand instances.

---


### CoreDnsComputeType <a name=\\"CoreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType.EC2\\">EC2</a></code> | Deploy CoreDNS on EC2 instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType.FARGATE\\">FARGATE</a></code> | Deploy CoreDNS on Fargate-managed instances. |

---

The type of compute resources to use for CoreDNS.

#### \`EC2\` <a name=\\"EC2\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType.EC2\\"></a>

Deploy CoreDNS on EC2 instances.

---


#### \`FARGATE\` <a name=\\"FARGATE\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType.FARGATE\\"></a>

Deploy CoreDNS on Fargate-managed instances.

---


### CpuArch <a name=\\"CpuArch\\" id=\\"aws-cdk-lib.aws_eks.CpuArch\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch.ARM_64\\">ARM_64</a></code> | arm64 CPU type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch.X86_64\\">X86_64</a></code> | x86_64 CPU type. |

---

CPU architecture.

#### \`ARM_64\` <a name=\\"ARM_64\\" id=\\"aws-cdk-lib.aws_eks.CpuArch.ARM_64\\"></a>

arm64 CPU type.

---


#### \`X86_64\` <a name=\\"X86_64\\" id=\\"aws-cdk-lib.aws_eks.CpuArch.X86_64\\"></a>

x86_64 CPU type.

---


### DefaultCapacityType <a name=\\"DefaultCapacityType\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType.NODEGROUP\\">NODEGROUP</a></code> | managed node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType.EC2\\">EC2</a></code> | EC2 autoscaling group. |

---

The default capacity type for the cluster.

#### \`NODEGROUP\` <a name=\\"NODEGROUP\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType.NODEGROUP\\"></a>

managed node group.

---


#### \`EC2\` <a name=\\"EC2\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType.EC2\\"></a>

EC2 autoscaling group.

---


### MachineImageType <a name=\\"MachineImageType\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType.AMAZON_LINUX_2\\">AMAZON_LINUX_2</a></code> | Amazon EKS-optimized Linux AMI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType.BOTTLEROCKET\\">BOTTLEROCKET</a></code> | Bottlerocket AMI. |

---

The machine image type.

#### \`AMAZON_LINUX_2\` <a name=\\"AMAZON_LINUX_2\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType.AMAZON_LINUX_2\\"></a>

Amazon EKS-optimized Linux AMI.

---


#### \`BOTTLEROCKET\` <a name=\\"BOTTLEROCKET\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType.BOTTLEROCKET\\"></a>

Bottlerocket AMI.

---


### NodegroupAmiType <a name=\\"NodegroupAmiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64\\">AL2_X86_64</a></code> | Amazon Linux 2 (x86-64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\">AL2_X86_64_GPU</a></code> | Amazon Linux 2 with GPU support. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_ARM_64\\">AL2_ARM_64</a></code> | Amazon Linux 2 (ARM-64). |

---

The AMI type for your node group.

GPU instance types should use the \`AL2_x86_64_GPU\` AMI type, which uses the Amazon EKS-optimized Linux AMI with GPU support. Non-GPU instances should use the \`AL2_x86_64\` AMI type, which uses the Amazon EKS-optimized Linux AMI.

#### \`AL2_X86_64\` <a name=\\"AL2_X86_64\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64\\"></a>

Amazon Linux 2 (x86-64).

---


#### \`AL2_X86_64_GPU\` <a name=\\"AL2_X86_64_GPU\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\"></a>

Amazon Linux 2 with GPU support.

---


#### \`AL2_ARM_64\` <a name=\\"AL2_ARM_64\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_ARM_64\\"></a>

Amazon Linux 2 (ARM-64).

---


### NodeType <a name=\\"NodeType\\" id=\\"aws-cdk-lib.aws_eks.NodeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.STANDARD\\">STANDARD</a></code> | Standard instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.GPU\\">GPU</a></code> | GPU instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.INFERENTIA\\">INFERENTIA</a></code> | Inferentia instances. |

---

Whether the worker nodes should support GPU or just standard instances.

#### \`STANDARD\` <a name=\\"STANDARD\\" id=\\"aws-cdk-lib.aws_eks.NodeType.STANDARD\\"></a>

Standard instances.

---


#### \`GPU\` <a name=\\"GPU\\" id=\\"aws-cdk-lib.aws_eks.NodeType.GPU\\"></a>

GPU instances.

---


#### \`INFERENTIA\` <a name=\\"INFERENTIA\\" id=\\"aws-cdk-lib.aws_eks.NodeType.INFERENTIA\\"></a>

Inferentia instances.

---


### PatchType <a name=\\"PatchType\\" id=\\"aws-cdk-lib.aws_eks.PatchType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.JSON\\">JSON</a></code> | JSON Patch, RFC 6902. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.MERGE\\">MERGE</a></code> | JSON Merge patch. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.STRATEGIC\\">STRATEGIC</a></code> | Strategic merge patch. |

---

Values for \`kubectl patch\` --type argument.

#### \`JSON\` <a name=\\"JSON\\" id=\\"aws-cdk-lib.aws_eks.PatchType.JSON\\"></a>

JSON Patch, RFC 6902.

---


#### \`MERGE\` <a name=\\"MERGE\\" id=\\"aws-cdk-lib.aws_eks.PatchType.MERGE\\"></a>

JSON Merge patch.

---


#### \`STRATEGIC\` <a name=\\"STRATEGIC\\" id=\\"aws-cdk-lib.aws_eks.PatchType.STRATEGIC\\"></a>

Strategic merge patch.

---

"
`;

exports[`csharp snapshot - submodules 2 1`] = `
"# Amazon EKS Construct Library
<!--BEGIN STABILITY BANNER-->

---

![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---

<!--END STABILITY BANNER-->

This construct library allows you to define [Amazon Elastic Container Service for Kubernetes (EKS)](https://aws.amazon.com/eks/) clusters.
In addition, the library also supports defining Kubernetes resource manifests within EKS clusters.

## Table Of Contents

* [Quick Start](#quick-start)
* [API Reference](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-eks-readme.html)
* [Architectural Overview](#architectural-overview)
* [Provisioning clusters](#provisioning-clusters)
  * [Managed node groups](#managed-node-groups)
  * [Fargate Profiles](#fargate-profiles)
  * [Self-managed nodes](#self-managed-nodes)
  * [Endpoint Access](#endpoint-access)
  * [VPC Support](#vpc-support)
  * [Kubectl Support](#kubectl-support)
  * [ARM64 Support](#arm64-support)
  * [Masters Role](#masters-role)
  * [Encryption](#encryption)
* [Permissions and Security](#permissions-and-security)
* [Applying Kubernetes Resources](#applying-kubernetes-resources)
  * [Kubernetes Manifests](#kubernetes-manifests)
  * [Helm Charts](#helm-charts)
  * [CDK8s Charts](#cdk8s-charts)
* [Patching Kubernetes Resources](#patching-kubernetes-resources)
* [Querying Kubernetes Resources](#querying-kubernetes-resources)
* [Using existing clusters](#using-existing-clusters)
* [Known Issues and Limitations](#known-issues-and-limitations)

## Quick Start

This example defines an Amazon EKS cluster with the following configuration:

* Dedicated VPC with default configuration (Implicitly created using [ec2.Vpc](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#vpc))
* A Kubernetes pod with a container based on the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes) image.

\`\`\`ts
// provisiong a cluster
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
});

// apply a kubernetes manifest to the cluster
cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ]
      }
    ]
  }
});
\`\`\`

In order to interact with your cluster through \`kubectl\`, you can use the \`aws eks update-kubeconfig\` [AWS CLI command](https://docs.aws.amazon.com/cli/latest/reference/eks/update-kubeconfig.html)
to configure your local kubeconfig. The EKS module will define a CloudFormation output in your stack which contains the command to run. For example:

\`\`\`plaintext
Outputs:
ClusterConfigCommand43AAE40F = aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
\`\`\`

Execute the \`aws eks update-kubeconfig ...\` command in your terminal to create or update a local kubeconfig context:

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

And now you can simply use \`kubectl\`:

\`\`\`console
$ kubectl get all -n kube-system
NAME                           READY   STATUS    RESTARTS   AGE
pod/aws-node-fpmwv             1/1     Running   0          21m
pod/aws-node-m9htf             1/1     Running   0          21m
pod/coredns-5cb4fb54c7-q222j   1/1     Running   0          23m
pod/coredns-5cb4fb54c7-v9nxx   1/1     Running   0          23m
...
\`\`\`

## Architectural Overview

The following is a qualitative diagram of the various possible components involved in the cluster deployment.

\`\`\`text
 +-----------------------------------------------+               +-----------------+
 |                 EKS Cluster                   |    kubectl    |                 |
 |-----------------------------------------------|<-------------+| Kubectl Handler |
 |                                               |               |                 |
 |                                               |               +-----------------+
 | +--------------------+    +-----------------+ |
 | |                    |    |                 | |
 | | Managed Node Group |    | Fargate Profile | |               +-----------------+
 | |                    |    |                 | |               |                 |
 | +--------------------+    +-----------------+ |               | Cluster Handler |
 |                                               |               |                 |
 +-----------------------------------------------+               +-----------------+
    ^                                   ^                          +
    |                                   |                          |
    | connect self managed capacity     |                          | aws-sdk
    |                                   | create/update/delete     |
    +                                   |                          v
 +--------------------+                 +              +-------------------+
 |                    |                 --------------+| eks.amazonaws.com |
 | Auto Scaling Group |                                +-------------------+
 |                    |
 +--------------------+
\`\`\`

In a nutshell:

* \`EKS Cluster\` - The cluster endpoint created by EKS.
* \`Managed Node Group\` - EC2 worker nodes managed by EKS.
* \`Fargate Profile\` - Fargate worker nodes managed by EKS.
* \`Auto Scaling Group\` - EC2 worker nodes managed by the user.
* \`KubectlHandler\` - Lambda function for invoking \`kubectl\` commands on the cluster - created by CDK.
* \`ClusterHandler\` - Lambda function for interacting with EKS API to manage the cluster lifecycle - created by CDK.

A more detailed breakdown of each is provided further down this README.

## Provisioning clusters

Creating a new cluster is done using the \`Cluster\` or \`FargateCluster\` constructs. The only required property is the kubernetes \`version\`.

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

You can also use \`FargateCluster\` to provision a cluster that uses only fargate workers.

\`\`\`ts
new eks.FargateCluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

> **NOTE: Only 1 cluster per stack is supported.** If you have a use-case for multiple clusters per stack, or would like to understand more about this limitation, see <https://github.com/aws/aws-cdk/issues/10073>.

Below you'll find a few important cluster configuration options. First of which is Capacity.
Capacity is the amount and the type of worker nodes that are available to the cluster for deploying resources. Amazon EKS offers 3 ways of configuring capacity, which you can combine as you like:

### Managed node groups

Amazon EKS managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters.
With Amazon EKS managed node groups, you don’t need to separately provision or register the Amazon EC2 instances that provide compute capacity to run your Kubernetes applications. You can create, update, or terminate nodes for your cluster with a single operation. Nodes run using the latest Amazon EKS optimized AMIs in your AWS account while node updates and terminations gracefully drain nodes to ensure that your applications stay available.

> For more details visit [Amazon EKS Managed Node Groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).

**Managed Node Groups are the recommended way to allocate cluster capacity.**

By default, this library will allocate a managed node group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).

At cluster instantiation time, you can customize the number of instances and their type:

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 5,
  defaultCapacityInstance: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.SMALL),
});
\`\`\`

To access the node group that was created on your behalf, you can use \`cluster.defaultNodegroup\`.

Additional customizations are available post instantiation. To apply them, set the default capacity to 0, and use the \`cluster.addNodegroupCapacity\` method:

\`\`\`ts
const cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 0,
});

cluster.addNodegroupCapacity('custom-node-group', {
  instanceTypes: [new ec2.InstanceType('m5.large')],
  minSize: 4,
  diskSize: 100,
  amiType: eks.NodegroupAmiType.AL2_X86_64_GPU,
  ...
});
\`\`\`

#### Spot Instances Support

Use \`capacityType\` to create managed node groups comprised of spot instances. To maximize the availability of your applications while using
Spot Instances, we recommend that you configure a Spot managed node group to use multiple instance types with the \`instanceTypes\` property.

> For more details visit [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types).


\`\`\`ts
cluster.addNodegroupCapacity('extra-ng-spot', {
  instanceTypes: [
    new ec2.InstanceType('c5.large'),
    new ec2.InstanceType('c5a.large'),
    new ec2.InstanceType('c5d.large'),
  ],
  minSize: 3,
  capacityType: eks.CapacityType.SPOT,
});

\`\`\`

#### Launch Template Support

You can specify a launch template that the node group will use. For example, this can be useful if you want to use
a custom AMI or add custom user data.

When supplying a custom user data script, it must be encoded in the MIME multi-part archive format, since Amazon EKS merges with its own user data. Visit the [Launch Template Docs](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html#launch-template-user-data)
for mode details.

\`\`\`ts
const userData = \`MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\\"==MYBOUNDARY==\\"

--==MYBOUNDARY==
Content-Type: text/x-shellscript; charset=\\"us-ascii\\"

#!/bin/bash
echo \\"Running custom user data script\\"

--==MYBOUNDARY==--\\\\\\\\
\`;
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    instanceType: 't3.small',
    userData: Fn.base64(userData),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});

\`\`\`

Note that when using a custom AMI, Amazon EKS doesn't merge any user data. Which means you do not need the multi-part encoding. and are responsible for supplying the required bootstrap commands for nodes to join the cluster.
In the following example, \`/ect/eks/bootstrap.sh\` from the AMI will be used to bootstrap the node.

\`\`\`ts
const userData = ec2.UserData.forLinux();
userData.addCommands(
  'set -o xtrace',
  \`/etc/eks/bootstrap.sh \${cluster.clusterName}\`,
);
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    imageId: 'some-ami-id', // custom AMI
    instanceType: 't3.small',
    userData: Fn.base64(userData.render()),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});
\`\`\`

You may specify one \`instanceType\` in the launch template or multiple \`instanceTypes\` in the node group, **but not both**.

> For more details visit [Launch Template Support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).

Graviton 2 instance types are supported including \`c6g\`, \`m6g\`, \`r6g\` and \`t4g\`.

### Fargate profiles

AWS Fargate is a technology that provides on-demand, right-sized compute
capacity for containers. With AWS Fargate, you no longer have to provision,
configure, or scale groups of virtual machines to run containers. This removes
the need to choose server types, decide when to scale your node groups, or
optimize cluster packing.

You can control which pods start on Fargate and how they run with Fargate
Profiles, which are defined as part of your Amazon EKS cluster.

See [Fargate Considerations](https://docs.aws.amazon.com/eks/latest/userguide/fargate.html#fargate-considerations) in the AWS EKS User Guide.

You can add Fargate Profiles to any EKS cluster defined in your CDK app
through the \`addFargateProfile()\` method. The following example adds a profile
that will match all pods from the \\"default\\" namespace:

\`\`\`ts
cluster.addFargateProfile('MyProfile', {
  selectors: [ { namespace: 'default' } ]
});
\`\`\`

You can also directly use the \`FargateProfile\` construct to create profiles under different scopes:

\`\`\`ts
new eks.FargateProfile(scope, 'MyProfile', {
  cluster,
  ...
});
\`\`\`

To create an EKS cluster that **only** uses Fargate capacity, you can use \`FargateCluster\`.
The following code defines an Amazon EKS cluster with a default Fargate Profile that matches all pods from the \\"kube-system\\" and \\"default\\" namespaces. It is also configured to [run CoreDNS on Fargate](https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html#fargate-gs-coredns).

\`\`\`ts
const cluster = new eks.FargateCluster(this, 'MyCluster', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

**NOTE**: Classic Load Balancers and Network Load Balancers are not supported on
pods running on Fargate. For ingress, we recommend that you use the [ALB Ingress
Controller](https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html)
on Amazon EKS (minimum version v1.1.4).

### Self-managed nodes

Another way of allocating capacity to an EKS cluster is by using self-managed nodes.
EC2 instances that are part of the auto-scaling group will serve as worker nodes for the cluster.
This type of capacity is also commonly referred to as *EC2 Capacity** or *EC2 Nodes*.

For a detailed overview please visit [Self Managed Nodes](https://docs.aws.amazon.com/eks/latest/userguide/worker.html).

Creating an auto-scaling group and connecting it to the cluster is done using the \`cluster.addAutoScalingGroupCapacity\` method:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('frontend-nodes', {
  instanceType: new ec2.InstanceType('t2.medium'),
  minCapacity: 3,
  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC }
});
\`\`\`

To connect an already initialized auto-scaling group, use the \`cluster.connectAutoScalingGroupCapacity()\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...);
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

In both cases, the [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html#cluster-sg) will be automatically attached to
the auto-scaling group, allowing for traffic to flow freely between managed and self-managed nodes.

> **Note:** The default \`updateType\` for auto-scaling groups does not replace existing nodes. Since security groups are determined at launch time, self-managed nodes that were provisioned with version \`1.78.0\` or lower, will not be updated.
> To apply the new configuration on all your self-managed nodes, you'll need to replace the nodes using the \`UpdateType.REPLACING_UPDATE\` policy for the [\`updateType\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.AutoScalingGroup.html#updatetypespan-classapi-icon-api-icon-deprecated-titlethis-api-element-is-deprecated-its-use-is-not-recommended%EF%B8%8Fspan) property.

You can customize the [/etc/eks/boostrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh) script, which is responsible
for bootstrapping the node to the EKS cluster. For example, you can use \`kubeletExtraArgs\` to add custom node labels or taints.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  instanceType: new ec2.InstanceType('t3.large'),
  minCapacity: 2,
  bootstrapOptions: {
    kubeletExtraArgs: '--node-labels foo=bar,goo=far',
    awsApiRetryAttempts: 5
  }
});
\`\`\`

To disable bootstrapping altogether (i.e. to fully customize user-data), set \`bootstrapEnabled\` to \`false\`.
You can also configure the cluster to use an auto-scaling group as the default capacity:

\`\`\`ts
cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacityType: eks.DefaultCapacityType.EC2,
});
\`\`\`

This will allocate an auto-scaling group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).
To access the \`AutoScalingGroup\` that was created on your behalf, you can use \`cluster.defaultCapacity\`.
You can also independently create an \`AutoScalingGroup\` and connect it to the cluster using the \`cluster.connectAutoScalingGroupCapacity\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...)
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

This will add the necessary user-data to access the apiserver and configure all connections, roles, and tags needed for the instances in the auto-scaling group to properly join the cluster.

#### Spot Instances

When using self-managed nodes, you can configure the capacity to use spot instances, greatly reducing capacity cost.
To enable spot capacity, use the \`spotPrice\` property:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  spotPrice: '0.1094',
  instanceType: new ec2.InstanceType('t3.large'),
  maxCapacity: 10
});
\`\`\`

> Spot instance nodes will be labeled with \`lifecycle=Ec2Spot\` and tainted with \`PreferNoSchedule\`.

The [AWS Node Termination Handler](https://github.com/aws/aws-node-termination-handler) \`DaemonSet\` will be
installed from [Amazon EKS Helm chart repository](https://github.com/aws/eks-charts/tree/master/stable/aws-node-termination-handler) on these nodes.
The termination handler ensures that the Kubernetes control plane responds appropriately to events that
can cause your EC2 instance to become unavailable, such as [EC2 maintenance events](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html)
and [EC2 Spot interruptions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html) and helps gracefully stop all pods running on spot nodes that are about to be
terminated.

> Handler Version: [1.7.0](https://github.com/aws/aws-node-termination-handler/releases/tag/v1.7.0)
>
> Chart Version: [0.9.5](https://github.com/aws/eks-charts/blob/v0.0.28/stable/aws-node-termination-handler/Chart.yaml)

To disable the installation of the termination handler, set the \`spotInterruptHandler\` property to \`false\`. This applies both to \`addAutoScalingGroupCapacity\` and \`connectAutoScalingGroupCapacity\`.

#### Bottlerocket

[Bottlerocket](https://aws.amazon.com/bottlerocket/) is a Linux-based open-source operating system that is purpose-built by Amazon Web Services for running containers on virtual machines or bare metal hosts.
At this moment, \`Bottlerocket\` is only supported when using self-managed auto-scaling groups.

> **NOTICE**: Bottlerocket is only available in [some supported AWS regions](https://github.com/bottlerocket-os/bottlerocket/blob/develop/QUICKSTART-EKS.md#finding-an-ami).

The following example will create an auto-scaling group of 2 \`t3.small\` Linux instances running with the \`Bottlerocket\` AMI.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('BottlerocketNodes', {
  instanceType: new ec2.InstanceType('t3.small'),
  minCapacity:  2,
  machineImageType: eks.MachineImageType.BOTTLEROCKET
});
\`\`\`

The specific Bottlerocket AMI variant will be auto selected according to the k8s version for the \`x86_64\` architecture.
For example, if the Amazon EKS cluster version is \`1.17\`, the Bottlerocket AMI variant will be auto selected as
\`aws-k8s-1.17\` behind the scene.

> See [Variants](https://github.com/bottlerocket-os/bottlerocket/blob/develop/README.md#variants) for more details.

Please note Bottlerocket does not allow to customize bootstrap options and \`bootstrapOptions\` properties is not supported when you create the \`Bottlerocket\` capacity.

### Endpoint Access

When you create a new cluster, Amazon EKS creates an endpoint for the managed Kubernetes API server that you use to communicate with your cluster (using Kubernetes management tools such as \`kubectl\`)

By default, this API server endpoint is public to the internet, and access to the API server is secured using a combination of
AWS Identity and Access Management (IAM) and native Kubernetes [Role Based Access Control](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) (RBAC).

You can configure the [cluster endpoint access](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) by using the \`endpointAccess\` property:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  endpointAccess: eks.EndpointAccess.PRIVATE // No access outside of your VPC.
});
\`\`\`

The default value is \`eks.EndpointAccess.PUBLIC_AND_PRIVATE\`. Which means the cluster endpoint is accessible from outside of your VPC, but worker node traffic and \`kubectl\` commands issued by this library stay within your VPC.

### VPC Support

You can specify the VPC of the cluster using the \`vpc\` and \`vpcSubnets\` properties:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');

new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  vpc,
  vpcSubnets: [{ subnetType: ec2.SubnetType.PRIVATE }]
});
\`\`\`

> Note: Isolated VPCs (i.e with no internet access) are not currently supported. See https://github.com/aws/aws-cdk/issues/12171

If you do not specify a VPC, one will be created on your behalf, which you can then access via \`cluster.vpc\`. The cluster VPC will be associated to any EKS managed capacity (i.e Managed Node Groups and Fargate Profiles).

If you allocate self managed capacity, you can specify which subnets should the auto-scaling group use:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');
cluster.addAutoScalingGroupCapacity('nodes', {
  vpcSubnets: { subnets: vpc.privateSubnets }
});
\`\`\`

There are two additional components you might want to provision within the VPC.

#### Kubectl Handler

The \`KubectlHandler\` is a Lambda function responsible to issuing \`kubectl\` and \`helm\` commands against the cluster when you add resource manifests to the cluster.

The handler association to the VPC is derived from the \`endpointAccess\` configuration. The rule of thumb is: *If the cluster VPC can be associated, it will be*.

Breaking this down, it means that if the endpoint exposes private access (via \`EndpointAccess.PRIVATE\` or \`EndpointAccess.PUBLIC_AND_PRIVATE\`), and the VPC contains **private** subnets, the Lambda function will be provisioned inside the VPC and use the private subnets to interact with the cluster. This is the common use-case.

If the endpoint does not expose private access (via \`EndpointAccess.PUBLIC\`) **or** the VPC does not contain private subnets, the function will not be provisioned within the VPC.

#### Cluster Handler

The \`ClusterHandler\` is a Lambda function responsible to interact with the EKS API in order to control the cluster lifecycle. To provision this function inside the VPC, set the \`placeClusterHandlerInVpc\` property to \`true\`. This will place the function inside the private subnets of the VPC based on the selection strategy specified in the [\`vpcSubnets\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.Cluster.html#vpcsubnetsspan-classapi-icon-api-icon-experimental-titlethis-api-element-is-experimental-it-may-change-without-noticespan) property.

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  clusterHandlerEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

### Kubectl Support

The resources are created in the cluster by running \`kubectl apply\` from a python lambda function.

#### Environment

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  kubectlEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

#### Runtime

The kubectl handler uses \`kubectl\`, \`helm\` and the \`aws\` CLI in order to
interact with the cluster. These are bundled into AWS Lambda layers included in
the \`@aws-cdk/lambda-layer-awscli\` and \`@aws-cdk/lambda-layer-kubectl\` modules.

You can specify a custom \`lambda.LayerVersion\` if you wish to use a different
version of these tools. The handler expects the layer to include the following
three executables:

\`\`\`text
helm/helm
kubectl/kubectl
awscli/aws
\`\`\`

See more information in the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-awscli/layer) for @aws-cdk/lambda-layer-awscli
and the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-kubectl/layer) for @aws-cdk/lambda-layer-kubectl.

\`\`\`ts
const layer = new lambda.LayerVersion(this, 'KubectlLayer', {
  code: lambda.Code.fromAsset('layer.zip'),
});
\`\`\`

Now specify when the cluster is defined:

\`\`\`ts
const cluster = new eks.Cluster(this, 'MyCluster', {
  kubectlLayer: layer,
});

// or
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlLayer: layer,
});
\`\`\`

#### Memory

By default, the kubectl provider is configured with 1024MiB of memory. You can use the \`kubectlMemory\` option to specify the memory size for the AWS Lambda function:

\`\`\`ts
import { Size } from 'aws-cdk-lib';

new eks.Cluster(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});

// or
eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});
\`\`\`

### ARM64 Support

Instance types with \`ARM64\` architecture are supported in both managed nodegroup and self-managed capacity. Simply specify an ARM64 \`instanceType\` (such as \`m6g.medium\`), and the latest
Amazon Linux 2 AMI for ARM64 will be automatically selected.

\`\`\`ts
// add a managed ARM64 nodegroup
cluster.addNodegroupCapacity('extra-ng-arm', {
  instanceTypes: [new ec2.InstanceType('m6g.medium')],
  minSize: 2,
});

// add a self-managed ARM64 nodegroup
cluster.addAutoScalingGroupCapacity('self-ng-arm', {
  instanceType: new ec2.InstanceType('m6g.medium'),
  minCapacity: 2,
})
\`\`\`

### Masters Role

When you create a cluster, you can specify a \`mastersRole\`. The \`Cluster\` construct will associate this role with the \`system:masters\` [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) group, giving it super-user access to the cluster.

\`\`\`ts
const role = new iam.Role(...);
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  mastersRole: role,
});
\`\`\`

If you do not specify it, a default role will be created on your behalf, that can be assumed by anyone in the account with \`sts:AssumeRole\` permissions for this role.

This is the role you see as part of the stack outputs mentioned in the [Quick Start](#quick-start).

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

### Encryption

When you create an Amazon EKS cluster, envelope encryption of Kubernetes secrets using the AWS Key Management Service (AWS KMS) can be enabled.
The documentation on [creating a cluster](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html)
can provide more details about the customer master key (CMK) that can be used for the encryption.

You can use the \`secretsEncryptionKey\` to configure which key the cluster will use to encrypt Kubernetes secrets. By default, an AWS Managed key will be used.

> This setting can only be specified when the cluster is created and cannot be updated.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.Cluster(this, 'MyCluster', {
  secretsEncryptionKey: secretsKey,
  // ...
});
\`\`\`

You can also use a similar configuration for running a cluster built using the FargateCluster construct.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.FargateCluster(this, 'MyFargateCluster', {
  secretsEncryptionKey: secretsKey
});
\`\`\`

The Amazon Resource Name (ARN) for that CMK can be retrieved.

\`\`\`ts
const clusterEncryptionConfigKeyArn = cluster.clusterEncryptionConfigKeyArn;
\`\`\`

## Permissions and Security

Amazon EKS provides several mechanism of securing the cluster and granting permissions to specific IAM users and roles.

### AWS IAM Mapping

As described in the [Amazon EKS User Guide](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html), you can map AWS IAM users and roles to [Kubernetes Role-based access control (RBAC)](https://kubernetes.io/docs/reference/access-authn-authz/rbac).

The Amazon EKS construct manages the *aws-auth* \`ConfigMap\` Kubernetes resource on your behalf and exposes an API through the \`cluster.awsAuth\` for mapping
users, roles and accounts.

Furthermore, when auto-scaling group capacity is added to the cluster, the IAM instance role of the auto-scaling group will be automatically mapped to RBAC so nodes can connect to the cluster. No manual mapping is required.

For example, let's say you want to grant an IAM user administrative privileges on your cluster:

\`\`\`ts
const adminUser = new iam.User(this, 'Admin');
cluster.awsAuth.addUserMapping(adminUser, { groups: [ 'system:masters' ]});
\`\`\`

A convenience method for mapping a role to the \`system:masters\` group is also available:

\`\`\`ts
cluster.awsAuth.addMastersRole(role)
\`\`\`

### Cluster Security Group

When you create an Amazon EKS cluster, a [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
is automatically created as well. This security group is designed to allow all traffic from the control plane and managed node groups to flow freely
between each other.

The ID for that security group can be retrieved after creating the cluster.

\`\`\`ts
const clusterSecurityGroupId = cluster.clusterSecurityGroupId;
\`\`\`

### Node SSH Access

If you want to be able to SSH into your worker nodes, you must already have an SSH key in the region you're connecting to and pass it when
you add capacity to the cluster. You must also be able to connect to the hosts (meaning they must have a public IP and you
should be allowed to connect to them on port 22):

See [SSH into nodes](test/example.ssh-into-nodes.lit.ts) for a code example.

If you want to SSH into nodes in a private subnet, you should set up a bastion host in a public subnet. That setup is recommended, but is
unfortunately beyond the scope of this documentation.

### Service Accounts

With services account you can provide Kubernetes Pods access to AWS resources.

\`\`\`ts
// add service account
const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

const mypod = cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    serviceAccountName: sa.serviceAccountName
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ],

      }
    ]
  }
});

// create the resource after the service account.
mypod.node.addDependency(sa);

// print the IAM role arn for this service account
new cdk.CfnOutput(this, 'ServiceAccountIamRole', { value: sa.role.roleArn })
\`\`\`

Note that using \`sa.serviceAccountName\` above **does not** translate into a resource dependency.
This is why an explicit dependency is needed. See <https://github.com/aws/aws-cdk/issues/9910> for more details.

You can also add service accounts to existing clusters.
To do so, pass the \`openIdConnectProvider\` property when you import the cluster into the application.

\`\`\`ts
// you can import an existing provider
const provider = eks.OpenIdConnectProvider.fromOpenIdConnectProviderArn(this, 'Provider', 'arn:aws:iam::123456:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/AB123456ABC');

// or create a new one using an existing issuer url
const provider = new eks.OpenIdConnectProvider(this, 'Provider', issuerUrl);

const cluster = eks.Cluster.fromClusterAttributes({
  clusterName: 'Cluster',
  openIdConnectProvider: provider,
  kubectlRoleArn: 'arn:aws:iam::123456:role/service-role/k8sservicerole',
});

const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

// ...
\`\`\`

Note that adding service accounts requires running \`kubectl\` commands against the cluster.
This means you must also pass the \`kubectlRoleArn\` when importing the cluster.
See [Using existing Clusters](https://github.com/aws/aws-cdk/tree/master/packages/@aws-cdk/aws-eks#using-existing-clusters).

## Applying Kubernetes Resources

The library supports several popular resource deployment mechanisms, among which are:

### Kubernetes Manifests

The \`KubernetesManifest\` construct or \`cluster.addManifest\` method can be used
to apply Kubernetes resource manifests to this cluster.

> When using \`cluster.addManifest\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new KubernetesManifest\` to create the manifest in the scope of the other stack.

The following examples will deploy the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes)
service on the cluster:

\`\`\`ts
const appLabel = { app: \\"hello-kubernetes\\" };

const deployment = {
  apiVersion: \\"apps/v1\\",
  kind: \\"Deployment\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    replicas: 3,
    selector: { matchLabels: appLabel },
    template: {
      metadata: { labels: appLabel },
      spec: {
        containers: [
          {
            name: \\"hello-kubernetes\\",
            image: \\"paulbouwer/hello-kubernetes:1.5\\",
            ports: [ { containerPort: 8080 } ]
          }
        ]
      }
    }
  }
};

const service = {
  apiVersion: \\"v1\\",
  kind: \\"Service\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    type: \\"LoadBalancer\\",
    ports: [ { port: 80, targetPort: 8080 } ],
    selector: appLabel
  }
};

// option 1: use a construct
new KubernetesManifest(this, 'hello-kub', {
  cluster,
  manifest: [ deployment, service ]
});

// or, option2: use \`addManifest\`
cluster.addManifest('hello-kub', service, deployment);
\`\`\`

#### Adding resources from a URL

The following example will deploy the resource manifest hosting on remote server:

\`\`\`ts
import * as yaml from 'js-yaml';
import * as request from 'sync-request';

const manifestUrl = 'https://url/of/manifest.yaml';
const manifest = yaml.safeLoadAll(request('GET', manifestUrl).getBody());
cluster.addManifest('my-resource', ...manifest);
\`\`\`

#### Dependencies

There are cases where Kubernetes resources must be deployed in a specific order.
For example, you cannot define a resource in a Kubernetes namespace before the
namespace was created.

You can represent dependencies between \`KubernetesManifest\`s using
\`resource.node.addDependency()\`:

\`\`\`ts
const namespace = cluster.addManifest('my-namespace', {
  apiVersion: 'v1',
  kind: 'Namespace',
  metadata: { name: 'my-app' }
});

const service = cluster.addManifest('my-service', {
  metadata: {
    name: 'myservice',
    namespace: 'my-app'
  },
  spec: // ...
});

service.node.addDependency(namespace); // will apply \`my-namespace\` before \`my-service\`.
\`\`\`

**NOTE:** when a \`KubernetesManifest\` includes multiple resources (either directly
or through \`cluster.addManifest()\`) (e.g. \`cluster.addManifest('foo', r1, r2,
r3,...)\`), these resources will be applied as a single manifest via \`kubectl\`
and will be applied sequentially (the standard behavior in \`kubectl\`).

---

Since Kubernetes manifests are implemented as CloudFormation resources in the
CDK. This means that if the manifest is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`kubectl delete\` command and the
Kubernetes resources in that manifest will be deleted.

#### Resource Pruning

When a resource is deleted from a Kubernetes manifest, the EKS module will
automatically delete these resources by injecting a _prune label_ to all
manifest resources. This label is then passed to [\`kubectl apply --prune\`].

[\`kubectl apply --prune\`]: https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label

Pruning is enabled by default but can be disabled through the \`prune\` option
when a cluster is defined:

\`\`\`ts
new Cluster(this, 'MyCluster', {
  prune: false
});
\`\`\`

#### Manifests Validation

The \`kubectl\` CLI supports applying a manifest by skipping the validation.
This can be accomplished by setting the \`skipValidation\` flag to \`true\` in the \`KubernetesManifest\` props.

\`\`\`ts
new eks.KubernetesManifest(this, 'HelloAppWithoutValidation', {
  cluster: this.cluster,
  manifest: [ deployment, service ],
  skipValidation: true,
});
\`\`\`

### Helm Charts

The \`HelmChart\` construct or \`cluster.addHelmChart\` method can be used
to add Kubernetes resources to this cluster using Helm.

> When using \`cluster.addHelmChart\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new HelmChart\` to create the chart in the scope of the other stack.

The following example will install the [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/) to your cluster using Helm.

\`\`\`ts
// option 1: use a construct
new HelmChart(this, 'NginxIngress', {
  cluster,
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});

// or, option2: use \`addHelmChart\`
cluster.addHelmChart('NginxIngress', {
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});
\`\`\`

Helm charts will be installed and updated using \`helm upgrade --install\`, where a few parameters
are being passed down (such as \`repo\`, \`values\`, \`version\`, \`namespace\`, \`wait\`, \`timeout\`, etc).
This means that if the chart is added to CDK with the same release name, it will try to update
the chart in the cluster.

Helm charts are implemented as CloudFormation resources in CDK.
This means that if the chart is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`helm uninstall\` command and the
Helm chart will be deleted.

When there is no \`release\` defined, a unique ID will be allocated for the release based
on the construct path.

By default, all Helm charts will be installed concurrently. In some cases, this
could cause race conditions where two Helm charts attempt to deploy the same
resource or if Helm charts depend on each other. You can use
\`chart.node.addDependency()\` in order to declare a dependency order between
charts:

\`\`\`ts
const chart1 = cluster.addHelmChart(...);
const chart2 = cluster.addHelmChart(...);

chart2.node.addDependency(chart1);
\`\`\`

#### CDK8s Charts

[CDK8s](https://cdk8s.io/) is an open-source library that enables Kubernetes manifest authoring using familiar programming languages. It is founded on the same technologies as the AWS CDK, such as [\`constructs\`](https://github.com/aws/constructs) and [\`jsii\`](https://github.com/aws/jsii).

> To learn more about cdk8s, visit the [Getting Started](https://github.com/awslabs/cdk8s/tree/master/docs/getting-started) tutorials.

The EKS module natively integrates with cdk8s and allows you to apply cdk8s charts on AWS EKS clusters via the \`cluster.addCdk8sChart\` method.

In addition to \`cdk8s\`, you can also use [\`cdk8s+\`](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-plus), which provides higher level abstraction for the core kubernetes api objects.
You can think of it like the \`L2\` constructs for Kubernetes. Any other \`cdk8s\` based libraries are also supported, for example [\`cdk8s-debore\`](https://github.com/toricls/cdk8s-debore).

To get started, add the following dependencies to your \`package.json\` file:

\`\`\`json
\\"dependencies\\": {
  \\"cdk8s\\": \\"0.30.0\\",
  \\"cdk8s-plus\\": \\"0.30.0\\",
  \\"constructs\\": \\"3.0.4\\"
}
\`\`\`

> Note that the version of \`cdk8s\` must be \`>=0.30.0\`.

Similarly to how you would create a stack by extending \`@aws-cdk/core.Stack\`, we recommend you create a chart of your own that extends \`cdk8s.Chart\`,
and add your kubernetes resources to it. You can use \`aws-cdk\` construct attributes and properties inside your \`cdk8s\` construct freely.

In this example we create a chart that accepts an \`s3.Bucket\` and passes its name to a kubernetes pod as an environment variable.

Notice that the chart must accept a \`constructs.Construct\` type as its scope, not an \`@aws-cdk/core.Construct\` as you would normally use.
For this reason, to avoid possible confusion, we will create the chart in a separate file:

\`+ my-chart.ts\`

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface MyChartProps {
  readonly bucket: s3.Bucket;
}

export class MyChart extends cdk8s.Chart {
  constructor(scope: constructs.Construct, id: string, props: MyChartProps) {
    super(scope, id);

    new kplus.Pod(this, 'Pod', {
      spec: {
        containers: [
          new kplus.Container({
            image: 'my-image',
            env: {
              BUCKET_NAME: kplus.EnvValue.fromValue(props.bucket.bucketName),
            },
          }),
        ],
      },
    });
  }
}
\`\`\`

Then, in your AWS CDK app:

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as cdk8s from 'cdk8s';
import { MyChart } from './my-chart';

// some bucket..
const bucket = new s3.Bucket(this, 'Bucket');

// create a cdk8s chart and use \`cdk8s.App\` as the scope.
const myChart = new MyChart(new cdk8s.App(), 'MyChart', { bucket });

// add the cdk8s chart to the cluster
cluster.addCdk8sChart('my-chart', myChart);
\`\`\`

##### Custom CDK8s Constructs

You can also compose a few stock \`cdk8s+\` constructs into your own custom construct. However, since mixing scopes between \`aws-cdk\` and \`cdk8s\` is currently not supported, the \`Construct\` class
you'll need to use is the one from the [\`constructs\`](https://github.com/aws/constructs) module, and not from \`@aws-cdk/core\` like you normally would.
This is why we used \`new cdk8s.App()\` as the scope of the chart above.

\`\`\`ts
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface LoadBalancedWebService {
  readonly port: number;
  readonly image: string;
  readonly replicas: number;
}

export class LoadBalancedWebService extends constructs.Construct {
  constructor(scope: constructs.Construct, id: string, props: LoadBalancedWebService) {
    super(scope, id);

    const deployment = new kplus.Deployment(chart, 'Deployment', {
      spec: {
        replicas: props.replicas,
        podSpecTemplate: {
          containers: [ new kplus.Container({ image: props.image }) ]
        }
      },
    });

    deployment.expose({port: props.port, serviceType: kplus.ServiceType.LOAD_BALANCER})

  }
}
\`\`\`

##### Manually importing k8s specs and CRD's

If you find yourself unable to use \`cdk8s+\`, or just like to directly use the \`k8s\` native objects or CRD's, you can do so by manually importing them using the \`cdk8s-cli\`.

See [Importing kubernetes objects](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-cli#import) for detailed instructions.

## Patching Kubernetes Resources

The \`KubernetesPatch\` construct can be used to update existing kubernetes
resources. The following example can be used to patch the \`hello-kubernetes\`
deployment from the example above with 5 replicas.

\`\`\`ts
new KubernetesPatch(this, 'hello-kub-deployment-label', {
  cluster,
  resourceName: \\"deployment/hello-kubernetes\\",
  applyPatch: { spec: { replicas: 5 } },
  restorePatch: { spec: { replicas: 3 } }
})
\`\`\`

## Querying Kubernetes Resources

The \`KubernetesObjectValue\` construct can be used to query for information about kubernetes objects,
and use that as part of your CDK application.

For example, you can fetch the address of a [\`LoadBalancer\`](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer) type service:

\`\`\`ts
// query the load balancer address
const myServiceAddress = new KubernetesObjectValue(this, 'LoadBalancerAttribute', {
  cluster: cluster,
  objectType: 'service',
  objectName: 'my-service',
  jsonPath: '.status.loadBalancer.ingress[0].hostname', // https://kubernetes.io/docs/reference/kubectl/jsonpath/
});

// pass the address to a lambda function
const proxyFunction = new lambda.Function(this, 'ProxyFunction', {
  ...
  environment: {
    myServiceAddress: myServiceAddress.value
  },
})
\`\`\`

Specifically, since the above use-case is quite common, there is an easier way to access that information:

\`\`\`ts
const loadBalancerAddress = cluster.getServiceLoadBalancerAddress('my-service');
\`\`\`

## Using existing clusters

The Amazon EKS library allows defining Kubernetes resources such as [Kubernetes
manifests](#kubernetes-resources) and [Helm charts](#helm-charts) on clusters
that are not defined as part of your CDK app.

First, you'll need to \\"import\\" a cluster to your CDK app. To do that, use the
\`eks.Cluster.fromClusterAttributes()\` static method:

\`\`\`ts
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  clusterName: 'my-cluster-name',
  kubectlRoleArn: 'arn:aws:iam::1111111:role/iam-role-that-has-masters-access',
});
\`\`\`

Then, you can use \`addManifest\` or \`addHelmChart\` to define resources inside
your Kubernetes cluster. For example:

\`\`\`ts
cluster.addManifest('Test', {
  apiVersion: 'v1',
  kind: 'ConfigMap',
  metadata: {
    name: 'myconfigmap',
  },
  data: {
    Key: 'value',
    Another: '123454',
  },
});
\`\`\`

At the minimum, when importing clusters for \`kubectl\` management, you will need
to specify:

* \`clusterName\` - the name of the cluster.
* \`kubectlRoleArn\` - the ARN of an IAM role mapped to the \`system:masters\` RBAC
  role. If the cluster you are importing was created using the AWS CDK, the
  CloudFormation stack has an output that includes an IAM role that can be used.
  Otherwise, you can create an IAM role and map it to \`system:masters\` manually.
  The trust policy of this role should include the the
  \`arn:aws::iam::\${accountId}:root\` principal in order to allow the execution
  role of the kubectl resource to assume it.

If the cluster is configured with private-only or private and restricted public
Kubernetes [endpoint access](#endpoint-access), you must also specify:

* \`kubectlSecurityGroupId\` - the ID of an EC2 security group that is allowed
  connections to the cluster's control security group. For example, the EKS managed [cluster security group](#cluster-security-group).
* \`kubectlPrivateSubnetIds\` - a list of private VPC subnets IDs that will be used
  to access the Kubernetes endpoint.

## Known Issues and Limitations

* [One cluster per stack](https://github.com/aws/aws-cdk/issues/10073)
* [Service Account dependencies](https://github.com/aws/aws-cdk/issues/9910)
* [Support isolated VPCs](https://github.com/aws/aws-cdk/issues/12171)

# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### AwsAuth <a name=\\"AwsAuth\\" id=\\"monocdk.aws_eks.AwsAuth\\"></a>

Manages mapping between IAM users and roles to Kubernetes RBAC configuration.

> [https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.AwsAuth.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AwsAuth(Construct Scope, string Id, AwsAuthProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.AwsAuthProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.AwsAuth.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.AwsAuth.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.AwsAuth.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.AwsAuthProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.addAccount\\">AddAccount</a></code> | Additional AWS account to add to the aws-auth configmap. |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.addMastersRole\\">AddMastersRole</a></code> | Adds the specified IAM role to the \`system:masters\` RBAC group, which means that anyone that can assume it will be able to administer this Kubernetes system. |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.addRoleMapping\\">AddRoleMapping</a></code> | Adds a mapping between an IAM role to a Kubernetes user and groups. |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.addUserMapping\\">AddUserMapping</a></code> | Adds a mapping between an IAM user to a Kubernetes user and groups. |

---

##### \`AddAccount\` <a name=\\"AddAccount\\" id=\\"monocdk.aws_eks.AwsAuth.addAccount\\"></a>

\`\`\`csharp
private AddAccount(string AccountId)
\`\`\`

###### \`AccountId\`<sup>Required</sup> <a name=\\"AccountId\\" id=\\"monocdk.aws_eks.AwsAuth.addAccount.parameter.accountId\\"></a>

- *Type:* string

account number.

---

##### \`AddMastersRole\` <a name=\\"AddMastersRole\\" id=\\"monocdk.aws_eks.AwsAuth.addMastersRole\\"></a>

\`\`\`csharp
private AddMastersRole(IRole Role, string Username = null)
\`\`\`

###### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.AwsAuth.addMastersRole.parameter.role\\"></a>

- *Type:* Amazon.CDK.aws_iam.IRole

The IAM role to add.

---

###### \`Username\`<sup>Optional</sup> <a name=\\"Username\\" id=\\"monocdk.aws_eks.AwsAuth.addMastersRole.parameter.username\\"></a>

- *Type:* string

Optional user (defaults to the role ARN).

---

##### \`AddRoleMapping\` <a name=\\"AddRoleMapping\\" id=\\"monocdk.aws_eks.AwsAuth.addRoleMapping\\"></a>

\`\`\`csharp
private AddRoleMapping(IRole Role, AwsAuthMapping Mapping)
\`\`\`

###### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.AwsAuth.addRoleMapping.parameter.role\\"></a>

- *Type:* Amazon.CDK.aws_iam.IRole

The IAM role to map.

---

###### \`Mapping\`<sup>Required</sup> <a name=\\"Mapping\\" id=\\"monocdk.aws_eks.AwsAuth.addRoleMapping.parameter.mapping\\"></a>

- *Type:* Amazon.CDK.aws_eks.AwsAuthMapping

Mapping to k8s user name and groups.

---

##### \`AddUserMapping\` <a name=\\"AddUserMapping\\" id=\\"monocdk.aws_eks.AwsAuth.addUserMapping\\"></a>

\`\`\`csharp
private AddUserMapping(IUser User, AwsAuthMapping Mapping)
\`\`\`

###### \`User\`<sup>Required</sup> <a name=\\"User\\" id=\\"monocdk.aws_eks.AwsAuth.addUserMapping.parameter.user\\"></a>

- *Type:* Amazon.CDK.aws_iam.IUser

The IAM user to map.

---

###### \`Mapping\`<sup>Required</sup> <a name=\\"Mapping\\" id=\\"monocdk.aws_eks.AwsAuth.addUserMapping.parameter.mapping\\"></a>

- *Type:* Amazon.CDK.aws_eks.AwsAuthMapping

Mapping to k8s user name and groups.

---




### CfnAddon <a name=\\"CfnAddon\\" id=\\"monocdk.aws_eks.CfnAddon\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnAddon(Construct Scope, string Id, CfnAddonProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.CfnAddonProps</code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.CfnAddonProps

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"monocdk.aws_eks.CfnAddon.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"monocdk.aws_eks.CfnAddon.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::EKS::Addon.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.addonName\\">AddonName</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.addonVersion\\">AddonVersion</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.resolveConflicts\\">ResolveConflicts</a></code> | <code>string</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.serviceAccountRoleArn\\">ServiceAccountRoleArn</a></code> | <code>string</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"monocdk.aws_eks.CfnAddon.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.CfnAddon.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

##### \`AddonName\`<sup>Required</sup> <a name=\\"AddonName\\" id=\\"monocdk.aws_eks.CfnAddon.property.addonName\\"></a>

\`\`\`csharp
public string AddonName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.CfnAddon.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`AddonVersion\`<sup>Optional</sup> <a name=\\"AddonVersion\\" id=\\"monocdk.aws_eks.CfnAddon.property.addonVersion\\"></a>

\`\`\`csharp
public string AddonVersion { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`ResolveConflicts\`<sup>Optional</sup> <a name=\\"ResolveConflicts\\" id=\\"monocdk.aws_eks.CfnAddon.property.resolveConflicts\\"></a>

\`\`\`csharp
public string ResolveConflicts { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`ServiceAccountRoleArn\`<sup>Optional</sup> <a name=\\"ServiceAccountRoleArn\\" id=\\"monocdk.aws_eks.CfnAddon.property.serviceAccountRoleArn\\"></a>

\`\`\`csharp
public string ServiceAccountRoleArn { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"monocdk.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnCluster <a name=\\"CfnCluster\\" id=\\"monocdk.aws_eks.CfnCluster\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnCluster(Construct Scope, string Id, CfnClusterProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.CfnClusterProps</code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.CfnClusterProps

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"monocdk.aws_eks.CfnCluster.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"monocdk.aws_eks.CfnCluster.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\">AttrCertificateAuthorityData</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\">AttrClusterSecurityGroupId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\">AttrEncryptionConfigKeyArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrEndpoint\\">AttrEndpoint</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\">AttrOpenIdConnectIssuerUrl</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.resourcesVpcConfig\\">ResourcesVpcConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.roleArn\\">RoleArn</a></code> | <code>string</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.encryptionConfig\\">EncryptionConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\">KubernetesNetworkConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.name\\">Name</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.version\\">Version</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`AttrCertificateAuthorityData\`<sup>Required</sup> <a name=\\"AttrCertificateAuthorityData\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\"></a>

\`\`\`csharp
public string AttrCertificateAuthorityData { get; }
\`\`\`

- *Type:* string

---

##### \`AttrClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"AttrClusterSecurityGroupId\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\"></a>

\`\`\`csharp
public string AttrClusterSecurityGroupId { get; }
\`\`\`

- *Type:* string

---

##### \`AttrEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"AttrEncryptionConfigKeyArn\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\"></a>

\`\`\`csharp
public string AttrEncryptionConfigKeyArn { get; }
\`\`\`

- *Type:* string

---

##### \`AttrEndpoint\`<sup>Required</sup> <a name=\\"AttrEndpoint\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrEndpoint\\"></a>

\`\`\`csharp
public string AttrEndpoint { get; }
\`\`\`

- *Type:* string

---

##### \`AttrOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"AttrOpenIdConnectIssuerUrl\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\"></a>

\`\`\`csharp
public string AttrOpenIdConnectIssuerUrl { get; }
\`\`\`

- *Type:* string

---

##### \`ResourcesVpcConfig\`<sup>Required</sup> <a name=\\"ResourcesVpcConfig\\" id=\\"monocdk.aws_eks.CfnCluster.property.resourcesVpcConfig\\"></a>

\`\`\`csharp
public object ResourcesVpcConfig { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`RoleArn\`<sup>Required</sup> <a name=\\"RoleArn\\" id=\\"monocdk.aws_eks.CfnCluster.property.roleArn\\"></a>

\`\`\`csharp
public string RoleArn { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`EncryptionConfig\`<sup>Optional</sup> <a name=\\"EncryptionConfig\\" id=\\"monocdk.aws_eks.CfnCluster.property.encryptionConfig\\"></a>

\`\`\`csharp
public object EncryptionConfig { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`KubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"KubernetesNetworkConfig\\" id=\\"monocdk.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\"></a>

\`\`\`csharp
public object KubernetesNetworkConfig { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"monocdk.aws_eks.CfnCluster.property.name\\"></a>

\`\`\`csharp
public string Name { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.CfnCluster.property.version\\"></a>

\`\`\`csharp
public string Version { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"monocdk.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnFargateProfile <a name=\\"CfnFargateProfile\\" id=\\"monocdk.aws_eks.CfnFargateProfile\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnFargateProfile(Construct Scope, string Id, CfnFargateProfileProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.CfnFargateProfileProps</code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.CfnFargateProfileProps

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"monocdk.aws_eks.CfnFargateProfile.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"monocdk.aws_eks.CfnFargateProfile.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::EKS::FargateProfile.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\">PodExecutionRoleArn</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.selectors\\">Selectors</a></code> | <code>object</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.subnets\\">Subnets</a></code> | <code>string[]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`PodExecutionRoleArn\`<sup>Required</sup> <a name=\\"PodExecutionRoleArn\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\"></a>

\`\`\`csharp
public string PodExecutionRoleArn { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`Selectors\`<sup>Required</sup> <a name=\\"Selectors\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.selectors\\"></a>

\`\`\`csharp
public object Selectors { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`FargateProfileName\`<sup>Optional</sup> <a name=\\"FargateProfileName\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`Subnets\`<sup>Optional</sup> <a name=\\"Subnets\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.subnets\\"></a>

\`\`\`csharp
public string[] Subnets { get; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnNodegroup <a name=\\"CfnNodegroup\\" id=\\"monocdk.aws_eks.CfnNodegroup\\"></a>

- *Implements:* Amazon.CDK.IInspectable

A CloudFormation \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnNodegroup(Construct Scope, string Id, CfnNodegroupProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.scope\\">Scope</a></code> | <code>Amazon.CDK.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.CfnNodegroupProps</code> | - resource properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

scope in which this resource is defined.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.CfnNodegroupProps

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.inspect\\">Inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`Inspect\` <a name=\\"Inspect\\" id=\\"monocdk.aws_eks.CfnNodegroup.inspect\\"></a>

\`\`\`csharp
private Inspect(TreeInspector Inspector)
\`\`\`

###### \`Inspector\`<sup>Required</sup> <a name=\\"Inspector\\" id=\\"monocdk.aws_eks.CfnNodegroup.inspect.parameter.inspector\\"></a>

- *Type:* Amazon.CDK.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.attrArn\\">AttrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.attrClusterName\\">AttrClusterName</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.attrNodegroupName\\">AttrNodegroupName</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.labels\\">Labels</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.nodeRole\\">NodeRole</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.subnets\\">Subnets</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.amiType\\">AmiType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.capacityType\\">CapacityType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.diskSize\\">DiskSize</a></code> | <code>double</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\">ForceUpdateEnabled</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.instanceTypes\\">InstanceTypes</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.launchTemplate\\">LaunchTemplate</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.releaseVersion\\">ReleaseVersion</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.remoteAccess\\">RemoteAccess</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.scalingConfig\\">ScalingConfig</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.taints\\">Taints</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.version\\">Version</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`AttrArn\`<sup>Required</sup> <a name=\\"AttrArn\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.attrArn\\"></a>

\`\`\`csharp
public string AttrArn { get; }
\`\`\`

- *Type:* string

---

##### \`AttrClusterName\`<sup>Required</sup> <a name=\\"AttrClusterName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.attrClusterName\\"></a>

\`\`\`csharp
public string AttrClusterName { get; }
\`\`\`

- *Type:* string

---

##### \`AttrNodegroupName\`<sup>Required</sup> <a name=\\"AttrNodegroupName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.attrNodegroupName\\"></a>

\`\`\`csharp
public string AttrNodegroupName { get; }
\`\`\`

- *Type:* string

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`Labels\`<sup>Required</sup> <a name=\\"Labels\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.labels\\"></a>

\`\`\`csharp
public object Labels { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`NodeRole\`<sup>Required</sup> <a name=\\"NodeRole\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.nodeRole\\"></a>

\`\`\`csharp
public string NodeRole { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`Subnets\`<sup>Required</sup> <a name=\\"Subnets\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.subnets\\"></a>

\`\`\`csharp
public string[] Subnets { get; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`AmiType\`<sup>Optional</sup> <a name=\\"AmiType\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.amiType\\"></a>

\`\`\`csharp
public string AmiType { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`CapacityType\`<sup>Optional</sup> <a name=\\"CapacityType\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.capacityType\\"></a>

\`\`\`csharp
public string CapacityType { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`DiskSize\`<sup>Optional</sup> <a name=\\"DiskSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.diskSize\\"></a>

\`\`\`csharp
public double DiskSize { get; }
\`\`\`

- *Type:* double

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`ForceUpdateEnabled\`<sup>Optional</sup> <a name=\\"ForceUpdateEnabled\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\"></a>

\`\`\`csharp
public object ForceUpdateEnabled { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`InstanceTypes\`<sup>Optional</sup> <a name=\\"InstanceTypes\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.instanceTypes\\"></a>

\`\`\`csharp
public string[] InstanceTypes { get; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`LaunchTemplate\`<sup>Optional</sup> <a name=\\"LaunchTemplate\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.launchTemplate\\"></a>

\`\`\`csharp
public object LaunchTemplate { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`NodegroupName\`<sup>Optional</sup> <a name=\\"NodegroupName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`ReleaseVersion\`<sup>Optional</sup> <a name=\\"ReleaseVersion\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.releaseVersion\\"></a>

\`\`\`csharp
public string ReleaseVersion { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`RemoteAccess\`<sup>Optional</sup> <a name=\\"RemoteAccess\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.remoteAccess\\"></a>

\`\`\`csharp
public object RemoteAccess { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`ScalingConfig\`<sup>Optional</sup> <a name=\\"ScalingConfig\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.scalingConfig\\"></a>

\`\`\`csharp
public object ScalingConfig { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`Taints\`<sup>Optional</sup> <a name=\\"Taints\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.taints\\"></a>

\`\`\`csharp
public object Taints { get; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.version\\"></a>

\`\`\`csharp
public string Version { get; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\">CfnResourceTypeName</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CfnResourceTypeName\`<sup>Required</sup> <a name=\\"CfnResourceTypeName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`csharp
public string CfnResourceTypeName { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### Cluster <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.Cluster\\"></a>

- *Implements:* Amazon.CDK.aws_eks.ICluster

A Cluster represents a managed Kubernetes Service (EKS).

This is a fully managed cluster of API Servers (control-plane) The user is still required to create the worker nodes.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.Cluster.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new Cluster(Construct Scope, string Id, ClusterProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | a Construct, most likely a cdk.Stack created. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | the id of the Construct to create. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.ClusterProps</code> | properties in the IClusterProps interface. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

a Construct, most likely a cdk.Stack created.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.id\\"></a>

- *Type:* string

the id of the Construct to create.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.ClusterProps

properties in the IClusterProps interface.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addAutoScalingGroupCapacity\\">AddAutoScalingGroupCapacity</a></code> | Add nodes to this EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addCdk8sChart\\">AddCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addFargateProfile\\">AddFargateProfile</a></code> | Adds a Fargate profile to this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addHelmChart\\">AddHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addManifest\\">AddManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addNodegroupCapacity\\">AddNodegroupCapacity</a></code> | Add managed nodegroup to this Amazon EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addServiceAccount\\">AddServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |
| <code><a href=\\"#monocdk.aws_eks.Cluster.connectAutoScalingGroupCapacity\\">ConnectAutoScalingGroupCapacity</a></code> | Connect capacity in the form of an existing AutoScalingGroup to the EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.getServiceLoadBalancerAddress\\">GetServiceLoadBalancerAddress</a></code> | Fetch the load balancer address of a service of type 'LoadBalancer'. |

---

##### \`AddAutoScalingGroupCapacity\` <a name=\\"AddAutoScalingGroupCapacity\\" id=\\"monocdk.aws_eks.Cluster.addAutoScalingGroupCapacity\\"></a>

\`\`\`csharp
private AddAutoScalingGroupCapacity(string Id, AutoScalingGroupCapacityOptions Options)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.id\\"></a>

- *Type:* string

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.AutoScalingGroupCapacityOptions

---

##### \`AddCdk8sChart\` <a name=\\"AddCdk8sChart\\" id=\\"monocdk.aws_eks.Cluster.addCdk8sChart\\"></a>

\`\`\`csharp
private AddCdk8sChart(string Id, Construct Chart)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`Chart\`<sup>Required</sup> <a name=\\"Chart\\" id=\\"monocdk.aws_eks.Cluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* Constructs.Construct

the cdk8s chart.

---

##### \`AddFargateProfile\` <a name=\\"AddFargateProfile\\" id=\\"monocdk.aws_eks.Cluster.addFargateProfile\\"></a>

\`\`\`csharp
private AddFargateProfile(string Id, FargateProfileOptions Options)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.addFargateProfile.parameter.id\\"></a>

- *Type:* string

the id of this profile.

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.Cluster.addFargateProfile.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.FargateProfileOptions

profile options.

---

##### \`AddHelmChart\` <a name=\\"AddHelmChart\\" id=\\"monocdk.aws_eks.Cluster.addHelmChart\\"></a>

\`\`\`csharp
private AddHelmChart(string Id, HelmChartOptions Options)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.addHelmChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.Cluster.addHelmChart.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.HelmChartOptions

options of this chart.

---

##### \`AddManifest\` <a name=\\"AddManifest\\" id=\\"monocdk.aws_eks.Cluster.addManifest\\"></a>

\`\`\`csharp
private AddManifest(string Id, System.Collections.Generic.IDictionary<string, object> Manifest)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.addManifest.parameter.id\\"></a>

- *Type:* string

logical id of this manifest.

---

###### \`Manifest\`<sup>Required</sup> <a name=\\"Manifest\\" id=\\"monocdk.aws_eks.Cluster.addManifest.parameter.manifest\\"></a>

- *Type:* System.Collections.Generic.IDictionary<string, object>

a list of Kubernetes resource specifications.

---

##### \`AddNodegroupCapacity\` <a name=\\"AddNodegroupCapacity\\" id=\\"monocdk.aws_eks.Cluster.addNodegroupCapacity\\"></a>

\`\`\`csharp
private AddNodegroupCapacity(string Id, NodegroupOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.addNodegroupCapacity.parameter.id\\"></a>

- *Type:* string

The ID of the nodegroup.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.Cluster.addNodegroupCapacity.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.NodegroupOptions

options for creating a new nodegroup.

---

##### \`AddServiceAccount\` <a name=\\"AddServiceAccount\\" id=\\"monocdk.aws_eks.Cluster.addServiceAccount\\"></a>

\`\`\`csharp
private AddServiceAccount(string Id, ServiceAccountOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.addServiceAccount.parameter.id\\"></a>

- *Type:* string

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.Cluster.addServiceAccount.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.ServiceAccountOptions

---

##### \`ConnectAutoScalingGroupCapacity\` <a name=\\"ConnectAutoScalingGroupCapacity\\" id=\\"monocdk.aws_eks.Cluster.connectAutoScalingGroupCapacity\\"></a>

\`\`\`csharp
private ConnectAutoScalingGroupCapacity(AutoScalingGroup AutoScalingGroup, AutoScalingGroupOptions Options)
\`\`\`

###### \`AutoScalingGroup\`<sup>Required</sup> <a name=\\"AutoScalingGroup\\" id=\\"monocdk.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.autoScalingGroup\\"></a>

- *Type:* Amazon.CDK.aws_autoscaling.AutoScalingGroup

[disable-awslint:ref-via-interface].

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.AutoScalingGroupOptions

options for adding auto scaling groups, like customizing the bootstrap script.

---

##### \`GetServiceLoadBalancerAddress\` <a name=\\"GetServiceLoadBalancerAddress\\" id=\\"monocdk.aws_eks.Cluster.getServiceLoadBalancerAddress\\"></a>

\`\`\`csharp
private GetServiceLoadBalancerAddress(string ServiceName, ServiceLoadBalancerAddressOptions Options = null)
\`\`\`

###### \`ServiceName\`<sup>Required</sup> <a name=\\"ServiceName\\" id=\\"monocdk.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.serviceName\\"></a>

- *Type:* string

The name of the service.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.ServiceLoadBalancerAddressOptions

Additional operation options.

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Cluster.fromClusterAttributes\\">FromClusterAttributes</a></code> | Import an existing cluster. |

---

##### \`FromClusterAttributes\` <a name=\\"FromClusterAttributes\\" id=\\"monocdk.aws_eks.Cluster.fromClusterAttributes\\"></a>

\`\`\`csharp
using Amazon.CDK;

Cluster.FromClusterAttributes(Construct Scope, string Id, ClusterAttributes Attrs);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.Cluster.fromClusterAttributes.parameter.scope\\"></a>

- *Type:* Constructs.Construct

the construct scope, in most cases 'this'.

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Cluster.fromClusterAttributes.parameter.id\\"></a>

- *Type:* string

the id or name to import as.

---

###### \`Attrs\`<sup>Required</sup> <a name=\\"Attrs\\" id=\\"monocdk.aws_eks.Cluster.fromClusterAttributes.parameter.attrs\\"></a>

- *Type:* Amazon.CDK.aws_eks.ClusterAttributes

the cluster properties to use for importing information.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.adminRole\\">AdminRole</a></code> | <code>Amazon.CDK.aws_iam.Role</code> | An IAM role with administrative permissions to create or update the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.awsAuth\\">AwsAuth</a></code> | <code>Amazon.CDK.aws_eks.AwsAuth</code> | Lazily creates the AwsAuth resource, which manages AWS authentication mapping. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterArn\\">ClusterArn</a></code> | <code>string</code> | The AWS generated ARN for the Cluster resource. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterCertificateAuthorityData\\">ClusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\">ClusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterEndpoint\\">ClusterEndpoint</a></code> | <code>string</code> | The endpoint URL for the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterName\\">ClusterName</a></code> | <code>string</code> | The Name of the created EKS Cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\">ClusterOpenIdConnectIssuer</a></code> | <code>string</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\">ClusterOpenIdConnectIssuerUrl</a></code> | <code>string</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer url. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterSecurityGroup\\">ClusterSecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterSecurityGroupId\\">ClusterSecurityGroupId</a></code> | <code>string</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.connections\\">Connections</a></code> | <code>Amazon.CDK.aws_ec2.Connections</code> | Manages connection rules (Security Group Rules) for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.openIdConnectProvider\\">OpenIdConnectProvider</a></code> | <code>Amazon.CDK.aws_iam.IOpenIdConnectProvider</code> | An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.prune\\">Prune</a></code> | <code>bool</code> | Determines if Kubernetes resources can be pruned automatically. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | IAM role assumed by the EKS Control Plane. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.defaultCapacity\\">DefaultCapacity</a></code> | <code>Amazon.CDK.aws_autoscaling.AutoScalingGroup</code> | The auto scaling group that hosts the default capacity for this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.defaultNodegroup\\">DefaultNodegroup</a></code> | <code>Amazon.CDK.aws_eks.Nodegroup</code> | The node group that hosts the default capacity for this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | The amount of memory allocated to the kubectl provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlPrivateSubnets\\">KubectlPrivateSubnets</a></code> | <code>Amazon.CDK.aws_ec2.ISubnet[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlRole\\">KubectlRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlSecurityGroup\\">KubectlSecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`AdminRole\`<sup>Required</sup> <a name=\\"AdminRole\\" id=\\"monocdk.aws_eks.Cluster.property.adminRole\\"></a>

\`\`\`csharp
public Role AdminRole { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.Role

An IAM role with administrative permissions to create or update the cluster.

This role also has \`systems:master\` permissions.

---

##### \`AwsAuth\`<sup>Required</sup> <a name=\\"AwsAuth\\" id=\\"monocdk.aws_eks.Cluster.property.awsAuth\\"></a>

\`\`\`csharp
public AwsAuth AwsAuth { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.AwsAuth

Lazily creates the AwsAuth resource, which manages AWS authentication mapping.

---

##### \`ClusterArn\`<sup>Required</sup> <a name=\\"ClusterArn\\" id=\\"monocdk.aws_eks.Cluster.property.clusterArn\\"></a>

\`\`\`csharp
public string ClusterArn { get; }
\`\`\`

- *Type:* string

The AWS generated ARN for the Cluster resource.

---

##### \`ClusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"ClusterCertificateAuthorityData\\" id=\\"monocdk.aws_eks.Cluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`csharp
public string ClusterCertificateAuthorityData { get; }
\`\`\`

- *Type:* string

The certificate-authority-data for your cluster.

---

##### \`ClusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"ClusterEncryptionConfigKeyArn\\" id=\\"monocdk.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`csharp
public string ClusterEncryptionConfigKeyArn { get; }
\`\`\`

- *Type:* string

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`ClusterEndpoint\`<sup>Required</sup> <a name=\\"ClusterEndpoint\\" id=\\"monocdk.aws_eks.Cluster.property.clusterEndpoint\\"></a>

\`\`\`csharp
public string ClusterEndpoint { get; }
\`\`\`

- *Type:* string

The endpoint URL for the Cluster.

This is the URL inside the kubeconfig file to use with kubectl

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.Cluster.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

The Name of the created EKS Cluster.

---

##### \`ClusterOpenIdConnectIssuer\`<sup>Required</sup> <a name=\\"ClusterOpenIdConnectIssuer\\" id=\\"monocdk.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\"></a>

\`\`\`csharp
public string ClusterOpenIdConnectIssuer { get; }
\`\`\`

- *Type:* string

If this cluster is kubectl-enabled, returns the OpenID Connect issuer.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`ClusterOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"ClusterOpenIdConnectIssuerUrl\\" id=\\"monocdk.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\"></a>

\`\`\`csharp
public string ClusterOpenIdConnectIssuerUrl { get; }
\`\`\`

- *Type:* string

If this cluster is kubectl-enabled, returns the OpenID Connect issuer url.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`ClusterSecurityGroup\`<sup>Required</sup> <a name=\\"ClusterSecurityGroup\\" id=\\"monocdk.aws_eks.Cluster.property.clusterSecurityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup ClusterSecurityGroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`ClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"ClusterSecurityGroupId\\" id=\\"monocdk.aws_eks.Cluster.property.clusterSecurityGroupId\\"></a>

\`\`\`csharp
public string ClusterSecurityGroupId { get; }
\`\`\`

- *Type:* string

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`Connections\`<sup>Required</sup> <a name=\\"Connections\\" id=\\"monocdk.aws_eks.Cluster.property.connections\\"></a>

\`\`\`csharp
public Connections Connections { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.Connections

Manages connection rules (Security Group Rules) for the cluster.

---

##### \`OpenIdConnectProvider\`<sup>Required</sup> <a name=\\"OpenIdConnectProvider\\" id=\\"monocdk.aws_eks.Cluster.property.openIdConnectProvider\\"></a>

\`\`\`csharp
public IOpenIdConnectProvider OpenIdConnectProvider { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IOpenIdConnectProvider

An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM.

A provider will only be defined if this property is accessed (lazy initialization).

---

##### \`Prune\`<sup>Required</sup> <a name=\\"Prune\\" id=\\"monocdk.aws_eks.Cluster.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; }
\`\`\`

- *Type:* bool

Determines if Kubernetes resources can be pruned automatically.

---

##### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.Cluster.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

IAM role assumed by the EKS Control Plane.

---

##### \`Vpc\`<sup>Required</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.Cluster.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`DefaultCapacity\`<sup>Optional</sup> <a name=\\"DefaultCapacity\\" id=\\"monocdk.aws_eks.Cluster.property.defaultCapacity\\"></a>

\`\`\`csharp
public AutoScalingGroup DefaultCapacity { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.AutoScalingGroup

The auto scaling group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is not \`EC2\` or \`defaultCapacityType\` is \`EC2\` but default capacity is set to 0.

---

##### \`DefaultNodegroup\`<sup>Optional</sup> <a name=\\"DefaultNodegroup\\" id=\\"monocdk.aws_eks.Cluster.property.defaultNodegroup\\"></a>

\`\`\`csharp
public Nodegroup DefaultNodegroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Nodegroup

The node group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is \`EC2\` or \`defaultCapacityType\` is \`NODEGROUP\` but default capacity is set to 0.

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion

The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI.

If undefined, a SAR app that contains this layer will be used.

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; }
\`\`\`

- *Type:* Amazon.CDK.Size

The amount of memory allocated to the kubectl provider's lambda function.

---

##### \`KubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"KubectlPrivateSubnets\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`csharp
public ISubnet[] KubectlPrivateSubnets { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISubnet[]
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

Subnets to host the \`kubectl\` compute resources.

---

##### \`KubectlRole\`<sup>Optional</sup> <a name=\\"KubectlRole\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlRole\\"></a>

\`\`\`csharp
public IRole KubectlRole { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`KubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"KubectlSecurityGroup\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlSecurityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup KubectlSecurityGroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

A security group to use for \`kubectl\` execution.

---


### FargateCluster <a name=\\"FargateCluster\\" id=\\"monocdk.aws_eks.FargateCluster\\"></a>

Defines an EKS cluster that runs entirely on AWS Fargate.

The cluster is created with a default Fargate Profile that matches the \\"default\\" and \\"kube-system\\" namespaces. You can add additional profiles using \`addFargateProfile\`.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateCluster(Construct Scope, string Id, FargateClusterProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.FargateClusterProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.FargateClusterProps

---





### FargateProfile <a name=\\"FargateProfile\\" id=\\"monocdk.aws_eks.FargateProfile\\"></a>

- *Implements:* Amazon.CDK.ITaggable

Fargate profiles allows an administrator to declare which pods run on Fargate.

This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and optional labels. You must define a namespace for every selector. The label field consists of multiple optional key-value pairs. Pods that match a selector (by matching a namespace for the selector and all of the labels specified in the selector) are scheduled on Fargate. If a namespace selector is defined without any labels, Amazon EKS will attempt to schedule all pods that run in that namespace onto Fargate using the profile. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is scheduled on Fargate.  If a pod matches multiple Fargate profiles, Amazon EKS picks one of the matches at random. In this case, you can specify which profile a pod should use by adding the following Kubernetes label to the pod specification: eks.amazonaws.com/fargate-profile: profile_name. However, the pod must still match a selector in that profile in order to be scheduled onto Fargate.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateProfile(Construct Scope, string Id, FargateProfileProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.FargateProfileProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.FargateProfileProps

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.property.fargateProfileArn\\">FargateProfileArn</a></code> | <code>string</code> | The full Amazon Resource Name (ARN) of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.property.podExecutionRole\\">PodExecutionRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.property.tags\\">Tags</a></code> | <code>Amazon.CDK.TagManager</code> | Resource tags. |

---

##### \`FargateProfileArn\`<sup>Required</sup> <a name=\\"FargateProfileArn\\" id=\\"monocdk.aws_eks.FargateProfile.property.fargateProfileArn\\"></a>

\`\`\`csharp
public string FargateProfileArn { get; }
\`\`\`

- *Type:* string

The full Amazon Resource Name (ARN) of the Fargate profile.

---

##### \`FargateProfileName\`<sup>Required</sup> <a name=\\"FargateProfileName\\" id=\\"monocdk.aws_eks.FargateProfile.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; }
\`\`\`

- *Type:* string

The name of the Fargate profile.

---

##### \`PodExecutionRole\`<sup>Required</sup> <a name=\\"PodExecutionRole\\" id=\\"monocdk.aws_eks.FargateProfile.property.podExecutionRole\\"></a>

\`\`\`csharp
public IRole PodExecutionRole { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

---

##### \`Tags\`<sup>Required</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.FargateProfile.property.tags\\"></a>

\`\`\`csharp
public TagManager Tags { get; }
\`\`\`

- *Type:* Amazon.CDK.TagManager

Resource tags.

---


### HelmChart <a name=\\"HelmChart\\" id=\\"monocdk.aws_eks.HelmChart\\"></a>

Represents a helm chart within the Kubernetes system.

Applies/deletes the resources using \`kubectl\` in sync with the resource.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.HelmChart.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new HelmChart(Construct Scope, string Id, HelmChartProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.HelmChartProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.HelmChartProps

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.property.RESOURCE_TYPE\\">ResourceType</a></code> | <code>string</code> | The CloudFormation resource type. |

---

##### \`ResourceType\`<sup>Required</sup> <a name=\\"ResourceType\\" id=\\"monocdk.aws_eks.HelmChart.property.RESOURCE_TYPE\\"></a>

\`\`\`csharp
public string ResourceType { get; }
\`\`\`

- *Type:* string

The CloudFormation resource type.

---

### KubernetesManifest <a name=\\"KubernetesManifest\\" id=\\"monocdk.aws_eks.KubernetesManifest\\"></a>

Represents a manifest within the Kubernetes system.

Alternatively, you can use \`cluster.addManifest(resource[, resource, ...])\` to define resources on this cluster.  Applies/deletes the manifest using \`kubectl\`.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesManifest(Construct Scope, string Id, KubernetesManifestProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.KubernetesManifestProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.KubernetesManifestProps

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\">ResourceType</a></code> | <code>string</code> | The CloudFormation reosurce type. |

---

##### \`ResourceType\`<sup>Required</sup> <a name=\\"ResourceType\\" id=\\"monocdk.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\"></a>

\`\`\`csharp
public string ResourceType { get; }
\`\`\`

- *Type:* string

The CloudFormation reosurce type.

---

### KubernetesObjectValue <a name=\\"KubernetesObjectValue\\" id=\\"monocdk.aws_eks.KubernetesObjectValue\\"></a>

Represents a value of a specific object deployed in the cluster.

Use this to fetch any information available by the \`kubectl get\` command.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesObjectValue(Construct Scope, string Id, KubernetesObjectValueProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.KubernetesObjectValueProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.KubernetesObjectValueProps

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.property.value\\">Value</a></code> | <code>string</code> | The value as a string token. |

---

##### \`Value\`<sup>Required</sup> <a name=\\"Value\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.property.value\\"></a>

\`\`\`csharp
public string Value { get; }
\`\`\`

- *Type:* string

The value as a string token.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\">ResourceType</a></code> | <code>string</code> | The CloudFormation reosurce type. |

---

##### \`ResourceType\`<sup>Required</sup> <a name=\\"ResourceType\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\"></a>

\`\`\`csharp
public string ResourceType { get; }
\`\`\`

- *Type:* string

The CloudFormation reosurce type.

---

### KubernetesPatch <a name=\\"KubernetesPatch\\" id=\\"monocdk.aws_eks.KubernetesPatch\\"></a>

A CloudFormation resource which applies/restores a JSON patch into a Kubernetes resource.

> [https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/](https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesPatch(Construct Scope, string Id, KubernetesPatchProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.KubernetesPatchProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.KubernetesPatchProps

---





### Nodegroup <a name=\\"Nodegroup\\" id=\\"monocdk.aws_eks.Nodegroup\\"></a>

- *Implements:* Amazon.CDK.aws_eks.INodegroup

The Nodegroup resource class.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new Nodegroup(Construct Scope, string Id, NodegroupProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.NodegroupProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.NodegroupProps

---


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.fromNodegroupName\\">FromNodegroupName</a></code> | Import the Nodegroup from attributes. |

---

##### \`FromNodegroupName\` <a name=\\"FromNodegroupName\\" id=\\"monocdk.aws_eks.Nodegroup.fromNodegroupName\\"></a>

\`\`\`csharp
using Amazon.CDK;

Nodegroup.FromNodegroupName(Construct Scope, string Id, string NodegroupName);
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.Nodegroup.fromNodegroupName.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.Nodegroup.fromNodegroupName.parameter.id\\"></a>

- *Type:* string

---

###### \`NodegroupName\`<sup>Required</sup> <a name=\\"NodegroupName\\" id=\\"monocdk.aws_eks.Nodegroup.fromNodegroupName.parameter.nodegroupName\\"></a>

- *Type:* string

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | the Amazon EKS cluster resource. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.property.nodegroupArn\\">NodegroupArn</a></code> | <code>string</code> | ARN of the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | Nodegroup name. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | IAM role of the instance profile for the nodegroup. |

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.Nodegroup.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

the Amazon EKS cluster resource.

---

##### \`NodegroupArn\`<sup>Required</sup> <a name=\\"NodegroupArn\\" id=\\"monocdk.aws_eks.Nodegroup.property.nodegroupArn\\"></a>

\`\`\`csharp
public string NodegroupArn { get; }
\`\`\`

- *Type:* string

ARN of the nodegroup.

---

##### \`NodegroupName\`<sup>Required</sup> <a name=\\"NodegroupName\\" id=\\"monocdk.aws_eks.Nodegroup.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; }
\`\`\`

- *Type:* string

Nodegroup name.

---

##### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.Nodegroup.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

IAM role of the instance profile for the nodegroup.

---


### OpenIdConnectProvider <a name=\\"OpenIdConnectProvider\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider\\"></a>

IAM OIDC identity providers are entities in IAM that describe an external identity provider (IdP) service that supports the OpenID Connect (OIDC) standard, such as Google or Salesforce.

You use an IAM OIDC identity provider when you want to establish trust between an OIDC-compatible IdP and your AWS account.  This implementation has default values for thumbprints and clientIds props that will be compatible with the eks cluster

> [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new OpenIdConnectProvider(Construct Scope, string Id, OpenIdConnectProviderProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | The definition scope. |
| <code><a href=\\"#monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | Construct ID. |
| <code><a href=\\"#monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.OpenIdConnectProviderProps</code> | Initialization properties. |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

The definition scope.

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\"></a>

- *Type:* string

Construct ID.

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.OpenIdConnectProviderProps

Initialization properties.

---





### ServiceAccount <a name=\\"ServiceAccount\\" id=\\"monocdk.aws_eks.ServiceAccount\\"></a>

- *Implements:* Amazon.CDK.aws_iam.IPrincipal

Service Account.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ServiceAccount(Construct Scope, string Id, ServiceAccountProps Props);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.Initializer.parameter.scope\\">Scope</a></code> | <code>Constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.Initializer.parameter.id\\">Id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.ServiceAccountProps</code> | *No description.* |

---

##### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer.parameter.scope\\"></a>

- *Type:* Constructs.Construct

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`Props\`<sup>Required</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.ServiceAccountProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.addToPolicy\\">AddToPolicy</a></code> | Add to the policy of this principal. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.addToPrincipalPolicy\\">AddToPrincipalPolicy</a></code> | Add to the policy of this principal. |

---

##### ~~\`AddToPolicy\`~~ <a name=\\"AddToPolicy\\" id=\\"monocdk.aws_eks.ServiceAccount.addToPolicy\\"></a>

\`\`\`csharp
private AddToPolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"monocdk.aws_eks.ServiceAccount.addToPolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.aws_iam.PolicyStatement

---

##### \`AddToPrincipalPolicy\` <a name=\\"AddToPrincipalPolicy\\" id=\\"monocdk.aws_eks.ServiceAccount.addToPrincipalPolicy\\"></a>

\`\`\`csharp
private AddToPrincipalPolicy(PolicyStatement Statement)
\`\`\`

###### \`Statement\`<sup>Required</sup> <a name=\\"Statement\\" id=\\"monocdk.aws_eks.ServiceAccount.addToPrincipalPolicy.parameter.statement\\"></a>

- *Type:* Amazon.CDK.aws_iam.PolicyStatement

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.assumeRoleAction\\">AssumeRoleAction</a></code> | <code>string</code> | When this Principal is used in an AssumeRole policy, the action to use. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.grantPrincipal\\">GrantPrincipal</a></code> | <code>Amazon.CDK.aws_iam.IPrincipal</code> | The principal to grant permissions to. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.policyFragment\\">PolicyFragment</a></code> | <code>Amazon.CDK.aws_iam.PrincipalPolicyFragment</code> | Return the policy fragment that identifies this principal in a Policy. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The role which is linked to the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.serviceAccountName\\">ServiceAccountName</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.serviceAccountNamespace\\">ServiceAccountNamespace</a></code> | <code>string</code> | The namespace where the service account is located in. |

---

##### \`AssumeRoleAction\`<sup>Required</sup> <a name=\\"AssumeRoleAction\\" id=\\"monocdk.aws_eks.ServiceAccount.property.assumeRoleAction\\"></a>

\`\`\`csharp
public string AssumeRoleAction { get; }
\`\`\`

- *Type:* string

When this Principal is used in an AssumeRole policy, the action to use.

---

##### \`GrantPrincipal\`<sup>Required</sup> <a name=\\"GrantPrincipal\\" id=\\"monocdk.aws_eks.ServiceAccount.property.grantPrincipal\\"></a>

\`\`\`csharp
public IPrincipal GrantPrincipal { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IPrincipal

The principal to grant permissions to.

---

##### \`PolicyFragment\`<sup>Required</sup> <a name=\\"PolicyFragment\\" id=\\"monocdk.aws_eks.ServiceAccount.property.policyFragment\\"></a>

\`\`\`csharp
public PrincipalPolicyFragment PolicyFragment { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.PrincipalPolicyFragment

Return the policy fragment that identifies this principal in a Policy.

---

##### \`Role\`<sup>Required</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.ServiceAccount.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

The role which is linked to the service account.

---

##### \`ServiceAccountName\`<sup>Required</sup> <a name=\\"ServiceAccountName\\" id=\\"monocdk.aws_eks.ServiceAccount.property.serviceAccountName\\"></a>

\`\`\`csharp
public string ServiceAccountName { get; }
\`\`\`

- *Type:* string

The name of the service account.

---

##### \`ServiceAccountNamespace\`<sup>Required</sup> <a name=\\"ServiceAccountNamespace\\" id=\\"monocdk.aws_eks.ServiceAccount.property.serviceAccountNamespace\\"></a>

\`\`\`csharp
public string ServiceAccountNamespace { get; }
\`\`\`

- *Type:* string

The namespace where the service account is located in.

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### AutoScalingGroupCapacityOptions <a name=\\"AutoScalingGroupCapacityOptions\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions\\"></a>

Options for adding worker nodes.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AutoScalingGroupCapacityOptions {
    bool AllowAllOutbound = null,
    bool AssociatePublicIpAddress = null,
    string AutoScalingGroupName = null,
    BlockDevice[] BlockDevices = null,
    Duration Cooldown = null,
    double DesiredCapacity = null,
    GroupMetrics[] GroupMetrics = null,
    HealthCheck HealthCheck = null,
    bool IgnoreUnmodifiedSizeProperties = null,
    Monitoring InstanceMonitoring = null,
    string KeyName = null,
    double MaxCapacity = null,
    Duration MaxInstanceLifetime = null,
    double MinCapacity = null,
    bool NewInstancesProtectedFromScaleIn = null,
    NotificationConfiguration[] Notifications = null,
    ITopic NotificationsTopic = null,
    double ReplacingUpdateMinSuccessfulInstancesPercent = null,
    double ResourceSignalCount = null,
    Duration ResourceSignalTimeout = null,
    RollingUpdateConfiguration RollingUpdateConfiguration = null,
    Signals Signals = null,
    string SpotPrice = null,
    UpdatePolicy UpdatePolicy = null,
    UpdateType UpdateType = null,
    SubnetSelection VpcSubnets = null,
    InstanceType InstanceType,
    bool BootstrapEnabled = null,
    BootstrapOptions BootstrapOptions = null,
    MachineImageType MachineImageType = null,
    bool MapRole = null,
    bool SpotInterruptHandler = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\">AllowAllOutbound</a></code> | <code>bool</code> | Whether the instances can initiate connections to anywhere by default. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\">AssociatePublicIpAddress</a></code> | <code>bool</code> | Whether instances in the Auto Scaling Group should have public IP addresses associated with them. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\">AutoScalingGroupName</a></code> | <code>string</code> | The name of the Auto Scaling group. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\">BlockDevices</a></code> | <code>Amazon.CDK.aws_autoscaling.BlockDevice[]</code> | Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\">Cooldown</a></code> | <code>Amazon.CDK.Duration</code> | Default scaling cooldown for this AutoScalingGroup. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\">DesiredCapacity</a></code> | <code>double</code> | Initial amount of instances in the fleet. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\">GroupMetrics</a></code> | <code>Amazon.CDK.aws_autoscaling.GroupMetrics[]</code> | Enable monitoring for group metrics, these metrics describe the group rather than any of its instances. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\">HealthCheck</a></code> | <code>Amazon.CDK.aws_autoscaling.HealthCheck</code> | Configuration for health checks. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\">IgnoreUnmodifiedSizeProperties</a></code> | <code>bool</code> | If the ASG has scheduled actions, don't reset unchanged group sizes. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\">InstanceMonitoring</a></code> | <code>Amazon.CDK.aws_autoscaling.Monitoring</code> | Controls whether instances in this group are launched with detailed or basic monitoring. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\">KeyName</a></code> | <code>string</code> | Name of SSH keypair to grant access to instances. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\">MaxCapacity</a></code> | <code>double</code> | Maximum number of instances in the fleet. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\">MaxInstanceLifetime</a></code> | <code>Amazon.CDK.Duration</code> | The maximum amount of time that an instance can be in service. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\">MinCapacity</a></code> | <code>double</code> | Minimum number of instances in the fleet. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\">NewInstancesProtectedFromScaleIn</a></code> | <code>bool</code> | Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\">Notifications</a></code> | <code>Amazon.CDK.aws_autoscaling.NotificationConfiguration[]</code> | Configure autoscaling group to send notifications about fleet changes to an SNS topic(s). |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.notificationsTopic\\">NotificationsTopic</a></code> | <code>Amazon.CDK.aws_sns.ITopic</code> | SNS topic to send notifications about fleet changes. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.replacingUpdateMinSuccessfulInstancesPercent\\">ReplacingUpdateMinSuccessfulInstancesPercent</a></code> | <code>double</code> | Configuration for replacing updates. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.resourceSignalCount\\">ResourceSignalCount</a></code> | <code>double</code> | How many ResourceSignal calls CloudFormation expects before the resource is considered created. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.resourceSignalTimeout\\">ResourceSignalTimeout</a></code> | <code>Amazon.CDK.Duration</code> | The length of time to wait for the resourceSignalCount. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.rollingUpdateConfiguration\\">RollingUpdateConfiguration</a></code> | <code>Amazon.CDK.aws_autoscaling.RollingUpdateConfiguration</code> | Configuration for rolling updates. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\">Signals</a></code> | <code>Amazon.CDK.aws_autoscaling.Signals</code> | Configure waiting for signals during deployment. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\">SpotPrice</a></code> | <code>string</code> | The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\">UpdatePolicy</a></code> | <code>Amazon.CDK.aws_autoscaling.UpdatePolicy</code> | What to do when an AutoScalingGroup's instance configuration is changed. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.updateType\\">UpdateType</a></code> | <code>Amazon.CDK.aws_autoscaling.UpdateType</code> | What to do when an AutoScalingGroup's instance configuration is changed. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | Where to place instances within the VPC. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\">InstanceType</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType</code> | Instance type of the instances to start. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\">BootstrapEnabled</a></code> | <code>bool</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\">BootstrapOptions</a></code> | <code>Amazon.CDK.aws_eks.BootstrapOptions</code> | EKS node bootstrapping options. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\">MachineImageType</a></code> | <code>Amazon.CDK.aws_eks.MachineImageType</code> | Machine image type. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\">MapRole</a></code> | <code>bool</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\">SpotInterruptHandler</a></code> | <code>bool</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`AllowAllOutbound\`<sup>Optional</sup> <a name=\\"AllowAllOutbound\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\"></a>

\`\`\`csharp
public bool AllowAllOutbound { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Whether the instances can initiate connections to anywhere by default.

---

##### \`AssociatePublicIpAddress\`<sup>Optional</sup> <a name=\\"AssociatePublicIpAddress\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\"></a>

\`\`\`csharp
public bool AssociatePublicIpAddress { get; set; }
\`\`\`

- *Type:* bool
- *Default:* Use subnet setting.

Whether instances in the Auto Scaling Group should have public IP addresses associated with them.

---

##### \`AutoScalingGroupName\`<sup>Optional</sup> <a name=\\"AutoScalingGroupName\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\"></a>

\`\`\`csharp
public string AutoScalingGroupName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Auto generated by CloudFormation

The name of the Auto Scaling group.

This name must be unique per Region per account.

---

##### \`BlockDevices\`<sup>Optional</sup> <a name=\\"BlockDevices\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\"></a>

\`\`\`csharp
public BlockDevice[] BlockDevices { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.BlockDevice[]
- *Default:* Uses the block device mapping of the AMI

Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.

Each instance that is launched has an associated root device volume, either an Amazon EBS volume or an instance store volume. You can use block device mappings to specify additional EBS volumes or instance store volumes to attach to an instance when it is launched.

> [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)

---

##### \`Cooldown\`<sup>Optional</sup> <a name=\\"Cooldown\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\"></a>

\`\`\`csharp
public Duration Cooldown { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Default scaling cooldown for this AutoScalingGroup.

---

##### \`DesiredCapacity\`<sup>Optional</sup> <a name=\\"DesiredCapacity\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\"></a>

\`\`\`csharp
public double DesiredCapacity { get; set; }
\`\`\`

- *Type:* double
- *Default:* minCapacity, and leave unchanged during deployment

Initial amount of instances in the fleet.

If this is set to a number, every deployment will reset the amount of instances to this number. It is recommended to leave this value blank.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity)

---

##### \`GroupMetrics\`<sup>Optional</sup> <a name=\\"GroupMetrics\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\"></a>

\`\`\`csharp
public GroupMetrics[] GroupMetrics { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.GroupMetrics[]
- *Default:* no group metrics will be reported

Enable monitoring for group metrics, these metrics describe the group rather than any of its instances.

To report all group metrics use \`GroupMetrics.all()\` Group metrics are reported in a granularity of 1 minute at no additional charge.

---

##### \`HealthCheck\`<sup>Optional</sup> <a name=\\"HealthCheck\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\"></a>

\`\`\`csharp
public HealthCheck HealthCheck { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.HealthCheck
- *Default:* HealthCheck.ec2 with no grace period

Configuration for health checks.

---

##### \`IgnoreUnmodifiedSizeProperties\`<sup>Optional</sup> <a name=\\"IgnoreUnmodifiedSizeProperties\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\"></a>

\`\`\`csharp
public bool IgnoreUnmodifiedSizeProperties { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

If the ASG has scheduled actions, don't reset unchanged group sizes.

Only used if the ASG has scheduled actions (which may scale your ASG up or down regardless of cdk deployments). If true, the size of the group will only be reset if it has been changed in the CDK app. If false, the sizes will always be changed back to what they were in the CDK app on deployment.

---

##### \`InstanceMonitoring\`<sup>Optional</sup> <a name=\\"InstanceMonitoring\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\"></a>

\`\`\`csharp
public Monitoring InstanceMonitoring { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.Monitoring
- *Default:* Monitoring.DETAILED

Controls whether instances in this group are launched with detailed or basic monitoring.

When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.

> [https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics](https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics)

---

##### \`KeyName\`<sup>Optional</sup> <a name=\\"KeyName\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\"></a>

\`\`\`csharp
public string KeyName { get; set; }
\`\`\`

- *Type:* string
- *Default:* No SSH access will be possible.

Name of SSH keypair to grant access to instances.

---

##### \`MaxCapacity\`<sup>Optional</sup> <a name=\\"MaxCapacity\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\"></a>

\`\`\`csharp
public double MaxCapacity { get; set; }
\`\`\`

- *Type:* double
- *Default:* desiredCapacity

Maximum number of instances in the fleet.

---

##### \`MaxInstanceLifetime\`<sup>Optional</sup> <a name=\\"MaxInstanceLifetime\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\"></a>

\`\`\`csharp
public Duration MaxInstanceLifetime { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* none

The maximum amount of time that an instance can be in service.

The maximum duration applies to all current and future instances in the group. As an instance approaches its maximum duration, it is terminated and replaced, and cannot be used again.  You must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, leave this property undefined.

> [https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)

---

##### \`MinCapacity\`<sup>Optional</sup> <a name=\\"MinCapacity\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\"></a>

\`\`\`csharp
public double MinCapacity { get; set; }
\`\`\`

- *Type:* double
- *Default:* 1

Minimum number of instances in the fleet.

---

##### \`NewInstancesProtectedFromScaleIn\`<sup>Optional</sup> <a name=\\"NewInstancesProtectedFromScaleIn\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\"></a>

\`\`\`csharp
public bool NewInstancesProtectedFromScaleIn { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.

By default, Auto Scaling can terminate an instance at any time after launch when scaling in an Auto Scaling Group, subject to the group's termination policy. However, you may wish to protect newly-launched instances from being scaled in if they are going to run critical applications that should not be prematurely terminated.  This flag must be enabled if the Auto Scaling Group will be associated with an ECS Capacity Provider with managed termination protection.

---

##### \`Notifications\`<sup>Optional</sup> <a name=\\"Notifications\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\"></a>

\`\`\`csharp
public NotificationConfiguration[] Notifications { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.NotificationConfiguration[]
- *Default:* No fleet change notifications will be sent.

Configure autoscaling group to send notifications about fleet changes to an SNS topic(s).

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations)

---

##### ~~\`NotificationsTopic\`~~<sup>Optional</sup> <a name=\\"NotificationsTopic\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.notificationsTopic\\"></a>

- *Deprecated:* use \`notifications\`

\`\`\`csharp
public ITopic NotificationsTopic { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_sns.ITopic
- *Default:* No fleet change notifications will be sent.

SNS topic to send notifications about fleet changes.

---

##### ~~\`ReplacingUpdateMinSuccessfulInstancesPercent\`~~<sup>Optional</sup> <a name=\\"ReplacingUpdateMinSuccessfulInstancesPercent\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.replacingUpdateMinSuccessfulInstancesPercent\\"></a>

- *Deprecated:* Use \`signals\` instead

\`\`\`csharp
public double ReplacingUpdateMinSuccessfulInstancesPercent { get; set; }
\`\`\`

- *Type:* double
- *Default:* minSuccessfulInstancesPercent

Configuration for replacing updates.

Only used if updateType == UpdateType.ReplacingUpdate. Specifies how many instances must signal success for the update to succeed.

---

##### ~~\`ResourceSignalCount\`~~<sup>Optional</sup> <a name=\\"ResourceSignalCount\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.resourceSignalCount\\"></a>

- *Deprecated:* Use \`signals\` instead.

\`\`\`csharp
public double ResourceSignalCount { get; set; }
\`\`\`

- *Type:* double
- *Default:* 1 if resourceSignalTimeout is set, 0 otherwise

How many ResourceSignal calls CloudFormation expects before the resource is considered created.

---

##### ~~\`ResourceSignalTimeout\`~~<sup>Optional</sup> <a name=\\"ResourceSignalTimeout\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.resourceSignalTimeout\\"></a>

- *Deprecated:* Use \`signals\` instead.

\`\`\`csharp
public Duration ResourceSignalTimeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5) if resourceSignalCount is set, N/A otherwise

The length of time to wait for the resourceSignalCount.

The maximum value is 43200 (12 hours).

---

##### ~~\`RollingUpdateConfiguration\`~~<sup>Optional</sup> <a name=\\"RollingUpdateConfiguration\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.rollingUpdateConfiguration\\"></a>

- *Deprecated:* Use \`updatePolicy\` instead

\`\`\`csharp
public RollingUpdateConfiguration RollingUpdateConfiguration { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.RollingUpdateConfiguration
- *Default:* RollingUpdateConfiguration with defaults.

Configuration for rolling updates.

Only used if updateType == UpdateType.RollingUpdate.

---

##### \`Signals\`<sup>Optional</sup> <a name=\\"Signals\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\"></a>

\`\`\`csharp
public Signals Signals { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.Signals
- *Default:* Do not wait for signals

Configure waiting for signals during deployment.

Use this to pause the CloudFormation deployment to wait for the instances in the AutoScalingGroup to report successful startup during creation and updates. The UserData script needs to invoke \`cfn-signal\` with a success or failure code after it is done setting up the instance.  Without waiting for signals, the CloudFormation deployment will proceed as soon as the AutoScalingGroup has been created or updated but before the instances in the group have been started.  For example, to have instances wait for an Elastic Load Balancing health check before they signal success, add a health-check verification by using the cfn-init helper script. For an example, see the verify_instance_health command in the Auto Scaling rolling updates sample template:  https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml

---

##### \`SpotPrice\`<sup>Optional</sup> <a name=\\"SpotPrice\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\"></a>

\`\`\`csharp
public string SpotPrice { get; set; }
\`\`\`

- *Type:* string
- *Default:* none

The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request.

Spot Instances are launched when the price you specify exceeds the current Spot market price.

---

##### \`UpdatePolicy\`<sup>Optional</sup> <a name=\\"UpdatePolicy\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\"></a>

\`\`\`csharp
public UpdatePolicy UpdatePolicy { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.UpdatePolicy
- *Default:* \`UpdatePolicy.rollingUpdate()\` if using \`init\`, \`UpdatePolicy.none()\` otherwise

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

##### ~~\`UpdateType\`~~<sup>Optional</sup> <a name=\\"UpdateType\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.updateType\\"></a>

- *Deprecated:* Use \`updatePolicy\` instead

\`\`\`csharp
public UpdateType UpdateType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_autoscaling.UpdateType
- *Default:* UpdateType.None

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* All Private subnets.

Where to place instances within the VPC.

---

##### \`InstanceType\`<sup>Required</sup> <a name=\\"InstanceType\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\"></a>

\`\`\`csharp
public InstanceType InstanceType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType

Instance type of the instances to start.

---

##### \`BootstrapEnabled\`<sup>Optional</sup> <a name=\\"BootstrapEnabled\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\"></a>

\`\`\`csharp
public bool BootstrapEnabled { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`BootstrapOptions\`<sup>Optional</sup> <a name=\\"BootstrapOptions\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\"></a>

\`\`\`csharp
public BootstrapOptions BootstrapOptions { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.BootstrapOptions
- *Default:* none

EKS node bootstrapping options.

---

##### \`MachineImageType\`<sup>Optional</sup> <a name=\\"MachineImageType\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\"></a>

\`\`\`csharp
public MachineImageType MachineImageType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.MachineImageType
- *Default:* MachineImageType.AMAZON_LINUX_2

Machine image type.

---

##### \`MapRole\`<sup>Optional</sup> <a name=\\"MapRole\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\"></a>

\`\`\`csharp
public bool MapRole { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`SpotInterruptHandler\`<sup>Optional</sup> <a name=\\"SpotInterruptHandler\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\"></a>

\`\`\`csharp
public bool SpotInterruptHandler { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is used.

---

### AutoScalingGroupOptions <a name=\\"AutoScalingGroupOptions\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions\\"></a>

Options for adding an AutoScalingGroup as capacity.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AutoScalingGroupOptions {
    bool BootstrapEnabled = null,
    BootstrapOptions BootstrapOptions = null,
    MachineImageType MachineImageType = null,
    bool MapRole = null,
    bool SpotInterruptHandler = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\">BootstrapEnabled</a></code> | <code>bool</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\">BootstrapOptions</a></code> | <code>Amazon.CDK.aws_eks.BootstrapOptions</code> | Allows options for node bootstrapping through EC2 user data. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.machineImageType\\">MachineImageType</a></code> | <code>Amazon.CDK.aws_eks.MachineImageType</code> | Allow options to specify different machine image type. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.mapRole\\">MapRole</a></code> | <code>bool</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\">SpotInterruptHandler</a></code> | <code>bool</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`BootstrapEnabled\`<sup>Optional</sup> <a name=\\"BootstrapEnabled\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\"></a>

\`\`\`csharp
public bool BootstrapEnabled { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`BootstrapOptions\`<sup>Optional</sup> <a name=\\"BootstrapOptions\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\"></a>

\`\`\`csharp
public BootstrapOptions BootstrapOptions { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.BootstrapOptions
- *Default:* default options

Allows options for node bootstrapping through EC2 user data.

---

##### \`MachineImageType\`<sup>Optional</sup> <a name=\\"MachineImageType\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.machineImageType\\"></a>

\`\`\`csharp
public MachineImageType MachineImageType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.MachineImageType
- *Default:* MachineImageType.AMAZON_LINUX_2

Allow options to specify different machine image type.

---

##### \`MapRole\`<sup>Optional</sup> <a name=\\"MapRole\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.mapRole\\"></a>

\`\`\`csharp
public bool MapRole { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`SpotInterruptHandler\`<sup>Optional</sup> <a name=\\"SpotInterruptHandler\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\"></a>

\`\`\`csharp
public bool SpotInterruptHandler { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is configured on the auto-scaling group.

---

### AwsAuthMapping <a name=\\"AwsAuthMapping\\" id=\\"monocdk.aws_eks.AwsAuthMapping\\"></a>

AwsAuth mapping.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.AwsAuthMapping.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AwsAuthMapping {
    string[] Groups,
    string Username = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AwsAuthMapping.property.groups\\">Groups</a></code> | <code>string[]</code> | A list of groups within Kubernetes to which the role is mapped. |
| <code><a href=\\"#monocdk.aws_eks.AwsAuthMapping.property.username\\">Username</a></code> | <code>string</code> | The user name within Kubernetes to map to the IAM role. |

---

##### \`Groups\`<sup>Required</sup> <a name=\\"Groups\\" id=\\"monocdk.aws_eks.AwsAuthMapping.property.groups\\"></a>

\`\`\`csharp
public string[] Groups { get; set; }
\`\`\`

- *Type:* string[]

A list of groups within Kubernetes to which the role is mapped.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`Username\`<sup>Optional</sup> <a name=\\"Username\\" id=\\"monocdk.aws_eks.AwsAuthMapping.property.username\\"></a>

\`\`\`csharp
public string Username { get; set; }
\`\`\`

- *Type:* string
- *Default:* By default, the user name is the ARN of the IAM role.

The user name within Kubernetes to map to the IAM role.

---

### AwsAuthProps <a name=\\"AwsAuthProps\\" id=\\"monocdk.aws_eks.AwsAuthProps\\"></a>

Configuration props for the AwsAuth construct.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.AwsAuthProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new AwsAuthProps {
    Cluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AwsAuthProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.Cluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.AwsAuthProps.property.cluster\\"></a>

\`\`\`csharp
public Cluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Cluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### BootstrapOptions <a name=\\"BootstrapOptions\\" id=\\"monocdk.aws_eks.BootstrapOptions\\"></a>

EKS node bootstrapping options.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.BootstrapOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new BootstrapOptions {
    string AdditionalArgs = null,
    double AwsApiRetryAttempts = null,
    string DnsClusterIp = null,
    string DockerConfigJson = null,
    bool EnableDockerBridge = null,
    string KubeletExtraArgs = null,
    bool UseMaxPods = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.additionalArgs\\">AdditionalArgs</a></code> | <code>string</code> | Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\">AwsApiRetryAttempts</a></code> | <code>double</code> | Number of retry attempts for AWS API call (DescribeCluster). |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.dnsClusterIp\\">DnsClusterIp</a></code> | <code>string</code> | Overrides the IP address to use for DNS queries within the cluster. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.dockerConfigJson\\">DockerConfigJson</a></code> | <code>string</code> | The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.enableDockerBridge\\">EnableDockerBridge</a></code> | <code>bool</code> | Restores the docker default bridge network. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\">KubeletExtraArgs</a></code> | <code>string</code> | Extra arguments to add to the kubelet. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.useMaxPods\\">UseMaxPods</a></code> | <code>bool</code> | Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance. |

---

##### \`AdditionalArgs\`<sup>Optional</sup> <a name=\\"AdditionalArgs\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.additionalArgs\\"></a>

\`\`\`csharp
public string AdditionalArgs { get; set; }
\`\`\`

- *Type:* string
- *Default:* none

Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command.

> [https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh)

---

##### \`AwsApiRetryAttempts\`<sup>Optional</sup> <a name=\\"AwsApiRetryAttempts\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\"></a>

\`\`\`csharp
public double AwsApiRetryAttempts { get; set; }
\`\`\`

- *Type:* double
- *Default:* 3

Number of retry attempts for AWS API call (DescribeCluster).

---

##### \`DnsClusterIp\`<sup>Optional</sup> <a name=\\"DnsClusterIp\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.dnsClusterIp\\"></a>

\`\`\`csharp
public string DnsClusterIp { get; set; }
\`\`\`

- *Type:* string
- *Default:* 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface.

Overrides the IP address to use for DNS queries within the cluster.

---

##### \`DockerConfigJson\`<sup>Optional</sup> <a name=\\"DockerConfigJson\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.dockerConfigJson\\"></a>

\`\`\`csharp
public string DockerConfigJson { get; set; }
\`\`\`

- *Type:* string
- *Default:* none

The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI.

---

##### \`EnableDockerBridge\`<sup>Optional</sup> <a name=\\"EnableDockerBridge\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.enableDockerBridge\\"></a>

\`\`\`csharp
public bool EnableDockerBridge { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Restores the docker default bridge network.

---

##### \`KubeletExtraArgs\`<sup>Optional</sup> <a name=\\"KubeletExtraArgs\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\"></a>

\`\`\`csharp
public string KubeletExtraArgs { get; set; }
\`\`\`

- *Type:* string
- *Default:* none

Extra arguments to add to the kubelet.

Useful for adding labels or taints.

---

##### \`UseMaxPods\`<sup>Optional</sup> <a name=\\"UseMaxPods\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.useMaxPods\\"></a>

\`\`\`csharp
public bool UseMaxPods { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance.

---

### CfnAddonProps <a name=\\"CfnAddonProps\\" id=\\"monocdk.aws_eks.CfnAddonProps\\"></a>

Properties for defining a \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnAddonProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnAddonProps {
    string AddonName,
    string ClusterName,
    string AddonVersion = null,
    string ResolveConflicts = null,
    string ServiceAccountRoleArn = null,
    CfnTag[] Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.addonName\\">AddonName</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.addonVersion\\">AddonVersion</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.resolveConflicts\\">ResolveConflicts</a></code> | <code>string</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\">ServiceAccountRoleArn</a></code> | <code>string</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.tags\\">Tags</a></code> | <code>Amazon.CDK.CfnTag[]</code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`AddonName\`<sup>Required</sup> <a name=\\"AddonName\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.addonName\\"></a>

\`\`\`csharp
public string AddonName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`AddonVersion\`<sup>Optional</sup> <a name=\\"AddonVersion\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.addonVersion\\"></a>

\`\`\`csharp
public string AddonVersion { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`ResolveConflicts\`<sup>Optional</sup> <a name=\\"ResolveConflicts\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.resolveConflicts\\"></a>

\`\`\`csharp
public string ResolveConflicts { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`ServiceAccountRoleArn\`<sup>Optional</sup> <a name=\\"ServiceAccountRoleArn\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\"></a>

\`\`\`csharp
public string ServiceAccountRoleArn { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.tags\\"></a>

\`\`\`csharp
public CfnTag[] Tags { get; set; }
\`\`\`

- *Type:* Amazon.CDK.CfnTag[]

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

### CfnClusterProps <a name=\\"CfnClusterProps\\" id=\\"monocdk.aws_eks.CfnClusterProps\\"></a>

Properties for defining a \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnClusterProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnClusterProps {
    object ResourcesVpcConfig,
    string RoleArn,
    object EncryptionConfig = null,
    object KubernetesNetworkConfig = null,
    string Name = null,
    string Version = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\">ResourcesVpcConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.roleArn\\">RoleArn</a></code> | <code>string</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.encryptionConfig\\">EncryptionConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\">KubernetesNetworkConfig</a></code> | <code>object</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.name\\">Name</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.version\\">Version</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`ResourcesVpcConfig\`<sup>Required</sup> <a name=\\"ResourcesVpcConfig\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\"></a>

\`\`\`csharp
public object ResourcesVpcConfig { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`RoleArn\`<sup>Required</sup> <a name=\\"RoleArn\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.roleArn\\"></a>

\`\`\`csharp
public string RoleArn { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`EncryptionConfig\`<sup>Optional</sup> <a name=\\"EncryptionConfig\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.encryptionConfig\\"></a>

\`\`\`csharp
public object EncryptionConfig { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`KubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"KubernetesNetworkConfig\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\"></a>

\`\`\`csharp
public object KubernetesNetworkConfig { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.name\\"></a>

\`\`\`csharp
public string Name { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

### CfnFargateProfileProps <a name=\\"CfnFargateProfileProps\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps\\"></a>

Properties for defining a \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnFargateProfileProps {
    string ClusterName,
    string PodExecutionRoleArn,
    object Selectors,
    string FargateProfileName = null,
    string[] Subnets = null,
    CfnTag[] Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\">PodExecutionRoleArn</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.selectors\\">Selectors</a></code> | <code>object</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.subnets\\">Subnets</a></code> | <code>string[]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.tags\\">Tags</a></code> | <code>Amazon.CDK.CfnTag[]</code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`PodExecutionRoleArn\`<sup>Required</sup> <a name=\\"PodExecutionRoleArn\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\"></a>

\`\`\`csharp
public string PodExecutionRoleArn { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`Selectors\`<sup>Required</sup> <a name=\\"Selectors\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.selectors\\"></a>

\`\`\`csharp
public object Selectors { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`FargateProfileName\`<sup>Optional</sup> <a name=\\"FargateProfileName\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`Subnets\`<sup>Optional</sup> <a name=\\"Subnets\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.subnets\\"></a>

\`\`\`csharp
public string[] Subnets { get; set; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.tags\\"></a>

\`\`\`csharp
public CfnTag[] Tags { get; set; }
\`\`\`

- *Type:* Amazon.CDK.CfnTag[]

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

### CfnNodegroupProps <a name=\\"CfnNodegroupProps\\" id=\\"monocdk.aws_eks.CfnNodegroupProps\\"></a>

Properties for defining a \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CfnNodegroupProps {
    string ClusterName,
    string NodeRole,
    string[] Subnets,
    string AmiType = null,
    string CapacityType = null,
    double DiskSize = null,
    object ForceUpdateEnabled = null,
    string[] InstanceTypes = null,
    object Labels = null,
    object LaunchTemplate = null,
    string NodegroupName = null,
    string ReleaseVersion = null,
    object RemoteAccess = null,
    object ScalingConfig = null,
    object Tags = null,
    object Taints = null,
    string Version = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.nodeRole\\">NodeRole</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.subnets\\">Subnets</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.amiType\\">AmiType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.capacityType\\">CapacityType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.diskSize\\">DiskSize</a></code> | <code>double</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\">ForceUpdateEnabled</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.instanceTypes\\">InstanceTypes</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.labels\\">Labels</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.launchTemplate\\">LaunchTemplate</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.releaseVersion\\">ReleaseVersion</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.remoteAccess\\">RemoteAccess</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.scalingConfig\\">ScalingConfig</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.tags\\">Tags</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.taints\\">Taints</a></code> | <code>object</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.version\\">Version</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`NodeRole\`<sup>Required</sup> <a name=\\"NodeRole\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.nodeRole\\"></a>

\`\`\`csharp
public string NodeRole { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`Subnets\`<sup>Required</sup> <a name=\\"Subnets\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.subnets\\"></a>

\`\`\`csharp
public string[] Subnets { get; set; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`AmiType\`<sup>Optional</sup> <a name=\\"AmiType\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.amiType\\"></a>

\`\`\`csharp
public string AmiType { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`CapacityType\`<sup>Optional</sup> <a name=\\"CapacityType\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.capacityType\\"></a>

\`\`\`csharp
public string CapacityType { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`DiskSize\`<sup>Optional</sup> <a name=\\"DiskSize\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.diskSize\\"></a>

\`\`\`csharp
public double DiskSize { get; set; }
\`\`\`

- *Type:* double

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`ForceUpdateEnabled\`<sup>Optional</sup> <a name=\\"ForceUpdateEnabled\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\"></a>

\`\`\`csharp
public object ForceUpdateEnabled { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`InstanceTypes\`<sup>Optional</sup> <a name=\\"InstanceTypes\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.instanceTypes\\"></a>

\`\`\`csharp
public string[] InstanceTypes { get; set; }
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.labels\\"></a>

\`\`\`csharp
public object Labels { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`LaunchTemplate\`<sup>Optional</sup> <a name=\\"LaunchTemplate\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.launchTemplate\\"></a>

\`\`\`csharp
public object LaunchTemplate { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`NodegroupName\`<sup>Optional</sup> <a name=\\"NodegroupName\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`ReleaseVersion\`<sup>Optional</sup> <a name=\\"ReleaseVersion\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.releaseVersion\\"></a>

\`\`\`csharp
public string ReleaseVersion { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`RemoteAccess\`<sup>Optional</sup> <a name=\\"RemoteAccess\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.remoteAccess\\"></a>

\`\`\`csharp
public object RemoteAccess { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`ScalingConfig\`<sup>Optional</sup> <a name=\\"ScalingConfig\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.scalingConfig\\"></a>

\`\`\`csharp
public object ScalingConfig { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.tags\\"></a>

\`\`\`csharp
public object Tags { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`Taints\`<sup>Optional</sup> <a name=\\"Taints\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.taints\\"></a>

\`\`\`csharp
public object Taints { get; set; }
\`\`\`

- *Type:* object

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

### ClusterAttributes <a name=\\"ClusterAttributes\\" id=\\"monocdk.aws_eks.ClusterAttributes\\"></a>

Attributes for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ClusterAttributes.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ClusterAttributes {
    string ClusterName,
    string ClusterCertificateAuthorityData = null,
    string ClusterEncryptionConfigKeyArn = null,
    string ClusterEndpoint = null,
    string ClusterSecurityGroupId = null,
    System.Collections.Generic.IDictionary<string, string> KubectlEnvironment = null,
    ILayerVersion KubectlLayer = null,
    Size KubectlMemory = null,
    string[] KubectlPrivateSubnetIds = null,
    string KubectlRoleArn = null,
    string KubectlSecurityGroupId = null,
    IOpenIdConnectProvider OpenIdConnectProvider = null,
    bool Prune = null,
    string[] SecurityGroupIds = null,
    IVpc Vpc = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterName\\">ClusterName</a></code> | <code>string</code> | The physical name of the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\">ClusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\">ClusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterEndpoint\\">ClusterEndpoint</a></code> | <code>string</code> | The API Server endpoint URL. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\">ClusterSecurityGroupId</a></code> | <code>string</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Environment variables to use when running \`kubectl\` against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\">KubectlPrivateSubnetIds</a></code> | <code>string[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlRoleArn\\">KubectlRoleArn</a></code> | <code>string</code> | An IAM role with cluster administrator and \\"system:masters\\" permissions. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\">KubectlSecurityGroupId</a></code> | <code>string</code> | A security group to use for \`kubectl\` execution. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.openIdConnectProvider\\">OpenIdConnectProvider</a></code> | <code>Amazon.CDK.aws_iam.IOpenIdConnectProvider</code> | An Open ID Connect provider for this cluster that can be used to configure service accounts. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.securityGroupIds\\">SecurityGroupIds</a></code> | <code>string[]</code> | Additional security groups associated with this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string

The physical name of the Cluster.

---

##### \`ClusterCertificateAuthorityData\`<sup>Optional</sup> <a name=\\"ClusterCertificateAuthorityData\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\"></a>

\`\`\`csharp
public string ClusterCertificateAuthorityData { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterCertificateAuthorityData\` will throw an error

The certificate-authority-data for your cluster.

---

##### \`ClusterEncryptionConfigKeyArn\`<sup>Optional</sup> <a name=\\"ClusterEncryptionConfigKeyArn\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`csharp
public string ClusterEncryptionConfigKeyArn { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterEncryptionConfigKeyArn\` will throw an error

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`ClusterEndpoint\`<sup>Optional</sup> <a name=\\"ClusterEndpoint\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterEndpoint\\"></a>

\`\`\`csharp
public string ClusterEndpoint { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterEndpoint\` will throw an error.

The API Server endpoint URL.

---

##### \`ClusterSecurityGroupId\`<sup>Optional</sup> <a name=\\"ClusterSecurityGroupId\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\"></a>

\`\`\`csharp
public string ClusterSecurityGroupId { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterSecurityGroupId\` will throw an error

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* no additional variables

Environment variables to use when running \`kubectl\` against this cluster.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion
- *Default:* a layer bundled with this module.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

This layer is used by the kubectl handler to apply manifests and install helm charts.  The handler expects the layer to include the following executables:  \`\`\` helm/helm kubectl/kubectl awscli/aws \`\`\`

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`KubectlPrivateSubnetIds\`<sup>Optional</sup> <a name=\\"KubectlPrivateSubnetIds\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\"></a>

\`\`\`csharp
public string[] KubectlPrivateSubnetIds { get; set; }
\`\`\`

- *Type:* string[]
- *Default:* k8s endpoint is expected to be accessible publicly

Subnets to host the \`kubectl\` compute resources.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`KubectlRoleArn\`<sup>Optional</sup> <a name=\\"KubectlRoleArn\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlRoleArn\\"></a>

\`\`\`csharp
public string KubectlRoleArn { get; set; }
\`\`\`

- *Type:* string
- *Default:* if not specified, it not be possible to issue \`kubectl\` commands against an imported cluster.

An IAM role with cluster administrator and \\"system:masters\\" permissions.

---

##### \`KubectlSecurityGroupId\`<sup>Optional</sup> <a name=\\"KubectlSecurityGroupId\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\"></a>

\`\`\`csharp
public string KubectlSecurityGroupId { get; set; }
\`\`\`

- *Type:* string
- *Default:* k8s endpoint is expected to be accessible publicly

A security group to use for \`kubectl\` execution.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`OpenIdConnectProvider\`<sup>Optional</sup> <a name=\\"OpenIdConnectProvider\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.openIdConnectProvider\\"></a>

\`\`\`csharp
public IOpenIdConnectProvider OpenIdConnectProvider { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IOpenIdConnectProvider
- *Default:* if not specified \`cluster.openIdConnectProvider\` and \`cluster.addServiceAccount\` will throw an error.

An Open ID Connect provider for this cluster that can be used to configure service accounts.

You can either import an existing provider using \`iam.OpenIdConnectProvider.fromProviderArn\`, or create a new provider using \`new eks.OpenIdConnectProvider\`

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`SecurityGroupIds\`<sup>Optional</sup> <a name=\\"SecurityGroupIds\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.securityGroupIds\\"></a>

\`\`\`csharp
public string[] SecurityGroupIds { get; set; }
\`\`\`

- *Type:* string[]
- *Default:* if not specified, no additional security groups will be considered in \`cluster.connections\`.

Additional security groups associated with this cluster.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* if not specified \`cluster.vpc\` will throw an error

The VPC in which this Cluster was created.

---

### ClusterOptions <a name=\\"ClusterOptions\\" id=\\"monocdk.aws_eks.ClusterOptions\\"></a>

Options for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ClusterOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ClusterOptions {
    KubernetesVersion Version,
    string ClusterName = null,
    bool OutputClusterName = null,
    bool OutputConfigCommand = null,
    IRole Role = null,
    ISecurityGroup SecurityGroup = null,
    IVpc Vpc = null,
    SubnetSelection[] VpcSubnets = null,
    System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment = null,
    CoreDnsComputeType CoreDnsComputeType = null,
    EndpointAccess EndpointAccess = null,
    System.Collections.Generic.IDictionary<string, string> KubectlEnvironment = null,
    ILayerVersion KubectlLayer = null,
    Size KubectlMemory = null,
    IRole MastersRole = null,
    bool OutputMastersRoleArn = null,
    bool PlaceClusterHandlerInVpc = null,
    bool Prune = null,
    IKey SecretsEncryptionKey = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.version\\">Version</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.clusterName\\">ClusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.outputClusterName\\">OutputClusterName</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.outputConfigCommand\\">OutputConfigCommand</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.securityGroup\\">SecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\">ClusterHandlerEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.coreDnsComputeType\\">CoreDnsComputeType</a></code> | <code>Amazon.CDK.aws_eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.endpointAccess\\">EndpointAccess</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.mastersRole\\">MastersRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.outputMastersRoleArn\\">OutputMastersRoleArn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\">PlaceClusterHandlerInVpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.secretsEncryptionKey\\">SecretsEncryptionKey</a></code> | <code>Amazon.CDK.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.ClusterOptions.property.version\\"></a>

\`\`\`csharp
public KubernetesVersion Version { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`ClusterName\`<sup>Optional</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.ClusterOptions.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`OutputClusterName\`<sup>Optional</sup> <a name=\\"OutputClusterName\\" id=\\"monocdk.aws_eks.ClusterOptions.property.outputClusterName\\"></a>

\`\`\`csharp
public bool OutputClusterName { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`OutputConfigCommand\`<sup>Optional</sup> <a name=\\"OutputConfigCommand\\" id=\\"monocdk.aws_eks.ClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`csharp
public bool OutputConfigCommand { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`Role\`<sup>Optional</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.ClusterOptions.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`SecurityGroup\`<sup>Optional</sup> <a name=\\"SecurityGroup\\" id=\\"monocdk.aws_eks.ClusterOptions.property.securityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup SecurityGroup { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.ClusterOptions.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"monocdk.aws_eks.ClusterOptions.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection[] VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`ClusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"ClusterHandlerEnvironment\\" id=\\"monocdk.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`CoreDnsComputeType\`<sup>Optional</sup> <a name=\\"CoreDnsComputeType\\" id=\\"monocdk.aws_eks.ClusterOptions.property.coreDnsComputeType\\"></a>

\`\`\`csharp
public CoreDnsComputeType CoreDnsComputeType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`EndpointAccess\`<sup>Optional</sup> <a name=\\"EndpointAccess\\" id=\\"monocdk.aws_eks.ClusterOptions.property.endpointAccess\\"></a>

\`\`\`csharp
public EndpointAccess EndpointAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"monocdk.aws_eks.ClusterOptions.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"monocdk.aws_eks.ClusterOptions.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. var layer = new lambda.LayerVersion(this, \\"kubectl-layer\\", new Struct {     Code = lambda.Code.FromAsset($\\"{__dirname}/layer.zip\\") });[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"monocdk.aws_eks.ClusterOptions.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`MastersRole\`<sup>Optional</sup> <a name=\\"MastersRole\\" id=\\"monocdk.aws_eks.ClusterOptions.property.mastersRole\\"></a>

\`\`\`csharp
public IRole MastersRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`OutputMastersRoleArn\`<sup>Optional</sup> <a name=\\"OutputMastersRoleArn\\" id=\\"monocdk.aws_eks.ClusterOptions.property.outputMastersRoleArn\\"></a>

\`\`\`csharp
public bool OutputMastersRoleArn { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`PlaceClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"PlaceClusterHandlerInVpc\\" id=\\"monocdk.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\"></a>

\`\`\`csharp
public bool PlaceClusterHandlerInVpc { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"monocdk.aws_eks.ClusterOptions.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`SecretsEncryptionKey\`<sup>Optional</sup> <a name=\\"SecretsEncryptionKey\\" id=\\"monocdk.aws_eks.ClusterOptions.property.secretsEncryptionKey\\"></a>

\`\`\`csharp
public IKey SecretsEncryptionKey { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

### ClusterProps <a name=\\"ClusterProps\\" id=\\"monocdk.aws_eks.ClusterProps\\"></a>

Common configuration props for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ClusterProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ClusterProps {
    KubernetesVersion Version,
    string ClusterName = null,
    bool OutputClusterName = null,
    bool OutputConfigCommand = null,
    IRole Role = null,
    ISecurityGroup SecurityGroup = null,
    IVpc Vpc = null,
    SubnetSelection[] VpcSubnets = null,
    System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment = null,
    CoreDnsComputeType CoreDnsComputeType = null,
    EndpointAccess EndpointAccess = null,
    System.Collections.Generic.IDictionary<string, string> KubectlEnvironment = null,
    ILayerVersion KubectlLayer = null,
    Size KubectlMemory = null,
    IRole MastersRole = null,
    bool OutputMastersRoleArn = null,
    bool PlaceClusterHandlerInVpc = null,
    bool Prune = null,
    IKey SecretsEncryptionKey = null,
    double DefaultCapacity = null,
    InstanceType DefaultCapacityInstance = null,
    DefaultCapacityType DefaultCapacityType = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.version\\">Version</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.outputClusterName\\">OutputClusterName</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.outputConfigCommand\\">OutputConfigCommand</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.securityGroup\\">SecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\">ClusterHandlerEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.coreDnsComputeType\\">CoreDnsComputeType</a></code> | <code>Amazon.CDK.aws_eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.endpointAccess\\">EndpointAccess</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.mastersRole\\">MastersRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.outputMastersRoleArn\\">OutputMastersRoleArn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\">PlaceClusterHandlerInVpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.secretsEncryptionKey\\">SecretsEncryptionKey</a></code> | <code>Amazon.CDK.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.defaultCapacity\\">DefaultCapacity</a></code> | <code>double</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.defaultCapacityInstance\\">DefaultCapacityInstance</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.defaultCapacityType\\">DefaultCapacityType</a></code> | <code>Amazon.CDK.aws_eks.DefaultCapacityType</code> | The default capacity type for the cluster. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.ClusterProps.property.version\\"></a>

\`\`\`csharp
public KubernetesVersion Version { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`ClusterName\`<sup>Optional</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.ClusterProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`OutputClusterName\`<sup>Optional</sup> <a name=\\"OutputClusterName\\" id=\\"monocdk.aws_eks.ClusterProps.property.outputClusterName\\"></a>

\`\`\`csharp
public bool OutputClusterName { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`OutputConfigCommand\`<sup>Optional</sup> <a name=\\"OutputConfigCommand\\" id=\\"monocdk.aws_eks.ClusterProps.property.outputConfigCommand\\"></a>

\`\`\`csharp
public bool OutputConfigCommand { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`Role\`<sup>Optional</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.ClusterProps.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`SecurityGroup\`<sup>Optional</sup> <a name=\\"SecurityGroup\\" id=\\"monocdk.aws_eks.ClusterProps.property.securityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup SecurityGroup { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.ClusterProps.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"monocdk.aws_eks.ClusterProps.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection[] VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`ClusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"ClusterHandlerEnvironment\\" id=\\"monocdk.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`CoreDnsComputeType\`<sup>Optional</sup> <a name=\\"CoreDnsComputeType\\" id=\\"monocdk.aws_eks.ClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`csharp
public CoreDnsComputeType CoreDnsComputeType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`EndpointAccess\`<sup>Optional</sup> <a name=\\"EndpointAccess\\" id=\\"monocdk.aws_eks.ClusterProps.property.endpointAccess\\"></a>

\`\`\`csharp
public EndpointAccess EndpointAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"monocdk.aws_eks.ClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"monocdk.aws_eks.ClusterProps.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. var layer = new lambda.LayerVersion(this, \\"kubectl-layer\\", new Struct {     Code = lambda.Code.FromAsset($\\"{__dirname}/layer.zip\\") });[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"monocdk.aws_eks.ClusterProps.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`MastersRole\`<sup>Optional</sup> <a name=\\"MastersRole\\" id=\\"monocdk.aws_eks.ClusterProps.property.mastersRole\\"></a>

\`\`\`csharp
public IRole MastersRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`OutputMastersRoleArn\`<sup>Optional</sup> <a name=\\"OutputMastersRoleArn\\" id=\\"monocdk.aws_eks.ClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`csharp
public bool OutputMastersRoleArn { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`PlaceClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"PlaceClusterHandlerInVpc\\" id=\\"monocdk.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`csharp
public bool PlaceClusterHandlerInVpc { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"monocdk.aws_eks.ClusterProps.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`SecretsEncryptionKey\`<sup>Optional</sup> <a name=\\"SecretsEncryptionKey\\" id=\\"monocdk.aws_eks.ClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`csharp
public IKey SecretsEncryptionKey { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`DefaultCapacity\`<sup>Optional</sup> <a name=\\"DefaultCapacity\\" id=\\"monocdk.aws_eks.ClusterProps.property.defaultCapacity\\"></a>

\`\`\`csharp
public double DefaultCapacity { get; set; }
\`\`\`

- *Type:* double
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`DefaultCapacityInstance\`<sup>Optional</sup> <a name=\\"DefaultCapacityInstance\\" id=\\"monocdk.aws_eks.ClusterProps.property.defaultCapacityInstance\\"></a>

\`\`\`csharp
public InstanceType DefaultCapacityInstance { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`DefaultCapacityType\`<sup>Optional</sup> <a name=\\"DefaultCapacityType\\" id=\\"monocdk.aws_eks.ClusterProps.property.defaultCapacityType\\"></a>

\`\`\`csharp
public DefaultCapacityType DefaultCapacityType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.DefaultCapacityType
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

### CommonClusterOptions <a name=\\"CommonClusterOptions\\" id=\\"monocdk.aws_eks.CommonClusterOptions\\"></a>

Options for configuring an EKS cluster.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CommonClusterOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new CommonClusterOptions {
    KubernetesVersion Version,
    string ClusterName = null,
    bool OutputClusterName = null,
    bool OutputConfigCommand = null,
    IRole Role = null,
    ISecurityGroup SecurityGroup = null,
    IVpc Vpc = null,
    SubnetSelection[] VpcSubnets = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.version\\">Version</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.clusterName\\">ClusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.outputClusterName\\">OutputClusterName</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.outputConfigCommand\\">OutputConfigCommand</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.securityGroup\\">SecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.version\\"></a>

\`\`\`csharp
public KubernetesVersion Version { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`ClusterName\`<sup>Optional</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`OutputClusterName\`<sup>Optional</sup> <a name=\\"OutputClusterName\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.outputClusterName\\"></a>

\`\`\`csharp
public bool OutputClusterName { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`OutputConfigCommand\`<sup>Optional</sup> <a name=\\"OutputConfigCommand\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`csharp
public bool OutputConfigCommand { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`Role\`<sup>Optional</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`SecurityGroup\`<sup>Optional</sup> <a name=\\"SecurityGroup\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.securityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup SecurityGroup { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection[] VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

### EksOptimizedImageProps <a name=\\"EksOptimizedImageProps\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps\\"></a>

Properties for EksOptimizedImage.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new EksOptimizedImageProps {
    CpuArch CpuArch = null,
    string KubernetesVersion = null,
    NodeType NodeType = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImageProps.property.cpuArch\\">CpuArch</a></code> | <code>Amazon.CDK.aws_eks.CpuArch</code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\">KubernetesVersion</a></code> | <code>string</code> | The Kubernetes version to use. |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImageProps.property.nodeType\\">NodeType</a></code> | <code>Amazon.CDK.aws_eks.NodeType</code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`CpuArch\`<sup>Optional</sup> <a name=\\"CpuArch\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps.property.cpuArch\\"></a>

\`\`\`csharp
public CpuArch CpuArch { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CpuArch
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`KubernetesVersion\`<sup>Optional</sup> <a name=\\"KubernetesVersion\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\"></a>

\`\`\`csharp
public string KubernetesVersion { get; set; }
\`\`\`

- *Type:* string
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`NodeType\`<sup>Optional</sup> <a name=\\"NodeType\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps.property.nodeType\\"></a>

\`\`\`csharp
public NodeType NodeType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodeType
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

### EncryptionConfigProperty <a name=\\"EncryptionConfigProperty\\" id=\\"monocdk.aws_eks.CfnCluster.EncryptionConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new EncryptionConfigProperty {
    object Provider = null,
    string[] Resources = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\">Provider</a></code> | <code>object</code> | \`CfnCluster.EncryptionConfigProperty.Provider\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\">Resources</a></code> | <code>string[]</code> | \`CfnCluster.EncryptionConfigProperty.Resources\`. |

---

##### \`Provider\`<sup>Optional</sup> <a name=\\"Provider\\" id=\\"monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\"></a>

\`\`\`csharp
public object Provider { get; set; }
\`\`\`

- *Type:* object

\`CfnCluster.EncryptionConfigProperty.Provider\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider)

---

##### \`Resources\`<sup>Optional</sup> <a name=\\"Resources\\" id=\\"monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\"></a>

\`\`\`csharp
public string[] Resources { get; set; }
\`\`\`

- *Type:* string[]

\`CfnCluster.EncryptionConfigProperty.Resources\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources)

---

### FargateClusterProps <a name=\\"FargateClusterProps\\" id=\\"monocdk.aws_eks.FargateClusterProps\\"></a>

Configuration props for EKS Fargate.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.FargateClusterProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateClusterProps {
    KubernetesVersion Version,
    string ClusterName = null,
    bool OutputClusterName = null,
    bool OutputConfigCommand = null,
    IRole Role = null,
    ISecurityGroup SecurityGroup = null,
    IVpc Vpc = null,
    SubnetSelection[] VpcSubnets = null,
    System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment = null,
    CoreDnsComputeType CoreDnsComputeType = null,
    EndpointAccess EndpointAccess = null,
    System.Collections.Generic.IDictionary<string, string> KubectlEnvironment = null,
    ILayerVersion KubectlLayer = null,
    Size KubectlMemory = null,
    IRole MastersRole = null,
    bool OutputMastersRoleArn = null,
    bool PlaceClusterHandlerInVpc = null,
    bool Prune = null,
    IKey SecretsEncryptionKey = null,
    FargateProfileOptions DefaultProfile = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.version\\">Version</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.clusterName\\">ClusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.outputClusterName\\">OutputClusterName</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.outputConfigCommand\\">OutputConfigCommand</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.role\\">Role</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.securityGroup\\">SecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.vpcSubnets\\">VpcSubnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\">ClusterHandlerEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.coreDnsComputeType\\">CoreDnsComputeType</a></code> | <code>Amazon.CDK.aws_eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.endpointAccess\\">EndpointAccess</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.mastersRole\\">MastersRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\">OutputMastersRoleArn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\">PlaceClusterHandlerInVpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\">SecretsEncryptionKey</a></code> | <code>Amazon.CDK.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.defaultProfile\\">DefaultProfile</a></code> | <code>Amazon.CDK.aws_eks.FargateProfileOptions</code> | Fargate Profile to create along with the cluster. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.version\\"></a>

\`\`\`csharp
public KubernetesVersion Version { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`ClusterName\`<sup>Optional</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; set; }
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`OutputClusterName\`<sup>Optional</sup> <a name=\\"OutputClusterName\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.outputClusterName\\"></a>

\`\`\`csharp
public bool OutputClusterName { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`OutputConfigCommand\`<sup>Optional</sup> <a name=\\"OutputConfigCommand\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.outputConfigCommand\\"></a>

\`\`\`csharp
public bool OutputConfigCommand { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`Role\`<sup>Optional</sup> <a name=\\"Role\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.role\\"></a>

\`\`\`csharp
public IRole Role { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`SecurityGroup\`<sup>Optional</sup> <a name=\\"SecurityGroup\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.securityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup SecurityGroup { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`VpcSubnets\`<sup>Optional</sup> <a name=\\"VpcSubnets\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.vpcSubnets\\"></a>

\`\`\`csharp
public SubnetSelection[] VpcSubnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`ClusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"ClusterHandlerEnvironment\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> ClusterHandlerEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`CoreDnsComputeType\`<sup>Optional</sup> <a name=\\"CoreDnsComputeType\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`csharp
public CoreDnsComputeType CoreDnsComputeType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`EndpointAccess\`<sup>Optional</sup> <a name=\\"EndpointAccess\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.endpointAccess\\"></a>

\`\`\`csharp
public EndpointAccess EndpointAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`csharp // Example automatically generated from non-compiling source. May contain errors. var layer = new lambda.LayerVersion(this, \\"kubectl-layer\\", new Struct {     Code = lambda.Code.FromAsset($\\"{__dirname}/layer.zip\\") });[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`MastersRole\`<sup>Optional</sup> <a name=\\"MastersRole\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.mastersRole\\"></a>

\`\`\`csharp
public IRole MastersRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`OutputMastersRoleArn\`<sup>Optional</sup> <a name=\\"OutputMastersRoleArn\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`csharp
public bool OutputMastersRoleArn { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`PlaceClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"PlaceClusterHandlerInVpc\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`csharp
public bool PlaceClusterHandlerInVpc { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`SecretsEncryptionKey\`<sup>Optional</sup> <a name=\\"SecretsEncryptionKey\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`csharp
public IKey SecretsEncryptionKey { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`DefaultProfile\`<sup>Optional</sup> <a name=\\"DefaultProfile\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.defaultProfile\\"></a>

\`\`\`csharp
public FargateProfileOptions DefaultProfile { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.FargateProfileOptions
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---

### FargateProfileOptions <a name=\\"FargateProfileOptions\\" id=\\"monocdk.aws_eks.FargateProfileOptions\\"></a>

Options for defining EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.FargateProfileOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateProfileOptions {
    Selector[] Selectors,
    string FargateProfileName = null,
    IRole PodExecutionRole = null,
    SubnetSelection SubnetSelection = null,
    IVpc Vpc = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.selectors\\">Selectors</a></code> | <code>Amazon.CDK.aws_eks.Selector[]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.podExecutionRole\\">PodExecutionRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.subnetSelection\\">SubnetSelection</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |

---

##### \`Selectors\`<sup>Required</sup> <a name=\\"Selectors\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.selectors\\"></a>

\`\`\`csharp
public Selector[] Selectors { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Selector[]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`FargateProfileName\`<sup>Optional</sup> <a name=\\"FargateProfileName\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; set; }
\`\`\`

- *Type:* string
- *Default:* generated

The name of the Fargate profile.

---

##### \`PodExecutionRole\`<sup>Optional</sup> <a name=\\"PodExecutionRole\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.podExecutionRole\\"></a>

\`\`\`csharp
public IRole PodExecutionRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`SubnetSelection\`<sup>Optional</sup> <a name=\\"SubnetSelection\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.subnetSelection\\"></a>

\`\`\`csharp
public SubnetSelection SubnetSelection { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

### FargateProfileProps <a name=\\"FargateProfileProps\\" id=\\"monocdk.aws_eks.FargateProfileProps\\"></a>

Configuration props for EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.FargateProfileProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new FargateProfileProps {
    Selector[] Selectors,
    string FargateProfileName = null,
    IRole PodExecutionRole = null,
    SubnetSelection SubnetSelection = null,
    IVpc Vpc = null,
    Cluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.selectors\\">Selectors</a></code> | <code>Amazon.CDK.aws_eks.Selector[]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.fargateProfileName\\">FargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.podExecutionRole\\">PodExecutionRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.subnetSelection\\">SubnetSelection</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.Cluster</code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`Selectors\`<sup>Required</sup> <a name=\\"Selectors\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.selectors\\"></a>

\`\`\`csharp
public Selector[] Selectors { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Selector[]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`FargateProfileName\`<sup>Optional</sup> <a name=\\"FargateProfileName\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`csharp
public string FargateProfileName { get; set; }
\`\`\`

- *Type:* string
- *Default:* generated

The name of the Fargate profile.

---

##### \`PodExecutionRole\`<sup>Optional</sup> <a name=\\"PodExecutionRole\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.podExecutionRole\\"></a>

\`\`\`csharp
public IRole PodExecutionRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`SubnetSelection\`<sup>Optional</sup> <a name=\\"SubnetSelection\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.subnetSelection\\"></a>

\`\`\`csharp
public SubnetSelection SubnetSelection { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`Vpc\`<sup>Optional</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.cluster\\"></a>

\`\`\`csharp
public Cluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.Cluster

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---

### HelmChartOptions <a name=\\"HelmChartOptions\\" id=\\"monocdk.aws_eks.HelmChartOptions\\"></a>

Helm Chart options.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.HelmChartOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new HelmChartOptions {
    string Chart,
    bool CreateNamespace = null,
    string Namespace = null,
    string Release = null,
    string Repository = null,
    Duration Timeout = null,
    System.Collections.Generic.IDictionary<string, object> Values = null,
    string Version = null,
    bool Wait = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.chart\\">Chart</a></code> | <code>string</code> | The name of the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.createNamespace\\">CreateNamespace</a></code> | <code>bool</code> | create namespace if not exist. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.namespace\\">Namespace</a></code> | <code>string</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.release\\">Release</a></code> | <code>string</code> | The name of the release. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.repository\\">Repository</a></code> | <code>string</code> | The repository which contains the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.timeout\\">Timeout</a></code> | <code>Amazon.CDK.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.values\\">Values</a></code> | <code>System.Collections.Generic.IDictionary<string, object></code> | The values to be used by the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.version\\">Version</a></code> | <code>string</code> | The chart version to install. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.wait\\">Wait</a></code> | <code>bool</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |

---

##### \`Chart\`<sup>Required</sup> <a name=\\"Chart\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.chart\\"></a>

\`\`\`csharp
public string Chart { get; set; }
\`\`\`

- *Type:* string

The name of the chart.

---

##### \`CreateNamespace\`<sup>Optional</sup> <a name=\\"CreateNamespace\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.createNamespace\\"></a>

\`\`\`csharp
public bool CreateNamespace { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`Release\`<sup>Optional</sup> <a name=\\"Release\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.release\\"></a>

\`\`\`csharp
public string Release { get; set; }
\`\`\`

- *Type:* string
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`Repository\`<sup>Optional</sup> <a name=\\"Repository\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.repository\\"></a>

\`\`\`csharp
public string Repository { get; set; }
\`\`\`

- *Type:* string
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`Timeout\`<sup>Optional</sup> <a name=\\"Timeout\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.timeout\\"></a>

\`\`\`csharp
public Duration Timeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`Values\`<sup>Optional</sup> <a name=\\"Values\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.values\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object> Values { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`Wait\`<sup>Optional</sup> <a name=\\"Wait\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.wait\\"></a>

\`\`\`csharp
public bool Wait { get; set; }
\`\`\`

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

### HelmChartProps <a name=\\"HelmChartProps\\" id=\\"monocdk.aws_eks.HelmChartProps\\"></a>

Helm Chart properties.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.HelmChartProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new HelmChartProps {
    string Chart,
    bool CreateNamespace = null,
    string Namespace = null,
    string Release = null,
    string Repository = null,
    Duration Timeout = null,
    System.Collections.Generic.IDictionary<string, object> Values = null,
    string Version = null,
    bool Wait = null,
    ICluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.chart\\">Chart</a></code> | <code>string</code> | The name of the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.createNamespace\\">CreateNamespace</a></code> | <code>bool</code> | create namespace if not exist. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.namespace\\">Namespace</a></code> | <code>string</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.release\\">Release</a></code> | <code>string</code> | The name of the release. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.repository\\">Repository</a></code> | <code>string</code> | The repository which contains the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.timeout\\">Timeout</a></code> | <code>Amazon.CDK.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.values\\">Values</a></code> | <code>System.Collections.Generic.IDictionary<string, object></code> | The values to be used by the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.version\\">Version</a></code> | <code>string</code> | The chart version to install. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.wait\\">Wait</a></code> | <code>bool</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`Chart\`<sup>Required</sup> <a name=\\"Chart\\" id=\\"monocdk.aws_eks.HelmChartProps.property.chart\\"></a>

\`\`\`csharp
public string Chart { get; set; }
\`\`\`

- *Type:* string

The name of the chart.

---

##### \`CreateNamespace\`<sup>Optional</sup> <a name=\\"CreateNamespace\\" id=\\"monocdk.aws_eks.HelmChartProps.property.createNamespace\\"></a>

\`\`\`csharp
public bool CreateNamespace { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"monocdk.aws_eks.HelmChartProps.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`Release\`<sup>Optional</sup> <a name=\\"Release\\" id=\\"monocdk.aws_eks.HelmChartProps.property.release\\"></a>

\`\`\`csharp
public string Release { get; set; }
\`\`\`

- *Type:* string
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`Repository\`<sup>Optional</sup> <a name=\\"Repository\\" id=\\"monocdk.aws_eks.HelmChartProps.property.repository\\"></a>

\`\`\`csharp
public string Repository { get; set; }
\`\`\`

- *Type:* string
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`Timeout\`<sup>Optional</sup> <a name=\\"Timeout\\" id=\\"monocdk.aws_eks.HelmChartProps.property.timeout\\"></a>

\`\`\`csharp
public Duration Timeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`Values\`<sup>Optional</sup> <a name=\\"Values\\" id=\\"monocdk.aws_eks.HelmChartProps.property.values\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object> Values { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.HelmChartProps.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`Wait\`<sup>Optional</sup> <a name=\\"Wait\\" id=\\"monocdk.aws_eks.HelmChartProps.property.wait\\"></a>

\`\`\`csharp
public bool Wait { get; set; }
\`\`\`

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.HelmChartProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### KubernetesManifestOptions <a name=\\"KubernetesManifestOptions\\" id=\\"monocdk.aws_eks.KubernetesManifestOptions\\"></a>

Options for \`KubernetesManifest\`.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.KubernetesManifestOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesManifestOptions {
    bool Prune = null,
    bool SkipValidation = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestOptions.property.prune\\">Prune</a></code> | <code>bool</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestOptions.property.skipValidation\\">SkipValidation</a></code> | <code>bool</code> | A flag to signify if the manifest validation should be skipped. |

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"monocdk.aws_eks.KubernetesManifestOptions.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`SkipValidation\`<sup>Optional</sup> <a name=\\"SkipValidation\\" id=\\"monocdk.aws_eks.KubernetesManifestOptions.property.skipValidation\\"></a>

\`\`\`csharp
public bool SkipValidation { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

### KubernetesManifestProps <a name=\\"KubernetesManifestProps\\" id=\\"monocdk.aws_eks.KubernetesManifestProps\\"></a>

Properties for KubernetesManifest.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesManifestProps {
    bool Prune = null,
    bool SkipValidation = null,
    ICluster Cluster,
    System.Collections.Generic.IDictionary<string, object>[] Manifest,
    bool Overwrite = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.prune\\">Prune</a></code> | <code>bool</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.skipValidation\\">SkipValidation</a></code> | <code>bool</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.manifest\\">Manifest</a></code> | <code>System.Collections.Generic.IDictionary<string, object>[]</code> | The manifest to apply. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.overwrite\\">Overwrite</a></code> | <code>bool</code> | Overwrite any existing resources. |

---

##### \`Prune\`<sup>Optional</sup> <a name=\\"Prune\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; set; }
\`\`\`

- *Type:* bool
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`SkipValidation\`<sup>Optional</sup> <a name=\\"SkipValidation\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.skipValidation\\"></a>

\`\`\`csharp
public bool SkipValidation { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`Manifest\`<sup>Required</sup> <a name=\\"Manifest\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.manifest\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object>[] Manifest { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>[]

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`Overwrite\`<sup>Optional</sup> <a name=\\"Overwrite\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.overwrite\\"></a>

\`\`\`csharp
public bool Overwrite { get; set; }
\`\`\`

- *Type:* bool
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---

### KubernetesNetworkConfigProperty <a name=\\"KubernetesNetworkConfigProperty\\" id=\\"monocdk.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesNetworkConfigProperty {
    string ServiceIpv4Cidr = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\">ServiceIpv4Cidr</a></code> | <code>string</code> | \`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`. |

---

##### \`ServiceIpv4Cidr\`<sup>Optional</sup> <a name=\\"ServiceIpv4Cidr\\" id=\\"monocdk.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\"></a>

\`\`\`csharp
public string ServiceIpv4Cidr { get; set; }
\`\`\`

- *Type:* string

\`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr)

---

### KubernetesObjectValueProps <a name=\\"KubernetesObjectValueProps\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps\\"></a>

Properties for KubernetesObjectValue.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesObjectValueProps {
    ICluster Cluster,
    string JsonPath,
    string ObjectName,
    string ObjectType,
    string ObjectNamespace = null,
    Duration Timeout = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.jsonPath\\">JsonPath</a></code> | <code>string</code> | JSONPath to the specific value. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.objectName\\">ObjectName</a></code> | <code>string</code> | The name of the object to query. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.objectType\\">ObjectType</a></code> | <code>string</code> | The object type to query. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\">ObjectNamespace</a></code> | <code>string</code> | The namespace the object belongs to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.timeout\\">Timeout</a></code> | <code>Amazon.CDK.Duration</code> | Timeout for waiting on a value. |

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`JsonPath\`<sup>Required</sup> <a name=\\"JsonPath\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.jsonPath\\"></a>

\`\`\`csharp
public string JsonPath { get; set; }
\`\`\`

- *Type:* string

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`ObjectName\`<sup>Required</sup> <a name=\\"ObjectName\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.objectName\\"></a>

\`\`\`csharp
public string ObjectName { get; set; }
\`\`\`

- *Type:* string

The name of the object to query.

---

##### \`ObjectType\`<sup>Required</sup> <a name=\\"ObjectType\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.objectType\\"></a>

\`\`\`csharp
public string ObjectType { get; set; }
\`\`\`

- *Type:* string

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`ObjectNamespace\`<sup>Optional</sup> <a name=\\"ObjectNamespace\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\"></a>

\`\`\`csharp
public string ObjectNamespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`Timeout\`<sup>Optional</sup> <a name=\\"Timeout\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.timeout\\"></a>

\`\`\`csharp
public Duration Timeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---

### KubernetesPatchProps <a name=\\"KubernetesPatchProps\\" id=\\"monocdk.aws_eks.KubernetesPatchProps\\"></a>

Properties for KubernetesPatch.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new KubernetesPatchProps {
    System.Collections.Generic.IDictionary<string, object> ApplyPatch,
    ICluster Cluster,
    string ResourceName,
    System.Collections.Generic.IDictionary<string, object> RestorePatch,
    PatchType PatchType = null,
    string ResourceNamespace = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.applyPatch\\">ApplyPatch</a></code> | <code>System.Collections.Generic.IDictionary<string, object></code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The cluster to apply the patch to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.resourceName\\">ResourceName</a></code> | <code>string</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.restorePatch\\">RestorePatch</a></code> | <code>System.Collections.Generic.IDictionary<string, object></code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.patchType\\">PatchType</a></code> | <code>Amazon.CDK.aws_eks.PatchType</code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.resourceNamespace\\">ResourceNamespace</a></code> | <code>string</code> | The kubernetes API namespace. |

---

##### \`ApplyPatch\`<sup>Required</sup> <a name=\\"ApplyPatch\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.applyPatch\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object> ApplyPatch { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`ResourceName\`<sup>Required</sup> <a name=\\"ResourceName\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.resourceName\\"></a>

\`\`\`csharp
public string ResourceName { get; set; }
\`\`\`

- *Type:* string

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`RestorePatch\`<sup>Required</sup> <a name=\\"RestorePatch\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.restorePatch\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, object> RestorePatch { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, object>

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`PatchType\`<sup>Optional</sup> <a name=\\"PatchType\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.patchType\\"></a>

\`\`\`csharp
public PatchType PatchType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.PatchType
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`ResourceNamespace\`<sup>Optional</sup> <a name=\\"ResourceNamespace\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.resourceNamespace\\"></a>

\`\`\`csharp
public string ResourceNamespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The kubernetes API namespace.

---

### LabelProperty <a name=\\"LabelProperty\\" id=\\"monocdk.aws_eks.CfnFargateProfile.LabelProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnFargateProfile.LabelProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new LabelProperty {
    string Key,
    string Value
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.LabelProperty.property.key\\">Key</a></code> | <code>string</code> | \`CfnFargateProfile.LabelProperty.Key\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.LabelProperty.property.value\\">Value</a></code> | <code>string</code> | \`CfnFargateProfile.LabelProperty.Value\`. |

---

##### \`Key\`<sup>Required</sup> <a name=\\"Key\\" id=\\"monocdk.aws_eks.CfnFargateProfile.LabelProperty.property.key\\"></a>

\`\`\`csharp
public string Key { get; set; }
\`\`\`

- *Type:* string

\`CfnFargateProfile.LabelProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key)

---

##### \`Value\`<sup>Required</sup> <a name=\\"Value\\" id=\\"monocdk.aws_eks.CfnFargateProfile.LabelProperty.property.value\\"></a>

\`\`\`csharp
public string Value { get; set; }
\`\`\`

- *Type:* string

\`CfnFargateProfile.LabelProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value)

---

### LaunchTemplateSpec <a name=\\"LaunchTemplateSpec\\" id=\\"monocdk.aws_eks.LaunchTemplateSpec\\"></a>

Launch template property specification.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.LaunchTemplateSpec.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new LaunchTemplateSpec {
    string Id,
    string Version = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.LaunchTemplateSpec.property.id\\">Id</a></code> | <code>string</code> | The Launch template ID. |
| <code><a href=\\"#monocdk.aws_eks.LaunchTemplateSpec.property.version\\">Version</a></code> | <code>string</code> | The launch template version to be used (optional). |

---

##### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.LaunchTemplateSpec.property.id\\"></a>

\`\`\`csharp
public string Id { get; set; }
\`\`\`

- *Type:* string

The Launch template ID.

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.LaunchTemplateSpec.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string
- *Default:* the default version of the launch template

The launch template version to be used (optional).

---

### LaunchTemplateSpecificationProperty <a name=\\"LaunchTemplateSpecificationProperty\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new LaunchTemplateSpecificationProperty {
    string Id = null,
    string Name = null,
    string Version = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\">Id</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\">Name</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\">Version</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`. |

---

##### \`Id\`<sup>Optional</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\"></a>

\`\`\`csharp
public string Id { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id)

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\"></a>

\`\`\`csharp
public string Name { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name)

---

##### \`Version\`<sup>Optional</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\"></a>

\`\`\`csharp
public string Version { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version)

---

### NodegroupOptions <a name=\\"NodegroupOptions\\" id=\\"monocdk.aws_eks.NodegroupOptions\\"></a>

The Nodegroup Options for addNodeGroup() method.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.NodegroupOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new NodegroupOptions {
    NodegroupAmiType AmiType = null,
    CapacityType CapacityType = null,
    double DesiredSize = null,
    double DiskSize = null,
    bool ForceUpdate = null,
    InstanceType InstanceType = null,
    InstanceType[] InstanceTypes = null,
    System.Collections.Generic.IDictionary<string, string> Labels = null,
    LaunchTemplateSpec LaunchTemplateSpec = null,
    double MaxSize = null,
    double MinSize = null,
    string NodegroupName = null,
    IRole NodeRole = null,
    string ReleaseVersion = null,
    NodegroupRemoteAccess RemoteAccess = null,
    SubnetSelection Subnets = null,
    System.Collections.Generic.IDictionary<string, string> Tags = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.amiType\\">AmiType</a></code> | <code>Amazon.CDK.aws_eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.capacityType\\">CapacityType</a></code> | <code>Amazon.CDK.aws_eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.desiredSize\\">DesiredSize</a></code> | <code>double</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.diskSize\\">DiskSize</a></code> | <code>double</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.forceUpdate\\">ForceUpdate</a></code> | <code>bool</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.instanceType\\">InstanceType</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType</code> | The instance type to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.instanceTypes\\">InstanceTypes</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType[]</code> | The instance types to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.labels\\">Labels</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.launchTemplateSpec\\">LaunchTemplateSpec</a></code> | <code>Amazon.CDK.aws_eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.maxSize\\">MaxSize</a></code> | <code>double</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.minSize\\">MinSize</a></code> | <code>double</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | Name of the Nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.nodeRole\\">NodeRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.releaseVersion\\">ReleaseVersion</a></code> | <code>string</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.remoteAccess\\">RemoteAccess</a></code> | <code>Amazon.CDK.aws_eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.subnets\\">Subnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.tags\\">Tags</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The metadata to apply to the node group to assist with categorization and organization. |

---

##### \`AmiType\`<sup>Optional</sup> <a name=\\"AmiType\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.amiType\\"></a>

\`\`\`csharp
public NodegroupAmiType AmiType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`CapacityType\`<sup>Optional</sup> <a name=\\"CapacityType\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.capacityType\\"></a>

\`\`\`csharp
public CapacityType CapacityType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`DesiredSize\`<sup>Optional</sup> <a name=\\"DesiredSize\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.desiredSize\\"></a>

\`\`\`csharp
public double DesiredSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`DiskSize\`<sup>Optional</sup> <a name=\\"DiskSize\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.diskSize\\"></a>

\`\`\`csharp
public double DiskSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`ForceUpdate\`<sup>Optional</sup> <a name=\\"ForceUpdate\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.forceUpdate\\"></a>

\`\`\`csharp
public bool ForceUpdate { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### ~~\`InstanceType\`~~<sup>Optional</sup> <a name=\\"InstanceType\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.instanceType\\"></a>

- *Deprecated:* Use \`instanceTypes\` instead.

\`\`\`csharp
public InstanceType InstanceType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType
- *Default:* t3.medium

The instance type to use for your node group.

Currently, you can specify a single instance type for a node group. The default value for this parameter is \`t3.medium\`. If you choose a GPU instance type, be sure to specify the \`AL2_x86_64_GPU\` with the amiType parameter.

---

##### \`InstanceTypes\`<sup>Optional</sup> <a name=\\"InstanceTypes\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.instanceTypes\\"></a>

\`\`\`csharp
public InstanceType[] InstanceTypes { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType[]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.labels\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Labels { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`LaunchTemplateSpec\`<sup>Optional</sup> <a name=\\"LaunchTemplateSpec\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.launchTemplateSpec\\"></a>

\`\`\`csharp
public LaunchTemplateSpec LaunchTemplateSpec { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`MaxSize\`<sup>Optional</sup> <a name=\\"MaxSize\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.maxSize\\"></a>

\`\`\`csharp
public double MaxSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`MinSize\`<sup>Optional</sup> <a name=\\"MinSize\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.minSize\\"></a>

\`\`\`csharp
public double MinSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`NodegroupName\`<sup>Optional</sup> <a name=\\"NodegroupName\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; set; }
\`\`\`

- *Type:* string
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`NodeRole\`<sup>Optional</sup> <a name=\\"NodeRole\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.nodeRole\\"></a>

\`\`\`csharp
public IRole NodeRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`ReleaseVersion\`<sup>Optional</sup> <a name=\\"ReleaseVersion\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.releaseVersion\\"></a>

\`\`\`csharp
public string ReleaseVersion { get; set; }
\`\`\`

- *Type:* string
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`RemoteAccess\`<sup>Optional</sup> <a name=\\"RemoteAccess\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.remoteAccess\\"></a>

\`\`\`csharp
public NodegroupRemoteAccess RemoteAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`Subnets\`<sup>Optional</sup> <a name=\\"Subnets\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.subnets\\"></a>

\`\`\`csharp
public SubnetSelection Subnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.tags\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Tags { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

### NodegroupProps <a name=\\"NodegroupProps\\" id=\\"monocdk.aws_eks.NodegroupProps\\"></a>

NodeGroup properties interface.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.NodegroupProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new NodegroupProps {
    NodegroupAmiType AmiType = null,
    CapacityType CapacityType = null,
    double DesiredSize = null,
    double DiskSize = null,
    bool ForceUpdate = null,
    InstanceType InstanceType = null,
    InstanceType[] InstanceTypes = null,
    System.Collections.Generic.IDictionary<string, string> Labels = null,
    LaunchTemplateSpec LaunchTemplateSpec = null,
    double MaxSize = null,
    double MinSize = null,
    string NodegroupName = null,
    IRole NodeRole = null,
    string ReleaseVersion = null,
    NodegroupRemoteAccess RemoteAccess = null,
    SubnetSelection Subnets = null,
    System.Collections.Generic.IDictionary<string, string> Tags = null,
    ICluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.amiType\\">AmiType</a></code> | <code>Amazon.CDK.aws_eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.capacityType\\">CapacityType</a></code> | <code>Amazon.CDK.aws_eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.desiredSize\\">DesiredSize</a></code> | <code>double</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.diskSize\\">DiskSize</a></code> | <code>double</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.forceUpdate\\">ForceUpdate</a></code> | <code>bool</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.instanceType\\">InstanceType</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType</code> | The instance type to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.instanceTypes\\">InstanceTypes</a></code> | <code>Amazon.CDK.aws_ec2.InstanceType[]</code> | The instance types to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.labels\\">Labels</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.launchTemplateSpec\\">LaunchTemplateSpec</a></code> | <code>Amazon.CDK.aws_eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.maxSize\\">MaxSize</a></code> | <code>double</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.minSize\\">MinSize</a></code> | <code>double</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | Name of the Nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.nodeRole\\">NodeRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.releaseVersion\\">ReleaseVersion</a></code> | <code>string</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.remoteAccess\\">RemoteAccess</a></code> | <code>Amazon.CDK.aws_eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.subnets\\">Subnets</a></code> | <code>Amazon.CDK.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.tags\\">Tags</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | Cluster resource. |

---

##### \`AmiType\`<sup>Optional</sup> <a name=\\"AmiType\\" id=\\"monocdk.aws_eks.NodegroupProps.property.amiType\\"></a>

\`\`\`csharp
public NodegroupAmiType AmiType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`CapacityType\`<sup>Optional</sup> <a name=\\"CapacityType\\" id=\\"monocdk.aws_eks.NodegroupProps.property.capacityType\\"></a>

\`\`\`csharp
public CapacityType CapacityType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`DesiredSize\`<sup>Optional</sup> <a name=\\"DesiredSize\\" id=\\"monocdk.aws_eks.NodegroupProps.property.desiredSize\\"></a>

\`\`\`csharp
public double DesiredSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`DiskSize\`<sup>Optional</sup> <a name=\\"DiskSize\\" id=\\"monocdk.aws_eks.NodegroupProps.property.diskSize\\"></a>

\`\`\`csharp
public double DiskSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`ForceUpdate\`<sup>Optional</sup> <a name=\\"ForceUpdate\\" id=\\"monocdk.aws_eks.NodegroupProps.property.forceUpdate\\"></a>

\`\`\`csharp
public bool ForceUpdate { get; set; }
\`\`\`

- *Type:* bool
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### ~~\`InstanceType\`~~<sup>Optional</sup> <a name=\\"InstanceType\\" id=\\"monocdk.aws_eks.NodegroupProps.property.instanceType\\"></a>

- *Deprecated:* Use \`instanceTypes\` instead.

\`\`\`csharp
public InstanceType InstanceType { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType
- *Default:* t3.medium

The instance type to use for your node group.

Currently, you can specify a single instance type for a node group. The default value for this parameter is \`t3.medium\`. If you choose a GPU instance type, be sure to specify the \`AL2_x86_64_GPU\` with the amiType parameter.

---

##### \`InstanceTypes\`<sup>Optional</sup> <a name=\\"InstanceTypes\\" id=\\"monocdk.aws_eks.NodegroupProps.property.instanceTypes\\"></a>

\`\`\`csharp
public InstanceType[] InstanceTypes { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.InstanceType[]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"monocdk.aws_eks.NodegroupProps.property.labels\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Labels { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`LaunchTemplateSpec\`<sup>Optional</sup> <a name=\\"LaunchTemplateSpec\\" id=\\"monocdk.aws_eks.NodegroupProps.property.launchTemplateSpec\\"></a>

\`\`\`csharp
public LaunchTemplateSpec LaunchTemplateSpec { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`MaxSize\`<sup>Optional</sup> <a name=\\"MaxSize\\" id=\\"monocdk.aws_eks.NodegroupProps.property.maxSize\\"></a>

\`\`\`csharp
public double MaxSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`MinSize\`<sup>Optional</sup> <a name=\\"MinSize\\" id=\\"monocdk.aws_eks.NodegroupProps.property.minSize\\"></a>

\`\`\`csharp
public double MinSize { get; set; }
\`\`\`

- *Type:* double
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`NodegroupName\`<sup>Optional</sup> <a name=\\"NodegroupName\\" id=\\"monocdk.aws_eks.NodegroupProps.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; set; }
\`\`\`

- *Type:* string
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`NodeRole\`<sup>Optional</sup> <a name=\\"NodeRole\\" id=\\"monocdk.aws_eks.NodegroupProps.property.nodeRole\\"></a>

\`\`\`csharp
public IRole NodeRole { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`ReleaseVersion\`<sup>Optional</sup> <a name=\\"ReleaseVersion\\" id=\\"monocdk.aws_eks.NodegroupProps.property.releaseVersion\\"></a>

\`\`\`csharp
public string ReleaseVersion { get; set; }
\`\`\`

- *Type:* string
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`RemoteAccess\`<sup>Optional</sup> <a name=\\"RemoteAccess\\" id=\\"monocdk.aws_eks.NodegroupProps.property.remoteAccess\\"></a>

\`\`\`csharp
public NodegroupRemoteAccess RemoteAccess { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`Subnets\`<sup>Optional</sup> <a name=\\"Subnets\\" id=\\"monocdk.aws_eks.NodegroupProps.property.subnets\\"></a>

\`\`\`csharp
public SubnetSelection Subnets { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`Tags\`<sup>Optional</sup> <a name=\\"Tags\\" id=\\"monocdk.aws_eks.NodegroupProps.property.tags\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Tags { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.NodegroupProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

Cluster resource.

---

### NodegroupRemoteAccess <a name=\\"NodegroupRemoteAccess\\" id=\\"monocdk.aws_eks.NodegroupRemoteAccess\\"></a>

The remote access (SSH) configuration to use with your node group.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.NodegroupRemoteAccess.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new NodegroupRemoteAccess {
    string SshKeyName,
    ISecurityGroup[] SourceSecurityGroups = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\">SshKeyName</a></code> | <code>string</code> | The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\">SourceSecurityGroups</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup[]</code> | The security groups that are allowed SSH access (port 22) to the worker nodes. |

---

##### \`SshKeyName\`<sup>Required</sup> <a name=\\"SshKeyName\\" id=\\"monocdk.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\"></a>

\`\`\`csharp
public string SshKeyName { get; set; }
\`\`\`

- *Type:* string

The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group.

---

##### \`SourceSecurityGroups\`<sup>Optional</sup> <a name=\\"SourceSecurityGroups\\" id=\\"monocdk.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\"></a>

\`\`\`csharp
public ISecurityGroup[] SourceSecurityGroups { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup[]
- *Default:* port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

The security groups that are allowed SSH access (port 22) to the worker nodes.

If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0).

---

### OpenIdConnectProviderProps <a name=\\"OpenIdConnectProviderProps\\" id=\\"monocdk.aws_eks.OpenIdConnectProviderProps\\"></a>

Initialization properties for \`OpenIdConnectProvider\`.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.OpenIdConnectProviderProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new OpenIdConnectProviderProps {
    string Url
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.OpenIdConnectProviderProps.property.url\\">Url</a></code> | <code>string</code> | The URL of the identity provider. |

---

##### \`Url\`<sup>Required</sup> <a name=\\"Url\\" id=\\"monocdk.aws_eks.OpenIdConnectProviderProps.property.url\\"></a>

\`\`\`csharp
public string Url { get; set; }
\`\`\`

- *Type:* string

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---

### ProviderProperty <a name=\\"ProviderProperty\\" id=\\"monocdk.aws_eks.CfnCluster.ProviderProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnCluster.ProviderProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ProviderProperty {
    string KeyArn = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\">KeyArn</a></code> | <code>string</code> | \`CfnCluster.ProviderProperty.KeyArn\`. |

---

##### \`KeyArn\`<sup>Optional</sup> <a name=\\"KeyArn\\" id=\\"monocdk.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\"></a>

\`\`\`csharp
public string KeyArn { get; set; }
\`\`\`

- *Type:* string

\`CfnCluster.ProviderProperty.KeyArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn)

---

### RemoteAccessProperty <a name=\\"RemoteAccessProperty\\" id=\\"monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new RemoteAccessProperty {
    string Ec2SshKey,
    string[] SourceSecurityGroups = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\">Ec2SshKey</a></code> | <code>string</code> | \`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\">SourceSecurityGroups</a></code> | <code>string[]</code> | \`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`. |

---

##### \`Ec2SshKey\`<sup>Required</sup> <a name=\\"Ec2SshKey\\" id=\\"monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\"></a>

\`\`\`csharp
public string Ec2SshKey { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey)

---

##### \`SourceSecurityGroups\`<sup>Optional</sup> <a name=\\"SourceSecurityGroups\\" id=\\"monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\"></a>

\`\`\`csharp
public string[] SourceSecurityGroups { get; set; }
\`\`\`

- *Type:* string[]

\`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups)

---

### ResourcesVpcConfigProperty <a name=\\"ResourcesVpcConfigProperty\\" id=\\"monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ResourcesVpcConfigProperty {
    string[] SubnetIds,
    string[] SecurityGroupIds = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\">SubnetIds</a></code> | <code>string[]</code> | \`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\">SecurityGroupIds</a></code> | <code>string[]</code> | \`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`. |

---

##### \`SubnetIds\`<sup>Required</sup> <a name=\\"SubnetIds\\" id=\\"monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\"></a>

\`\`\`csharp
public string[] SubnetIds { get; set; }
\`\`\`

- *Type:* string[]

\`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids)

---

##### \`SecurityGroupIds\`<sup>Optional</sup> <a name=\\"SecurityGroupIds\\" id=\\"monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\"></a>

\`\`\`csharp
public string[] SecurityGroupIds { get; set; }
\`\`\`

- *Type:* string[]

\`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids)

---

### ScalingConfigProperty <a name=\\"ScalingConfigProperty\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ScalingConfigProperty {
    double DesiredSize = null,
    double MaxSize = null,
    double MinSize = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\">DesiredSize</a></code> | <code>double</code> | \`CfnNodegroup.ScalingConfigProperty.DesiredSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\">MaxSize</a></code> | <code>double</code> | \`CfnNodegroup.ScalingConfigProperty.MaxSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\">MinSize</a></code> | <code>double</code> | \`CfnNodegroup.ScalingConfigProperty.MinSize\`. |

---

##### \`DesiredSize\`<sup>Optional</sup> <a name=\\"DesiredSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\"></a>

\`\`\`csharp
public double DesiredSize { get; set; }
\`\`\`

- *Type:* double

\`CfnNodegroup.ScalingConfigProperty.DesiredSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize)

---

##### \`MaxSize\`<sup>Optional</sup> <a name=\\"MaxSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\"></a>

\`\`\`csharp
public double MaxSize { get; set; }
\`\`\`

- *Type:* double

\`CfnNodegroup.ScalingConfigProperty.MaxSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize)

---

##### \`MinSize\`<sup>Optional</sup> <a name=\\"MinSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\"></a>

\`\`\`csharp
public double MinSize { get; set; }
\`\`\`

- *Type:* double

\`CfnNodegroup.ScalingConfigProperty.MinSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize)

---

### Selector <a name=\\"Selector\\" id=\\"monocdk.aws_eks.Selector\\"></a>

Fargate profile selector.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.Selector.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new Selector {
    string Namespace,
    System.Collections.Generic.IDictionary<string, string> Labels = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Selector.property.namespace\\">Namespace</a></code> | <code>string</code> | The Kubernetes namespace that the selector should match. |
| <code><a href=\\"#monocdk.aws_eks.Selector.property.labels\\">Labels</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | The Kubernetes labels that the selector should match. |

---

##### \`Namespace\`<sup>Required</sup> <a name=\\"Namespace\\" id=\\"monocdk.aws_eks.Selector.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string

The Kubernetes namespace that the selector should match.

You must specify a namespace for a selector. The selector only matches pods that are created in this namespace, but you can create multiple selectors to target multiple namespaces.

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"monocdk.aws_eks.Selector.property.labels\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> Labels { get; set; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>
- *Default:* all pods within the namespace will be selected.

The Kubernetes labels that the selector should match.

A pod must contain all of the labels that are specified in the selector for it to be considered a match.

---

### SelectorProperty <a name=\\"SelectorProperty\\" id=\\"monocdk.aws_eks.CfnFargateProfile.SelectorProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnFargateProfile.SelectorProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new SelectorProperty {
    string Namespace,
    object Labels = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\">Namespace</a></code> | <code>string</code> | \`CfnFargateProfile.SelectorProperty.Namespace\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\">Labels</a></code> | <code>object</code> | \`CfnFargateProfile.SelectorProperty.Labels\`. |

---

##### \`Namespace\`<sup>Required</sup> <a name=\\"Namespace\\" id=\\"monocdk.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string

\`CfnFargateProfile.SelectorProperty.Namespace\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace)

---

##### \`Labels\`<sup>Optional</sup> <a name=\\"Labels\\" id=\\"monocdk.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\"></a>

\`\`\`csharp
public object Labels { get; set; }
\`\`\`

- *Type:* object

\`CfnFargateProfile.SelectorProperty.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels)

---

### ServiceAccountOptions <a name=\\"ServiceAccountOptions\\" id=\\"monocdk.aws_eks.ServiceAccountOptions\\"></a>

Options for \`ServiceAccount\`.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ServiceAccountOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ServiceAccountOptions {
    string Name = null,
    string Namespace = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountOptions.property.name\\">Name</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountOptions.property.namespace\\">Namespace</a></code> | <code>string</code> | The namespace of the service account. |

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"monocdk.aws_eks.ServiceAccountOptions.property.name\\"></a>

\`\`\`csharp
public string Name { get; set; }
\`\`\`

- *Type:* string
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"monocdk.aws_eks.ServiceAccountOptions.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The namespace of the service account.

---

### ServiceAccountProps <a name=\\"ServiceAccountProps\\" id=\\"monocdk.aws_eks.ServiceAccountProps\\"></a>

Properties for defining service accounts.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ServiceAccountProps.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ServiceAccountProps {
    string Name = null,
    string Namespace = null,
    ICluster Cluster
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountProps.property.name\\">Name</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountProps.property.namespace\\">Namespace</a></code> | <code>string</code> | The namespace of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountProps.property.cluster\\">Cluster</a></code> | <code>Amazon.CDK.aws_eks.ICluster</code> | The cluster to apply the patch to. |

---

##### \`Name\`<sup>Optional</sup> <a name=\\"Name\\" id=\\"monocdk.aws_eks.ServiceAccountProps.property.name\\"></a>

\`\`\`csharp
public string Name { get; set; }
\`\`\`

- *Type:* string
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"monocdk.aws_eks.ServiceAccountProps.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`Cluster\`<sup>Required</sup> <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.ServiceAccountProps.property.cluster\\"></a>

\`\`\`csharp
public ICluster Cluster { get; set; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.ICluster

The cluster to apply the patch to.

---

### ServiceLoadBalancerAddressOptions <a name=\\"ServiceLoadBalancerAddressOptions\\" id=\\"monocdk.aws_eks.ServiceLoadBalancerAddressOptions\\"></a>

Options for fetching a ServiceLoadBalancerAddress.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ServiceLoadBalancerAddressOptions.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new ServiceLoadBalancerAddressOptions {
    string Namespace = null,
    Duration Timeout = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\">Namespace</a></code> | <code>string</code> | The namespace the service belongs to. |
| <code><a href=\\"#monocdk.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\">Timeout</a></code> | <code>Amazon.CDK.Duration</code> | Timeout for waiting on the load balancer address. |

---

##### \`Namespace\`<sup>Optional</sup> <a name=\\"Namespace\\" id=\\"monocdk.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\"></a>

\`\`\`csharp
public string Namespace { get; set; }
\`\`\`

- *Type:* string
- *Default:* 'default'

The namespace the service belongs to.

---

##### \`Timeout\`<sup>Optional</sup> <a name=\\"Timeout\\" id=\\"monocdk.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\"></a>

\`\`\`csharp
public Duration Timeout { get; set; }
\`\`\`

- *Type:* Amazon.CDK.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on the load balancer address.

---

### TaintProperty <a name=\\"TaintProperty\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new TaintProperty {
    string Effect = null,
    string Key = null,
    string Value = null
};
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.TaintProperty.property.effect\\">Effect</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Effect\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.TaintProperty.property.key\\">Key</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Key\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.TaintProperty.property.value\\">Value</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Value\`. |

---

##### \`Effect\`<sup>Optional</sup> <a name=\\"Effect\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty.property.effect\\"></a>

\`\`\`csharp
public string Effect { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Effect\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect)

---

##### \`Key\`<sup>Optional</sup> <a name=\\"Key\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty.property.key\\"></a>

\`\`\`csharp
public string Key { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key)

---

##### \`Value\`<sup>Optional</sup> <a name=\\"Value\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty.property.value\\"></a>

\`\`\`csharp
public string Value { get; set; }
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value)

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### EksOptimizedImage <a name=\\"EksOptimizedImage\\" id=\\"monocdk.aws_eks.EksOptimizedImage\\"></a>

- *Implements:* Amazon.CDK.aws_ec2.IMachineImage

Construct an Amazon Linux 2 image from the latest EKS Optimized AMI published in SSM.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.EksOptimizedImage.Initializer\\"></a>

\`\`\`csharp
using Amazon.CDK;

new EksOptimizedImage(EksOptimizedImageProps Props = null);
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImage.Initializer.parameter.props\\">Props</a></code> | <code>Amazon.CDK.aws_eks.EksOptimizedImageProps</code> | *No description.* |

---

##### \`Props\`<sup>Optional</sup> <a name=\\"Props\\" id=\\"monocdk.aws_eks.EksOptimizedImage.Initializer.parameter.props\\"></a>

- *Type:* Amazon.CDK.aws_eks.EksOptimizedImageProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImage.getImage\\">GetImage</a></code> | Return the correct image. |

---

##### \`GetImage\` <a name=\\"GetImage\\" id=\\"monocdk.aws_eks.EksOptimizedImage.getImage\\"></a>

\`\`\`csharp
private GetImage(Construct Scope)
\`\`\`

###### \`Scope\`<sup>Required</sup> <a name=\\"Scope\\" id=\\"monocdk.aws_eks.EksOptimizedImage.getImage.parameter.scope\\"></a>

- *Type:* Amazon.CDK.Construct

---




### EndpointAccess <a name=\\"EndpointAccess\\" id=\\"monocdk.aws_eks.EndpointAccess\\"></a>

Endpoint access characteristics.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EndpointAccess.onlyFrom\\">OnlyFrom</a></code> | Restrict public access to specific CIDR blocks. |

---

##### \`OnlyFrom\` <a name=\\"OnlyFrom\\" id=\\"monocdk.aws_eks.EndpointAccess.onlyFrom\\"></a>

\`\`\`csharp
private OnlyFrom(string Cidr)
\`\`\`

###### \`Cidr\`<sup>Required</sup> <a name=\\"Cidr\\" id=\\"monocdk.aws_eks.EndpointAccess.onlyFrom.parameter.cidr\\"></a>

- *Type:* string

CIDR blocks.

---



#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EndpointAccess.property.PRIVATE\\">Private</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | The cluster endpoint is only accessible through your VPC. |
| <code><a href=\\"#monocdk.aws_eks.EndpointAccess.property.PUBLIC\\">Public</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | The cluster endpoint is accessible from outside of your VPC. |
| <code><a href=\\"#monocdk.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\">PublicAndPrivate</a></code> | <code>Amazon.CDK.aws_eks.EndpointAccess</code> | The cluster endpoint is accessible from outside of your VPC. |

---

##### \`Private\`<sup>Required</sup> <a name=\\"Private\\" id=\\"monocdk.aws_eks.EndpointAccess.property.PRIVATE\\"></a>

\`\`\`csharp
public EndpointAccess Private { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess

The cluster endpoint is only accessible through your VPC.

Worker node traffic to the endpoint will stay within your VPC.

---

##### \`Public\`<sup>Required</sup> <a name=\\"Public\\" id=\\"monocdk.aws_eks.EndpointAccess.property.PUBLIC\\"></a>

\`\`\`csharp
public EndpointAccess Public { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic will leave your VPC to connect to the endpoint.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

##### \`PublicAndPrivate\`<sup>Required</sup> <a name=\\"PublicAndPrivate\\" id=\\"monocdk.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\"></a>

\`\`\`csharp
public EndpointAccess PublicAndPrivate { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.EndpointAccess

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic to the endpoint will stay within your VPC.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC_AND_PRIVATE.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

### KubernetesVersion <a name=\\"KubernetesVersion\\" id=\\"monocdk.aws_eks.KubernetesVersion\\"></a>

Kubernetes cluster version.


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.of\\">Of</a></code> | Custom cluster version. |

---

##### \`Of\` <a name=\\"Of\\" id=\\"monocdk.aws_eks.KubernetesVersion.of\\"></a>

\`\`\`csharp
using Amazon.CDK;

KubernetesVersion.Of(string Version);
\`\`\`

###### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.KubernetesVersion.of.parameter.version\\"></a>

- *Type:* string

custom version number.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.version\\">Version</a></code> | <code>string</code> | cluster version number. |

---

##### \`Version\`<sup>Required</sup> <a name=\\"Version\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.version\\"></a>

\`\`\`csharp
public string Version { get; }
\`\`\`

- *Type:* string

cluster version number.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_14\\">V114</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.14. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_15\\">V115</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.15. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_16\\">V116</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.16. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_17\\">V117</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.17. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_18\\">V118</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.18. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_19\\">V119</a></code> | <code>Amazon.CDK.aws_eks.KubernetesVersion</code> | Kubernetes version 1.19. |

---

##### \`V114\`<sup>Required</sup> <a name=\\"V114\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_14\\"></a>

\`\`\`csharp
public KubernetesVersion V114 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.14.

---

##### \`V115\`<sup>Required</sup> <a name=\\"V115\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_15\\"></a>

\`\`\`csharp
public KubernetesVersion V115 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.15.

---

##### \`V116\`<sup>Required</sup> <a name=\\"V116\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_16\\"></a>

\`\`\`csharp
public KubernetesVersion V116 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.16.

---

##### \`V117\`<sup>Required</sup> <a name=\\"V117\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_17\\"></a>

\`\`\`csharp
public KubernetesVersion V117 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.17.

---

##### \`V118\`<sup>Required</sup> <a name=\\"V118\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_18\\"></a>

\`\`\`csharp
public KubernetesVersion V118 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.18.

---

##### \`V119\`<sup>Required</sup> <a name=\\"V119\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_19\\"></a>

\`\`\`csharp
public KubernetesVersion V119 { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_eks.KubernetesVersion

Kubernetes version 1.19.

---

## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### ICluster <a name=\\"ICluster\\" id=\\"monocdk.aws_eks.ICluster\\"></a>

- *Extends:* Amazon.CDK.IResource, Amazon.CDK.aws_ec2.IConnectable

- *Implemented By:* Amazon.CDK.aws_eks.Cluster, Amazon.CDK.aws_eks.FargateCluster, Amazon.CDK.aws_eks.ICluster

An EKS cluster.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ICluster.addCdk8sChart\\">AddCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.addHelmChart\\">AddHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.addManifest\\">AddManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.addServiceAccount\\">AddServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |

---

##### \`AddCdk8sChart\` <a name=\\"AddCdk8sChart\\" id=\\"monocdk.aws_eks.ICluster.addCdk8sChart\\"></a>

\`\`\`csharp
private AddCdk8sChart(string Id, Construct Chart)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.ICluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`Chart\`<sup>Required</sup> <a name=\\"Chart\\" id=\\"monocdk.aws_eks.ICluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* Constructs.Construct

the cdk8s chart.

---

##### \`AddHelmChart\` <a name=\\"AddHelmChart\\" id=\\"monocdk.aws_eks.ICluster.addHelmChart\\"></a>

\`\`\`csharp
private AddHelmChart(string Id, HelmChartOptions Options)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.ICluster.addHelmChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`Options\`<sup>Required</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.ICluster.addHelmChart.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.HelmChartOptions

options of this chart.

---

##### \`AddManifest\` <a name=\\"AddManifest\\" id=\\"monocdk.aws_eks.ICluster.addManifest\\"></a>

\`\`\`csharp
private AddManifest(string Id, System.Collections.Generic.IDictionary<string, object> Manifest)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.ICluster.addManifest.parameter.id\\"></a>

- *Type:* string

logical id of this manifest.

---

###### \`Manifest\`<sup>Required</sup> <a name=\\"Manifest\\" id=\\"monocdk.aws_eks.ICluster.addManifest.parameter.manifest\\"></a>

- *Type:* System.Collections.Generic.IDictionary<string, object>

a list of Kubernetes resource specifications.

---

##### \`AddServiceAccount\` <a name=\\"AddServiceAccount\\" id=\\"monocdk.aws_eks.ICluster.addServiceAccount\\"></a>

\`\`\`csharp
private AddServiceAccount(string Id, ServiceAccountOptions Options = null)
\`\`\`

###### \`Id\`<sup>Required</sup> <a name=\\"Id\\" id=\\"monocdk.aws_eks.ICluster.addServiceAccount.parameter.id\\"></a>

- *Type:* string

logical id of service account.

---

###### \`Options\`<sup>Optional</sup> <a name=\\"Options\\" id=\\"monocdk.aws_eks.ICluster.addServiceAccount.parameter.options\\"></a>

- *Type:* Amazon.CDK.aws_eks.ServiceAccountOptions

service account options.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.node\\">Node</a></code> | <code>Amazon.CDK.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.env\\">Env</a></code> | <code>Amazon.CDK.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.stack\\">Stack</a></code> | <code>Amazon.CDK.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.connections\\">Connections</a></code> | <code>Amazon.CDK.aws_ec2.Connections</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterArn\\">ClusterArn</a></code> | <code>string</code> | The unique ARN assigned to the service by AWS in the form of arn:aws:eks:. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterCertificateAuthorityData\\">ClusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\">ClusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterEndpoint\\">ClusterEndpoint</a></code> | <code>string</code> | The API Server endpoint URL. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterName\\">ClusterName</a></code> | <code>string</code> | The physical name of the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterSecurityGroup\\">ClusterSecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterSecurityGroupId\\">ClusterSecurityGroupId</a></code> | <code>string</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.openIdConnectProvider\\">OpenIdConnectProvider</a></code> | <code>Amazon.CDK.aws_iam.IOpenIdConnectProvider</code> | The Open ID Connect Provider of the cluster used to configure Service Accounts. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.prune\\">Prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.vpc\\">Vpc</a></code> | <code>Amazon.CDK.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlEnvironment\\">KubectlEnvironment</a></code> | <code>System.Collections.Generic.IDictionary<string, string></code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlLayer\\">KubectlLayer</a></code> | <code>Amazon.CDK.aws_lambda.ILayerVersion</code> | An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlMemory\\">KubectlMemory</a></code> | <code>Amazon.CDK.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlPrivateSubnets\\">KubectlPrivateSubnets</a></code> | <code>Amazon.CDK.aws_ec2.ISubnet[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlRole\\">KubectlRole</a></code> | <code>Amazon.CDK.aws_iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlSecurityGroup\\">KubectlSecurityGroup</a></code> | <code>Amazon.CDK.aws_ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`Node\`<sup>Required</sup> <a name=\\"Node\\" id=\\"monocdk.aws_eks.ICluster.property.node\\"></a>

\`\`\`csharp
public ConstructNode Node { get; }
\`\`\`

- *Type:* Amazon.CDK.ConstructNode

The construct tree node for this construct.

---

##### \`Env\`<sup>Required</sup> <a name=\\"Env\\" id=\\"monocdk.aws_eks.ICluster.property.env\\"></a>

\`\`\`csharp
public ResourceEnvironment Env { get; }
\`\`\`

- *Type:* Amazon.CDK.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`Stack\`<sup>Required</sup> <a name=\\"Stack\\" id=\\"monocdk.aws_eks.ICluster.property.stack\\"></a>

\`\`\`csharp
public Stack Stack { get; }
\`\`\`

- *Type:* Amazon.CDK.Stack

The stack in which this resource is defined.

---

##### \`Connections\`<sup>Required</sup> <a name=\\"Connections\\" id=\\"monocdk.aws_eks.ICluster.property.connections\\"></a>

\`\`\`csharp
public Connections Connections { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.Connections

---

##### \`ClusterArn\`<sup>Required</sup> <a name=\\"ClusterArn\\" id=\\"monocdk.aws_eks.ICluster.property.clusterArn\\"></a>

\`\`\`csharp
public string ClusterArn { get; }
\`\`\`

- *Type:* string

The unique ARN assigned to the service by AWS in the form of arn:aws:eks:.

---

##### \`ClusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"ClusterCertificateAuthorityData\\" id=\\"monocdk.aws_eks.ICluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`csharp
public string ClusterCertificateAuthorityData { get; }
\`\`\`

- *Type:* string

The certificate-authority-data for your cluster.

---

##### \`ClusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"ClusterEncryptionConfigKeyArn\\" id=\\"monocdk.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`csharp
public string ClusterEncryptionConfigKeyArn { get; }
\`\`\`

- *Type:* string

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`ClusterEndpoint\`<sup>Required</sup> <a name=\\"ClusterEndpoint\\" id=\\"monocdk.aws_eks.ICluster.property.clusterEndpoint\\"></a>

\`\`\`csharp
public string ClusterEndpoint { get; }
\`\`\`

- *Type:* string

The API Server endpoint URL.

---

##### \`ClusterName\`<sup>Required</sup> <a name=\\"ClusterName\\" id=\\"monocdk.aws_eks.ICluster.property.clusterName\\"></a>

\`\`\`csharp
public string ClusterName { get; }
\`\`\`

- *Type:* string

The physical name of the Cluster.

---

##### \`ClusterSecurityGroup\`<sup>Required</sup> <a name=\\"ClusterSecurityGroup\\" id=\\"monocdk.aws_eks.ICluster.property.clusterSecurityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup ClusterSecurityGroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`ClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"ClusterSecurityGroupId\\" id=\\"monocdk.aws_eks.ICluster.property.clusterSecurityGroupId\\"></a>

\`\`\`csharp
public string ClusterSecurityGroupId { get; }
\`\`\`

- *Type:* string

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`OpenIdConnectProvider\`<sup>Required</sup> <a name=\\"OpenIdConnectProvider\\" id=\\"monocdk.aws_eks.ICluster.property.openIdConnectProvider\\"></a>

\`\`\`csharp
public IOpenIdConnectProvider OpenIdConnectProvider { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IOpenIdConnectProvider

The Open ID Connect Provider of the cluster used to configure Service Accounts.

---

##### \`Prune\`<sup>Required</sup> <a name=\\"Prune\\" id=\\"monocdk.aws_eks.ICluster.property.prune\\"></a>

\`\`\`csharp
public bool Prune { get; }
\`\`\`

- *Type:* bool

Indicates whether Kubernetes resources can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`Vpc\`<sup>Required</sup> <a name=\\"Vpc\\" id=\\"monocdk.aws_eks.ICluster.property.vpc\\"></a>

\`\`\`csharp
public IVpc Vpc { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`KubectlEnvironment\`<sup>Optional</sup> <a name=\\"KubectlEnvironment\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlEnvironment\\"></a>

\`\`\`csharp
public System.Collections.Generic.IDictionary<string, string> KubectlEnvironment { get; }
\`\`\`

- *Type:* System.Collections.Generic.IDictionary<string, string>

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`KubectlLayer\`<sup>Optional</sup> <a name=\\"KubectlLayer\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlLayer\\"></a>

\`\`\`csharp
public ILayerVersion KubectlLayer { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_lambda.ILayerVersion

An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI.

If not defined, a default layer will be used.

---

##### \`KubectlMemory\`<sup>Optional</sup> <a name=\\"KubectlMemory\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlMemory\\"></a>

\`\`\`csharp
public Size KubectlMemory { get; }
\`\`\`

- *Type:* Amazon.CDK.Size

Amount of memory to allocate to the provider's lambda function.

---

##### \`KubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"KubectlPrivateSubnets\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`csharp
public ISubnet[] KubectlPrivateSubnets { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISubnet[]

Subnets to host the \`kubectl\` compute resources.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

##### \`KubectlRole\`<sup>Optional</sup> <a name=\\"KubectlRole\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlRole\\"></a>

\`\`\`csharp
public IRole KubectlRole { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`KubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"KubectlSecurityGroup\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlSecurityGroup\\"></a>

\`\`\`csharp
public ISecurityGroup KubectlSecurityGroup { get; }
\`\`\`

- *Type:* Amazon.CDK.aws_ec2.ISecurityGroup

A security group to use for \`kubectl\` execution.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

### INodegroup <a name=\\"INodegroup\\" id=\\"monocdk.aws_eks.INodegroup\\"></a>

- *Extends:* Amazon.CDK.IResource

- *Implemented By:* Amazon.CDK.aws_eks.Nodegroup, Amazon.CDK.aws_eks.INodegroup

NodeGroup interface.


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.INodegroup.property.node\\">Node</a></code> | <code>Amazon.CDK.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#monocdk.aws_eks.INodegroup.property.env\\">Env</a></code> | <code>Amazon.CDK.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#monocdk.aws_eks.INodegroup.property.stack\\">Stack</a></code> | <code>Amazon.CDK.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.INodegroup.property.nodegroupName\\">NodegroupName</a></code> | <code>string</code> | Name of the nodegroup. |

---

##### \`Node\`<sup>Required</sup> <a name=\\"Node\\" id=\\"monocdk.aws_eks.INodegroup.property.node\\"></a>

\`\`\`csharp
public ConstructNode Node { get; }
\`\`\`

- *Type:* Amazon.CDK.ConstructNode

The construct tree node for this construct.

---

##### \`Env\`<sup>Required</sup> <a name=\\"Env\\" id=\\"monocdk.aws_eks.INodegroup.property.env\\"></a>

\`\`\`csharp
public ResourceEnvironment Env { get; }
\`\`\`

- *Type:* Amazon.CDK.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`Stack\`<sup>Required</sup> <a name=\\"Stack\\" id=\\"monocdk.aws_eks.INodegroup.property.stack\\"></a>

\`\`\`csharp
public Stack Stack { get; }
\`\`\`

- *Type:* Amazon.CDK.Stack

The stack in which this resource is defined.

---

##### \`NodegroupName\`<sup>Required</sup> <a name=\\"NodegroupName\\" id=\\"monocdk.aws_eks.INodegroup.property.nodegroupName\\"></a>

\`\`\`csharp
public string NodegroupName { get; }
\`\`\`

- *Type:* string

Name of the nodegroup.

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### CapacityType <a name=\\"CapacityType\\" id=\\"monocdk.aws_eks.CapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CapacityType.SPOT\\">SPOT</a></code> | spot instances. |
| <code><a href=\\"#monocdk.aws_eks.CapacityType.ON_DEMAND\\">ON_DEMAND</a></code> | on-demand instances. |

---

Capacity type of the managed node group.

#### \`SPOT\` <a name=\\"SPOT\\" id=\\"monocdk.aws_eks.CapacityType.SPOT\\"></a>

spot instances.

---


#### \`ON_DEMAND\` <a name=\\"ON_DEMAND\\" id=\\"monocdk.aws_eks.CapacityType.ON_DEMAND\\"></a>

on-demand instances.

---


### CoreDnsComputeType <a name=\\"CoreDnsComputeType\\" id=\\"monocdk.aws_eks.CoreDnsComputeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CoreDnsComputeType.EC2\\">EC2</a></code> | Deploy CoreDNS on EC2 instances. |
| <code><a href=\\"#monocdk.aws_eks.CoreDnsComputeType.FARGATE\\">FARGATE</a></code> | Deploy CoreDNS on Fargate-managed instances. |

---

The type of compute resources to use for CoreDNS.

#### \`EC2\` <a name=\\"EC2\\" id=\\"monocdk.aws_eks.CoreDnsComputeType.EC2\\"></a>

Deploy CoreDNS on EC2 instances.

---


#### \`FARGATE\` <a name=\\"FARGATE\\" id=\\"monocdk.aws_eks.CoreDnsComputeType.FARGATE\\"></a>

Deploy CoreDNS on Fargate-managed instances.

---


### CpuArch <a name=\\"CpuArch\\" id=\\"monocdk.aws_eks.CpuArch\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CpuArch.ARM_64\\">ARM_64</a></code> | arm64 CPU type. |
| <code><a href=\\"#monocdk.aws_eks.CpuArch.X86_64\\">X86_64</a></code> | x86_64 CPU type. |

---

CPU architecture.

#### \`ARM_64\` <a name=\\"ARM_64\\" id=\\"monocdk.aws_eks.CpuArch.ARM_64\\"></a>

arm64 CPU type.

---


#### \`X86_64\` <a name=\\"X86_64\\" id=\\"monocdk.aws_eks.CpuArch.X86_64\\"></a>

x86_64 CPU type.

---


### DefaultCapacityType <a name=\\"DefaultCapacityType\\" id=\\"monocdk.aws_eks.DefaultCapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.DefaultCapacityType.NODEGROUP\\">NODEGROUP</a></code> | managed node group. |
| <code><a href=\\"#monocdk.aws_eks.DefaultCapacityType.EC2\\">EC2</a></code> | EC2 autoscaling group. |

---

The default capacity type for the cluster.

#### \`NODEGROUP\` <a name=\\"NODEGROUP\\" id=\\"monocdk.aws_eks.DefaultCapacityType.NODEGROUP\\"></a>

managed node group.

---


#### \`EC2\` <a name=\\"EC2\\" id=\\"monocdk.aws_eks.DefaultCapacityType.EC2\\"></a>

EC2 autoscaling group.

---


### MachineImageType <a name=\\"MachineImageType\\" id=\\"monocdk.aws_eks.MachineImageType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.MachineImageType.AMAZON_LINUX_2\\">AMAZON_LINUX_2</a></code> | Amazon EKS-optimized Linux AMI. |
| <code><a href=\\"#monocdk.aws_eks.MachineImageType.BOTTLEROCKET\\">BOTTLEROCKET</a></code> | Bottlerocket AMI. |

---

The machine image type.

#### \`AMAZON_LINUX_2\` <a name=\\"AMAZON_LINUX_2\\" id=\\"monocdk.aws_eks.MachineImageType.AMAZON_LINUX_2\\"></a>

Amazon EKS-optimized Linux AMI.

---


#### \`BOTTLEROCKET\` <a name=\\"BOTTLEROCKET\\" id=\\"monocdk.aws_eks.MachineImageType.BOTTLEROCKET\\"></a>

Bottlerocket AMI.

---


### NodegroupAmiType <a name=\\"NodegroupAmiType\\" id=\\"monocdk.aws_eks.NodegroupAmiType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodegroupAmiType.AL2_X86_64\\">AL2_X86_64</a></code> | Amazon Linux 2 (x86-64). |
| <code><a href=\\"#monocdk.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\">AL2_X86_64_GPU</a></code> | Amazon Linux 2 with GPU support. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupAmiType.AL2_ARM_64\\">AL2_ARM_64</a></code> | Amazon Linux 2 (ARM-64). |

---

The AMI type for your node group.

GPU instance types should use the \`AL2_x86_64_GPU\` AMI type, which uses the Amazon EKS-optimized Linux AMI with GPU support. Non-GPU instances should use the \`AL2_x86_64\` AMI type, which uses the Amazon EKS-optimized Linux AMI.

#### \`AL2_X86_64\` <a name=\\"AL2_X86_64\\" id=\\"monocdk.aws_eks.NodegroupAmiType.AL2_X86_64\\"></a>

Amazon Linux 2 (x86-64).

---


#### \`AL2_X86_64_GPU\` <a name=\\"AL2_X86_64_GPU\\" id=\\"monocdk.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\"></a>

Amazon Linux 2 with GPU support.

---


#### \`AL2_ARM_64\` <a name=\\"AL2_ARM_64\\" id=\\"monocdk.aws_eks.NodegroupAmiType.AL2_ARM_64\\"></a>

Amazon Linux 2 (ARM-64).

---


### NodeType <a name=\\"NodeType\\" id=\\"monocdk.aws_eks.NodeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodeType.STANDARD\\">STANDARD</a></code> | Standard instances. |
| <code><a href=\\"#monocdk.aws_eks.NodeType.GPU\\">GPU</a></code> | GPU instances. |
| <code><a href=\\"#monocdk.aws_eks.NodeType.INFERENTIA\\">INFERENTIA</a></code> | Inferentia instances. |

---

Whether the worker nodes should support GPU or just standard instances.

#### \`STANDARD\` <a name=\\"STANDARD\\" id=\\"monocdk.aws_eks.NodeType.STANDARD\\"></a>

Standard instances.

---


#### \`GPU\` <a name=\\"GPU\\" id=\\"monocdk.aws_eks.NodeType.GPU\\"></a>

GPU instances.

---


#### \`INFERENTIA\` <a name=\\"INFERENTIA\\" id=\\"monocdk.aws_eks.NodeType.INFERENTIA\\"></a>

Inferentia instances.

---


### PatchType <a name=\\"PatchType\\" id=\\"monocdk.aws_eks.PatchType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.PatchType.JSON\\">JSON</a></code> | JSON Patch, RFC 6902. |
| <code><a href=\\"#monocdk.aws_eks.PatchType.MERGE\\">MERGE</a></code> | JSON Merge patch. |
| <code><a href=\\"#monocdk.aws_eks.PatchType.STRATEGIC\\">STRATEGIC</a></code> | Strategic merge patch. |

---

Values for \`kubectl patch\` --type argument.

#### \`JSON\` <a name=\\"JSON\\" id=\\"monocdk.aws_eks.PatchType.JSON\\"></a>

JSON Patch, RFC 6902.

---


#### \`MERGE\` <a name=\\"MERGE\\" id=\\"monocdk.aws_eks.PatchType.MERGE\\"></a>

JSON Merge patch.

---


#### \`STRATEGIC\` <a name=\\"STRATEGIC\\" id=\\"monocdk.aws_eks.PatchType.STRATEGIC\\"></a>

Strategic merge patch.

---

"
`;

exports[`java for package 1`] = `
"# Amazon ECR Construct Library

<!--BEGIN STABILITY BANNER-->---


![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
Object repository = new Repository(this, \\"Repository\\");
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
Object repository = Repository.Builder.create(stack, \\"Repo\\")
        .imageScanOnPush(true)
        .build();
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
repository.onImageScanCompleted(\\"ImageScanComplete\\").addTarget(...);
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
import software.amazon.awscdk.services.iam.*;
import software.amazon.awscdk.services.ecr.*;

User user = new User(this, \\"User\\", new UserProps()...);
AuthorizationToken.grantRead(user);
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
import software.amazon.awscdk.services.iam.*;
import software.amazon.awscdk.services.ecr.*;

User user = new User(this, \\"User\\", new UserProps()...);
PublicGalleryAuthorizationToken.grantRead(user);
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
Repository.Builder.create(stack, \\"Repo\\").imageTagMutability(ecr.getTagMutability().getIMMUTABLE()).build();
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
repository.addLifecycleRule(Map.of(\\"tagPrefixList\\", List.of(\\"prod\\"), \\"maxImageCount\\", 9999));
repository.addLifecycleRule(Map.of(\\"maxImageAge\\", cdk.Duration.days(30)));
\`\`\`
# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### CfnPublicRepository <a name=\\"CfnPublicRepository\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnPublicRepository;

CfnPublicRepository.Builder.create(Construct scope, java.lang.String id)
//  .repositoryCatalogData(java.lang.Object)
//  .repositoryName(java.lang.String)
//  .repositoryPolicyText(java.lang.Object)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`repositoryCatalogData\`<sup>Optional</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName\\"></a>

- *Type:* java.lang.String

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.core.TagManager</code> | \`AWS::ECR::PublicRepository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.core.TagManager

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

##### \`repositoryCatalogData\`<sup>Required</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\"></a>

\`\`\`java
public java.lang.Object getRepositoryCatalogData();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryPolicyText\`<sup>Required</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\"></a>

\`\`\`java
public java.lang.Object getRepositoryPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnRegistryPolicy <a name=\\"CfnRegistryPolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRegistryPolicy;

CfnRegistryPolicy.Builder.create(Construct scope, java.lang.String id)
    .policyText(java.lang.Object)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText\\">policyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\">attrRegistryId</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\">policyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`attrRegistryId\`<sup>Required</sup> <a name=\\"attrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\"></a>

\`\`\`java
public java.lang.String getAttrRegistryId();
\`\`\`

- *Type:* java.lang.String

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\"></a>

\`\`\`java
public java.lang.Object getPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnReplicationConfiguration <a name=\\"CfnReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfiguration;

CfnReplicationConfiguration.Builder.create(Construct scope, java.lang.String id)
    .replicationConfiguration(IResolvable)
    .replicationConfiguration(ReplicationConfigurationProperty)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration\\">replicationConfiguration</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration\\"></a>

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\">attrRegistryId</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\">replicationConfiguration</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`attrRegistryId\`<sup>Required</sup> <a name=\\"attrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\"></a>

\`\`\`java
public java.lang.String getAttrRegistryId();
\`\`\`

- *Type:* java.lang.String

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\"></a>

\`\`\`java
public java.lang.Object getReplicationConfiguration();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnRepository <a name=\\"CfnRepository\\" id=\\"@aws-cdk/aws-ecr.CfnRepository\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRepository;

CfnRepository.Builder.create(Construct scope, java.lang.String id)
//  .encryptionConfiguration(java.lang.Object)
//  .imageScanningConfiguration(java.lang.Object)
//  .imageTagMutability(java.lang.String)
//  .lifecyclePolicy(IResolvable)
//  .lifecyclePolicy(LifecyclePolicyProperty)
//  .repositoryName(java.lang.String)
//  .repositoryPolicyText(java.lang.Object)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability\\">imageTagMutability</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`encryptionConfiguration\`<sup>Optional</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Optional</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability\\"></a>

- *Type:* java.lang.String

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy\\"></a>

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName\\"></a>

- *Type:* java.lang.String

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\">attrRepositoryUri</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.core.TagManager</code> | \`AWS::ECR::Repository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\">imageTagMutability</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.RepositoryName\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrRepositoryUri\`<sup>Required</sup> <a name=\\"attrRepositoryUri\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\"></a>

\`\`\`java
public java.lang.String getAttrRepositoryUri();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.core.TagManager

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

##### \`encryptionConfiguration\`<sup>Required</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\"></a>

\`\`\`java
public java.lang.Object getEncryptionConfiguration();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Required</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\"></a>

\`\`\`java
public java.lang.Object getImageScanningConfiguration();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`repositoryPolicyText\`<sup>Required</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\"></a>

\`\`\`java
public java.lang.Object getRepositoryPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\"></a>

\`\`\`java
public java.lang.String getImageTagMutability();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\"></a>

\`\`\`java
public java.lang.Object getLifecyclePolicy();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### Repository <a name=\\"Repository\\" id=\\"@aws-cdk/aws-ecr.Repository\\"></a>

Define an ECR repository.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.Builder.create(Construct scope, java.lang.String id)
//  .imageScanOnPush(java.lang.Boolean)
//  .imageTagMutability(TagMutability)
//  .lifecycleRegistryId(java.lang.String)
//  .lifecycleRules(java.util.List<LifecycleRule>)
//  .removalPolicy(RemovalPolicy)
//  .repositoryName(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush\\">imageScanOnPush</a></code> | <code>java.lang.Boolean</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability\\">imageTagMutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId\\">lifecycleRegistryId</a></code> | <code>java.lang.String</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules\\">lifecycleRules</a></code> | <code>java.util.List<<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>></code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy\\">removalPolicy</a></code> | <code>software.amazon.awscdk.core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | Name for this repository. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`imageScanOnPush\`<sup>Optional</sup> <a name=\\"imageScanOnPush\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycleRegistryId\`<sup>Optional</sup> <a name=\\"lifecycleRegistryId\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId\\"></a>

- *Type:* java.lang.String
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycleRules\`<sup>Optional</sup> <a name=\\"lifecycleRules\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules\\"></a>

- *Type:* java.util.List<<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>>
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removalPolicy\`<sup>Optional</sup> <a name=\\"removalPolicy\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy\\"></a>

- *Type:* software.amazon.awscdk.core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName\\"></a>

- *Type:* java.lang.String
- *Default:* Automatically generated name.

Name for this repository.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addLifecycleRule\\">addLifecycleRule</a></code> | Add a life cycle rule to the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |

---

##### \`addLifecycleRule\` <a name=\\"addLifecycleRule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule\\"></a>

\`\`\`java
public addLifecycleRule(LifecycleRule rule)
\`\`\`

###### \`rule\`<sup>Required</sup> <a name=\\"rule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rule\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\"></a>

\`\`\`java
public addToResourcePolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\">arnForLocalRepository</a></code> | Returns an ECR ARN for a repository that resides in the same account/region as the current stack. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\">fromRepositoryArn</a></code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\">fromRepositoryAttributes</a></code> | Import a repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryName\\">fromRepositoryName</a></code> | *No description.* |

---

##### \`arnForLocalRepository\` <a name=\\"arnForLocalRepository\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.arnForLocalRepository(java.lang.String repositoryName, IConstruct scope),Repository.arnForLocalRepository(java.lang.String repositoryName, IConstruct scope, java.lang.String account)
\`\`\`

###### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName\\"></a>

- *Type:* java.lang.String

---

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope\\"></a>

- *Type:* software.constructs.IConstruct

---

###### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account\\"></a>

- *Type:* java.lang.String

---

##### \`fromRepositoryArn\` <a name=\\"fromRepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.fromRepositoryArn(Construct scope, java.lang.String id, java.lang.String repositoryArn)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn\\"></a>

- *Type:* java.lang.String

---

##### \`fromRepositoryAttributes\` <a name=\\"fromRepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.fromRepositoryAttributes(Construct scope, java.lang.String id, RepositoryAttributes attrs)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`attrs\`<sup>Required</sup> <a name=\\"attrs\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.attrs\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes\\">RepositoryAttributes</a>

---

##### \`fromRepositoryName\` <a name=\\"fromRepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.fromRepositoryName(Construct scope, java.lang.String id, java.lang.String repositoryName)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName\\"></a>

- *Type:* java.lang.String

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | The name of the repository. |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryArn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* java.lang.String

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

The name of the repository.

---


### RepositoryBase <a name=\\"RepositoryBase\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase\\"></a>

- *Implements:* <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Base class for ECR repository.

Reused between imported repositories and owned repositories.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.RepositoryBase;

RepositoryBase.Builder.create(Construct scope, java.lang.String id)
//  .account(java.lang.String)
//  .environmentFromArn(java.lang.String)
//  .physicalName(java.lang.String)
//  .region(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account\\">account</a></code> | <code>java.lang.String</code> | The AWS account ID this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn\\">environmentFromArn</a></code> | <code>java.lang.String</code> | ARN to deduce region and account from. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName\\">physicalName</a></code> | <code>java.lang.String</code> | The value passed in by users to the physical name prop of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region\\">region</a></code> | <code>java.lang.String</code> | The AWS region this resource belongs to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account\\"></a>

- *Type:* java.lang.String
- *Default:* the resource is in the same account as the stack it belongs to

The AWS account ID this resource belongs to.

---

##### \`environmentFromArn\`<sup>Optional</sup> <a name=\\"environmentFromArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn\\"></a>

- *Type:* java.lang.String
- *Default:* take environment from \`account\`, \`region\` parameters, or use Stack environment.

ARN to deduce region and account from.

The ARN is parsed and the account and region are taken from the ARN. This should be used for imported resources.  Cannot be supplied together with either \`account\` or \`region\`.

---

##### \`physicalName\`<sup>Optional</sup> <a name=\\"physicalName\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName\\"></a>

- *Type:* java.lang.String
- *Default:* The physical name will be allocated by CloudFormation at deployment time

The value passed in by users to the physical name prop of the resource.

\`undefined\` implies that a physical name will be allocated by    CloudFormation during deployment. - a concrete value implies a specific physical name - \`PhysicalName.GENERATE_IF_NEEDED\` is a marker that indicates that a physical will only be generated    by the CDK if it is needed for cross-environment references. Otherwise, it will be allocated by CloudFormation.

---

##### \`region\`<sup>Optional</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region\\"></a>

- *Type:* java.lang.String
- *Default:* the resource is in the same region as the stack it belongs to

The AWS region this resource belongs to.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPull\\">grantPull</a></code> | Grant the given identity permissions to use the images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\"></a>

\`\`\`java
public addToResourcePolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant\\"></a>

\`\`\`java
public grant(IGrantable grantee, java.lang.String actions)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions\\"></a>

- *Type:* java.lang.String

---

##### \`grantPull\` <a name=\\"grantPull\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull\\"></a>

\`\`\`java
public grantPull(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

##### \`grantPullPush\` <a name=\\"grantPullPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\"></a>

\`\`\`java
public grantPullPush(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

##### \`onCloudTrailEvent\` <a name=\\"onCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\"></a>

\`\`\`java
public onCloudTrailEvent(java.lang.String id)
public onCloudTrailEvent(java.lang.String id, OnEventOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.events.OnEventOptions

Options for adding the rule.

---

##### \`onCloudTrailImagePushed\` <a name=\\"onCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\"></a>

\`\`\`java
public onCloudTrailImagePushed(java.lang.String id)
public onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`onEvent\` <a name=\\"onEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent\\"></a>

\`\`\`java
public onEvent(java.lang.String id)
public onEvent(java.lang.String id, OnEventOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.events.OnEventOptions

---

##### \`onImageScanCompleted\` <a name=\\"onImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\"></a>

\`\`\`java
public onImageScanCompleted(java.lang.String id)
public onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`repositoryUriForDigest\` <a name=\\"repositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\"></a>

\`\`\`java
public repositoryUriForDigest()
public repositoryUriForDigest(java.lang.String digest)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* java.lang.String

Optional image digest.

---

##### \`repositoryUriForTag\` <a name=\\"repositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\"></a>

\`\`\`java
public repositoryUriForTag()
public repositoryUriForTag(java.lang.String tag)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* java.lang.String

Optional image tag.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\">repositoryUri</a></code> | <code>java.lang.String</code> | The URI of this repository (represents the latest image):. |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* java.lang.String

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

The name of the repository.

---

##### \`repositoryUri\`<sup>Required</sup> <a name=\\"repositoryUri\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\"></a>

\`\`\`java
public java.lang.String getRepositoryUri();
\`\`\`

- *Type:* java.lang.String

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### CfnPublicRepositoryProps <a name=\\"CfnPublicRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnPublicRepositoryProps;

CfnPublicRepositoryProps.builder()
//  .repositoryCatalogData(java.lang.Object)
//  .repositoryName(java.lang.String)
//  .repositoryPolicyText(java.lang.Object)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`repositoryCatalogData\`<sup>Optional</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\"></a>

\`\`\`java
public java.lang.Object getRepositoryCatalogData();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`java
public java.lang.Object getRepositoryPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\"></a>

\`\`\`java
public java.util.List<CfnTag> getTags();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

### CfnRegistryPolicyProps <a name=\\"CfnRegistryPolicyProps\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\"></a>

Properties for defining a \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRegistryPolicyProps;

CfnRegistryPolicyProps.builder()
    .policyText(java.lang.Object)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\">policyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\"></a>

\`\`\`java
public java.lang.Object getPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

### CfnReplicationConfigurationProps <a name=\\"CfnReplicationConfigurationProps\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\"></a>

Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfigurationProps;

CfnReplicationConfigurationProps.builder()
    .replicationConfiguration(IResolvable)
    .replicationConfiguration(ReplicationConfigurationProperty)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\">replicationConfiguration</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\"></a>

\`\`\`java
public java.lang.Object getReplicationConfiguration();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

### CfnRepositoryProps <a name=\\"CfnRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRepositoryProps;

CfnRepositoryProps.builder()
//  .encryptionConfiguration(java.lang.Object)
//  .imageScanningConfiguration(java.lang.Object)
//  .imageTagMutability(java.lang.String)
//  .lifecyclePolicy(IResolvable)
//  .lifecyclePolicy(LifecyclePolicyProperty)
//  .repositoryName(java.lang.String)
//  .repositoryPolicyText(java.lang.Object)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\">imageTagMutability</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`encryptionConfiguration\`<sup>Optional</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\"></a>

\`\`\`java
public java.lang.Object getEncryptionConfiguration();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Optional</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\"></a>

\`\`\`java
public java.lang.Object getImageScanningConfiguration();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\"></a>

\`\`\`java
public java.lang.String getImageTagMutability();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\"></a>

\`\`\`java
public java.lang.Object getLifecyclePolicy();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`java
public java.lang.Object getRepositoryPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\"></a>

\`\`\`java
public java.util.List<CfnTag> getTags();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

### LifecyclePolicyProperty <a name=\\"LifecyclePolicyProperty\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRepository.LifecyclePolicyProperty;

LifecyclePolicyProperty.builder()
//  .lifecyclePolicyText(java.lang.String)
//  .registryId(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\">lifecyclePolicyText</a></code> | <code>java.lang.String</code> | \`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\">registryId</a></code> | <code>java.lang.String</code> | \`CfnRepository.LifecyclePolicyProperty.RegistryId\`. |

---

##### \`lifecyclePolicyText\`<sup>Optional</sup> <a name=\\"lifecyclePolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\"></a>

\`\`\`java
public java.lang.String getLifecyclePolicyText();
\`\`\`

- *Type:* java.lang.String

\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext)

---

##### \`registryId\`<sup>Optional</sup> <a name=\\"registryId\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\"></a>

\`\`\`java
public java.lang.String getRegistryId();
\`\`\`

- *Type:* java.lang.String

\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid)

---

### LifecycleRule <a name=\\"LifecycleRule\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule\\"></a>

An ECR life cycle rule.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.LifecycleRule;

LifecycleRule.builder()
//  .description(java.lang.String)
//  .maxImageAge(Duration)
//  .maxImageCount(java.lang.Number)
//  .rulePriority(java.lang.Number)
//  .tagPrefixList(java.util.List<java.lang.String>)
//  .tagStatus(TagStatus)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.description\\">description</a></code> | <code>java.lang.String</code> | Describes the purpose of the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\">maxImageAge</a></code> | <code>software.amazon.awscdk.core.Duration</code> | The maximum age of images to retain. The value must represent a number of days. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\">maxImageCount</a></code> | <code>java.lang.Number</code> | The maximum number of images to retain. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\">rulePriority</a></code> | <code>java.lang.Number</code> | Controls the order in which rules are evaluated (low to high). |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\">tagPrefixList</a></code> | <code>java.util.List<java.lang.String></code> | Select images that have ALL the given prefixes in their tag. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\">tagStatus</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a></code> | Select images based on tags. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.description\\"></a>

\`\`\`java
public java.lang.String getDescription();
\`\`\`

- *Type:* java.lang.String
- *Default:* No description

Describes the purpose of the rule.

---

##### \`maxImageAge\`<sup>Optional</sup> <a name=\\"maxImageAge\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\"></a>

\`\`\`java
public Duration getMaxImageAge();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`maxImageCount\`<sup>Optional</sup> <a name=\\"maxImageCount\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\"></a>

\`\`\`java
public java.lang.Number getMaxImageCount();
\`\`\`

- *Type:* java.lang.Number

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`rulePriority\`<sup>Optional</sup> <a name=\\"rulePriority\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\"></a>

\`\`\`java
public java.lang.Number getRulePriority();
\`\`\`

- *Type:* java.lang.Number
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

##### \`tagPrefixList\`<sup>Optional</sup> <a name=\\"tagPrefixList\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getTagPrefixList();
\`\`\`

- *Type:* java.util.List<java.lang.String>

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

##### \`tagStatus\`<sup>Optional</sup> <a name=\\"tagStatus\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\"></a>

\`\`\`java
public TagStatus getTagStatus();
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

### OnCloudTrailImagePushedOptions <a name=\\"OnCloudTrailImagePushedOptions\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\"></a>

Options for the onCloudTrailImagePushed method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.OnCloudTrailImagePushedOptions;

OnCloudTrailImagePushedOptions.builder()
//  .description(java.lang.String)
//  .eventPattern(EventPattern)
//  .ruleName(java.lang.String)
//  .target(IRuleTarget)
//  .imageTag(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\">description</a></code> | <code>java.lang.String</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\">eventPattern</a></code> | <code>software.amazon.awscdk.services.events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\">ruleName</a></code> | <code>java.lang.String</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\">target</a></code> | <code>software.amazon.awscdk.services.events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\">imageTag</a></code> | <code>java.lang.String</code> | Only watch changes to this image tag. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\"></a>

\`\`\`java
public java.lang.String getDescription();
\`\`\`

- *Type:* java.lang.String
- *Default:* No description

A description of the rule's purpose.

---

##### \`eventPattern\`<sup>Optional</sup> <a name=\\"eventPattern\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\"></a>

\`\`\`java
public EventPattern getEventPattern();
\`\`\`

- *Type:* software.amazon.awscdk.services.events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`ruleName\`<sup>Optional</sup> <a name=\\"ruleName\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\"></a>

\`\`\`java
public java.lang.String getRuleName();
\`\`\`

- *Type:* java.lang.String
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\"></a>

\`\`\`java
public IRuleTarget getTarget();
\`\`\`

- *Type:* software.amazon.awscdk.services.events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`imageTag\`<sup>Optional</sup> <a name=\\"imageTag\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\"></a>

\`\`\`java
public java.lang.String getImageTag();
\`\`\`

- *Type:* java.lang.String
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

### OnImageScanCompletedOptions <a name=\\"OnImageScanCompletedOptions\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\"></a>

Options for the OnImageScanCompleted method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.OnImageScanCompletedOptions;

OnImageScanCompletedOptions.builder()
//  .description(java.lang.String)
//  .eventPattern(EventPattern)
//  .ruleName(java.lang.String)
//  .target(IRuleTarget)
//  .imageTags(java.util.List<java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\">description</a></code> | <code>java.lang.String</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\">eventPattern</a></code> | <code>software.amazon.awscdk.services.events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\">ruleName</a></code> | <code>java.lang.String</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\">target</a></code> | <code>software.amazon.awscdk.services.events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\">imageTags</a></code> | <code>java.util.List<java.lang.String></code> | Only watch changes to the image tags spedified. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\"></a>

\`\`\`java
public java.lang.String getDescription();
\`\`\`

- *Type:* java.lang.String
- *Default:* No description

A description of the rule's purpose.

---

##### \`eventPattern\`<sup>Optional</sup> <a name=\\"eventPattern\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\"></a>

\`\`\`java
public EventPattern getEventPattern();
\`\`\`

- *Type:* software.amazon.awscdk.services.events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`ruleName\`<sup>Optional</sup> <a name=\\"ruleName\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\"></a>

\`\`\`java
public java.lang.String getRuleName();
\`\`\`

- *Type:* java.lang.String
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\"></a>

\`\`\`java
public IRuleTarget getTarget();
\`\`\`

- *Type:* software.amazon.awscdk.services.events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`imageTags\`<sup>Optional</sup> <a name=\\"imageTags\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getImageTags();
\`\`\`

- *Type:* java.util.List<java.lang.String>
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

### ReplicationConfigurationProperty <a name=\\"ReplicationConfigurationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty;

ReplicationConfigurationProperty.builder()
    .rules(IResolvable)
    .rules(java.util.List<IResolvable)
    .rules(ReplicationRuleProperty>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\">rules</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>></code> | \`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`. |

---

##### \`rules\`<sup>Required</sup> <a name=\\"rules\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\"></a>

\`\`\`java
public java.lang.Object getRules();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>>

\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules)

---

### ReplicationDestinationProperty <a name=\\"ReplicationDestinationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfiguration.ReplicationDestinationProperty;

ReplicationDestinationProperty.builder()
    .region(java.lang.String)
    .registryId(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\">region</a></code> | <code>java.lang.String</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\">registryId</a></code> | <code>java.lang.String</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`. |

---

##### \`region\`<sup>Required</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\"></a>

\`\`\`java
public java.lang.String getRegion();
\`\`\`

- *Type:* java.lang.String

\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region)

---

##### \`registryId\`<sup>Required</sup> <a name=\\"registryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\"></a>

\`\`\`java
public java.lang.String getRegistryId();
\`\`\`

- *Type:* java.lang.String

\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid)

---

### ReplicationRuleProperty <a name=\\"ReplicationRuleProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfiguration.ReplicationRuleProperty;

ReplicationRuleProperty.builder()
    .destinations(IResolvable)
    .destinations(java.util.List<IResolvable)
    .destinations(ReplicationDestinationProperty>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\">destinations</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>></code> | \`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`. |

---

##### \`destinations\`<sup>Required</sup> <a name=\\"destinations\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\"></a>

\`\`\`java
public java.lang.Object getDestinations();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>>

\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations)

---

### RepositoryAttributes <a name=\\"RepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.RepositoryAttributes;

RepositoryAttributes.builder()
    .repositoryArn(java.lang.String)
    .repositoryName(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | *No description.* |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

---

### RepositoryProps <a name=\\"RepositoryProps\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.RepositoryProps;

RepositoryProps.builder()
//  .imageScanOnPush(java.lang.Boolean)
//  .imageTagMutability(TagMutability)
//  .lifecycleRegistryId(java.lang.String)
//  .lifecycleRules(java.util.List<LifecycleRule>)
//  .removalPolicy(RemovalPolicy)
//  .repositoryName(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\">imageScanOnPush</a></code> | <code>java.lang.Boolean</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\">imageTagMutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\">lifecycleRegistryId</a></code> | <code>java.lang.String</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\">lifecycleRules</a></code> | <code>java.util.List<<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>></code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\">removalPolicy</a></code> | <code>software.amazon.awscdk.core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | Name for this repository. |

---

##### \`imageScanOnPush\`<sup>Optional</sup> <a name=\\"imageScanOnPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\"></a>

\`\`\`java
public java.lang.Boolean getImageScanOnPush();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\"></a>

\`\`\`java
public TagMutability getImageTagMutability();
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycleRegistryId\`<sup>Optional</sup> <a name=\\"lifecycleRegistryId\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\"></a>

\`\`\`java
public java.lang.String getLifecycleRegistryId();
\`\`\`

- *Type:* java.lang.String
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycleRules\`<sup>Optional</sup> <a name=\\"lifecycleRules\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\"></a>

\`\`\`java
public java.util.List<LifecycleRule> getLifecycleRules();
\`\`\`

- *Type:* java.util.List<<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>>
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removalPolicy\`<sup>Optional</sup> <a name=\\"removalPolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\"></a>

\`\`\`java
public RemovalPolicy getRemovalPolicy();
\`\`\`

- *Type:* software.amazon.awscdk.core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name.

Name for this repository.

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\">grantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.AuthorizationToken;

AuthorizationToken.grantRead(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---



### PublicGalleryAuthorizationToken <a name=\\"PublicGalleryAuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken\\"></a>

Authorization token to access the global public ECR Gallery via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\">grantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.PublicGalleryAuthorizationToken;

PublicGalleryAuthorizationToken.grantRead(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---



## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* software.amazon.awscdk.core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

\`\`\`java
public addToResourcePolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

\`\`\`java
public grant(IGrantable grantee, java.lang.String actions)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.actions\\"></a>

- *Type:* java.lang.String

---

##### \`grantPull\` <a name=\\"grantPull\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

\`\`\`java
public grantPull(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

##### \`grantPullPush\` <a name=\\"grantPullPush\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

\`\`\`java
public grantPullPush(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

##### \`onCloudTrailEvent\` <a name=\\"onCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

\`\`\`java
public onCloudTrailEvent(java.lang.String id)
public onCloudTrailEvent(java.lang.String id, OnEventOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.events.OnEventOptions

Options for adding the rule.

---

##### \`onCloudTrailImagePushed\` <a name=\\"onCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

\`\`\`java
public onCloudTrailImagePushed(java.lang.String id)
public onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`onEvent\` <a name=\\"onEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

\`\`\`java
public onEvent(java.lang.String id)
public onEvent(java.lang.String id, OnEventOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.events.OnEventOptions

---

##### \`onImageScanCompleted\` <a name=\\"onImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

\`\`\`java
public onImageScanCompleted(java.lang.String id)
public onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`repositoryUriForDigest\` <a name=\\"repositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

\`\`\`java
public repositoryUriForDigest()
public repositoryUriForDigest(java.lang.String digest)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* java.lang.String

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

##### \`repositoryUriForTag\` <a name=\\"repositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

\`\`\`java
public repositoryUriForTag()
public repositoryUriForTag(java.lang.String tag)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* java.lang.String

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code>software.amazon.awscdk.core.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code>software.amazon.awscdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code>software.amazon.awscdk.core.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repositoryUri</a></code> | <code>java.lang.String</code> | The URI of this repository (represents the latest image):. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

\`\`\`java
public ConstructNode getNode();
\`\`\`

- *Type:* software.amazon.awscdk.core.ConstructNode

The construct tree node for this construct.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

\`\`\`java
public ResourceEnvironment getEnv();
\`\`\`

- *Type:* software.amazon.awscdk.core.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

\`\`\`java
public Stack getStack();
\`\`\`

- *Type:* software.amazon.awscdk.core.Stack

The stack in which this resource is defined.

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* java.lang.String

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

The name of the repository.

---

##### \`repositoryUri\`<sup>Required</sup> <a name=\\"repositoryUri\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

\`\`\`java
public java.lang.String getRepositoryUri();
\`\`\`

- *Type:* java.lang.String

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### TagMutability <a name=\\"TagMutability\\" id=\\"@aws-cdk/aws-ecr.TagMutability\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.MUTABLE\\">MUTABLE</a></code> | allow image tags to be overwritten. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\">IMMUTABLE</a></code> | all image tags within the repository will be immutable which will prevent them from being overwritten. |

---

The tag mutability setting for your repository.

#### \`MUTABLE\` <a name=\\"MUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.MUTABLE\\"></a>

allow image tags to be overwritten.

---


#### \`IMMUTABLE\` <a name=\\"IMMUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\"></a>

all image tags within the repository will be immutable which will prevent them from being overwritten.

---


### TagStatus <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.TagStatus\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.ANY\\">ANY</a></code> | Rule applies to all images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.TAGGED\\">TAGGED</a></code> | Rule applies to tagged images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\">UNTAGGED</a></code> | Rule applies to untagged images. |

---

Select images based on tags.

#### \`ANY\` <a name=\\"ANY\\" id=\\"@aws-cdk/aws-ecr.TagStatus.ANY\\"></a>

Rule applies to all images.

---


#### \`TAGGED\` <a name=\\"TAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.TAGGED\\"></a>

Rule applies to tagged images.

---


#### \`UNTAGGED\` <a name=\\"UNTAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\"></a>

Rule applies to untagged images.

---

"
`;

exports[`java snapshot - root module 1`] = `
"# Amazon ECR Construct Library

<!--BEGIN STABILITY BANNER-->---


![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
Object repository = new Repository(this, \\"Repository\\");
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
Object repository = Repository.Builder.create(stack, \\"Repo\\")
        .imageScanOnPush(true)
        .build();
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
repository.onImageScanCompleted(\\"ImageScanComplete\\").addTarget(...);
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
import aws.cdk.aws.iam.*;
import aws.cdk.aws.ecr.*;

Object user = User.Builder.create(this, \\"User\\")....build();
AuthorizationToken.grantRead(user);
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
import aws.cdk.aws.iam.*;
import aws.cdk.aws.ecr.*;

Object user = User.Builder.create(this, \\"User\\")....build();
PublicGalleryAuthorizationToken.grantRead(user);
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
Repository.Builder.create(stack, \\"Repo\\").imageTagMutability(ecr.getTagMutability().getIMMUTABLE()).build();
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`java
// Example automatically generated from non-compiling source. May contain errors.
repository.addLifecycleRule(Map.of(\\"tagPrefixList\\", List.of(\\"prod\\"), \\"maxImageCount\\", 9999));
repository.addLifecycleRule(Map.of(\\"maxImageAge\\", cdk.Duration.days(30)));
\`\`\`
# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### CfnPublicRepository <a name=\\"CfnPublicRepository\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnPublicRepository;

CfnPublicRepository.Builder.create(Construct scope, java.lang.String id)
//  .repositoryCatalogData(java.lang.Object)
//  .repositoryName(java.lang.String)
//  .repositoryPolicyText(java.lang.Object)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`repositoryCatalogData\`<sup>Optional</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName\\"></a>

- *Type:* java.lang.String

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.core.TagManager</code> | \`AWS::ECR::PublicRepository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.core.TagManager

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

##### \`repositoryCatalogData\`<sup>Required</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\"></a>

\`\`\`java
public java.lang.Object getRepositoryCatalogData();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryPolicyText\`<sup>Required</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\"></a>

\`\`\`java
public java.lang.Object getRepositoryPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnRegistryPolicy <a name=\\"CfnRegistryPolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRegistryPolicy;

CfnRegistryPolicy.Builder.create(Construct scope, java.lang.String id)
    .policyText(java.lang.Object)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText\\">policyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\">attrRegistryId</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\">policyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`attrRegistryId\`<sup>Required</sup> <a name=\\"attrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\"></a>

\`\`\`java
public java.lang.String getAttrRegistryId();
\`\`\`

- *Type:* java.lang.String

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\"></a>

\`\`\`java
public java.lang.Object getPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnReplicationConfiguration <a name=\\"CfnReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfiguration;

CfnReplicationConfiguration.Builder.create(Construct scope, java.lang.String id)
    .replicationConfiguration(IResolvable)
    .replicationConfiguration(ReplicationConfigurationProperty)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration\\">replicationConfiguration</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration\\"></a>

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\">attrRegistryId</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\">replicationConfiguration</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`attrRegistryId\`<sup>Required</sup> <a name=\\"attrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\"></a>

\`\`\`java
public java.lang.String getAttrRegistryId();
\`\`\`

- *Type:* java.lang.String

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\"></a>

\`\`\`java
public java.lang.Object getReplicationConfiguration();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnRepository <a name=\\"CfnRepository\\" id=\\"@aws-cdk/aws-ecr.CfnRepository\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRepository;

CfnRepository.Builder.create(Construct scope, java.lang.String id)
//  .encryptionConfiguration(java.lang.Object)
//  .imageScanningConfiguration(java.lang.Object)
//  .imageTagMutability(java.lang.String)
//  .lifecyclePolicy(IResolvable)
//  .lifecyclePolicy(LifecyclePolicyProperty)
//  .repositoryName(java.lang.String)
//  .repositoryPolicyText(java.lang.Object)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability\\">imageTagMutability</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`encryptionConfiguration\`<sup>Optional</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Optional</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability\\"></a>

- *Type:* java.lang.String

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy\\"></a>

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName\\"></a>

- *Type:* java.lang.String

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText\\"></a>

- *Type:* java.lang.Object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\">attrRepositoryUri</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.core.TagManager</code> | \`AWS::ECR::Repository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\">imageTagMutability</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.RepositoryName\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrRepositoryUri\`<sup>Required</sup> <a name=\\"attrRepositoryUri\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\"></a>

\`\`\`java
public java.lang.String getAttrRepositoryUri();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.core.TagManager

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

##### \`encryptionConfiguration\`<sup>Required</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\"></a>

\`\`\`java
public java.lang.Object getEncryptionConfiguration();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Required</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\"></a>

\`\`\`java
public java.lang.Object getImageScanningConfiguration();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`repositoryPolicyText\`<sup>Required</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\"></a>

\`\`\`java
public java.lang.Object getRepositoryPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\"></a>

\`\`\`java
public java.lang.String getImageTagMutability();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\"></a>

\`\`\`java
public java.lang.Object getLifecyclePolicy();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### Repository <a name=\\"Repository\\" id=\\"@aws-cdk/aws-ecr.Repository\\"></a>

Define an ECR repository.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.Builder.create(Construct scope, java.lang.String id)
//  .imageScanOnPush(java.lang.Boolean)
//  .imageTagMutability(TagMutability)
//  .lifecycleRegistryId(java.lang.String)
//  .lifecycleRules(java.util.List<LifecycleRule>)
//  .removalPolicy(RemovalPolicy)
//  .repositoryName(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush\\">imageScanOnPush</a></code> | <code>java.lang.Boolean</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability\\">imageTagMutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId\\">lifecycleRegistryId</a></code> | <code>java.lang.String</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules\\">lifecycleRules</a></code> | <code>java.util.List<<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>></code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy\\">removalPolicy</a></code> | <code>software.amazon.awscdk.core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | Name for this repository. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`imageScanOnPush\`<sup>Optional</sup> <a name=\\"imageScanOnPush\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycleRegistryId\`<sup>Optional</sup> <a name=\\"lifecycleRegistryId\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId\\"></a>

- *Type:* java.lang.String
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycleRules\`<sup>Optional</sup> <a name=\\"lifecycleRules\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules\\"></a>

- *Type:* java.util.List<<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>>
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removalPolicy\`<sup>Optional</sup> <a name=\\"removalPolicy\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy\\"></a>

- *Type:* software.amazon.awscdk.core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName\\"></a>

- *Type:* java.lang.String
- *Default:* Automatically generated name.

Name for this repository.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addLifecycleRule\\">addLifecycleRule</a></code> | Add a life cycle rule to the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |

---

##### \`addLifecycleRule\` <a name=\\"addLifecycleRule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule\\"></a>

\`\`\`java
public addLifecycleRule(LifecycleRule rule)
\`\`\`

###### \`rule\`<sup>Required</sup> <a name=\\"rule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rule\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\"></a>

\`\`\`java
public addToResourcePolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\">arnForLocalRepository</a></code> | Returns an ECR ARN for a repository that resides in the same account/region as the current stack. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\">fromRepositoryArn</a></code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\">fromRepositoryAttributes</a></code> | Import a repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryName\\">fromRepositoryName</a></code> | *No description.* |

---

##### \`arnForLocalRepository\` <a name=\\"arnForLocalRepository\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.arnForLocalRepository(java.lang.String repositoryName, IConstruct scope),Repository.arnForLocalRepository(java.lang.String repositoryName, IConstruct scope, java.lang.String account)
\`\`\`

###### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName\\"></a>

- *Type:* java.lang.String

---

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope\\"></a>

- *Type:* software.constructs.IConstruct

---

###### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account\\"></a>

- *Type:* java.lang.String

---

##### \`fromRepositoryArn\` <a name=\\"fromRepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.fromRepositoryArn(Construct scope, java.lang.String id, java.lang.String repositoryArn)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn\\"></a>

- *Type:* java.lang.String

---

##### \`fromRepositoryAttributes\` <a name=\\"fromRepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.fromRepositoryAttributes(Construct scope, java.lang.String id, RepositoryAttributes attrs)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`attrs\`<sup>Required</sup> <a name=\\"attrs\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.attrs\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes\\">RepositoryAttributes</a>

---

##### \`fromRepositoryName\` <a name=\\"fromRepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.Repository;

Repository.fromRepositoryName(Construct scope, java.lang.String id, java.lang.String repositoryName)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName\\"></a>

- *Type:* java.lang.String

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | The name of the repository. |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryArn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* java.lang.String

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

The name of the repository.

---


### RepositoryBase <a name=\\"RepositoryBase\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase\\"></a>

- *Implements:* <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Base class for ECR repository.

Reused between imported repositories and owned repositories.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.RepositoryBase;

RepositoryBase.Builder.create(Construct scope, java.lang.String id)
//  .account(java.lang.String)
//  .environmentFromArn(java.lang.String)
//  .physicalName(java.lang.String)
//  .region(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account\\">account</a></code> | <code>java.lang.String</code> | The AWS account ID this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn\\">environmentFromArn</a></code> | <code>java.lang.String</code> | ARN to deduce region and account from. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName\\">physicalName</a></code> | <code>java.lang.String</code> | The value passed in by users to the physical name prop of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region\\">region</a></code> | <code>java.lang.String</code> | The AWS region this resource belongs to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account\\"></a>

- *Type:* java.lang.String
- *Default:* the resource is in the same account as the stack it belongs to

The AWS account ID this resource belongs to.

---

##### \`environmentFromArn\`<sup>Optional</sup> <a name=\\"environmentFromArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn\\"></a>

- *Type:* java.lang.String
- *Default:* take environment from \`account\`, \`region\` parameters, or use Stack environment.

ARN to deduce region and account from.

The ARN is parsed and the account and region are taken from the ARN. This should be used for imported resources.  Cannot be supplied together with either \`account\` or \`region\`.

---

##### \`physicalName\`<sup>Optional</sup> <a name=\\"physicalName\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName\\"></a>

- *Type:* java.lang.String
- *Default:* The physical name will be allocated by CloudFormation at deployment time

The value passed in by users to the physical name prop of the resource.

\`undefined\` implies that a physical name will be allocated by    CloudFormation during deployment. - a concrete value implies a specific physical name - \`PhysicalName.GENERATE_IF_NEEDED\` is a marker that indicates that a physical will only be generated    by the CDK if it is needed for cross-environment references. Otherwise, it will be allocated by CloudFormation.

---

##### \`region\`<sup>Optional</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region\\"></a>

- *Type:* java.lang.String
- *Default:* the resource is in the same region as the stack it belongs to

The AWS region this resource belongs to.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPull\\">grantPull</a></code> | Grant the given identity permissions to use the images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\"></a>

\`\`\`java
public addToResourcePolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant\\"></a>

\`\`\`java
public grant(IGrantable grantee, java.lang.String actions)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions\\"></a>

- *Type:* java.lang.String

---

##### \`grantPull\` <a name=\\"grantPull\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull\\"></a>

\`\`\`java
public grantPull(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

##### \`grantPullPush\` <a name=\\"grantPullPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\"></a>

\`\`\`java
public grantPullPush(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

##### \`onCloudTrailEvent\` <a name=\\"onCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\"></a>

\`\`\`java
public onCloudTrailEvent(java.lang.String id)
public onCloudTrailEvent(java.lang.String id, OnEventOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.events.OnEventOptions

Options for adding the rule.

---

##### \`onCloudTrailImagePushed\` <a name=\\"onCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\"></a>

\`\`\`java
public onCloudTrailImagePushed(java.lang.String id)
public onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`onEvent\` <a name=\\"onEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent\\"></a>

\`\`\`java
public onEvent(java.lang.String id)
public onEvent(java.lang.String id, OnEventOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.events.OnEventOptions

---

##### \`onImageScanCompleted\` <a name=\\"onImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\"></a>

\`\`\`java
public onImageScanCompleted(java.lang.String id)
public onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`repositoryUriForDigest\` <a name=\\"repositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\"></a>

\`\`\`java
public repositoryUriForDigest()
public repositoryUriForDigest(java.lang.String digest)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* java.lang.String

Optional image digest.

---

##### \`repositoryUriForTag\` <a name=\\"repositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\"></a>

\`\`\`java
public repositoryUriForTag()
public repositoryUriForTag(java.lang.String tag)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* java.lang.String

Optional image tag.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\">repositoryUri</a></code> | <code>java.lang.String</code> | The URI of this repository (represents the latest image):. |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* java.lang.String

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

The name of the repository.

---

##### \`repositoryUri\`<sup>Required</sup> <a name=\\"repositoryUri\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\"></a>

\`\`\`java
public java.lang.String getRepositoryUri();
\`\`\`

- *Type:* java.lang.String

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### CfnPublicRepositoryProps <a name=\\"CfnPublicRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnPublicRepositoryProps;

CfnPublicRepositoryProps.builder()
//  .repositoryCatalogData(java.lang.Object)
//  .repositoryName(java.lang.String)
//  .repositoryPolicyText(java.lang.Object)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`repositoryCatalogData\`<sup>Optional</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\"></a>

\`\`\`java
public java.lang.Object getRepositoryCatalogData();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`java
public java.lang.Object getRepositoryPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\"></a>

\`\`\`java
public java.util.List<CfnTag> getTags();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

### CfnRegistryPolicyProps <a name=\\"CfnRegistryPolicyProps\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\"></a>

Properties for defining a \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRegistryPolicyProps;

CfnRegistryPolicyProps.builder()
    .policyText(java.lang.Object)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\">policyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\"></a>

\`\`\`java
public java.lang.Object getPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

### CfnReplicationConfigurationProps <a name=\\"CfnReplicationConfigurationProps\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\"></a>

Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfigurationProps;

CfnReplicationConfigurationProps.builder()
    .replicationConfiguration(IResolvable)
    .replicationConfiguration(ReplicationConfigurationProperty)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\">replicationConfiguration</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\"></a>

\`\`\`java
public java.lang.Object getReplicationConfiguration();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

### CfnRepositoryProps <a name=\\"CfnRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRepositoryProps;

CfnRepositoryProps.builder()
//  .encryptionConfiguration(java.lang.Object)
//  .imageScanningConfiguration(java.lang.Object)
//  .imageTagMutability(java.lang.String)
//  .lifecyclePolicy(IResolvable)
//  .lifecyclePolicy(LifecyclePolicyProperty)
//  .repositoryName(java.lang.String)
//  .repositoryPolicyText(java.lang.Object)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\">imageTagMutability</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>java.lang.Object</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`encryptionConfiguration\`<sup>Optional</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\"></a>

\`\`\`java
public java.lang.Object getEncryptionConfiguration();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Optional</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\"></a>

\`\`\`java
public java.lang.Object getImageScanningConfiguration();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\"></a>

\`\`\`java
public java.lang.String getImageTagMutability();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\"></a>

\`\`\`java
public java.lang.Object getLifecyclePolicy();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`java
public java.lang.Object getRepositoryPolicyText();
\`\`\`

- *Type:* java.lang.Object

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\"></a>

\`\`\`java
public java.util.List<CfnTag> getTags();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

### LifecyclePolicyProperty <a name=\\"LifecyclePolicyProperty\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnRepository.LifecyclePolicyProperty;

LifecyclePolicyProperty.builder()
//  .lifecyclePolicyText(java.lang.String)
//  .registryId(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\">lifecyclePolicyText</a></code> | <code>java.lang.String</code> | \`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\">registryId</a></code> | <code>java.lang.String</code> | \`CfnRepository.LifecyclePolicyProperty.RegistryId\`. |

---

##### \`lifecyclePolicyText\`<sup>Optional</sup> <a name=\\"lifecyclePolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\"></a>

\`\`\`java
public java.lang.String getLifecyclePolicyText();
\`\`\`

- *Type:* java.lang.String

\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext)

---

##### \`registryId\`<sup>Optional</sup> <a name=\\"registryId\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\"></a>

\`\`\`java
public java.lang.String getRegistryId();
\`\`\`

- *Type:* java.lang.String

\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid)

---

### LifecycleRule <a name=\\"LifecycleRule\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule\\"></a>

An ECR life cycle rule.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.LifecycleRule;

LifecycleRule.builder()
//  .description(java.lang.String)
//  .maxImageAge(Duration)
//  .maxImageCount(java.lang.Number)
//  .rulePriority(java.lang.Number)
//  .tagPrefixList(java.util.List<java.lang.String>)
//  .tagStatus(TagStatus)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.description\\">description</a></code> | <code>java.lang.String</code> | Describes the purpose of the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\">maxImageAge</a></code> | <code>software.amazon.awscdk.core.Duration</code> | The maximum age of images to retain. The value must represent a number of days. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\">maxImageCount</a></code> | <code>java.lang.Number</code> | The maximum number of images to retain. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\">rulePriority</a></code> | <code>java.lang.Number</code> | Controls the order in which rules are evaluated (low to high). |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\">tagPrefixList</a></code> | <code>java.util.List<java.lang.String></code> | Select images that have ALL the given prefixes in their tag. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\">tagStatus</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a></code> | Select images based on tags. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.description\\"></a>

\`\`\`java
public java.lang.String getDescription();
\`\`\`

- *Type:* java.lang.String
- *Default:* No description

Describes the purpose of the rule.

---

##### \`maxImageAge\`<sup>Optional</sup> <a name=\\"maxImageAge\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\"></a>

\`\`\`java
public Duration getMaxImageAge();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`maxImageCount\`<sup>Optional</sup> <a name=\\"maxImageCount\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\"></a>

\`\`\`java
public java.lang.Number getMaxImageCount();
\`\`\`

- *Type:* java.lang.Number

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`rulePriority\`<sup>Optional</sup> <a name=\\"rulePriority\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\"></a>

\`\`\`java
public java.lang.Number getRulePriority();
\`\`\`

- *Type:* java.lang.Number
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

##### \`tagPrefixList\`<sup>Optional</sup> <a name=\\"tagPrefixList\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getTagPrefixList();
\`\`\`

- *Type:* java.util.List<java.lang.String>

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

##### \`tagStatus\`<sup>Optional</sup> <a name=\\"tagStatus\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\"></a>

\`\`\`java
public TagStatus getTagStatus();
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

### OnCloudTrailImagePushedOptions <a name=\\"OnCloudTrailImagePushedOptions\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\"></a>

Options for the onCloudTrailImagePushed method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.OnCloudTrailImagePushedOptions;

OnCloudTrailImagePushedOptions.builder()
//  .description(java.lang.String)
//  .eventPattern(EventPattern)
//  .ruleName(java.lang.String)
//  .target(IRuleTarget)
//  .imageTag(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\">description</a></code> | <code>java.lang.String</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\">eventPattern</a></code> | <code>software.amazon.awscdk.services.events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\">ruleName</a></code> | <code>java.lang.String</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\">target</a></code> | <code>software.amazon.awscdk.services.events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\">imageTag</a></code> | <code>java.lang.String</code> | Only watch changes to this image tag. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\"></a>

\`\`\`java
public java.lang.String getDescription();
\`\`\`

- *Type:* java.lang.String
- *Default:* No description

A description of the rule's purpose.

---

##### \`eventPattern\`<sup>Optional</sup> <a name=\\"eventPattern\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\"></a>

\`\`\`java
public EventPattern getEventPattern();
\`\`\`

- *Type:* software.amazon.awscdk.services.events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`ruleName\`<sup>Optional</sup> <a name=\\"ruleName\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\"></a>

\`\`\`java
public java.lang.String getRuleName();
\`\`\`

- *Type:* java.lang.String
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\"></a>

\`\`\`java
public IRuleTarget getTarget();
\`\`\`

- *Type:* software.amazon.awscdk.services.events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`imageTag\`<sup>Optional</sup> <a name=\\"imageTag\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\"></a>

\`\`\`java
public java.lang.String getImageTag();
\`\`\`

- *Type:* java.lang.String
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

### OnImageScanCompletedOptions <a name=\\"OnImageScanCompletedOptions\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\"></a>

Options for the OnImageScanCompleted method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.OnImageScanCompletedOptions;

OnImageScanCompletedOptions.builder()
//  .description(java.lang.String)
//  .eventPattern(EventPattern)
//  .ruleName(java.lang.String)
//  .target(IRuleTarget)
//  .imageTags(java.util.List<java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\">description</a></code> | <code>java.lang.String</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\">eventPattern</a></code> | <code>software.amazon.awscdk.services.events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\">ruleName</a></code> | <code>java.lang.String</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\">target</a></code> | <code>software.amazon.awscdk.services.events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\">imageTags</a></code> | <code>java.util.List<java.lang.String></code> | Only watch changes to the image tags spedified. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\"></a>

\`\`\`java
public java.lang.String getDescription();
\`\`\`

- *Type:* java.lang.String
- *Default:* No description

A description of the rule's purpose.

---

##### \`eventPattern\`<sup>Optional</sup> <a name=\\"eventPattern\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\"></a>

\`\`\`java
public EventPattern getEventPattern();
\`\`\`

- *Type:* software.amazon.awscdk.services.events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`ruleName\`<sup>Optional</sup> <a name=\\"ruleName\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\"></a>

\`\`\`java
public java.lang.String getRuleName();
\`\`\`

- *Type:* java.lang.String
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\"></a>

\`\`\`java
public IRuleTarget getTarget();
\`\`\`

- *Type:* software.amazon.awscdk.services.events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`imageTags\`<sup>Optional</sup> <a name=\\"imageTags\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getImageTags();
\`\`\`

- *Type:* java.util.List<java.lang.String>
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

### ReplicationConfigurationProperty <a name=\\"ReplicationConfigurationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty;

ReplicationConfigurationProperty.builder()
    .rules(IResolvable)
    .rules(java.util.List<IResolvable)
    .rules(ReplicationRuleProperty>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\">rules</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>></code> | \`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`. |

---

##### \`rules\`<sup>Required</sup> <a name=\\"rules\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\"></a>

\`\`\`java
public java.lang.Object getRules();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>>

\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules)

---

### ReplicationDestinationProperty <a name=\\"ReplicationDestinationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfiguration.ReplicationDestinationProperty;

ReplicationDestinationProperty.builder()
    .region(java.lang.String)
    .registryId(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\">region</a></code> | <code>java.lang.String</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\">registryId</a></code> | <code>java.lang.String</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`. |

---

##### \`region\`<sup>Required</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\"></a>

\`\`\`java
public java.lang.String getRegion();
\`\`\`

- *Type:* java.lang.String

\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region)

---

##### \`registryId\`<sup>Required</sup> <a name=\\"registryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\"></a>

\`\`\`java
public java.lang.String getRegistryId();
\`\`\`

- *Type:* java.lang.String

\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid)

---

### ReplicationRuleProperty <a name=\\"ReplicationRuleProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.CfnReplicationConfiguration.ReplicationRuleProperty;

ReplicationRuleProperty.builder()
    .destinations(IResolvable)
    .destinations(java.util.List<IResolvable)
    .destinations(ReplicationDestinationProperty>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\">destinations</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>></code> | \`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`. |

---

##### \`destinations\`<sup>Required</sup> <a name=\\"destinations\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\"></a>

\`\`\`java
public java.lang.Object getDestinations();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.core.IResolvable OR <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>>

\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations)

---

### RepositoryAttributes <a name=\\"RepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.RepositoryAttributes;

RepositoryAttributes.builder()
    .repositoryArn(java.lang.String)
    .repositoryName(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | *No description.* |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

---

### RepositoryProps <a name=\\"RepositoryProps\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.RepositoryProps;

RepositoryProps.builder()
//  .imageScanOnPush(java.lang.Boolean)
//  .imageTagMutability(TagMutability)
//  .lifecycleRegistryId(java.lang.String)
//  .lifecycleRules(java.util.List<LifecycleRule>)
//  .removalPolicy(RemovalPolicy)
//  .repositoryName(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\">imageScanOnPush</a></code> | <code>java.lang.Boolean</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\">imageTagMutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\">lifecycleRegistryId</a></code> | <code>java.lang.String</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\">lifecycleRules</a></code> | <code>java.util.List<<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>></code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\">removalPolicy</a></code> | <code>software.amazon.awscdk.core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | Name for this repository. |

---

##### \`imageScanOnPush\`<sup>Optional</sup> <a name=\\"imageScanOnPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\"></a>

\`\`\`java
public java.lang.Boolean getImageScanOnPush();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\"></a>

\`\`\`java
public TagMutability getImageTagMutability();
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycleRegistryId\`<sup>Optional</sup> <a name=\\"lifecycleRegistryId\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\"></a>

\`\`\`java
public java.lang.String getLifecycleRegistryId();
\`\`\`

- *Type:* java.lang.String
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycleRules\`<sup>Optional</sup> <a name=\\"lifecycleRules\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\"></a>

\`\`\`java
public java.util.List<LifecycleRule> getLifecycleRules();
\`\`\`

- *Type:* java.util.List<<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>>
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removalPolicy\`<sup>Optional</sup> <a name=\\"removalPolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\"></a>

\`\`\`java
public RemovalPolicy getRemovalPolicy();
\`\`\`

- *Type:* software.amazon.awscdk.core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name.

Name for this repository.

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\">grantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.AuthorizationToken;

AuthorizationToken.grantRead(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---



### PublicGalleryAuthorizationToken <a name=\\"PublicGalleryAuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken\\"></a>

Authorization token to access the global public ECR Gallery via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\">grantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.PublicGalleryAuthorizationToken;

PublicGalleryAuthorizationToken.grantRead(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---



## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* software.amazon.awscdk.core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

\`\`\`java
public addToResourcePolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

\`\`\`java
public grant(IGrantable grantee, java.lang.String actions)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.actions\\"></a>

- *Type:* java.lang.String

---

##### \`grantPull\` <a name=\\"grantPull\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

\`\`\`java
public grantPull(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

##### \`grantPullPush\` <a name=\\"grantPullPush\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

\`\`\`java
public grantPullPush(IGrantable grantee)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IGrantable

---

##### \`onCloudTrailEvent\` <a name=\\"onCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

\`\`\`java
public onCloudTrailEvent(java.lang.String id)
public onCloudTrailEvent(java.lang.String id, OnEventOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.events.OnEventOptions

Options for adding the rule.

---

##### \`onCloudTrailImagePushed\` <a name=\\"onCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

\`\`\`java
public onCloudTrailImagePushed(java.lang.String id)
public onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`onEvent\` <a name=\\"onEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

\`\`\`java
public onEvent(java.lang.String id)
public onEvent(java.lang.String id, OnEventOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.events.OnEventOptions

---

##### \`onImageScanCompleted\` <a name=\\"onImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

\`\`\`java
public onImageScanCompleted(java.lang.String id)
public onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id\\"></a>

- *Type:* java.lang.String

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`repositoryUriForDigest\` <a name=\\"repositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

\`\`\`java
public repositoryUriForDigest()
public repositoryUriForDigest(java.lang.String digest)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* java.lang.String

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

##### \`repositoryUriForTag\` <a name=\\"repositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

\`\`\`java
public repositoryUriForTag()
public repositoryUriForTag(java.lang.String tag)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* java.lang.String

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code>software.amazon.awscdk.core.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code>software.amazon.awscdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code>software.amazon.awscdk.core.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repositoryArn</a></code> | <code>java.lang.String</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repositoryName</a></code> | <code>java.lang.String</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repositoryUri</a></code> | <code>java.lang.String</code> | The URI of this repository (represents the latest image):. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

\`\`\`java
public ConstructNode getNode();
\`\`\`

- *Type:* software.amazon.awscdk.core.ConstructNode

The construct tree node for this construct.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

\`\`\`java
public ResourceEnvironment getEnv();
\`\`\`

- *Type:* software.amazon.awscdk.core.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

\`\`\`java
public Stack getStack();
\`\`\`

- *Type:* software.amazon.awscdk.core.Stack

The stack in which this resource is defined.

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* java.lang.String

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* java.lang.String

The name of the repository.

---

##### \`repositoryUri\`<sup>Required</sup> <a name=\\"repositoryUri\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

\`\`\`java
public java.lang.String getRepositoryUri();
\`\`\`

- *Type:* java.lang.String

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### TagMutability <a name=\\"TagMutability\\" id=\\"@aws-cdk/aws-ecr.TagMutability\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.MUTABLE\\">MUTABLE</a></code> | allow image tags to be overwritten. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\">IMMUTABLE</a></code> | all image tags within the repository will be immutable which will prevent them from being overwritten. |

---

The tag mutability setting for your repository.

#### \`MUTABLE\` <a name=\\"MUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.MUTABLE\\"></a>

allow image tags to be overwritten.

---


#### \`IMMUTABLE\` <a name=\\"IMMUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\"></a>

all image tags within the repository will be immutable which will prevent them from being overwritten.

---


### TagStatus <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.TagStatus\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.ANY\\">ANY</a></code> | Rule applies to all images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.TAGGED\\">TAGGED</a></code> | Rule applies to tagged images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\">UNTAGGED</a></code> | Rule applies to untagged images. |

---

Select images based on tags.

#### \`ANY\` <a name=\\"ANY\\" id=\\"@aws-cdk/aws-ecr.TagStatus.ANY\\"></a>

Rule applies to all images.

---


#### \`TAGGED\` <a name=\\"TAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.TAGGED\\"></a>

Rule applies to tagged images.

---


#### \`UNTAGGED\` <a name=\\"UNTAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\"></a>

Rule applies to untagged images.

---

"
`;

exports[`java snapshot - submodules 1`] = `
"# Amazon EKS Construct Library
<!--BEGIN STABILITY BANNER-->

---

![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---

<!--END STABILITY BANNER-->

This construct library allows you to define [Amazon Elastic Container Service for Kubernetes (EKS)](https://aws.amazon.com/eks/) clusters.
In addition, the library also supports defining Kubernetes resource manifests within EKS clusters.

## Table Of Contents

* [Quick Start](#quick-start)
* [API Reference](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-eks-readme.html)
* [Architectural Overview](#architectural-overview)
* [Provisioning clusters](#provisioning-clusters)
  * [Managed node groups](#managed-node-groups)
  * [Fargate Profiles](#fargate-profiles)
  * [Self-managed nodes](#self-managed-nodes)
  * [Endpoint Access](#endpoint-access)
  * [VPC Support](#vpc-support)
  * [Kubectl Support](#kubectl-support)
  * [ARM64 Support](#arm64-support)
  * [Masters Role](#masters-role)
  * [Encryption](#encryption)
* [Permissions and Security](#permissions-and-security)
* [Applying Kubernetes Resources](#applying-kubernetes-resources)
  * [Kubernetes Manifests](#kubernetes-manifests)
  * [Helm Charts](#helm-charts)
  * [CDK8s Charts](#cdk8s-charts)
* [Patching Kubernetes Resources](#patching-kubernetes-resources)
* [Querying Kubernetes Resources](#querying-kubernetes-resources)
* [Using existing clusters](#using-existing-clusters)
* [Known Issues and Limitations](#known-issues-and-limitations)

## Quick Start

This example defines an Amazon EKS cluster with the following configuration:

* Dedicated VPC with default configuration (Implicitly created using [ec2.Vpc](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#vpc))
* A Kubernetes pod with a container based on the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes) image.

\`\`\`ts
// provisiong a cluster
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
});

// apply a kubernetes manifest to the cluster
cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ]
      }
    ]
  }
});
\`\`\`

In order to interact with your cluster through \`kubectl\`, you can use the \`aws eks update-kubeconfig\` [AWS CLI command](https://docs.aws.amazon.com/cli/latest/reference/eks/update-kubeconfig.html)
to configure your local kubeconfig. The EKS module will define a CloudFormation output in your stack which contains the command to run. For example:

\`\`\`plaintext
Outputs:
ClusterConfigCommand43AAE40F = aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
\`\`\`

Execute the \`aws eks update-kubeconfig ...\` command in your terminal to create or update a local kubeconfig context:

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

And now you can simply use \`kubectl\`:

\`\`\`console
$ kubectl get all -n kube-system
NAME                           READY   STATUS    RESTARTS   AGE
pod/aws-node-fpmwv             1/1     Running   0          21m
pod/aws-node-m9htf             1/1     Running   0          21m
pod/coredns-5cb4fb54c7-q222j   1/1     Running   0          23m
pod/coredns-5cb4fb54c7-v9nxx   1/1     Running   0          23m
...
\`\`\`

## Architectural Overview

The following is a qualitative diagram of the various possible components involved in the cluster deployment.

\`\`\`text
 +-----------------------------------------------+               +-----------------+
 |                 EKS Cluster                   |    kubectl    |                 |
 |-----------------------------------------------|<-------------+| Kubectl Handler |
 |                                               |               |                 |
 |                                               |               +-----------------+
 | +--------------------+    +-----------------+ |
 | |                    |    |                 | |
 | | Managed Node Group |    | Fargate Profile | |               +-----------------+
 | |                    |    |                 | |               |                 |
 | +--------------------+    +-----------------+ |               | Cluster Handler |
 |                                               |               |                 |
 +-----------------------------------------------+               +-----------------+
    ^                                   ^                          +
    |                                   |                          |
    | connect self managed capacity     |                          | aws-sdk
    |                                   | create/update/delete     |
    +                                   |                          v
 +--------------------+                 +              +-------------------+
 |                    |                 --------------+| eks.amazonaws.com |
 | Auto Scaling Group |                                +-------------------+
 |                    |
 +--------------------+
\`\`\`

In a nutshell:

* \`EKS Cluster\` - The cluster endpoint created by EKS.
* \`Managed Node Group\` - EC2 worker nodes managed by EKS.
* \`Fargate Profile\` - Fargate worker nodes managed by EKS.
* \`Auto Scaling Group\` - EC2 worker nodes managed by the user.
* \`KubectlHandler\` - Lambda function for invoking \`kubectl\` commands on the cluster - created by CDK.
* \`ClusterHandler\` - Lambda function for interacting with EKS API to manage the cluster lifecycle - created by CDK.

A more detailed breakdown of each is provided further down this README.

## Provisioning clusters

Creating a new cluster is done using the \`Cluster\` or \`FargateCluster\` constructs. The only required property is the kubernetes \`version\`.

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

You can also use \`FargateCluster\` to provision a cluster that uses only fargate workers.

\`\`\`ts
new eks.FargateCluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

> **NOTE: Only 1 cluster per stack is supported.** If you have a use-case for multiple clusters per stack, or would like to understand more about this limitation, see <https://github.com/aws/aws-cdk/issues/10073>.

Below you'll find a few important cluster configuration options. First of which is Capacity.
Capacity is the amount and the type of worker nodes that are available to the cluster for deploying resources. Amazon EKS offers 3 ways of configuring capacity, which you can combine as you like:

### Managed node groups

Amazon EKS managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters.
With Amazon EKS managed node groups, you don’t need to separately provision or register the Amazon EC2 instances that provide compute capacity to run your Kubernetes applications. You can create, update, or terminate nodes for your cluster with a single operation. Nodes run using the latest Amazon EKS optimized AMIs in your AWS account while node updates and terminations gracefully drain nodes to ensure that your applications stay available.

> For more details visit [Amazon EKS Managed Node Groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).

**Managed Node Groups are the recommended way to allocate cluster capacity.**

By default, this library will allocate a managed node group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).

At cluster instantiation time, you can customize the number of instances and their type:

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 5,
  defaultCapacityInstance: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.SMALL),
});
\`\`\`

To access the node group that was created on your behalf, you can use \`cluster.defaultNodegroup\`.

Additional customizations are available post instantiation. To apply them, set the default capacity to 0, and use the \`cluster.addNodegroupCapacity\` method:

\`\`\`ts
const cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 0,
});

cluster.addNodegroupCapacity('custom-node-group', {
  instanceTypes: [new ec2.InstanceType('m5.large')],
  minSize: 4,
  diskSize: 100,
  amiType: eks.NodegroupAmiType.AL2_X86_64_GPU,
  ...
});
\`\`\`

#### Spot Instances Support

Use \`capacityType\` to create managed node groups comprised of spot instances. To maximize the availability of your applications while using
Spot Instances, we recommend that you configure a Spot managed node group to use multiple instance types with the \`instanceTypes\` property.

> For more details visit [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types).


\`\`\`ts
cluster.addNodegroupCapacity('extra-ng-spot', {
  instanceTypes: [
    new ec2.InstanceType('c5.large'),
    new ec2.InstanceType('c5a.large'),
    new ec2.InstanceType('c5d.large'),
  ],
  minSize: 3,
  capacityType: eks.CapacityType.SPOT,
});

\`\`\`

#### Launch Template Support

You can specify a launch template that the node group will use. For example, this can be useful if you want to use
a custom AMI or add custom user data.

When supplying a custom user data script, it must be encoded in the MIME multi-part archive format, since Amazon EKS merges with its own user data. Visit the [Launch Template Docs](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html#launch-template-user-data)
for mode details.

\`\`\`ts
const userData = \`MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\\"==MYBOUNDARY==\\"

--==MYBOUNDARY==
Content-Type: text/x-shellscript; charset=\\"us-ascii\\"

#!/bin/bash
echo \\"Running custom user data script\\"

--==MYBOUNDARY==--\\\\\\\\
\`;
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    instanceType: 't3.small',
    userData: Fn.base64(userData),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});

\`\`\`

Note that when using a custom AMI, Amazon EKS doesn't merge any user data. Which means you do not need the multi-part encoding. and are responsible for supplying the required bootstrap commands for nodes to join the cluster.
In the following example, \`/ect/eks/bootstrap.sh\` from the AMI will be used to bootstrap the node.

\`\`\`ts
const userData = ec2.UserData.forLinux();
userData.addCommands(
  'set -o xtrace',
  \`/etc/eks/bootstrap.sh \${cluster.clusterName}\`,
);
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    imageId: 'some-ami-id', // custom AMI
    instanceType: 't3.small',
    userData: Fn.base64(userData.render()),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});
\`\`\`

You may specify one \`instanceType\` in the launch template or multiple \`instanceTypes\` in the node group, **but not both**.

> For more details visit [Launch Template Support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).

Graviton 2 instance types are supported including \`c6g\`, \`m6g\`, \`r6g\` and \`t4g\`.

### Fargate profiles

AWS Fargate is a technology that provides on-demand, right-sized compute
capacity for containers. With AWS Fargate, you no longer have to provision,
configure, or scale groups of virtual machines to run containers. This removes
the need to choose server types, decide when to scale your node groups, or
optimize cluster packing.

You can control which pods start on Fargate and how they run with Fargate
Profiles, which are defined as part of your Amazon EKS cluster.

See [Fargate Considerations](https://docs.aws.amazon.com/eks/latest/userguide/fargate.html#fargate-considerations) in the AWS EKS User Guide.

You can add Fargate Profiles to any EKS cluster defined in your CDK app
through the \`addFargateProfile()\` method. The following example adds a profile
that will match all pods from the \\"default\\" namespace:

\`\`\`ts
cluster.addFargateProfile('MyProfile', {
  selectors: [ { namespace: 'default' } ]
});
\`\`\`

You can also directly use the \`FargateProfile\` construct to create profiles under different scopes:

\`\`\`ts
new eks.FargateProfile(scope, 'MyProfile', {
  cluster,
  ...
});
\`\`\`

To create an EKS cluster that **only** uses Fargate capacity, you can use \`FargateCluster\`.
The following code defines an Amazon EKS cluster with a default Fargate Profile that matches all pods from the \\"kube-system\\" and \\"default\\" namespaces. It is also configured to [run CoreDNS on Fargate](https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html#fargate-gs-coredns).

\`\`\`ts
const cluster = new eks.FargateCluster(this, 'MyCluster', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

**NOTE**: Classic Load Balancers and Network Load Balancers are not supported on
pods running on Fargate. For ingress, we recommend that you use the [ALB Ingress
Controller](https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html)
on Amazon EKS (minimum version v1.1.4).

### Self-managed nodes

Another way of allocating capacity to an EKS cluster is by using self-managed nodes.
EC2 instances that are part of the auto-scaling group will serve as worker nodes for the cluster.
This type of capacity is also commonly referred to as *EC2 Capacity** or *EC2 Nodes*.

For a detailed overview please visit [Self Managed Nodes](https://docs.aws.amazon.com/eks/latest/userguide/worker.html).

Creating an auto-scaling group and connecting it to the cluster is done using the \`cluster.addAutoScalingGroupCapacity\` method:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('frontend-nodes', {
  instanceType: new ec2.InstanceType('t2.medium'),
  minCapacity: 3,
  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC }
});
\`\`\`

To connect an already initialized auto-scaling group, use the \`cluster.connectAutoScalingGroupCapacity()\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...);
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

In both cases, the [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html#cluster-sg) will be automatically attached to
the auto-scaling group, allowing for traffic to flow freely between managed and self-managed nodes.

> **Note:** The default \`updateType\` for auto-scaling groups does not replace existing nodes. Since security groups are determined at launch time, self-managed nodes that were provisioned with version \`1.78.0\` or lower, will not be updated.
> To apply the new configuration on all your self-managed nodes, you'll need to replace the nodes using the \`UpdateType.REPLACING_UPDATE\` policy for the [\`updateType\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.AutoScalingGroup.html#updatetypespan-classapi-icon-api-icon-deprecated-titlethis-api-element-is-deprecated-its-use-is-not-recommended%EF%B8%8Fspan) property.

You can customize the [/etc/eks/boostrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh) script, which is responsible
for bootstrapping the node to the EKS cluster. For example, you can use \`kubeletExtraArgs\` to add custom node labels or taints.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  instanceType: new ec2.InstanceType('t3.large'),
  minCapacity: 2,
  bootstrapOptions: {
    kubeletExtraArgs: '--node-labels foo=bar,goo=far',
    awsApiRetryAttempts: 5
  }
});
\`\`\`

To disable bootstrapping altogether (i.e. to fully customize user-data), set \`bootstrapEnabled\` to \`false\`.
You can also configure the cluster to use an auto-scaling group as the default capacity:

\`\`\`ts
cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacityType: eks.DefaultCapacityType.EC2,
});
\`\`\`

This will allocate an auto-scaling group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).
To access the \`AutoScalingGroup\` that was created on your behalf, you can use \`cluster.defaultCapacity\`.
You can also independently create an \`AutoScalingGroup\` and connect it to the cluster using the \`cluster.connectAutoScalingGroupCapacity\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...)
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

This will add the necessary user-data to access the apiserver and configure all connections, roles, and tags needed for the instances in the auto-scaling group to properly join the cluster.

#### Spot Instances

When using self-managed nodes, you can configure the capacity to use spot instances, greatly reducing capacity cost.
To enable spot capacity, use the \`spotPrice\` property:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  spotPrice: '0.1094',
  instanceType: new ec2.InstanceType('t3.large'),
  maxCapacity: 10
});
\`\`\`

> Spot instance nodes will be labeled with \`lifecycle=Ec2Spot\` and tainted with \`PreferNoSchedule\`.

The [AWS Node Termination Handler](https://github.com/aws/aws-node-termination-handler) \`DaemonSet\` will be
installed from [Amazon EKS Helm chart repository](https://github.com/aws/eks-charts/tree/master/stable/aws-node-termination-handler) on these nodes.
The termination handler ensures that the Kubernetes control plane responds appropriately to events that
can cause your EC2 instance to become unavailable, such as [EC2 maintenance events](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html)
and [EC2 Spot interruptions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html) and helps gracefully stop all pods running on spot nodes that are about to be
terminated.

> Handler Version: [1.7.0](https://github.com/aws/aws-node-termination-handler/releases/tag/v1.7.0)
>
> Chart Version: [0.9.5](https://github.com/aws/eks-charts/blob/v0.0.28/stable/aws-node-termination-handler/Chart.yaml)

To disable the installation of the termination handler, set the \`spotInterruptHandler\` property to \`false\`. This applies both to \`addAutoScalingGroupCapacity\` and \`connectAutoScalingGroupCapacity\`.

#### Bottlerocket

[Bottlerocket](https://aws.amazon.com/bottlerocket/) is a Linux-based open-source operating system that is purpose-built by Amazon Web Services for running containers on virtual machines or bare metal hosts.
At this moment, \`Bottlerocket\` is only supported when using self-managed auto-scaling groups.

> **NOTICE**: Bottlerocket is only available in [some supported AWS regions](https://github.com/bottlerocket-os/bottlerocket/blob/develop/QUICKSTART-EKS.md#finding-an-ami).

The following example will create an auto-scaling group of 2 \`t3.small\` Linux instances running with the \`Bottlerocket\` AMI.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('BottlerocketNodes', {
  instanceType: new ec2.InstanceType('t3.small'),
  minCapacity:  2,
  machineImageType: eks.MachineImageType.BOTTLEROCKET
});
\`\`\`

The specific Bottlerocket AMI variant will be auto selected according to the k8s version for the \`x86_64\` architecture.
For example, if the Amazon EKS cluster version is \`1.17\`, the Bottlerocket AMI variant will be auto selected as
\`aws-k8s-1.17\` behind the scene.

> See [Variants](https://github.com/bottlerocket-os/bottlerocket/blob/develop/README.md#variants) for more details.

Please note Bottlerocket does not allow to customize bootstrap options and \`bootstrapOptions\` properties is not supported when you create the \`Bottlerocket\` capacity.

### Endpoint Access

When you create a new cluster, Amazon EKS creates an endpoint for the managed Kubernetes API server that you use to communicate with your cluster (using Kubernetes management tools such as \`kubectl\`)

By default, this API server endpoint is public to the internet, and access to the API server is secured using a combination of
AWS Identity and Access Management (IAM) and native Kubernetes [Role Based Access Control](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) (RBAC).

You can configure the [cluster endpoint access](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) by using the \`endpointAccess\` property:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  endpointAccess: eks.EndpointAccess.PRIVATE // No access outside of your VPC.
});
\`\`\`

The default value is \`eks.EndpointAccess.PUBLIC_AND_PRIVATE\`. Which means the cluster endpoint is accessible from outside of your VPC, but worker node traffic and \`kubectl\` commands issued by this library stay within your VPC.

### VPC Support

You can specify the VPC of the cluster using the \`vpc\` and \`vpcSubnets\` properties:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');

new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  vpc,
  vpcSubnets: [{ subnetType: ec2.SubnetType.PRIVATE }]
});
\`\`\`

> Note: Isolated VPCs (i.e with no internet access) are not currently supported. See https://github.com/aws/aws-cdk/issues/12171

If you do not specify a VPC, one will be created on your behalf, which you can then access via \`cluster.vpc\`. The cluster VPC will be associated to any EKS managed capacity (i.e Managed Node Groups and Fargate Profiles).

If you allocate self managed capacity, you can specify which subnets should the auto-scaling group use:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');
cluster.addAutoScalingGroupCapacity('nodes', {
  vpcSubnets: { subnets: vpc.privateSubnets }
});
\`\`\`

There are two additional components you might want to provision within the VPC.

#### Kubectl Handler

The \`KubectlHandler\` is a Lambda function responsible to issuing \`kubectl\` and \`helm\` commands against the cluster when you add resource manifests to the cluster.

The handler association to the VPC is derived from the \`endpointAccess\` configuration. The rule of thumb is: *If the cluster VPC can be associated, it will be*.

Breaking this down, it means that if the endpoint exposes private access (via \`EndpointAccess.PRIVATE\` or \`EndpointAccess.PUBLIC_AND_PRIVATE\`), and the VPC contains **private** subnets, the Lambda function will be provisioned inside the VPC and use the private subnets to interact with the cluster. This is the common use-case.

If the endpoint does not expose private access (via \`EndpointAccess.PUBLIC\`) **or** the VPC does not contain private subnets, the function will not be provisioned within the VPC.

#### Cluster Handler

The \`ClusterHandler\` is a Lambda function responsible to interact with the EKS API in order to control the cluster lifecycle. To provision this function inside the VPC, set the \`placeClusterHandlerInVpc\` property to \`true\`. This will place the function inside the private subnets of the VPC based on the selection strategy specified in the [\`vpcSubnets\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.Cluster.html#vpcsubnetsspan-classapi-icon-api-icon-experimental-titlethis-api-element-is-experimental-it-may-change-without-noticespan) property.

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  clusterHandlerEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

### Kubectl Support

The resources are created in the cluster by running \`kubectl apply\` from a python lambda function.

#### Environment

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  kubectlEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

#### Runtime

The kubectl handler uses \`kubectl\`, \`helm\` and the \`aws\` CLI in order to
interact with the cluster. These are bundled into AWS Lambda layers included in
the \`@aws-cdk/lambda-layer-awscli\` and \`@aws-cdk/lambda-layer-kubectl\` modules.

You can specify a custom \`lambda.LayerVersion\` if you wish to use a different
version of these tools. The handler expects the layer to include the following
three executables:

\`\`\`text
helm/helm
kubectl/kubectl
awscli/aws
\`\`\`

See more information in the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-awscli/layer) for @aws-cdk/lambda-layer-awscli
and the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-kubectl/layer) for @aws-cdk/lambda-layer-kubectl.

\`\`\`ts
const layer = new lambda.LayerVersion(this, 'KubectlLayer', {
  code: lambda.Code.fromAsset('layer.zip'),
});
\`\`\`

Now specify when the cluster is defined:

\`\`\`ts
const cluster = new eks.Cluster(this, 'MyCluster', {
  kubectlLayer: layer,
});

// or
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlLayer: layer,
});
\`\`\`

#### Memory

By default, the kubectl provider is configured with 1024MiB of memory. You can use the \`kubectlMemory\` option to specify the memory size for the AWS Lambda function:

\`\`\`ts
import { Size } from 'aws-cdk-lib';

new eks.Cluster(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});

// or
eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});
\`\`\`

### ARM64 Support

Instance types with \`ARM64\` architecture are supported in both managed nodegroup and self-managed capacity. Simply specify an ARM64 \`instanceType\` (such as \`m6g.medium\`), and the latest
Amazon Linux 2 AMI for ARM64 will be automatically selected.

\`\`\`ts
// add a managed ARM64 nodegroup
cluster.addNodegroupCapacity('extra-ng-arm', {
  instanceTypes: [new ec2.InstanceType('m6g.medium')],
  minSize: 2,
});

// add a self-managed ARM64 nodegroup
cluster.addAutoScalingGroupCapacity('self-ng-arm', {
  instanceType: new ec2.InstanceType('m6g.medium'),
  minCapacity: 2,
})
\`\`\`

### Masters Role

When you create a cluster, you can specify a \`mastersRole\`. The \`Cluster\` construct will associate this role with the \`system:masters\` [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) group, giving it super-user access to the cluster.

\`\`\`ts
const role = new iam.Role(...);
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  mastersRole: role,
});
\`\`\`

If you do not specify it, a default role will be created on your behalf, that can be assumed by anyone in the account with \`sts:AssumeRole\` permissions for this role.

This is the role you see as part of the stack outputs mentioned in the [Quick Start](#quick-start).

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

### Encryption

When you create an Amazon EKS cluster, envelope encryption of Kubernetes secrets using the AWS Key Management Service (AWS KMS) can be enabled.
The documentation on [creating a cluster](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html)
can provide more details about the customer master key (CMK) that can be used for the encryption.

You can use the \`secretsEncryptionKey\` to configure which key the cluster will use to encrypt Kubernetes secrets. By default, an AWS Managed key will be used.

> This setting can only be specified when the cluster is created and cannot be updated.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.Cluster(this, 'MyCluster', {
  secretsEncryptionKey: secretsKey,
  // ...
});
\`\`\`

You can also use a similar configuration for running a cluster built using the FargateCluster construct.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.FargateCluster(this, 'MyFargateCluster', {
  secretsEncryptionKey: secretsKey
});
\`\`\`

The Amazon Resource Name (ARN) for that CMK can be retrieved.

\`\`\`ts
const clusterEncryptionConfigKeyArn = cluster.clusterEncryptionConfigKeyArn;
\`\`\`

## Permissions and Security

Amazon EKS provides several mechanism of securing the cluster and granting permissions to specific IAM users and roles.

### AWS IAM Mapping

As described in the [Amazon EKS User Guide](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html), you can map AWS IAM users and roles to [Kubernetes Role-based access control (RBAC)](https://kubernetes.io/docs/reference/access-authn-authz/rbac).

The Amazon EKS construct manages the *aws-auth* \`ConfigMap\` Kubernetes resource on your behalf and exposes an API through the \`cluster.awsAuth\` for mapping
users, roles and accounts.

Furthermore, when auto-scaling group capacity is added to the cluster, the IAM instance role of the auto-scaling group will be automatically mapped to RBAC so nodes can connect to the cluster. No manual mapping is required.

For example, let's say you want to grant an IAM user administrative privileges on your cluster:

\`\`\`ts
const adminUser = new iam.User(this, 'Admin');
cluster.awsAuth.addUserMapping(adminUser, { groups: [ 'system:masters' ]});
\`\`\`

A convenience method for mapping a role to the \`system:masters\` group is also available:

\`\`\`ts
cluster.awsAuth.addMastersRole(role)
\`\`\`

### Cluster Security Group

When you create an Amazon EKS cluster, a [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
is automatically created as well. This security group is designed to allow all traffic from the control plane and managed node groups to flow freely
between each other.

The ID for that security group can be retrieved after creating the cluster.

\`\`\`ts
const clusterSecurityGroupId = cluster.clusterSecurityGroupId;
\`\`\`

### Node SSH Access

If you want to be able to SSH into your worker nodes, you must already have an SSH key in the region you're connecting to and pass it when
you add capacity to the cluster. You must also be able to connect to the hosts (meaning they must have a public IP and you
should be allowed to connect to them on port 22):

See [SSH into nodes](test/example.ssh-into-nodes.lit.ts) for a code example.

If you want to SSH into nodes in a private subnet, you should set up a bastion host in a public subnet. That setup is recommended, but is
unfortunately beyond the scope of this documentation.

### Service Accounts

With services account you can provide Kubernetes Pods access to AWS resources.

\`\`\`ts
// add service account
const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

const mypod = cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    serviceAccountName: sa.serviceAccountName
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ],

      }
    ]
  }
});

// create the resource after the service account.
mypod.node.addDependency(sa);

// print the IAM role arn for this service account
new cdk.CfnOutput(this, 'ServiceAccountIamRole', { value: sa.role.roleArn })
\`\`\`

Note that using \`sa.serviceAccountName\` above **does not** translate into a resource dependency.
This is why an explicit dependency is needed. See <https://github.com/aws/aws-cdk/issues/9910> for more details.

You can also add service accounts to existing clusters.
To do so, pass the \`openIdConnectProvider\` property when you import the cluster into the application.

\`\`\`ts
// you can import an existing provider
const provider = eks.OpenIdConnectProvider.fromOpenIdConnectProviderArn(this, 'Provider', 'arn:aws:iam::123456:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/AB123456ABC');

// or create a new one using an existing issuer url
const provider = new eks.OpenIdConnectProvider(this, 'Provider', issuerUrl);

const cluster = eks.Cluster.fromClusterAttributes({
  clusterName: 'Cluster',
  openIdConnectProvider: provider,
  kubectlRoleArn: 'arn:aws:iam::123456:role/service-role/k8sservicerole',
});

const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

// ...
\`\`\`

Note that adding service accounts requires running \`kubectl\` commands against the cluster.
This means you must also pass the \`kubectlRoleArn\` when importing the cluster.
See [Using existing Clusters](https://github.com/aws/aws-cdk/tree/master/packages/@aws-cdk/aws-eks#using-existing-clusters).

## Applying Kubernetes Resources

The library supports several popular resource deployment mechanisms, among which are:

### Kubernetes Manifests

The \`KubernetesManifest\` construct or \`cluster.addManifest\` method can be used
to apply Kubernetes resource manifests to this cluster.

> When using \`cluster.addManifest\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new KubernetesManifest\` to create the manifest in the scope of the other stack.

The following examples will deploy the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes)
service on the cluster:

\`\`\`ts
const appLabel = { app: \\"hello-kubernetes\\" };

const deployment = {
  apiVersion: \\"apps/v1\\",
  kind: \\"Deployment\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    replicas: 3,
    selector: { matchLabels: appLabel },
    template: {
      metadata: { labels: appLabel },
      spec: {
        containers: [
          {
            name: \\"hello-kubernetes\\",
            image: \\"paulbouwer/hello-kubernetes:1.5\\",
            ports: [ { containerPort: 8080 } ]
          }
        ]
      }
    }
  }
};

const service = {
  apiVersion: \\"v1\\",
  kind: \\"Service\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    type: \\"LoadBalancer\\",
    ports: [ { port: 80, targetPort: 8080 } ],
    selector: appLabel
  }
};

// option 1: use a construct
new KubernetesManifest(this, 'hello-kub', {
  cluster,
  manifest: [ deployment, service ]
});

// or, option2: use \`addManifest\`
cluster.addManifest('hello-kub', service, deployment);
\`\`\`

#### Adding resources from a URL

The following example will deploy the resource manifest hosting on remote server:

\`\`\`ts
import * as yaml from 'js-yaml';
import * as request from 'sync-request';

const manifestUrl = 'https://url/of/manifest.yaml';
const manifest = yaml.safeLoadAll(request('GET', manifestUrl).getBody());
cluster.addManifest('my-resource', ...manifest);
\`\`\`

#### Dependencies

There are cases where Kubernetes resources must be deployed in a specific order.
For example, you cannot define a resource in a Kubernetes namespace before the
namespace was created.

You can represent dependencies between \`KubernetesManifest\`s using
\`resource.node.addDependency()\`:

\`\`\`ts
const namespace = cluster.addManifest('my-namespace', {
  apiVersion: 'v1',
  kind: 'Namespace',
  metadata: { name: 'my-app' }
});

const service = cluster.addManifest('my-service', {
  metadata: {
    name: 'myservice',
    namespace: 'my-app'
  },
  spec: // ...
});

service.node.addDependency(namespace); // will apply \`my-namespace\` before \`my-service\`.
\`\`\`

**NOTE:** when a \`KubernetesManifest\` includes multiple resources (either directly
or through \`cluster.addManifest()\`) (e.g. \`cluster.addManifest('foo', r1, r2,
r3,...)\`), these resources will be applied as a single manifest via \`kubectl\`
and will be applied sequentially (the standard behavior in \`kubectl\`).

---

Since Kubernetes manifests are implemented as CloudFormation resources in the
CDK. This means that if the manifest is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`kubectl delete\` command and the
Kubernetes resources in that manifest will be deleted.

#### Resource Pruning

When a resource is deleted from a Kubernetes manifest, the EKS module will
automatically delete these resources by injecting a _prune label_ to all
manifest resources. This label is then passed to [\`kubectl apply --prune\`].

[\`kubectl apply --prune\`]: https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label

Pruning is enabled by default but can be disabled through the \`prune\` option
when a cluster is defined:

\`\`\`ts
new Cluster(this, 'MyCluster', {
  prune: false
});
\`\`\`

#### Manifests Validation

The \`kubectl\` CLI supports applying a manifest by skipping the validation.
This can be accomplished by setting the \`skipValidation\` flag to \`true\` in the \`KubernetesManifest\` props.

\`\`\`ts
new eks.KubernetesManifest(this, 'HelloAppWithoutValidation', {
  cluster: this.cluster,
  manifest: [ deployment, service ],
  skipValidation: true,
});
\`\`\`

### Helm Charts

The \`HelmChart\` construct or \`cluster.addHelmChart\` method can be used
to add Kubernetes resources to this cluster using Helm.

> When using \`cluster.addHelmChart\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new HelmChart\` to create the chart in the scope of the other stack.

The following example will install the [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/) to your cluster using Helm.

\`\`\`ts
// option 1: use a construct
new HelmChart(this, 'NginxIngress', {
  cluster,
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});

// or, option2: use \`addHelmChart\`
cluster.addHelmChart('NginxIngress', {
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});
\`\`\`

Helm charts will be installed and updated using \`helm upgrade --install\`, where a few parameters
are being passed down (such as \`repo\`, \`values\`, \`version\`, \`namespace\`, \`wait\`, \`timeout\`, etc).
This means that if the chart is added to CDK with the same release name, it will try to update
the chart in the cluster.

Helm charts are implemented as CloudFormation resources in CDK.
This means that if the chart is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`helm uninstall\` command and the
Helm chart will be deleted.

When there is no \`release\` defined, a unique ID will be allocated for the release based
on the construct path.

By default, all Helm charts will be installed concurrently. In some cases, this
could cause race conditions where two Helm charts attempt to deploy the same
resource or if Helm charts depend on each other. You can use
\`chart.node.addDependency()\` in order to declare a dependency order between
charts:

\`\`\`ts
const chart1 = cluster.addHelmChart(...);
const chart2 = cluster.addHelmChart(...);

chart2.node.addDependency(chart1);
\`\`\`

#### CDK8s Charts

[CDK8s](https://cdk8s.io/) is an open-source library that enables Kubernetes manifest authoring using familiar programming languages. It is founded on the same technologies as the AWS CDK, such as [\`constructs\`](https://github.com/aws/constructs) and [\`jsii\`](https://github.com/aws/jsii).

> To learn more about cdk8s, visit the [Getting Started](https://github.com/awslabs/cdk8s/tree/master/docs/getting-started) tutorials.

The EKS module natively integrates with cdk8s and allows you to apply cdk8s charts on AWS EKS clusters via the \`cluster.addCdk8sChart\` method.

In addition to \`cdk8s\`, you can also use [\`cdk8s+\`](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-plus), which provides higher level abstraction for the core kubernetes api objects.
You can think of it like the \`L2\` constructs for Kubernetes. Any other \`cdk8s\` based libraries are also supported, for example [\`cdk8s-debore\`](https://github.com/toricls/cdk8s-debore).

To get started, add the following dependencies to your \`package.json\` file:

\`\`\`json
\\"dependencies\\": {
  \\"cdk8s\\": \\"0.30.0\\",
  \\"cdk8s-plus\\": \\"0.30.0\\",
  \\"constructs\\": \\"3.0.4\\"
}
\`\`\`

> Note that the version of \`cdk8s\` must be \`>=0.30.0\`.

Similarly to how you would create a stack by extending \`@aws-cdk/core.Stack\`, we recommend you create a chart of your own that extends \`cdk8s.Chart\`,
and add your kubernetes resources to it. You can use \`aws-cdk\` construct attributes and properties inside your \`cdk8s\` construct freely.

In this example we create a chart that accepts an \`s3.Bucket\` and passes its name to a kubernetes pod as an environment variable.

Notice that the chart must accept a \`constructs.Construct\` type as its scope, not an \`@aws-cdk/core.Construct\` as you would normally use.
For this reason, to avoid possible confusion, we will create the chart in a separate file:

\`+ my-chart.ts\`

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface MyChartProps {
  readonly bucket: s3.Bucket;
}

export class MyChart extends cdk8s.Chart {
  constructor(scope: constructs.Construct, id: string, props: MyChartProps) {
    super(scope, id);

    new kplus.Pod(this, 'Pod', {
      spec: {
        containers: [
          new kplus.Container({
            image: 'my-image',
            env: {
              BUCKET_NAME: kplus.EnvValue.fromValue(props.bucket.bucketName),
            },
          }),
        ],
      },
    });
  }
}
\`\`\`

Then, in your AWS CDK app:

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as cdk8s from 'cdk8s';
import { MyChart } from './my-chart';

// some bucket..
const bucket = new s3.Bucket(this, 'Bucket');

// create a cdk8s chart and use \`cdk8s.App\` as the scope.
const myChart = new MyChart(new cdk8s.App(), 'MyChart', { bucket });

// add the cdk8s chart to the cluster
cluster.addCdk8sChart('my-chart', myChart);
\`\`\`

##### Custom CDK8s Constructs

You can also compose a few stock \`cdk8s+\` constructs into your own custom construct. However, since mixing scopes between \`aws-cdk\` and \`cdk8s\` is currently not supported, the \`Construct\` class
you'll need to use is the one from the [\`constructs\`](https://github.com/aws/constructs) module, and not from \`@aws-cdk/core\` like you normally would.
This is why we used \`new cdk8s.App()\` as the scope of the chart above.

\`\`\`ts
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface LoadBalancedWebService {
  readonly port: number;
  readonly image: string;
  readonly replicas: number;
}

export class LoadBalancedWebService extends constructs.Construct {
  constructor(scope: constructs.Construct, id: string, props: LoadBalancedWebService) {
    super(scope, id);

    const deployment = new kplus.Deployment(chart, 'Deployment', {
      spec: {
        replicas: props.replicas,
        podSpecTemplate: {
          containers: [ new kplus.Container({ image: props.image }) ]
        }
      },
    });

    deployment.expose({port: props.port, serviceType: kplus.ServiceType.LOAD_BALANCER})

  }
}
\`\`\`

##### Manually importing k8s specs and CRD's

If you find yourself unable to use \`cdk8s+\`, or just like to directly use the \`k8s\` native objects or CRD's, you can do so by manually importing them using the \`cdk8s-cli\`.

See [Importing kubernetes objects](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-cli#import) for detailed instructions.

## Patching Kubernetes Resources

The \`KubernetesPatch\` construct can be used to update existing kubernetes
resources. The following example can be used to patch the \`hello-kubernetes\`
deployment from the example above with 5 replicas.

\`\`\`ts
new KubernetesPatch(this, 'hello-kub-deployment-label', {
  cluster,
  resourceName: \\"deployment/hello-kubernetes\\",
  applyPatch: { spec: { replicas: 5 } },
  restorePatch: { spec: { replicas: 3 } }
})
\`\`\`

## Querying Kubernetes Resources

The \`KubernetesObjectValue\` construct can be used to query for information about kubernetes objects,
and use that as part of your CDK application.

For example, you can fetch the address of a [\`LoadBalancer\`](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer) type service:

\`\`\`ts
// query the load balancer address
const myServiceAddress = new KubernetesObjectValue(this, 'LoadBalancerAttribute', {
  cluster: cluster,
  objectType: 'service',
  objectName: 'my-service',
  jsonPath: '.status.loadBalancer.ingress[0].hostname', // https://kubernetes.io/docs/reference/kubectl/jsonpath/
});

// pass the address to a lambda function
const proxyFunction = new lambda.Function(this, 'ProxyFunction', {
  ...
  environment: {
    myServiceAddress: myServiceAddress.value
  },
})
\`\`\`

Specifically, since the above use-case is quite common, there is an easier way to access that information:

\`\`\`ts
const loadBalancerAddress = cluster.getServiceLoadBalancerAddress('my-service');
\`\`\`

## Using existing clusters

The Amazon EKS library allows defining Kubernetes resources such as [Kubernetes
manifests](#kubernetes-resources) and [Helm charts](#helm-charts) on clusters
that are not defined as part of your CDK app.

First, you'll need to \\"import\\" a cluster to your CDK app. To do that, use the
\`eks.Cluster.fromClusterAttributes()\` static method:

\`\`\`ts
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  clusterName: 'my-cluster-name',
  kubectlRoleArn: 'arn:aws:iam::1111111:role/iam-role-that-has-masters-access',
});
\`\`\`

Then, you can use \`addManifest\` or \`addHelmChart\` to define resources inside
your Kubernetes cluster. For example:

\`\`\`ts
cluster.addManifest('Test', {
  apiVersion: 'v1',
  kind: 'ConfigMap',
  metadata: {
    name: 'myconfigmap',
  },
  data: {
    Key: 'value',
    Another: '123454',
  },
});
\`\`\`

At the minimum, when importing clusters for \`kubectl\` management, you will need
to specify:

* \`clusterName\` - the name of the cluster.
* \`kubectlRoleArn\` - the ARN of an IAM role mapped to the \`system:masters\` RBAC
  role. If the cluster you are importing was created using the AWS CDK, the
  CloudFormation stack has an output that includes an IAM role that can be used.
  Otherwise, you can create an IAM role and map it to \`system:masters\` manually.
  The trust policy of this role should include the the
  \`arn:aws::iam::\${accountId}:root\` principal in order to allow the execution
  role of the kubectl resource to assume it.

If the cluster is configured with private-only or private and restricted public
Kubernetes [endpoint access](#endpoint-access), you must also specify:

* \`kubectlSecurityGroupId\` - the ID of an EC2 security group that is allowed
  connections to the cluster's control security group. For example, the EKS managed [cluster security group](#cluster-security-group).
* \`kubectlPrivateSubnetIds\` - a list of private VPC subnets IDs that will be used
  to access the Kubernetes endpoint.

## Known Issues and Limitations

* [One cluster per stack](https://github.com/aws/aws-cdk/issues/10073)
* [Service Account dependencies](https://github.com/aws/aws-cdk/issues/9910)
* [Support isolated VPCs](https://github.com/aws/aws-cdk/issues/12171)

# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### AwsAuth <a name=\\"AwsAuth\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth\\"></a>

Manages mapping between IAM users and roles to Kubernetes RBAC configuration.

> [https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AwsAuth;

AwsAuth.Builder.create(Construct scope, java.lang.String id)
    .cluster(Cluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.Cluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.Cluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addAccount\\">addAccount</a></code> | Additional AWS account to add to the aws-auth configmap. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addMastersRole\\">addMastersRole</a></code> | Adds the specified IAM role to the \`system:masters\` RBAC group, which means that anyone that can assume it will be able to administer this Kubernetes system. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping\\">addRoleMapping</a></code> | Adds a mapping between an IAM role to a Kubernetes user and groups. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addUserMapping\\">addUserMapping</a></code> | Adds a mapping between an IAM user to a Kubernetes user and groups. |

---

##### \`addAccount\` <a name=\\"addAccount\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addAccount\\"></a>

\`\`\`java
public addAccount(java.lang.String accountId)
\`\`\`

###### \`accountId\`<sup>Required</sup> <a name=\\"accountId\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addAccount.parameter.accountId\\"></a>

- *Type:* java.lang.String

account number.

---

##### \`addMastersRole\` <a name=\\"addMastersRole\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole\\"></a>

\`\`\`java
public addMastersRole(IRole role)
public addMastersRole(IRole role, java.lang.String username)
\`\`\`

###### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole.parameter.role\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole

The IAM role to add.

---

###### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole.parameter.username\\"></a>

- *Type:* java.lang.String

Optional user (defaults to the role ARN).

---

##### \`addRoleMapping\` <a name=\\"addRoleMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping\\"></a>

\`\`\`java
public addRoleMapping(IRole role, AwsAuthMapping mapping)
\`\`\`

###### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.role\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole

The IAM role to map.

---

###### \`mapping\`<sup>Required</sup> <a name=\\"mapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.mapping\\"></a>

- *Type:* software.amazon.awscdk.services.eks.AwsAuthMapping

Mapping to k8s user name and groups.

---

##### \`addUserMapping\` <a name=\\"addUserMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping\\"></a>

\`\`\`java
public addUserMapping(IUser user, AwsAuthMapping mapping)
\`\`\`

###### \`user\`<sup>Required</sup> <a name=\\"user\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.user\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IUser

The IAM user to map.

---

###### \`mapping\`<sup>Required</sup> <a name=\\"mapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.mapping\\"></a>

- *Type:* software.amazon.awscdk.services.eks.AwsAuthMapping

Mapping to k8s user name and groups.

---




### CfnAddon <a name=\\"CfnAddon\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon\\"></a>

- *Implements:* software.amazon.awscdk.IInspectable

A CloudFormation \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnAddon;

CfnAddon.Builder.create(Construct scope, java.lang.String id)
    .addonName(java.lang.String)
    .clusterName(java.lang.String)
//  .addonVersion(java.lang.String)
//  .resolveConflicts(java.lang.String)
//  .serviceAccountRoleArn(java.lang.String)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.addonName\\">addonName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.addonVersion\\">addonVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.resolveConflicts\\">resolveConflicts</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.serviceAccountRoleArn\\">serviceAccountRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.CfnTag></code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`addonName\`<sup>Required</sup> <a name=\\"addonName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.addonName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addonVersion\`<sup>Optional</sup> <a name=\\"addonVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.addonVersion\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolveConflicts\`<sup>Optional</sup> <a name=\\"resolveConflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.resolveConflicts\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`serviceAccountRoleArn\`<sup>Optional</sup> <a name=\\"serviceAccountRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.serviceAccountRoleArn\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.tags\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.CfnTag>

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.TagManager</code> | \`AWS::EKS::Addon.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.addonName\\">addonName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.addonVersion\\">addonVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.resolveConflicts\\">resolveConflicts</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.serviceAccountRoleArn\\">serviceAccountRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.TagManager

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

##### \`addonName\`<sup>Required</sup> <a name=\\"addonName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.addonName\\"></a>

\`\`\`java
public java.lang.String getAddonName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addonVersion\`<sup>Optional</sup> <a name=\\"addonVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.addonVersion\\"></a>

\`\`\`java
public java.lang.String getAddonVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolveConflicts\`<sup>Optional</sup> <a name=\\"resolveConflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.resolveConflicts\\"></a>

\`\`\`java
public java.lang.String getResolveConflicts();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`serviceAccountRoleArn\`<sup>Optional</sup> <a name=\\"serviceAccountRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.serviceAccountRoleArn\\"></a>

\`\`\`java
public java.lang.String getServiceAccountRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnCluster <a name=\\"CfnCluster\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster\\"></a>

- *Implements:* software.amazon.awscdk.IInspectable

A CloudFormation \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster;

CfnCluster.Builder.create(Construct scope, java.lang.String id)
    .resourcesVpcConfig(ResourcesVpcConfigProperty)
    .resourcesVpcConfig(IResolvable)
    .roleArn(java.lang.String)
//  .encryptionConfig(IResolvable)
//  .encryptionConfig(java.util.List<EncryptionConfigProperty)
//  .encryptionConfig(IResolvable>)
//  .kubernetesNetworkConfig(KubernetesNetworkConfigProperty)
//  .kubernetesNetworkConfig(IResolvable)
//  .name(java.lang.String)
//  .version(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.resourcesVpcConfig\\">resourcesVpcConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.roleArn\\">roleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.encryptionConfig\\">encryptionConfig</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.kubernetesNetworkConfig\\">kubernetesNetworkConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.name\\">name</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`resourcesVpcConfig\`<sup>Required</sup> <a name=\\"resourcesVpcConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.resourcesVpcConfig\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`roleArn\`<sup>Required</sup> <a name=\\"roleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.roleArn\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryptionConfig\`<sup>Optional</sup> <a name=\\"encryptionConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.encryptionConfig\\"></a>

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"kubernetesNetworkConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.kubernetesNetworkConfig\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.name\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.version\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\">attrCertificateAuthorityData</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\">attrClusterSecurityGroupId</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\">attrEncryptionConfigKeyArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrEndpoint\\">attrEndpoint</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\">attrOpenIdConnectIssuerUrl</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.resourcesVpcConfig\\">resourcesVpcConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.roleArn\\">roleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.encryptionConfig\\">encryptionConfig</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\">kubernetesNetworkConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.name\\">name</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrCertificateAuthorityData\`<sup>Required</sup> <a name=\\"attrCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\"></a>

\`\`\`java
public java.lang.String getAttrCertificateAuthorityData();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"attrClusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getAttrClusterSecurityGroupId();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"attrEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\"></a>

\`\`\`java
public java.lang.String getAttrEncryptionConfigKeyArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrEndpoint\`<sup>Required</sup> <a name=\\"attrEndpoint\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrEndpoint\\"></a>

\`\`\`java
public java.lang.String getAttrEndpoint();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"attrOpenIdConnectIssuerUrl\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\"></a>

\`\`\`java
public java.lang.String getAttrOpenIdConnectIssuerUrl();
\`\`\`

- *Type:* java.lang.String

---

##### \`resourcesVpcConfig\`<sup>Required</sup> <a name=\\"resourcesVpcConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.resourcesVpcConfig\\"></a>

\`\`\`java
public java.lang.Object getResourcesVpcConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`roleArn\`<sup>Required</sup> <a name=\\"roleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.roleArn\\"></a>

\`\`\`java
public java.lang.String getRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryptionConfig\`<sup>Optional</sup> <a name=\\"encryptionConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.encryptionConfig\\"></a>

\`\`\`java
public java.lang.Object getEncryptionConfig();
\`\`\`

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"kubernetesNetworkConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\"></a>

\`\`\`java
public java.lang.Object getKubernetesNetworkConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnFargateProfile <a name=\\"CfnFargateProfile\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile\\"></a>

- *Implements:* software.amazon.awscdk.IInspectable

A CloudFormation \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnFargateProfile;

CfnFargateProfile.Builder.create(Construct scope, java.lang.String id)
    .clusterName(java.lang.String)
    .podExecutionRoleArn(java.lang.String)
    .selectors(IResolvable)
    .selectors(java.util.List<SelectorProperty)
    .selectors(IResolvable>)
//  .fargateProfileName(java.lang.String)
//  .subnets(java.util.List<java.lang.String>)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.podExecutionRoleArn\\">podExecutionRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.selectors\\">selectors</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.CfnTag></code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`podExecutionRoleArn\`<sup>Required</sup> <a name=\\"podExecutionRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.podExecutionRoleArn\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.selectors\\"></a>

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.fargateProfileName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.subnets\\"></a>

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.tags\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.CfnTag>

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.TagManager</code> | \`AWS::EKS::FargateProfile.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\">podExecutionRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.selectors\\">selectors</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::FargateProfile.Subnets\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.TagManager

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`podExecutionRoleArn\`<sup>Required</sup> <a name=\\"podExecutionRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\"></a>

\`\`\`java
public java.lang.String getPodExecutionRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.selectors\\"></a>

\`\`\`java
public java.lang.Object getSelectors();
\`\`\`

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.subnets\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnets();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnNodegroup <a name=\\"CfnNodegroup\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup\\"></a>

- *Implements:* software.amazon.awscdk.IInspectable

A CloudFormation \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup;

CfnNodegroup.Builder.create(Construct scope, java.lang.String id)
    .clusterName(java.lang.String)
    .nodeRole(java.lang.String)
    .subnets(java.util.List<java.lang.String>)
//  .amiType(java.lang.String)
//  .capacityType(java.lang.String)
//  .diskSize(java.lang.Number)
//  .forceUpdateEnabled(java.lang.Boolean)
//  .forceUpdateEnabled(IResolvable)
//  .instanceTypes(java.util.List<java.lang.String>)
//  .labels(java.lang.Object)
//  .launchTemplate(LaunchTemplateSpecificationProperty)
//  .launchTemplate(IResolvable)
//  .nodegroupName(java.lang.String)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(RemoteAccessProperty)
//  .remoteAccess(IResolvable)
//  .scalingConfig(ScalingConfigProperty)
//  .scalingConfig(IResolvable)
//  .tags(java.lang.Object)
//  .taints(IResolvable)
//  .taints(java.util.List<TaintProperty)
//  .taints(IResolvable>)
//  .version(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.nodeRole\\">nodeRole</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.amiType\\">amiType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.capacityType\\">capacityType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.forceUpdateEnabled\\">forceUpdateEnabled</a></code> | <code>java.lang.Boolean OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.labels\\">labels</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.launchTemplate\\">launchTemplate</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scalingConfig\\">scalingConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.tags\\">tags</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.taints\\">taints</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`nodeRole\`<sup>Required</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.nodeRole\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.subnets\\"></a>

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.amiType\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.capacityType\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.diskSize\\"></a>

- *Type:* java.lang.Number

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`forceUpdateEnabled\`<sup>Optional</sup> <a name=\\"forceUpdateEnabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.forceUpdateEnabled\\"></a>

- *Type:* java.lang.Boolean OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.instanceTypes\\"></a>

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.labels\\"></a>

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`launchTemplate\`<sup>Optional</sup> <a name=\\"launchTemplate\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.launchTemplate\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.nodegroupName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.releaseVersion\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.remoteAccess\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scalingConfig\`<sup>Optional</sup> <a name=\\"scalingConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scalingConfig\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.tags\\"></a>

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.taints\\"></a>

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.version\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrClusterName\\">attrClusterName</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrNodegroupName\\">attrNodegroupName</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.TagManager</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.labels\\">labels</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.nodeRole\\">nodeRole</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.amiType\\">amiType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.capacityType\\">capacityType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\">forceUpdateEnabled</a></code> | <code>java.lang.Boolean OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.launchTemplate\\">launchTemplate</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.scalingConfig\\">scalingConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.taints\\">taints</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrClusterName\`<sup>Required</sup> <a name=\\"attrClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrClusterName\\"></a>

\`\`\`java
public java.lang.String getAttrClusterName();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrNodegroupName\`<sup>Required</sup> <a name=\\"attrNodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrNodegroupName\\"></a>

\`\`\`java
public java.lang.String getAttrNodegroupName();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.TagManager

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`labels\`<sup>Required</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.labels\\"></a>

\`\`\`java
public java.lang.Object getLabels();
\`\`\`

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`nodeRole\`<sup>Required</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.nodeRole\\"></a>

\`\`\`java
public java.lang.String getNodeRole();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.subnets\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnets();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.amiType\\"></a>

\`\`\`java
public java.lang.String getAmiType();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.capacityType\\"></a>

\`\`\`java
public java.lang.String getCapacityType();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.diskSize\\"></a>

\`\`\`java
public java.lang.Number getDiskSize();
\`\`\`

- *Type:* java.lang.Number

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`forceUpdateEnabled\`<sup>Optional</sup> <a name=\\"forceUpdateEnabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\"></a>

\`\`\`java
public java.lang.Object getForceUpdateEnabled();
\`\`\`

- *Type:* java.lang.Boolean OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.instanceTypes\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getInstanceTypes();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`launchTemplate\`<sup>Optional</sup> <a name=\\"launchTemplate\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.launchTemplate\\"></a>

\`\`\`java
public java.lang.Object getLaunchTemplate();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.releaseVersion\\"></a>

\`\`\`java
public java.lang.String getReleaseVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.remoteAccess\\"></a>

\`\`\`java
public java.lang.Object getRemoteAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scalingConfig\`<sup>Optional</sup> <a name=\\"scalingConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.scalingConfig\\"></a>

\`\`\`java
public java.lang.Object getScalingConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.taints\\"></a>

\`\`\`java
public java.lang.Object getTaints();
\`\`\`

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### Cluster <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.Cluster\\"></a>

- *Implements:* software.amazon.awscdk.services.eks.ICluster

A Cluster represents a managed Kubernetes Service (EKS).

This is a fully managed cluster of API Servers (control-plane) The user is still required to create the worker nodes.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Cluster;

Cluster.Builder.create(Construct scope, java.lang.String id)
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
//  .defaultCapacity(java.lang.Number)
//  .defaultCapacityInstance(InstanceType)
//  .defaultCapacityType(DefaultCapacityType)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | a Construct, most likely a cdk.Stack created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | the id of the Construct to create. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacity\\">defaultCapacity</a></code> | <code>java.lang.Number</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacityInstance\\">defaultCapacityInstance</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacityType\\">defaultCapacityType</a></code> | <code>software.amazon.awscdk.services.eks.DefaultCapacityType</code> | The default capacity type for the cluster. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

a Construct, most likely a cdk.Stack created.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

the id of the Construct to create.

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.version\\"></a>

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputClusterName\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputConfigCommand\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.role\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.securityGroup\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.vpc\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.vpcSubnets\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.clusterHandlerEnvironment\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.coreDnsComputeType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.endpointAccess\\"></a>

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlEnvironment\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlLayer\\"></a>

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlMemory\\"></a>

- *Type:* software.amazon.awscdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.mastersRole\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputMastersRoleArn\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.placeClusterHandlerInVpc\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.prune\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.secretsEncryptionKey\\"></a>

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultCapacity\`<sup>Optional</sup> <a name=\\"defaultCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacity\\"></a>

- *Type:* java.lang.Number
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`defaultCapacityInstance\`<sup>Optional</sup> <a name=\\"defaultCapacityInstance\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacityInstance\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`defaultCapacityType\`<sup>Optional</sup> <a name=\\"defaultCapacityType\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacityType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.DefaultCapacityType
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity\\">addAutoScalingGroupCapacity</a></code> | Add nodes to this EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addCdk8sChart\\">addCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addFargateProfile\\">addFargateProfile</a></code> | Adds a Fargate profile to this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addHelmChart\\">addHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addManifest\\">addManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity\\">addNodegroupCapacity</a></code> | Add managed nodegroup to this Amazon EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addServiceAccount\\">addServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity\\">connectAutoScalingGroupCapacity</a></code> | Connect capacity in the form of an existing AutoScalingGroup to the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress\\">getServiceLoadBalancerAddress</a></code> | Fetch the load balancer address of a service of type 'LoadBalancer'. |

---

##### \`addAutoScalingGroupCapacity\` <a name=\\"addAutoScalingGroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity\\"></a>

\`\`\`java
public addAutoScalingGroupCapacity(java.lang.String id, AutoScalingGroupCapacityOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.AutoScalingGroupCapacityOptions

---

##### \`addCdk8sChart\` <a name=\\"addCdk8sChart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart\\"></a>

\`\`\`java
public addCdk8sChart(java.lang.String id, Construct chart)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* software.constructs.Construct

the cdk8s chart.

---

##### \`addFargateProfile\` <a name=\\"addFargateProfile\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile\\"></a>

\`\`\`java
public addFargateProfile(java.lang.String id, FargateProfileOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.id\\"></a>

- *Type:* java.lang.String

the id of this profile.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.FargateProfileOptions

profile options.

---

##### \`addHelmChart\` <a name=\\"addHelmChart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart\\"></a>

\`\`\`java
public addHelmChart(java.lang.String id, HelmChartOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this chart.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.HelmChartOptions

options of this chart.

---

##### \`addManifest\` <a name=\\"addManifest\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest\\"></a>

\`\`\`java
public addManifest(java.lang.String id, java.util.Map<java.lang.String, java.lang.Object> manifest)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this manifest.

---

###### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest.parameter.manifest\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

a list of Kubernetes resource specifications.

---

##### \`addNodegroupCapacity\` <a name=\\"addNodegroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity\\"></a>

\`\`\`java
public addNodegroupCapacity(java.lang.String id)
public addNodegroupCapacity(java.lang.String id, NodegroupOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.id\\"></a>

- *Type:* java.lang.String

The ID of the nodegroup.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.NodegroupOptions

options for creating a new nodegroup.

---

##### \`addServiceAccount\` <a name=\\"addServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount\\"></a>

\`\`\`java
public addServiceAccount(java.lang.String id)
public addServiceAccount(java.lang.String id, ServiceAccountOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ServiceAccountOptions

---

##### \`connectAutoScalingGroupCapacity\` <a name=\\"connectAutoScalingGroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity\\"></a>

\`\`\`java
public connectAutoScalingGroupCapacity(AutoScalingGroup autoScalingGroup, AutoScalingGroupOptions options)
\`\`\`

###### \`autoScalingGroup\`<sup>Required</sup> <a name=\\"autoScalingGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.autoScalingGroup\\"></a>

- *Type:* software.amazon.awscdk.services.autoscaling.AutoScalingGroup

[disable-awslint:ref-via-interface].

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.AutoScalingGroupOptions

options for adding auto scaling groups, like customizing the bootstrap script.

---

##### \`getServiceLoadBalancerAddress\` <a name=\\"getServiceLoadBalancerAddress\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress\\"></a>

\`\`\`java
public getServiceLoadBalancerAddress(java.lang.String serviceName)
public getServiceLoadBalancerAddress(java.lang.String serviceName, ServiceLoadBalancerAddressOptions options)
\`\`\`

###### \`serviceName\`<sup>Required</sup> <a name=\\"serviceName\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.serviceName\\"></a>

- *Type:* java.lang.String

The name of the service.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ServiceLoadBalancerAddressOptions

Additional operation options.

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes\\">fromClusterAttributes</a></code> | Import an existing cluster. |

---

##### \`fromClusterAttributes\` <a name=\\"fromClusterAttributes\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Cluster;

Cluster.fromClusterAttributes(Construct scope, java.lang.String id, ClusterAttributes attrs)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

the construct scope, in most cases 'this'.

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.id\\"></a>

- *Type:* java.lang.String

the id or name to import as.

---

###### \`attrs\`<sup>Required</sup> <a name=\\"attrs\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.attrs\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ClusterAttributes

the cluster properties to use for importing information.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.adminRole\\">adminRole</a></code> | <code>software.amazon.awscdk.services.iam.Role</code> | An IAM role with administrative permissions to create or update the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.awsAuth\\">awsAuth</a></code> | <code>software.amazon.awscdk.services.eks.AwsAuth</code> | Lazily creates the AwsAuth resource, which manages AWS authentication mapping. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterArn\\">clusterArn</a></code> | <code>java.lang.String</code> | The AWS generated ARN for the Cluster resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>java.lang.String</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>java.lang.String</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>java.lang.String</code> | The endpoint URL for the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | The Name of the created EKS Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\">clusterOpenIdConnectIssuer</a></code> | <code>java.lang.String</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\">clusterOpenIdConnectIssuerUrl</a></code> | <code>java.lang.String</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer url. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroup\\">clusterSecurityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>java.lang.String</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.connections\\">connections</a></code> | <code>software.amazon.awscdk.services.ec2.Connections</code> | Manages connection rules (Security Group Rules) for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>software.amazon.awscdk.services.iam.IOpenIdConnectProvider</code> | An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Determines if Kubernetes resources can be pruned automatically. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | IAM role assumed by the EKS Control Plane. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.defaultCapacity\\">defaultCapacity</a></code> | <code>software.amazon.awscdk.services.autoscaling.AutoScalingGroup</code> | The auto scaling group that hosts the default capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.defaultNodegroup\\">defaultNodegroup</a></code> | <code>software.amazon.awscdk.services.eks.Nodegroup</code> | The node group that hosts the default capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.Size</code> | The amount of memory allocated to the kubectl provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlPrivateSubnets\\">kubectlPrivateSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.ISubnet></code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlRole\\">kubectlRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlSecurityGroup\\">kubectlSecurityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`adminRole\`<sup>Required</sup> <a name=\\"adminRole\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.adminRole\\"></a>

\`\`\`java
public Role getAdminRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.Role

An IAM role with administrative permissions to create or update the cluster.

This role also has \`systems:master\` permissions.

---

##### \`awsAuth\`<sup>Required</sup> <a name=\\"awsAuth\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.awsAuth\\"></a>

\`\`\`java
public AwsAuth getAwsAuth();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.AwsAuth

Lazily creates the AwsAuth resource, which manages AWS authentication mapping.

---

##### \`clusterArn\`<sup>Required</sup> <a name=\\"clusterArn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterArn\\"></a>

\`\`\`java
public java.lang.String getClusterArn();
\`\`\`

- *Type:* java.lang.String

The AWS generated ARN for the Cluster resource.

---

##### \`clusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`java
public java.lang.String getClusterCertificateAuthorityData();
\`\`\`

- *Type:* java.lang.String

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`java
public java.lang.String getClusterEncryptionConfigKeyArn();
\`\`\`

- *Type:* java.lang.String

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Required</sup> <a name=\\"clusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterEndpoint\\"></a>

\`\`\`java
public java.lang.String getClusterEndpoint();
\`\`\`

- *Type:* java.lang.String

The endpoint URL for the Cluster.

This is the URL inside the kubeconfig file to use with kubectl

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

The Name of the created EKS Cluster.

---

##### \`clusterOpenIdConnectIssuer\`<sup>Required</sup> <a name=\\"clusterOpenIdConnectIssuer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\"></a>

\`\`\`java
public java.lang.String getClusterOpenIdConnectIssuer();
\`\`\`

- *Type:* java.lang.String

If this cluster is kubectl-enabled, returns the OpenID Connect issuer.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`clusterOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"clusterOpenIdConnectIssuerUrl\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\"></a>

\`\`\`java
public java.lang.String getClusterOpenIdConnectIssuerUrl();
\`\`\`

- *Type:* java.lang.String

If this cluster is kubectl-enabled, returns the OpenID Connect issuer url.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`clusterSecurityGroup\`<sup>Required</sup> <a name=\\"clusterSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroup\\"></a>

\`\`\`java
public ISecurityGroup getClusterSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`clusterSecurityGroupId\`<sup>Required</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getClusterSecurityGroupId();
\`\`\`

- *Type:* java.lang.String

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`connections\`<sup>Required</sup> <a name=\\"connections\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.connections\\"></a>

\`\`\`java
public Connections getConnections();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.Connections

Manages connection rules (Security Group Rules) for the cluster.

---

##### \`openIdConnectProvider\`<sup>Required</sup> <a name=\\"openIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.openIdConnectProvider\\"></a>

\`\`\`java
public IOpenIdConnectProvider getOpenIdConnectProvider();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IOpenIdConnectProvider

An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM.

A provider will only be defined if this property is accessed (lazy initialization).

---

##### \`prune\`<sup>Required</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean

Determines if Kubernetes resources can be pruned automatically.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

IAM role assumed by the EKS Control Plane.

---

##### \`vpc\`<sup>Required</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`defaultCapacity\`<sup>Optional</sup> <a name=\\"defaultCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.defaultCapacity\\"></a>

\`\`\`java
public AutoScalingGroup getDefaultCapacity();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.AutoScalingGroup

The auto scaling group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is not \`EC2\` or \`defaultCapacityType\` is \`EC2\` but default capacity is set to 0.

---

##### \`defaultNodegroup\`<sup>Optional</sup> <a name=\\"defaultNodegroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.defaultNodegroup\\"></a>

\`\`\`java
public Nodegroup getDefaultNodegroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.Nodegroup

The node group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is \`EC2\` or \`defaultCapacityType\` is \`NODEGROUP\` but default capacity is set to 0.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion

The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI.

If undefined, a SAR app that contains this layer will be used.

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.Size

The amount of memory allocated to the kubectl provider's lambda function.

---

##### \`kubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnets\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`java
public java.util.List<ISubnet> getKubectlPrivateSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.ISubnet>
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

Subnets to host the \`kubectl\` compute resources.

---

##### \`kubectlRole\`<sup>Optional</sup> <a name=\\"kubectlRole\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlRole\\"></a>

\`\`\`java
public IRole getKubectlRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`kubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlSecurityGroup\\"></a>

\`\`\`java
public ISecurityGroup getKubectlSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

A security group to use for \`kubectl\` execution.

---


### FargateCluster <a name=\\"FargateCluster\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster\\"></a>

Defines an EKS cluster that runs entirely on AWS Fargate.

The cluster is created with a default Fargate Profile that matches the \\"default\\" and \\"kube-system\\" namespaces. You can add additional profiles using \`addFargateProfile\`.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateCluster;

FargateCluster.Builder.create(Construct scope, java.lang.String id)
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
//  .defaultProfile(FargateProfileOptions)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.defaultProfile\\">defaultProfile</a></code> | <code>software.amazon.awscdk.services.eks.FargateProfileOptions</code> | Fargate Profile to create along with the cluster. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.version\\"></a>

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputClusterName\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputConfigCommand\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.role\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.securityGroup\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.vpc\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.vpcSubnets\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.clusterHandlerEnvironment\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.coreDnsComputeType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.endpointAccess\\"></a>

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlEnvironment\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlLayer\\"></a>

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlMemory\\"></a>

- *Type:* software.amazon.awscdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.mastersRole\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputMastersRoleArn\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.placeClusterHandlerInVpc\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.prune\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.secretsEncryptionKey\\"></a>

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultProfile\`<sup>Optional</sup> <a name=\\"defaultProfile\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.defaultProfile\\"></a>

- *Type:* software.amazon.awscdk.services.eks.FargateProfileOptions
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---





### FargateProfile <a name=\\"FargateProfile\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile\\"></a>

- *Implements:* software.amazon.awscdk.ITaggable

Fargate profiles allows an administrator to declare which pods run on Fargate.

This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and optional labels. You must define a namespace for every selector. The label field consists of multiple optional key-value pairs. Pods that match a selector (by matching a namespace for the selector and all of the labels specified in the selector) are scheduled on Fargate. If a namespace selector is defined without any labels, Amazon EKS will attempt to schedule all pods that run in that namespace onto Fargate using the profile. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is scheduled on Fargate.  If a pod matches multiple Fargate profiles, Amazon EKS picks one of the matches at random. In this case, you can specify which profile a pod should use by adding the following Kubernetes label to the pod specification: eks.amazonaws.com/fargate-profile: profile_name. However, the pod must still match a selector in that profile in order to be scheduled onto Fargate.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateProfile;

FargateProfile.Builder.create(Construct scope, java.lang.String id)
    .selectors(java.util.List<Selector>)
//  .fargateProfileName(java.lang.String)
//  .podExecutionRole(IRole)
//  .subnetSelection(SubnetSelection)
//  .vpc(IVpc)
    .cluster(Cluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.selectors\\">selectors</a></code> | <code>java.util.List<software.amazon.awscdk.services.eks.Selector></code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.podExecutionRole\\">podExecutionRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.subnetSelection\\">subnetSelection</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.Cluster</code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.selectors\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.services.eks.Selector>

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.fargateProfileName\\"></a>

- *Type:* java.lang.String
- *Default:* generated

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Optional</sup> <a name=\\"podExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.podExecutionRole\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnetSelection\`<sup>Optional</sup> <a name=\\"subnetSelection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.subnetSelection\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.vpc\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.Cluster

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileArn\\">fargateProfileArn</a></code> | <code>java.lang.String</code> | The full Amazon Resource Name (ARN) of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.podExecutionRole\\">podExecutionRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.TagManager</code> | Resource tags. |

---

##### \`fargateProfileArn\`<sup>Required</sup> <a name=\\"fargateProfileArn\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileArn\\"></a>

\`\`\`java
public java.lang.String getFargateProfileArn();
\`\`\`

- *Type:* java.lang.String

The full Amazon Resource Name (ARN) of the Fargate profile.

---

##### \`fargateProfileName\`<sup>Required</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Required</sup> <a name=\\"podExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.podExecutionRole\\"></a>

\`\`\`java
public IRole getPodExecutionRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.TagManager

Resource tags.

---


### HelmChart <a name=\\"HelmChart\\" id=\\"aws-cdk-lib.aws_eks.HelmChart\\"></a>

Represents a helm chart within the Kubernetes system.

Applies/deletes the resources using \`kubectl\` in sync with the resource.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.HelmChart;

HelmChart.Builder.create(Construct scope, java.lang.String id)
    .chart(java.lang.String)
//  .createNamespace(java.lang.Boolean)
//  .namespace(java.lang.String)
//  .release(java.lang.String)
//  .repository(java.lang.String)
//  .timeout(Duration)
//  .values(java.util.Map<java.lang.String, java.lang.Object>)
//  .version(java.lang.String)
//  .wait(java.lang.Boolean)
    .cluster(ICluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.chart\\">chart</a></code> | <code>java.lang.String</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.createNamespace\\">createNamespace</a></code> | <code>java.lang.Boolean</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.release\\">release</a></code> | <code>java.lang.String</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.repository\\">repository</a></code> | <code>java.lang.String</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.values\\">values</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.version\\">version</a></code> | <code>java.lang.String</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.wait\\">wait</a></code> | <code>java.lang.Boolean</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.chart\\"></a>

- *Type:* java.lang.String

The name of the chart.

---

##### \`createNamespace\`<sup>Optional</sup> <a name=\\"createNamespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.createNamespace\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.namespace\\"></a>

- *Type:* java.lang.String
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.release\\"></a>

- *Type:* java.lang.String
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.repository\\"></a>

- *Type:* java.lang.String
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.timeout\\"></a>

- *Type:* software.amazon.awscdk.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.values\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.version\\"></a>

- *Type:* java.lang.String
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.wait\\"></a>

- *Type:* java.lang.Boolean
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>java.lang.String</code> | The CloudFormation resource type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.property.RESOURCE_TYPE\\"></a>

\`\`\`java
public java.lang.String getResourceType();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type.

---

### KubernetesManifest <a name=\\"KubernetesManifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest\\"></a>

Represents a manifest within the Kubernetes system.

Alternatively, you can use \`cluster.addManifest(resource[, resource, ...])\` to define resources on this cluster.  Applies/deletes the manifest using \`kubectl\`.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesManifest;

KubernetesManifest.Builder.create(Construct scope, java.lang.String id)
//  .prune(java.lang.Boolean)
//  .skipValidation(java.lang.Boolean)
    .cluster(ICluster)
    .manifest(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
//  .overwrite(java.lang.Boolean)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.skipValidation\\">skipValidation</a></code> | <code>java.lang.Boolean</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.manifest\\">manifest</a></code> | <code>java.util.List<java.util.Map<java.lang.String, java.lang.Object>></code> | The manifest to apply. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.overwrite\\">overwrite</a></code> | <code>java.lang.Boolean</code> | Overwrite any existing resources. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.prune\\"></a>

- *Type:* java.lang.Boolean
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skipValidation\`<sup>Optional</sup> <a name=\\"skipValidation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.skipValidation\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.manifest\\"></a>

- *Type:* java.util.List<java.util.Map<java.lang.String, java.lang.Object>>

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`overwrite\`<sup>Optional</sup> <a name=\\"overwrite\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.overwrite\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>java.lang.String</code> | The CloudFormation reosurce type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\"></a>

\`\`\`java
public java.lang.String getResourceType();
\`\`\`

- *Type:* java.lang.String

The CloudFormation reosurce type.

---

### KubernetesObjectValue <a name=\\"KubernetesObjectValue\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue\\"></a>

Represents a value of a specific object deployed in the cluster.

Use this to fetch any information available by the \`kubectl get\` command.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesObjectValue;

KubernetesObjectValue.Builder.create(Construct scope, java.lang.String id)
    .cluster(ICluster)
    .jsonPath(java.lang.String)
    .objectName(java.lang.String)
    .objectType(java.lang.String)
//  .objectNamespace(java.lang.String)
//  .timeout(Duration)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.jsonPath\\">jsonPath</a></code> | <code>java.lang.String</code> | JSONPath to the specific value. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectName\\">objectName</a></code> | <code>java.lang.String</code> | The name of the object to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectType\\">objectType</a></code> | <code>java.lang.String</code> | The object type to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectNamespace\\">objectNamespace</a></code> | <code>java.lang.String</code> | The namespace the object belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.Duration</code> | Timeout for waiting on a value. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`jsonPath\`<sup>Required</sup> <a name=\\"jsonPath\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.jsonPath\\"></a>

- *Type:* java.lang.String

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`objectName\`<sup>Required</sup> <a name=\\"objectName\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectName\\"></a>

- *Type:* java.lang.String

The name of the object to query.

---

##### \`objectType\`<sup>Required</sup> <a name=\\"objectType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectType\\"></a>

- *Type:* java.lang.String

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`objectNamespace\`<sup>Optional</sup> <a name=\\"objectNamespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectNamespace\\"></a>

- *Type:* java.lang.String
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.timeout\\"></a>

- *Type:* software.amazon.awscdk.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.property.value\\">value</a></code> | <code>java.lang.String</code> | The value as a string token. |

---

##### \`value\`<sup>Required</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.property.value\\"></a>

\`\`\`java
public java.lang.String getValue();
\`\`\`

- *Type:* java.lang.String

The value as a string token.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>java.lang.String</code> | The CloudFormation reosurce type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\"></a>

\`\`\`java
public java.lang.String getResourceType();
\`\`\`

- *Type:* java.lang.String

The CloudFormation reosurce type.

---

### KubernetesPatch <a name=\\"KubernetesPatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch\\"></a>

A CloudFormation resource which applies/restores a JSON patch into a Kubernetes resource.

> [https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/](https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesPatch;

KubernetesPatch.Builder.create(Construct scope, java.lang.String id)
    .applyPatch(java.util.Map<java.lang.String, java.lang.Object>)
    .cluster(ICluster)
    .resourceName(java.lang.String)
    .restorePatch(java.util.Map<java.lang.String, java.lang.Object>)
//  .patchType(PatchType)
//  .resourceNamespace(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.applyPatch\\">applyPatch</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The cluster to apply the patch to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.resourceName\\">resourceName</a></code> | <code>java.lang.String</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.restorePatch\\">restorePatch</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.patchType\\">patchType</a></code> | <code>software.amazon.awscdk.services.eks.PatchType</code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.resourceNamespace\\">resourceNamespace</a></code> | <code>java.lang.String</code> | The kubernetes API namespace. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`applyPatch\`<sup>Required</sup> <a name=\\"applyPatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.applyPatch\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`resourceName\`<sup>Required</sup> <a name=\\"resourceName\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.resourceName\\"></a>

- *Type:* java.lang.String

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`restorePatch\`<sup>Required</sup> <a name=\\"restorePatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.restorePatch\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`patchType\`<sup>Optional</sup> <a name=\\"patchType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.patchType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.PatchType
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`resourceNamespace\`<sup>Optional</sup> <a name=\\"resourceNamespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.resourceNamespace\\"></a>

- *Type:* java.lang.String
- *Default:* \\"default\\"

The kubernetes API namespace.

---





### Nodegroup <a name=\\"Nodegroup\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup\\"></a>

- *Implements:* software.amazon.awscdk.services.eks.INodegroup

The Nodegroup resource class.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Nodegroup;

Nodegroup.Builder.create(Construct scope, java.lang.String id)
//  .amiType(NodegroupAmiType)
//  .capacityType(CapacityType)
//  .desiredSize(java.lang.Number)
//  .diskSize(java.lang.Number)
//  .forceUpdate(java.lang.Boolean)
//  .instanceTypes(java.util.List<InstanceType>)
//  .labels(java.util.Map<java.lang.String, java.lang.String>)
//  .launchTemplateSpec(LaunchTemplateSpec)
//  .maxSize(java.lang.Number)
//  .minSize(java.lang.Number)
//  .nodegroupName(java.lang.String)
//  .nodeRole(IRole)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(NodegroupRemoteAccess)
//  .subnets(SubnetSelection)
//  .tags(java.util.Map<java.lang.String, java.lang.String>)
    .cluster(ICluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.amiType\\">amiType</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.capacityType\\">capacityType</a></code> | <code>software.amazon.awscdk.services.eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.desiredSize\\">desiredSize</a></code> | <code>java.lang.Number</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.forceUpdate\\">forceUpdate</a></code> | <code>java.lang.Boolean</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.InstanceType></code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.labels\\">labels</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.launchTemplateSpec\\">launchTemplateSpec</a></code> | <code>software.amazon.awscdk.services.eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.maxSize\\">maxSize</a></code> | <code>java.lang.Number</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.minSize\\">minSize</a></code> | <code>java.lang.Number</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.nodeRole\\">nodeRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.subnets\\">subnets</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | Cluster resource. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.amiType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.capacityType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.desiredSize\\"></a>

- *Type:* java.lang.Number
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.diskSize\\"></a>

- *Type:* java.lang.Number
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`forceUpdate\`<sup>Optional</sup> <a name=\\"forceUpdate\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.forceUpdate\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.instanceTypes\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.InstanceType>
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.labels\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launchTemplateSpec\`<sup>Optional</sup> <a name=\\"launchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.launchTemplateSpec\\"></a>

- *Type:* software.amazon.awscdk.services.eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.maxSize\\"></a>

- *Type:* java.lang.Number
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.minSize\\"></a>

- *Type:* java.lang.Number
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.nodegroupName\\"></a>

- *Type:* java.lang.String
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`nodeRole\`<sup>Optional</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.nodeRole\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.releaseVersion\\"></a>

- *Type:* java.lang.String
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.remoteAccess\\"></a>

- *Type:* software.amazon.awscdk.services.eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.subnets\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.tags\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

Cluster resource.

---


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName\\">fromNodegroupName</a></code> | Import the Nodegroup from attributes. |

---

##### \`fromNodegroupName\` <a name=\\"fromNodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Nodegroup;

Nodegroup.fromNodegroupName(Construct scope, java.lang.String id, java.lang.String nodegroupName)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.nodegroupName\\"></a>

- *Type:* java.lang.String

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | the Amazon EKS cluster resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupArn\\">nodegroupArn</a></code> | <code>java.lang.String</code> | ARN of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Nodegroup name. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | IAM role of the instance profile for the nodegroup. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

the Amazon EKS cluster resource.

---

##### \`nodegroupArn\`<sup>Required</sup> <a name=\\"nodegroupArn\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupArn\\"></a>

\`\`\`java
public java.lang.String getNodegroupArn();
\`\`\`

- *Type:* java.lang.String

ARN of the nodegroup.

---

##### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String

Nodegroup name.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

IAM role of the instance profile for the nodegroup.

---


### OpenIdConnectProvider <a name=\\"OpenIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider\\"></a>

IAM OIDC identity providers are entities in IAM that describe an external identity provider (IdP) service that supports the OpenID Connect (OIDC) standard, such as Google or Salesforce.

You use an IAM OIDC identity provider when you want to establish trust between an OIDC-compatible IdP and your AWS account.  This implementation has default values for thumbprints and clientIds props that will be compatible with the eks cluster

> [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.OpenIdConnectProvider;

OpenIdConnectProvider.Builder.create(Construct scope, java.lang.String id)
    .url(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | The definition scope. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | Construct ID. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.url\\">url</a></code> | <code>java.lang.String</code> | The URL of the identity provider. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

The definition scope.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

Construct ID.

---

##### \`url\`<sup>Required</sup> <a name=\\"url\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.url\\"></a>

- *Type:* java.lang.String

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---





### ServiceAccount <a name=\\"ServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount\\"></a>

- *Implements:* software.amazon.awscdk.services.iam.IPrincipal

Service Account.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ServiceAccount;

ServiceAccount.Builder.create(Construct scope, java.lang.String id)
//  .name(java.lang.String)
//  .namespace(java.lang.String)
    .cluster(ICluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.name\\">name</a></code> | <code>java.lang.String</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The namespace of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The cluster to apply the patch to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.name\\"></a>

- *Type:* java.lang.String
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.namespace\\"></a>

- *Type:* java.lang.String
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The cluster to apply the patch to.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy\\">addToPrincipalPolicy</a></code> | Add to the policy of this principal. |

---

##### \`addToPrincipalPolicy\` <a name=\\"addToPrincipalPolicy\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy\\"></a>

\`\`\`java
public addToPrincipalPolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.assumeRoleAction\\">assumeRoleAction</a></code> | <code>java.lang.String</code> | When this Principal is used in an AssumeRole policy, the action to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.grantPrincipal\\">grantPrincipal</a></code> | <code>software.amazon.awscdk.services.iam.IPrincipal</code> | The principal to grant permissions to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.policyFragment\\">policyFragment</a></code> | <code>software.amazon.awscdk.services.iam.PrincipalPolicyFragment</code> | Return the policy fragment that identifies this principal in a Policy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The role which is linked to the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountName\\">serviceAccountName</a></code> | <code>java.lang.String</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountNamespace\\">serviceAccountNamespace</a></code> | <code>java.lang.String</code> | The namespace where the service account is located in. |

---

##### \`assumeRoleAction\`<sup>Required</sup> <a name=\\"assumeRoleAction\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.assumeRoleAction\\"></a>

\`\`\`java
public java.lang.String getAssumeRoleAction();
\`\`\`

- *Type:* java.lang.String

When this Principal is used in an AssumeRole policy, the action to use.

---

##### \`grantPrincipal\`<sup>Required</sup> <a name=\\"grantPrincipal\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.grantPrincipal\\"></a>

\`\`\`java
public IPrincipal getGrantPrincipal();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IPrincipal

The principal to grant permissions to.

---

##### \`policyFragment\`<sup>Required</sup> <a name=\\"policyFragment\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.policyFragment\\"></a>

\`\`\`java
public PrincipalPolicyFragment getPolicyFragment();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.PrincipalPolicyFragment

Return the policy fragment that identifies this principal in a Policy.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

The role which is linked to the service account.

---

##### \`serviceAccountName\`<sup>Required</sup> <a name=\\"serviceAccountName\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountName\\"></a>

\`\`\`java
public java.lang.String getServiceAccountName();
\`\`\`

- *Type:* java.lang.String

The name of the service account.

---

##### \`serviceAccountNamespace\`<sup>Required</sup> <a name=\\"serviceAccountNamespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountNamespace\\"></a>

\`\`\`java
public java.lang.String getServiceAccountNamespace();
\`\`\`

- *Type:* java.lang.String

The namespace where the service account is located in.

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### AutoScalingGroupCapacityOptions <a name=\\"AutoScalingGroupCapacityOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions\\"></a>

Options for adding worker nodes.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AutoScalingGroupCapacityOptions;

AutoScalingGroupCapacityOptions.builder()
//  .allowAllOutbound(java.lang.Boolean)
//  .associatePublicIpAddress(java.lang.Boolean)
//  .autoScalingGroupName(java.lang.String)
//  .blockDevices(java.util.List<BlockDevice>)
//  .cooldown(Duration)
//  .desiredCapacity(java.lang.Number)
//  .groupMetrics(java.util.List<GroupMetrics>)
//  .healthCheck(HealthCheck)
//  .ignoreUnmodifiedSizeProperties(java.lang.Boolean)
//  .instanceMonitoring(Monitoring)
//  .keyName(java.lang.String)
//  .maxCapacity(java.lang.Number)
//  .maxInstanceLifetime(Duration)
//  .minCapacity(java.lang.Number)
//  .newInstancesProtectedFromScaleIn(java.lang.Boolean)
//  .notifications(java.util.List<NotificationConfiguration>)
//  .signals(Signals)
//  .spotPrice(java.lang.String)
//  .updatePolicy(UpdatePolicy)
//  .vpcSubnets(SubnetSelection)
    .instanceType(InstanceType)
//  .bootstrapEnabled(java.lang.Boolean)
//  .bootstrapOptions(BootstrapOptions)
//  .machineImageType(MachineImageType)
//  .mapRole(java.lang.Boolean)
//  .spotInterruptHandler(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\">allowAllOutbound</a></code> | <code>java.lang.Boolean</code> | Whether the instances can initiate connections to anywhere by default. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\">associatePublicIpAddress</a></code> | <code>java.lang.Boolean</code> | Whether instances in the Auto Scaling Group should have public IP addresses associated with them. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\">autoScalingGroupName</a></code> | <code>java.lang.String</code> | The name of the Auto Scaling group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\">blockDevices</a></code> | <code>java.util.List<software.amazon.awscdk.services.autoscaling.BlockDevice></code> | Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\">cooldown</a></code> | <code>software.amazon.awscdk.Duration</code> | Default scaling cooldown for this AutoScalingGroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\">desiredCapacity</a></code> | <code>java.lang.Number</code> | Initial amount of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\">groupMetrics</a></code> | <code>java.util.List<software.amazon.awscdk.services.autoscaling.GroupMetrics></code> | Enable monitoring for group metrics, these metrics describe the group rather than any of its instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\">healthCheck</a></code> | <code>software.amazon.awscdk.services.autoscaling.HealthCheck</code> | Configuration for health checks. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\">ignoreUnmodifiedSizeProperties</a></code> | <code>java.lang.Boolean</code> | If the ASG has scheduled actions, don't reset unchanged group sizes. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\">instanceMonitoring</a></code> | <code>software.amazon.awscdk.services.autoscaling.Monitoring</code> | Controls whether instances in this group are launched with detailed or basic monitoring. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\">keyName</a></code> | <code>java.lang.String</code> | Name of SSH keypair to grant access to instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\">maxCapacity</a></code> | <code>java.lang.Number</code> | Maximum number of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\">maxInstanceLifetime</a></code> | <code>software.amazon.awscdk.Duration</code> | The maximum amount of time that an instance can be in service. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\">minCapacity</a></code> | <code>java.lang.Number</code> | Minimum number of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\">newInstancesProtectedFromScaleIn</a></code> | <code>java.lang.Boolean</code> | Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\">notifications</a></code> | <code>java.util.List<software.amazon.awscdk.services.autoscaling.NotificationConfiguration></code> | Configure autoscaling group to send notifications about fleet changes to an SNS topic(s). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\">signals</a></code> | <code>software.amazon.awscdk.services.autoscaling.Signals</code> | Configure waiting for signals during deployment. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\">spotPrice</a></code> | <code>java.lang.String</code> | The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\">updatePolicy</a></code> | <code>software.amazon.awscdk.services.autoscaling.UpdatePolicy</code> | What to do when an AutoScalingGroup's instance configuration is changed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | Where to place instances within the VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\">instanceType</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | Instance type of the instances to start. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\">bootstrapEnabled</a></code> | <code>java.lang.Boolean</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\">bootstrapOptions</a></code> | <code>software.amazon.awscdk.services.eks.BootstrapOptions</code> | EKS node bootstrapping options. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\">machineImageType</a></code> | <code>software.amazon.awscdk.services.eks.MachineImageType</code> | Machine image type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\">mapRole</a></code> | <code>java.lang.Boolean</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\">spotInterruptHandler</a></code> | <code>java.lang.Boolean</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`allowAllOutbound\`<sup>Optional</sup> <a name=\\"allowAllOutbound\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\"></a>

\`\`\`java
public java.lang.Boolean getAllowAllOutbound();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Whether the instances can initiate connections to anywhere by default.

---

##### \`associatePublicIpAddress\`<sup>Optional</sup> <a name=\\"associatePublicIpAddress\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\"></a>

\`\`\`java
public java.lang.Boolean getAssociatePublicIpAddress();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* Use subnet setting.

Whether instances in the Auto Scaling Group should have public IP addresses associated with them.

---

##### \`autoScalingGroupName\`<sup>Optional</sup> <a name=\\"autoScalingGroupName\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\"></a>

\`\`\`java
public java.lang.String getAutoScalingGroupName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Auto generated by CloudFormation

The name of the Auto Scaling group.

This name must be unique per Region per account.

---

##### \`blockDevices\`<sup>Optional</sup> <a name=\\"blockDevices\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\"></a>

\`\`\`java
public java.util.List<BlockDevice> getBlockDevices();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.autoscaling.BlockDevice>
- *Default:* Uses the block device mapping of the AMI

Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.

Each instance that is launched has an associated root device volume, either an Amazon EBS volume or an instance store volume. You can use block device mappings to specify additional EBS volumes or instance store volumes to attach to an instance when it is launched.

> [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)

---

##### \`cooldown\`<sup>Optional</sup> <a name=\\"cooldown\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\"></a>

\`\`\`java
public Duration getCooldown();
\`\`\`

- *Type:* software.amazon.awscdk.Duration
- *Default:* Duration.minutes(5)

Default scaling cooldown for this AutoScalingGroup.

---

##### \`desiredCapacity\`<sup>Optional</sup> <a name=\\"desiredCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\"></a>

\`\`\`java
public java.lang.Number getDesiredCapacity();
\`\`\`

- *Type:* java.lang.Number
- *Default:* minCapacity, and leave unchanged during deployment

Initial amount of instances in the fleet.

If this is set to a number, every deployment will reset the amount of instances to this number. It is recommended to leave this value blank.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity)

---

##### \`groupMetrics\`<sup>Optional</sup> <a name=\\"groupMetrics\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\"></a>

\`\`\`java
public java.util.List<GroupMetrics> getGroupMetrics();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.autoscaling.GroupMetrics>
- *Default:* no group metrics will be reported

Enable monitoring for group metrics, these metrics describe the group rather than any of its instances.

To report all group metrics use \`GroupMetrics.all()\` Group metrics are reported in a granularity of 1 minute at no additional charge.

---

##### \`healthCheck\`<sup>Optional</sup> <a name=\\"healthCheck\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\"></a>

\`\`\`java
public HealthCheck getHealthCheck();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.HealthCheck
- *Default:* HealthCheck.ec2 with no grace period

Configuration for health checks.

---

##### \`ignoreUnmodifiedSizeProperties\`<sup>Optional</sup> <a name=\\"ignoreUnmodifiedSizeProperties\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\"></a>

\`\`\`java
public java.lang.Boolean getIgnoreUnmodifiedSizeProperties();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

If the ASG has scheduled actions, don't reset unchanged group sizes.

Only used if the ASG has scheduled actions (which may scale your ASG up or down regardless of cdk deployments). If true, the size of the group will only be reset if it has been changed in the CDK app. If false, the sizes will always be changed back to what they were in the CDK app on deployment.

---

##### \`instanceMonitoring\`<sup>Optional</sup> <a name=\\"instanceMonitoring\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\"></a>

\`\`\`java
public Monitoring getInstanceMonitoring();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.Monitoring
- *Default:* Monitoring.DETAILED

Controls whether instances in this group are launched with detailed or basic monitoring.

When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.

> [https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics](https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics)

---

##### \`keyName\`<sup>Optional</sup> <a name=\\"keyName\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\"></a>

\`\`\`java
public java.lang.String getKeyName();
\`\`\`

- *Type:* java.lang.String
- *Default:* No SSH access will be possible.

Name of SSH keypair to grant access to instances.

---

##### \`maxCapacity\`<sup>Optional</sup> <a name=\\"maxCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\"></a>

\`\`\`java
public java.lang.Number getMaxCapacity();
\`\`\`

- *Type:* java.lang.Number
- *Default:* desiredCapacity

Maximum number of instances in the fleet.

---

##### \`maxInstanceLifetime\`<sup>Optional</sup> <a name=\\"maxInstanceLifetime\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\"></a>

\`\`\`java
public Duration getMaxInstanceLifetime();
\`\`\`

- *Type:* software.amazon.awscdk.Duration
- *Default:* none

The maximum amount of time that an instance can be in service.

The maximum duration applies to all current and future instances in the group. As an instance approaches its maximum duration, it is terminated and replaced, and cannot be used again.  You must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, leave this property undefined.

> [https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)

---

##### \`minCapacity\`<sup>Optional</sup> <a name=\\"minCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\"></a>

\`\`\`java
public java.lang.Number getMinCapacity();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 1

Minimum number of instances in the fleet.

---

##### \`newInstancesProtectedFromScaleIn\`<sup>Optional</sup> <a name=\\"newInstancesProtectedFromScaleIn\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\"></a>

\`\`\`java
public java.lang.Boolean getNewInstancesProtectedFromScaleIn();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.

By default, Auto Scaling can terminate an instance at any time after launch when scaling in an Auto Scaling Group, subject to the group's termination policy. However, you may wish to protect newly-launched instances from being scaled in if they are going to run critical applications that should not be prematurely terminated.  This flag must be enabled if the Auto Scaling Group will be associated with an ECS Capacity Provider with managed termination protection.

---

##### \`notifications\`<sup>Optional</sup> <a name=\\"notifications\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\"></a>

\`\`\`java
public java.util.List<NotificationConfiguration> getNotifications();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.autoscaling.NotificationConfiguration>
- *Default:* No fleet change notifications will be sent.

Configure autoscaling group to send notifications about fleet changes to an SNS topic(s).

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations)

---

##### \`signals\`<sup>Optional</sup> <a name=\\"signals\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\"></a>

\`\`\`java
public Signals getSignals();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.Signals
- *Default:* Do not wait for signals

Configure waiting for signals during deployment.

Use this to pause the CloudFormation deployment to wait for the instances in the AutoScalingGroup to report successful startup during creation and updates. The UserData script needs to invoke \`cfn-signal\` with a success or failure code after it is done setting up the instance.  Without waiting for signals, the CloudFormation deployment will proceed as soon as the AutoScalingGroup has been created or updated but before the instances in the group have been started.  For example, to have instances wait for an Elastic Load Balancing health check before they signal success, add a health-check verification by using the cfn-init helper script. For an example, see the verify_instance_health command in the Auto Scaling rolling updates sample template:  https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml

---

##### \`spotPrice\`<sup>Optional</sup> <a name=\\"spotPrice\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\"></a>

\`\`\`java
public java.lang.String getSpotPrice();
\`\`\`

- *Type:* java.lang.String
- *Default:* none

The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request.

Spot Instances are launched when the price you specify exceeds the current Spot market price.

---

##### \`updatePolicy\`<sup>Optional</sup> <a name=\\"updatePolicy\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\"></a>

\`\`\`java
public UpdatePolicy getUpdatePolicy();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.UpdatePolicy
- *Default:* \`UpdatePolicy.rollingUpdate()\` if using \`init\`, \`UpdatePolicy.none()\` otherwise

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\"></a>

\`\`\`java
public SubnetSelection getVpcSubnets();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* All Private subnets.

Where to place instances within the VPC.

---

##### \`instanceType\`<sup>Required</sup> <a name=\\"instanceType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\"></a>

\`\`\`java
public InstanceType getInstanceType();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.InstanceType

Instance type of the instances to start.

---

##### \`bootstrapEnabled\`<sup>Optional</sup> <a name=\\"bootstrapEnabled\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\"></a>

\`\`\`java
public java.lang.Boolean getBootstrapEnabled();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`bootstrapOptions\`<sup>Optional</sup> <a name=\\"bootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\"></a>

\`\`\`java
public BootstrapOptions getBootstrapOptions();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.BootstrapOptions
- *Default:* none

EKS node bootstrapping options.

---

##### \`machineImageType\`<sup>Optional</sup> <a name=\\"machineImageType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\"></a>

\`\`\`java
public MachineImageType getMachineImageType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.MachineImageType
- *Default:* MachineImageType.AMAZON_LINUX_2

Machine image type.

---

##### \`mapRole\`<sup>Optional</sup> <a name=\\"mapRole\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\"></a>

\`\`\`java
public java.lang.Boolean getMapRole();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`spotInterruptHandler\`<sup>Optional</sup> <a name=\\"spotInterruptHandler\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\"></a>

\`\`\`java
public java.lang.Boolean getSpotInterruptHandler();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is used.

---

### AutoScalingGroupOptions <a name=\\"AutoScalingGroupOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions\\"></a>

Options for adding an AutoScalingGroup as capacity.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AutoScalingGroupOptions;

AutoScalingGroupOptions.builder()
//  .bootstrapEnabled(java.lang.Boolean)
//  .bootstrapOptions(BootstrapOptions)
//  .machineImageType(MachineImageType)
//  .mapRole(java.lang.Boolean)
//  .spotInterruptHandler(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\">bootstrapEnabled</a></code> | <code>java.lang.Boolean</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\">bootstrapOptions</a></code> | <code>software.amazon.awscdk.services.eks.BootstrapOptions</code> | Allows options for node bootstrapping through EC2 user data. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.machineImageType\\">machineImageType</a></code> | <code>software.amazon.awscdk.services.eks.MachineImageType</code> | Allow options to specify different machine image type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.mapRole\\">mapRole</a></code> | <code>java.lang.Boolean</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\">spotInterruptHandler</a></code> | <code>java.lang.Boolean</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`bootstrapEnabled\`<sup>Optional</sup> <a name=\\"bootstrapEnabled\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\"></a>

\`\`\`java
public java.lang.Boolean getBootstrapEnabled();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`bootstrapOptions\`<sup>Optional</sup> <a name=\\"bootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\"></a>

\`\`\`java
public BootstrapOptions getBootstrapOptions();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.BootstrapOptions
- *Default:* default options

Allows options for node bootstrapping through EC2 user data.

---

##### \`machineImageType\`<sup>Optional</sup> <a name=\\"machineImageType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.machineImageType\\"></a>

\`\`\`java
public MachineImageType getMachineImageType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.MachineImageType
- *Default:* MachineImageType.AMAZON_LINUX_2

Allow options to specify different machine image type.

---

##### \`mapRole\`<sup>Optional</sup> <a name=\\"mapRole\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.mapRole\\"></a>

\`\`\`java
public java.lang.Boolean getMapRole();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`spotInterruptHandler\`<sup>Optional</sup> <a name=\\"spotInterruptHandler\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\"></a>

\`\`\`java
public java.lang.Boolean getSpotInterruptHandler();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is configured on the auto-scaling group.

---

### AwsAuthMapping <a name=\\"AwsAuthMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping\\"></a>

AwsAuth mapping.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AwsAuthMapping;

AwsAuthMapping.builder()
    .groups(java.util.List<java.lang.String>)
//  .username(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping.property.groups\\">groups</a></code> | <code>java.util.List<java.lang.String></code> | A list of groups within Kubernetes to which the role is mapped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping.property.username\\">username</a></code> | <code>java.lang.String</code> | The user name within Kubernetes to map to the IAM role. |

---

##### \`groups\`<sup>Required</sup> <a name=\\"groups\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.property.groups\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getGroups();
\`\`\`

- *Type:* java.util.List<java.lang.String>

A list of groups within Kubernetes to which the role is mapped.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.property.username\\"></a>

\`\`\`java
public java.lang.String getUsername();
\`\`\`

- *Type:* java.lang.String
- *Default:* By default, the user name is the ARN of the IAM role.

The user name within Kubernetes to map to the IAM role.

---

### AwsAuthProps <a name=\\"AwsAuthProps\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps\\"></a>

Configuration props for the AwsAuth construct.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AwsAuthProps;

AwsAuthProps.builder()
    .cluster(Cluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.Cluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps.property.cluster\\"></a>

\`\`\`java
public Cluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.Cluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### BootstrapOptions <a name=\\"BootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions\\"></a>

EKS node bootstrapping options.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.BootstrapOptions;

BootstrapOptions.builder()
//  .additionalArgs(java.lang.String)
//  .awsApiRetryAttempts(java.lang.Number)
//  .dnsClusterIp(java.lang.String)
//  .dockerConfigJson(java.lang.String)
//  .enableDockerBridge(java.lang.Boolean)
//  .kubeletExtraArgs(java.lang.String)
//  .useMaxPods(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.additionalArgs\\">additionalArgs</a></code> | <code>java.lang.String</code> | Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\">awsApiRetryAttempts</a></code> | <code>java.lang.Number</code> | Number of retry attempts for AWS API call (DescribeCluster). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.dnsClusterIp\\">dnsClusterIp</a></code> | <code>java.lang.String</code> | Overrides the IP address to use for DNS queries within the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.dockerConfigJson\\">dockerConfigJson</a></code> | <code>java.lang.String</code> | The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.enableDockerBridge\\">enableDockerBridge</a></code> | <code>java.lang.Boolean</code> | Restores the docker default bridge network. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\">kubeletExtraArgs</a></code> | <code>java.lang.String</code> | Extra arguments to add to the kubelet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.useMaxPods\\">useMaxPods</a></code> | <code>java.lang.Boolean</code> | Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance. |

---

##### \`additionalArgs\`<sup>Optional</sup> <a name=\\"additionalArgs\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.additionalArgs\\"></a>

\`\`\`java
public java.lang.String getAdditionalArgs();
\`\`\`

- *Type:* java.lang.String
- *Default:* none

Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command.

> [https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh)

---

##### \`awsApiRetryAttempts\`<sup>Optional</sup> <a name=\\"awsApiRetryAttempts\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\"></a>

\`\`\`java
public java.lang.Number getAwsApiRetryAttempts();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 3

Number of retry attempts for AWS API call (DescribeCluster).

---

##### \`dnsClusterIp\`<sup>Optional</sup> <a name=\\"dnsClusterIp\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.dnsClusterIp\\"></a>

\`\`\`java
public java.lang.String getDnsClusterIp();
\`\`\`

- *Type:* java.lang.String
- *Default:* 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface.

Overrides the IP address to use for DNS queries within the cluster.

---

##### \`dockerConfigJson\`<sup>Optional</sup> <a name=\\"dockerConfigJson\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.dockerConfigJson\\"></a>

\`\`\`java
public java.lang.String getDockerConfigJson();
\`\`\`

- *Type:* java.lang.String
- *Default:* none

The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI.

---

##### \`enableDockerBridge\`<sup>Optional</sup> <a name=\\"enableDockerBridge\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.enableDockerBridge\\"></a>

\`\`\`java
public java.lang.Boolean getEnableDockerBridge();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Restores the docker default bridge network.

---

##### \`kubeletExtraArgs\`<sup>Optional</sup> <a name=\\"kubeletExtraArgs\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\"></a>

\`\`\`java
public java.lang.String getKubeletExtraArgs();
\`\`\`

- *Type:* java.lang.String
- *Default:* none

Extra arguments to add to the kubelet.

Useful for adding labels or taints.

---

##### \`useMaxPods\`<sup>Optional</sup> <a name=\\"useMaxPods\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.useMaxPods\\"></a>

\`\`\`java
public java.lang.Boolean getUseMaxPods();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance.

---

### CfnAddonProps <a name=\\"CfnAddonProps\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps\\"></a>

Properties for defining a \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnAddonProps;

CfnAddonProps.builder()
    .addonName(java.lang.String)
    .clusterName(java.lang.String)
//  .addonVersion(java.lang.String)
//  .resolveConflicts(java.lang.String)
//  .serviceAccountRoleArn(java.lang.String)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.addonName\\">addonName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.addonVersion\\">addonVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.resolveConflicts\\">resolveConflicts</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\">serviceAccountRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.CfnTag></code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`addonName\`<sup>Required</sup> <a name=\\"addonName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.addonName\\"></a>

\`\`\`java
public java.lang.String getAddonName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addonVersion\`<sup>Optional</sup> <a name=\\"addonVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.addonVersion\\"></a>

\`\`\`java
public java.lang.String getAddonVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolveConflicts\`<sup>Optional</sup> <a name=\\"resolveConflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.resolveConflicts\\"></a>

\`\`\`java
public java.lang.String getResolveConflicts();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`serviceAccountRoleArn\`<sup>Optional</sup> <a name=\\"serviceAccountRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\"></a>

\`\`\`java
public java.lang.String getServiceAccountRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.tags\\"></a>

\`\`\`java
public java.util.List<CfnTag> getTags();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.CfnTag>

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

### CfnClusterProps <a name=\\"CfnClusterProps\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps\\"></a>

Properties for defining a \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnClusterProps;

CfnClusterProps.builder()
    .resourcesVpcConfig(ResourcesVpcConfigProperty)
    .resourcesVpcConfig(IResolvable)
    .roleArn(java.lang.String)
//  .encryptionConfig(IResolvable)
//  .encryptionConfig(java.util.List<EncryptionConfigProperty)
//  .encryptionConfig(IResolvable>)
//  .kubernetesNetworkConfig(KubernetesNetworkConfigProperty)
//  .kubernetesNetworkConfig(IResolvable)
//  .name(java.lang.String)
//  .version(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\">resourcesVpcConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.roleArn\\">roleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.encryptionConfig\\">encryptionConfig</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\">kubernetesNetworkConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.name\\">name</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`resourcesVpcConfig\`<sup>Required</sup> <a name=\\"resourcesVpcConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\"></a>

\`\`\`java
public java.lang.Object getResourcesVpcConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`roleArn\`<sup>Required</sup> <a name=\\"roleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.roleArn\\"></a>

\`\`\`java
public java.lang.String getRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryptionConfig\`<sup>Optional</sup> <a name=\\"encryptionConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.encryptionConfig\\"></a>

\`\`\`java
public java.lang.Object getEncryptionConfig();
\`\`\`

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"kubernetesNetworkConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\"></a>

\`\`\`java
public java.lang.Object getKubernetesNetworkConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

### CfnFargateProfileProps <a name=\\"CfnFargateProfileProps\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps\\"></a>

Properties for defining a \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnFargateProfileProps;

CfnFargateProfileProps.builder()
    .clusterName(java.lang.String)
    .podExecutionRoleArn(java.lang.String)
    .selectors(IResolvable)
    .selectors(java.util.List<SelectorProperty)
    .selectors(IResolvable>)
//  .fargateProfileName(java.lang.String)
//  .subnets(java.util.List<java.lang.String>)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\">podExecutionRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.selectors\\">selectors</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.CfnTag></code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`podExecutionRoleArn\`<sup>Required</sup> <a name=\\"podExecutionRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\"></a>

\`\`\`java
public java.lang.String getPodExecutionRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.selectors\\"></a>

\`\`\`java
public java.lang.Object getSelectors();
\`\`\`

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.subnets\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnets();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.tags\\"></a>

\`\`\`java
public java.util.List<CfnTag> getTags();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.CfnTag>

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

### CfnNodegroupProps <a name=\\"CfnNodegroupProps\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps\\"></a>

Properties for defining a \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroupProps;

CfnNodegroupProps.builder()
    .clusterName(java.lang.String)
    .nodeRole(java.lang.String)
    .subnets(java.util.List<java.lang.String>)
//  .amiType(java.lang.String)
//  .capacityType(java.lang.String)
//  .diskSize(java.lang.Number)
//  .forceUpdateEnabled(java.lang.Boolean)
//  .forceUpdateEnabled(IResolvable)
//  .instanceTypes(java.util.List<java.lang.String>)
//  .labels(java.lang.Object)
//  .launchTemplate(LaunchTemplateSpecificationProperty)
//  .launchTemplate(IResolvable)
//  .nodegroupName(java.lang.String)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(RemoteAccessProperty)
//  .remoteAccess(IResolvable)
//  .scalingConfig(ScalingConfigProperty)
//  .scalingConfig(IResolvable)
//  .tags(java.lang.Object)
//  .taints(IResolvable)
//  .taints(java.util.List<TaintProperty)
//  .taints(IResolvable>)
//  .version(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodeRole\\">nodeRole</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.amiType\\">amiType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.capacityType\\">capacityType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\">forceUpdateEnabled</a></code> | <code>java.lang.Boolean OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.labels\\">labels</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.launchTemplate\\">launchTemplate</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.scalingConfig\\">scalingConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.IResolvable</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.tags\\">tags</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.taints\\">taints</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.IResolvable></code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`nodeRole\`<sup>Required</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodeRole\\"></a>

\`\`\`java
public java.lang.String getNodeRole();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.subnets\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnets();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.amiType\\"></a>

\`\`\`java
public java.lang.String getAmiType();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.capacityType\\"></a>

\`\`\`java
public java.lang.String getCapacityType();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.diskSize\\"></a>

\`\`\`java
public java.lang.Number getDiskSize();
\`\`\`

- *Type:* java.lang.Number

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`forceUpdateEnabled\`<sup>Optional</sup> <a name=\\"forceUpdateEnabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\"></a>

\`\`\`java
public java.lang.Object getForceUpdateEnabled();
\`\`\`

- *Type:* java.lang.Boolean OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.instanceTypes\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getInstanceTypes();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.labels\\"></a>

\`\`\`java
public java.lang.Object getLabels();
\`\`\`

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`launchTemplate\`<sup>Optional</sup> <a name=\\"launchTemplate\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.launchTemplate\\"></a>

\`\`\`java
public java.lang.Object getLaunchTemplate();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.releaseVersion\\"></a>

\`\`\`java
public java.lang.String getReleaseVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.remoteAccess\\"></a>

\`\`\`java
public java.lang.Object getRemoteAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scalingConfig\`<sup>Optional</sup> <a name=\\"scalingConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.scalingConfig\\"></a>

\`\`\`java
public java.lang.Object getScalingConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.IResolvable

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.tags\\"></a>

\`\`\`java
public java.lang.Object getTags();
\`\`\`

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.taints\\"></a>

\`\`\`java
public java.lang.Object getTaints();
\`\`\`

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.IResolvable>

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

### ClusterAttributes <a name=\\"ClusterAttributes\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes\\"></a>

Attributes for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ClusterAttributes;

ClusterAttributes.builder()
    .clusterName(java.lang.String)
//  .clusterCertificateAuthorityData(java.lang.String)
//  .clusterEncryptionConfigKeyArn(java.lang.String)
//  .clusterEndpoint(java.lang.String)
//  .clusterSecurityGroupId(java.lang.String)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .kubectlPrivateSubnetIds(java.util.List<java.lang.String>)
//  .kubectlRoleArn(java.lang.String)
//  .kubectlSecurityGroupId(java.lang.String)
//  .openIdConnectProvider(IOpenIdConnectProvider)
//  .prune(java.lang.Boolean)
//  .securityGroupIds(java.util.List<java.lang.String>)
//  .vpc(IVpc)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | The physical name of the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>java.lang.String</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>java.lang.String</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>java.lang.String</code> | The API Server endpoint URL. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>java.lang.String</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables to use when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\">kubectlPrivateSubnetIds</a></code> | <code>java.util.List<java.lang.String></code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlRoleArn\\">kubectlRoleArn</a></code> | <code>java.lang.String</code> | An IAM role with cluster administrator and \\"system:masters\\" permissions. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\">kubectlSecurityGroupId</a></code> | <code>java.lang.String</code> | A security group to use for \`kubectl\` execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>software.amazon.awscdk.services.iam.IOpenIdConnectProvider</code> | An Open ID Connect provider for this cluster that can be used to configure service accounts. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.securityGroupIds\\">securityGroupIds</a></code> | <code>java.util.List<java.lang.String></code> | Additional security groups associated with this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which this Cluster was created. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

The physical name of the Cluster.

---

##### \`clusterCertificateAuthorityData\`<sup>Optional</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\"></a>

\`\`\`java
public java.lang.String getClusterCertificateAuthorityData();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified \`cluster.clusterCertificateAuthorityData\` will throw an error

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Optional</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`java
public java.lang.String getClusterEncryptionConfigKeyArn();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified \`cluster.clusterEncryptionConfigKeyArn\` will throw an error

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Optional</sup> <a name=\\"clusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEndpoint\\"></a>

\`\`\`java
public java.lang.String getClusterEndpoint();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified \`cluster.clusterEndpoint\` will throw an error.

The API Server endpoint URL.

---

##### \`clusterSecurityGroupId\`<sup>Optional</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getClusterSecurityGroupId();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified \`cluster.clusterSecurityGroupId\` will throw an error

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* no additional variables

Environment variables to use when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* a layer bundled with this module.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

This layer is used by the kubectl handler to apply manifests and install helm charts.  The handler expects the layer to include the following executables:  \`\`\` helm/helm kubectl/kubectl awscli/aws \`\`\`

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`kubectlPrivateSubnetIds\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnetIds\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getKubectlPrivateSubnetIds();
\`\`\`

- *Type:* java.util.List<java.lang.String>
- *Default:* k8s endpoint is expected to be accessible publicly

Subnets to host the \`kubectl\` compute resources.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`kubectlRoleArn\`<sup>Optional</sup> <a name=\\"kubectlRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlRoleArn\\"></a>

\`\`\`java
public java.lang.String getKubectlRoleArn();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified, it not be possible to issue \`kubectl\` commands against an imported cluster.

An IAM role with cluster administrator and \\"system:masters\\" permissions.

---

##### \`kubectlSecurityGroupId\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getKubectlSecurityGroupId();
\`\`\`

- *Type:* java.lang.String
- *Default:* k8s endpoint is expected to be accessible publicly

A security group to use for \`kubectl\` execution.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`openIdConnectProvider\`<sup>Optional</sup> <a name=\\"openIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.openIdConnectProvider\\"></a>

\`\`\`java
public IOpenIdConnectProvider getOpenIdConnectProvider();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IOpenIdConnectProvider
- *Default:* if not specified \`cluster.openIdConnectProvider\` and \`cluster.addServiceAccount\` will throw an error.

An Open ID Connect provider for this cluster that can be used to configure service accounts.

You can either import an existing provider using \`iam.OpenIdConnectProvider.fromProviderArn\`, or create a new provider using \`new eks.OpenIdConnectProvider\`

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`securityGroupIds\`<sup>Optional</sup> <a name=\\"securityGroupIds\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.securityGroupIds\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSecurityGroupIds();
\`\`\`

- *Type:* java.util.List<java.lang.String>
- *Default:* if not specified, no additional security groups will be considered in \`cluster.connections\`.

Additional security groups associated with this cluster.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* if not specified \`cluster.vpc\` will throw an error

The VPC in which this Cluster was created.

---

### ClusterOptions <a name=\\"ClusterOptions\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions\\"></a>

Options for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ClusterOptions;

ClusterOptions.builder()
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.version\\"></a>

\`\`\`java
public KubernetesVersion getVersion();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputClusterName\\"></a>

\`\`\`java
public java.lang.Boolean getOutputClusterName();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`java
public java.lang.Boolean getOutputConfigCommand();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.securityGroup\\"></a>

\`\`\`java
public ISecurityGroup getSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.vpcSubnets\\"></a>

\`\`\`java
public java.util.List<SubnetSelection> getVpcSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getClusterHandlerEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.coreDnsComputeType\\"></a>

\`\`\`java
public CoreDnsComputeType getCoreDnsComputeType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.endpointAccess\\"></a>

\`\`\`java
public EndpointAccess getEndpointAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.mastersRole\\"></a>

\`\`\`java
public IRole getMastersRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputMastersRoleArn\\"></a>

\`\`\`java
public java.lang.Boolean getOutputMastersRoleArn();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\"></a>

\`\`\`java
public java.lang.Boolean getPlaceClusterHandlerInVpc();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.secretsEncryptionKey\\"></a>

\`\`\`java
public IKey getSecretsEncryptionKey();
\`\`\`

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

### ClusterProps <a name=\\"ClusterProps\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps\\"></a>

Common configuration props for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ClusterProps;

ClusterProps.builder()
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
//  .defaultCapacity(java.lang.Number)
//  .defaultCapacityInstance(InstanceType)
//  .defaultCapacityType(DefaultCapacityType)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacity\\">defaultCapacity</a></code> | <code>java.lang.Number</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityInstance\\">defaultCapacityInstance</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityType\\">defaultCapacityType</a></code> | <code>software.amazon.awscdk.services.eks.DefaultCapacityType</code> | The default capacity type for the cluster. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.version\\"></a>

\`\`\`java
public KubernetesVersion getVersion();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputClusterName\\"></a>

\`\`\`java
public java.lang.Boolean getOutputClusterName();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputConfigCommand\\"></a>

\`\`\`java
public java.lang.Boolean getOutputConfigCommand();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.securityGroup\\"></a>

\`\`\`java
public ISecurityGroup getSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.vpcSubnets\\"></a>

\`\`\`java
public java.util.List<SubnetSelection> getVpcSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getClusterHandlerEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`java
public CoreDnsComputeType getCoreDnsComputeType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.endpointAccess\\"></a>

\`\`\`java
public EndpointAccess getEndpointAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.mastersRole\\"></a>

\`\`\`java
public IRole getMastersRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`java
public java.lang.Boolean getOutputMastersRoleArn();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`java
public java.lang.Boolean getPlaceClusterHandlerInVpc();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`java
public IKey getSecretsEncryptionKey();
\`\`\`

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultCapacity\`<sup>Optional</sup> <a name=\\"defaultCapacity\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacity\\"></a>

\`\`\`java
public java.lang.Number getDefaultCapacity();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`defaultCapacityInstance\`<sup>Optional</sup> <a name=\\"defaultCapacityInstance\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityInstance\\"></a>

\`\`\`java
public InstanceType getDefaultCapacityInstance();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`defaultCapacityType\`<sup>Optional</sup> <a name=\\"defaultCapacityType\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityType\\"></a>

\`\`\`java
public DefaultCapacityType getDefaultCapacityType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.DefaultCapacityType
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

### CommonClusterOptions <a name=\\"CommonClusterOptions\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions\\"></a>

Options for configuring an EKS cluster.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CommonClusterOptions;

CommonClusterOptions.builder()
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.version\\"></a>

\`\`\`java
public KubernetesVersion getVersion();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputClusterName\\"></a>

\`\`\`java
public java.lang.Boolean getOutputClusterName();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`java
public java.lang.Boolean getOutputConfigCommand();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.securityGroup\\"></a>

\`\`\`java
public ISecurityGroup getSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpcSubnets\\"></a>

\`\`\`java
public java.util.List<SubnetSelection> getVpcSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

### EksOptimizedImageProps <a name=\\"EksOptimizedImageProps\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps\\"></a>

Properties for EksOptimizedImage.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.EksOptimizedImageProps;

EksOptimizedImageProps.builder()
//  .cpuArch(CpuArch)
//  .kubernetesVersion(java.lang.String)
//  .nodeType(NodeType)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.cpuArch\\">cpuArch</a></code> | <code>software.amazon.awscdk.services.eks.CpuArch</code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\">kubernetesVersion</a></code> | <code>java.lang.String</code> | The Kubernetes version to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.nodeType\\">nodeType</a></code> | <code>software.amazon.awscdk.services.eks.NodeType</code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`cpuArch\`<sup>Optional</sup> <a name=\\"cpuArch\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.cpuArch\\"></a>

\`\`\`java
public CpuArch getCpuArch();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CpuArch
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`kubernetesVersion\`<sup>Optional</sup> <a name=\\"kubernetesVersion\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\"></a>

\`\`\`java
public java.lang.String getKubernetesVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`nodeType\`<sup>Optional</sup> <a name=\\"nodeType\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.nodeType\\"></a>

\`\`\`java
public NodeType getNodeType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodeType
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

### EncryptionConfigProperty <a name=\\"EncryptionConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty;

EncryptionConfigProperty.builder()
//  .provider(ProviderProperty)
//  .provider(IResolvable)
//  .resources(java.util.List<java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\">provider</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.ProviderProperty OR software.amazon.awscdk.IResolvable</code> | \`CfnCluster.EncryptionConfigProperty.Provider\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\">resources</a></code> | <code>java.util.List<java.lang.String></code> | \`CfnCluster.EncryptionConfigProperty.Resources\`. |

---

##### \`provider\`<sup>Optional</sup> <a name=\\"provider\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\"></a>

\`\`\`java
public java.lang.Object getProvider();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.ProviderProperty OR software.amazon.awscdk.IResolvable

\`CfnCluster.EncryptionConfigProperty.Provider\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider)

---

##### \`resources\`<sup>Optional</sup> <a name=\\"resources\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getResources();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`CfnCluster.EncryptionConfigProperty.Resources\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources)

---

### FargateClusterProps <a name=\\"FargateClusterProps\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps\\"></a>

Configuration props for EKS Fargate.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateClusterProps;

FargateClusterProps.builder()
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
//  .defaultProfile(FargateProfileOptions)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.defaultProfile\\">defaultProfile</a></code> | <code>software.amazon.awscdk.services.eks.FargateProfileOptions</code> | Fargate Profile to create along with the cluster. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.version\\"></a>

\`\`\`java
public KubernetesVersion getVersion();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputClusterName\\"></a>

\`\`\`java
public java.lang.Boolean getOutputClusterName();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputConfigCommand\\"></a>

\`\`\`java
public java.lang.Boolean getOutputConfigCommand();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.securityGroup\\"></a>

\`\`\`java
public ISecurityGroup getSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.vpcSubnets\\"></a>

\`\`\`java
public java.util.List<SubnetSelection> getVpcSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getClusterHandlerEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`java
public CoreDnsComputeType getCoreDnsComputeType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.endpointAccess\\"></a>

\`\`\`java
public EndpointAccess getEndpointAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.mastersRole\\"></a>

\`\`\`java
public IRole getMastersRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`java
public java.lang.Boolean getOutputMastersRoleArn();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`java
public java.lang.Boolean getPlaceClusterHandlerInVpc();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`java
public IKey getSecretsEncryptionKey();
\`\`\`

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultProfile\`<sup>Optional</sup> <a name=\\"defaultProfile\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.defaultProfile\\"></a>

\`\`\`java
public FargateProfileOptions getDefaultProfile();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.FargateProfileOptions
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---

### FargateProfileOptions <a name=\\"FargateProfileOptions\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions\\"></a>

Options for defining EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateProfileOptions;

FargateProfileOptions.builder()
    .selectors(java.util.List<Selector>)
//  .fargateProfileName(java.lang.String)
//  .podExecutionRole(IRole)
//  .subnetSelection(SubnetSelection)
//  .vpc(IVpc)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.selectors\\">selectors</a></code> | <code>java.util.List<software.amazon.awscdk.services.eks.Selector></code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.podExecutionRole\\">podExecutionRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.subnetSelection\\">subnetSelection</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.selectors\\"></a>

\`\`\`java
public java.util.List<Selector> getSelectors();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.eks.Selector>

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String
- *Default:* generated

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Optional</sup> <a name=\\"podExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.podExecutionRole\\"></a>

\`\`\`java
public IRole getPodExecutionRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnetSelection\`<sup>Optional</sup> <a name=\\"subnetSelection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.subnetSelection\\"></a>

\`\`\`java
public SubnetSelection getSubnetSelection();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

### FargateProfileProps <a name=\\"FargateProfileProps\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps\\"></a>

Configuration props for EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateProfileProps;

FargateProfileProps.builder()
    .selectors(java.util.List<Selector>)
//  .fargateProfileName(java.lang.String)
//  .podExecutionRole(IRole)
//  .subnetSelection(SubnetSelection)
//  .vpc(IVpc)
    .cluster(Cluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.selectors\\">selectors</a></code> | <code>java.util.List<software.amazon.awscdk.services.eks.Selector></code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.podExecutionRole\\">podExecutionRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.subnetSelection\\">subnetSelection</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.Cluster</code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.selectors\\"></a>

\`\`\`java
public java.util.List<Selector> getSelectors();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.eks.Selector>

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String
- *Default:* generated

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Optional</sup> <a name=\\"podExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.podExecutionRole\\"></a>

\`\`\`java
public IRole getPodExecutionRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnetSelection\`<sup>Optional</sup> <a name=\\"subnetSelection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.subnetSelection\\"></a>

\`\`\`java
public SubnetSelection getSubnetSelection();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.cluster\\"></a>

\`\`\`java
public Cluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.Cluster

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---

### HelmChartOptions <a name=\\"HelmChartOptions\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions\\"></a>

Helm Chart options.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.HelmChartOptions;

HelmChartOptions.builder()
    .chart(java.lang.String)
//  .createNamespace(java.lang.Boolean)
//  .namespace(java.lang.String)
//  .release(java.lang.String)
//  .repository(java.lang.String)
//  .timeout(Duration)
//  .values(java.util.Map<java.lang.String, java.lang.Object>)
//  .version(java.lang.String)
//  .wait(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.chart\\">chart</a></code> | <code>java.lang.String</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.createNamespace\\">createNamespace</a></code> | <code>java.lang.Boolean</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.release\\">release</a></code> | <code>java.lang.String</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.repository\\">repository</a></code> | <code>java.lang.String</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.values\\">values</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.version\\">version</a></code> | <code>java.lang.String</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.wait\\">wait</a></code> | <code>java.lang.Boolean</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.chart\\"></a>

\`\`\`java
public java.lang.String getChart();
\`\`\`

- *Type:* java.lang.String

The name of the chart.

---

##### \`createNamespace\`<sup>Optional</sup> <a name=\\"createNamespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.createNamespace\\"></a>

\`\`\`java
public java.lang.Boolean getCreateNamespace();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.release\\"></a>

\`\`\`java
public java.lang.String getRelease();
\`\`\`

- *Type:* java.lang.String
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.repository\\"></a>

\`\`\`java
public java.lang.String getRepository();
\`\`\`

- *Type:* java.lang.String
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.timeout\\"></a>

\`\`\`java
public Duration getTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.values\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.Object> getValues();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.Object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.wait\\"></a>

\`\`\`java
public java.lang.Boolean getWait();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

### HelmChartProps <a name=\\"HelmChartProps\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps\\"></a>

Helm Chart properties.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.HelmChartProps;

HelmChartProps.builder()
    .chart(java.lang.String)
//  .createNamespace(java.lang.Boolean)
//  .namespace(java.lang.String)
//  .release(java.lang.String)
//  .repository(java.lang.String)
//  .timeout(Duration)
//  .values(java.util.Map<java.lang.String, java.lang.Object>)
//  .version(java.lang.String)
//  .wait(java.lang.Boolean)
    .cluster(ICluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.chart\\">chart</a></code> | <code>java.lang.String</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.createNamespace\\">createNamespace</a></code> | <code>java.lang.Boolean</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.release\\">release</a></code> | <code>java.lang.String</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.repository\\">repository</a></code> | <code>java.lang.String</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.values\\">values</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.version\\">version</a></code> | <code>java.lang.String</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.wait\\">wait</a></code> | <code>java.lang.Boolean</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.chart\\"></a>

\`\`\`java
public java.lang.String getChart();
\`\`\`

- *Type:* java.lang.String

The name of the chart.

---

##### \`createNamespace\`<sup>Optional</sup> <a name=\\"createNamespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.createNamespace\\"></a>

\`\`\`java
public java.lang.Boolean getCreateNamespace();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.release\\"></a>

\`\`\`java
public java.lang.String getRelease();
\`\`\`

- *Type:* java.lang.String
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.repository\\"></a>

\`\`\`java
public java.lang.String getRepository();
\`\`\`

- *Type:* java.lang.String
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.timeout\\"></a>

\`\`\`java
public Duration getTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.values\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.Object> getValues();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.Object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.wait\\"></a>

\`\`\`java
public java.lang.Boolean getWait();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### KubernetesManifestOptions <a name=\\"KubernetesManifestOptions\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions\\"></a>

Options for \`KubernetesManifest\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesManifestOptions;

KubernetesManifestOptions.builder()
//  .prune(java.lang.Boolean)
//  .skipValidation(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.skipValidation\\">skipValidation</a></code> | <code>java.lang.Boolean</code> | A flag to signify if the manifest validation should be skipped. |

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skipValidation\`<sup>Optional</sup> <a name=\\"skipValidation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.skipValidation\\"></a>

\`\`\`java
public java.lang.Boolean getSkipValidation();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

### KubernetesManifestProps <a name=\\"KubernetesManifestProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps\\"></a>

Properties for KubernetesManifest.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesManifestProps;

KubernetesManifestProps.builder()
//  .prune(java.lang.Boolean)
//  .skipValidation(java.lang.Boolean)
    .cluster(ICluster)
    .manifest(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
//  .overwrite(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.skipValidation\\">skipValidation</a></code> | <code>java.lang.Boolean</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.manifest\\">manifest</a></code> | <code>java.util.List<java.util.Map<java.lang.String, java.lang.Object>></code> | The manifest to apply. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.overwrite\\">overwrite</a></code> | <code>java.lang.Boolean</code> | Overwrite any existing resources. |

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skipValidation\`<sup>Optional</sup> <a name=\\"skipValidation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.skipValidation\\"></a>

\`\`\`java
public java.lang.Boolean getSkipValidation();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.manifest\\"></a>

\`\`\`java
public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> getManifest();
\`\`\`

- *Type:* java.util.List<java.util.Map<java.lang.String, java.lang.Object>>

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`overwrite\`<sup>Optional</sup> <a name=\\"overwrite\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.overwrite\\"></a>

\`\`\`java
public java.lang.Boolean getOverwrite();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---

### KubernetesNetworkConfigProperty <a name=\\"KubernetesNetworkConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty;

KubernetesNetworkConfigProperty.builder()
//  .serviceIpv4Cidr(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\">serviceIpv4Cidr</a></code> | <code>java.lang.String</code> | \`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`. |

---

##### \`serviceIpv4Cidr\`<sup>Optional</sup> <a name=\\"serviceIpv4Cidr\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\"></a>

\`\`\`java
public java.lang.String getServiceIpv4Cidr();
\`\`\`

- *Type:* java.lang.String

\`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr)

---

### KubernetesObjectValueProps <a name=\\"KubernetesObjectValueProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps\\"></a>

Properties for KubernetesObjectValue.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesObjectValueProps;

KubernetesObjectValueProps.builder()
    .cluster(ICluster)
    .jsonPath(java.lang.String)
    .objectName(java.lang.String)
    .objectType(java.lang.String)
//  .objectNamespace(java.lang.String)
//  .timeout(Duration)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.jsonPath\\">jsonPath</a></code> | <code>java.lang.String</code> | JSONPath to the specific value. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectName\\">objectName</a></code> | <code>java.lang.String</code> | The name of the object to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectType\\">objectType</a></code> | <code>java.lang.String</code> | The object type to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\">objectNamespace</a></code> | <code>java.lang.String</code> | The namespace the object belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.Duration</code> | Timeout for waiting on a value. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`jsonPath\`<sup>Required</sup> <a name=\\"jsonPath\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.jsonPath\\"></a>

\`\`\`java
public java.lang.String getJsonPath();
\`\`\`

- *Type:* java.lang.String

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`objectName\`<sup>Required</sup> <a name=\\"objectName\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectName\\"></a>

\`\`\`java
public java.lang.String getObjectName();
\`\`\`

- *Type:* java.lang.String

The name of the object to query.

---

##### \`objectType\`<sup>Required</sup> <a name=\\"objectType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectType\\"></a>

\`\`\`java
public java.lang.String getObjectType();
\`\`\`

- *Type:* java.lang.String

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`objectNamespace\`<sup>Optional</sup> <a name=\\"objectNamespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\"></a>

\`\`\`java
public java.lang.String getObjectNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.timeout\\"></a>

\`\`\`java
public Duration getTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---

### KubernetesPatchProps <a name=\\"KubernetesPatchProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps\\"></a>

Properties for KubernetesPatch.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesPatchProps;

KubernetesPatchProps.builder()
    .applyPatch(java.util.Map<java.lang.String, java.lang.Object>)
    .cluster(ICluster)
    .resourceName(java.lang.String)
    .restorePatch(java.util.Map<java.lang.String, java.lang.Object>)
//  .patchType(PatchType)
//  .resourceNamespace(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.applyPatch\\">applyPatch</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The cluster to apply the patch to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceName\\">resourceName</a></code> | <code>java.lang.String</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.restorePatch\\">restorePatch</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.patchType\\">patchType</a></code> | <code>software.amazon.awscdk.services.eks.PatchType</code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceNamespace\\">resourceNamespace</a></code> | <code>java.lang.String</code> | The kubernetes API namespace. |

---

##### \`applyPatch\`<sup>Required</sup> <a name=\\"applyPatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.applyPatch\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.Object> getApplyPatch();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`resourceName\`<sup>Required</sup> <a name=\\"resourceName\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceName\\"></a>

\`\`\`java
public java.lang.String getResourceName();
\`\`\`

- *Type:* java.lang.String

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`restorePatch\`<sup>Required</sup> <a name=\\"restorePatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.restorePatch\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.Object> getRestorePatch();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`patchType\`<sup>Optional</sup> <a name=\\"patchType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.patchType\\"></a>

\`\`\`java
public PatchType getPatchType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.PatchType
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`resourceNamespace\`<sup>Optional</sup> <a name=\\"resourceNamespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceNamespace\\"></a>

\`\`\`java
public java.lang.String getResourceNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* \\"default\\"

The kubernetes API namespace.

---

### LabelProperty <a name=\\"LabelProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnFargateProfile.LabelProperty;

LabelProperty.builder()
    .key(java.lang.String)
    .value(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.key\\">key</a></code> | <code>java.lang.String</code> | \`CfnFargateProfile.LabelProperty.Key\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.value\\">value</a></code> | <code>java.lang.String</code> | \`CfnFargateProfile.LabelProperty.Value\`. |

---

##### \`key\`<sup>Required</sup> <a name=\\"key\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.key\\"></a>

\`\`\`java
public java.lang.String getKey();
\`\`\`

- *Type:* java.lang.String

\`CfnFargateProfile.LabelProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key)

---

##### \`value\`<sup>Required</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.value\\"></a>

\`\`\`java
public java.lang.String getValue();
\`\`\`

- *Type:* java.lang.String

\`CfnFargateProfile.LabelProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value)

---

### LaunchTemplateSpec <a name=\\"LaunchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec\\"></a>

Launch template property specification.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.LaunchTemplateSpec;

LaunchTemplateSpec.builder()
    .id(java.lang.String)
//  .version(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.id\\">id</a></code> | <code>java.lang.String</code> | The Launch template ID. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.version\\">version</a></code> | <code>java.lang.String</code> | The launch template version to be used (optional). |

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.id\\"></a>

\`\`\`java
public java.lang.String getId();
\`\`\`

- *Type:* java.lang.String

The Launch template ID.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* the default version of the launch template

The launch template version to be used (optional).

---

### LaunchTemplateSpecificationProperty <a name=\\"LaunchTemplateSpecificationProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty;

LaunchTemplateSpecificationProperty.builder()
//  .id(java.lang.String)
//  .name(java.lang.String)
//  .version(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\">id</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\">name</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\">version</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`. |

---

##### \`id\`<sup>Optional</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\"></a>

\`\`\`java
public java.lang.String getId();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version)

---

### NodegroupOptions <a name=\\"NodegroupOptions\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions\\"></a>

The Nodegroup Options for addNodeGroup() method.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.NodegroupOptions;

NodegroupOptions.builder()
//  .amiType(NodegroupAmiType)
//  .capacityType(CapacityType)
//  .desiredSize(java.lang.Number)
//  .diskSize(java.lang.Number)
//  .forceUpdate(java.lang.Boolean)
//  .instanceTypes(java.util.List<InstanceType>)
//  .labels(java.util.Map<java.lang.String, java.lang.String>)
//  .launchTemplateSpec(LaunchTemplateSpec)
//  .maxSize(java.lang.Number)
//  .minSize(java.lang.Number)
//  .nodegroupName(java.lang.String)
//  .nodeRole(IRole)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(NodegroupRemoteAccess)
//  .subnets(SubnetSelection)
//  .tags(java.util.Map<java.lang.String, java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.amiType\\">amiType</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.capacityType\\">capacityType</a></code> | <code>software.amazon.awscdk.services.eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.desiredSize\\">desiredSize</a></code> | <code>java.lang.Number</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.forceUpdate\\">forceUpdate</a></code> | <code>java.lang.Boolean</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.InstanceType></code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.labels\\">labels</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.launchTemplateSpec\\">launchTemplateSpec</a></code> | <code>software.amazon.awscdk.services.eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.maxSize\\">maxSize</a></code> | <code>java.lang.Number</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.minSize\\">minSize</a></code> | <code>java.lang.Number</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.nodeRole\\">nodeRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.subnets\\">subnets</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.tags\\">tags</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The metadata to apply to the node group to assist with categorization and organization. |

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.amiType\\"></a>

\`\`\`java
public NodegroupAmiType getAmiType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.capacityType\\"></a>

\`\`\`java
public CapacityType getCapacityType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.desiredSize\\"></a>

\`\`\`java
public java.lang.Number getDesiredSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.diskSize\\"></a>

\`\`\`java
public java.lang.Number getDiskSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`forceUpdate\`<sup>Optional</sup> <a name=\\"forceUpdate\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.forceUpdate\\"></a>

\`\`\`java
public java.lang.Boolean getForceUpdate();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.instanceTypes\\"></a>

\`\`\`java
public java.util.List<InstanceType> getInstanceTypes();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.InstanceType>
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.labels\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getLabels();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launchTemplateSpec\`<sup>Optional</sup> <a name=\\"launchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.launchTemplateSpec\\"></a>

\`\`\`java
public LaunchTemplateSpec getLaunchTemplateSpec();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.maxSize\\"></a>

\`\`\`java
public java.lang.Number getMaxSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.minSize\\"></a>

\`\`\`java
public java.lang.Number getMinSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`nodeRole\`<sup>Optional</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.nodeRole\\"></a>

\`\`\`java
public IRole getNodeRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.releaseVersion\\"></a>

\`\`\`java
public java.lang.String getReleaseVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.remoteAccess\\"></a>

\`\`\`java
public NodegroupRemoteAccess getRemoteAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.subnets\\"></a>

\`\`\`java
public SubnetSelection getSubnets();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.tags\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getTags();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

### NodegroupProps <a name=\\"NodegroupProps\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps\\"></a>

NodeGroup properties interface.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.NodegroupProps;

NodegroupProps.builder()
//  .amiType(NodegroupAmiType)
//  .capacityType(CapacityType)
//  .desiredSize(java.lang.Number)
//  .diskSize(java.lang.Number)
//  .forceUpdate(java.lang.Boolean)
//  .instanceTypes(java.util.List<InstanceType>)
//  .labels(java.util.Map<java.lang.String, java.lang.String>)
//  .launchTemplateSpec(LaunchTemplateSpec)
//  .maxSize(java.lang.Number)
//  .minSize(java.lang.Number)
//  .nodegroupName(java.lang.String)
//  .nodeRole(IRole)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(NodegroupRemoteAccess)
//  .subnets(SubnetSelection)
//  .tags(java.util.Map<java.lang.String, java.lang.String>)
    .cluster(ICluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.amiType\\">amiType</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.capacityType\\">capacityType</a></code> | <code>software.amazon.awscdk.services.eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.desiredSize\\">desiredSize</a></code> | <code>java.lang.Number</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.forceUpdate\\">forceUpdate</a></code> | <code>java.lang.Boolean</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.InstanceType></code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.labels\\">labels</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.launchTemplateSpec\\">launchTemplateSpec</a></code> | <code>software.amazon.awscdk.services.eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.maxSize\\">maxSize</a></code> | <code>java.lang.Number</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.minSize\\">minSize</a></code> | <code>java.lang.Number</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.nodeRole\\">nodeRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.subnets\\">subnets</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.tags\\">tags</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | Cluster resource. |

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.amiType\\"></a>

\`\`\`java
public NodegroupAmiType getAmiType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.capacityType\\"></a>

\`\`\`java
public CapacityType getCapacityType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.desiredSize\\"></a>

\`\`\`java
public java.lang.Number getDesiredSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.diskSize\\"></a>

\`\`\`java
public java.lang.Number getDiskSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`forceUpdate\`<sup>Optional</sup> <a name=\\"forceUpdate\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.forceUpdate\\"></a>

\`\`\`java
public java.lang.Boolean getForceUpdate();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.instanceTypes\\"></a>

\`\`\`java
public java.util.List<InstanceType> getInstanceTypes();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.InstanceType>
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.labels\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getLabels();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launchTemplateSpec\`<sup>Optional</sup> <a name=\\"launchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.launchTemplateSpec\\"></a>

\`\`\`java
public LaunchTemplateSpec getLaunchTemplateSpec();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.maxSize\\"></a>

\`\`\`java
public java.lang.Number getMaxSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.minSize\\"></a>

\`\`\`java
public java.lang.Number getMinSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`nodeRole\`<sup>Optional</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.nodeRole\\"></a>

\`\`\`java
public IRole getNodeRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.releaseVersion\\"></a>

\`\`\`java
public java.lang.String getReleaseVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.remoteAccess\\"></a>

\`\`\`java
public NodegroupRemoteAccess getRemoteAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.subnets\\"></a>

\`\`\`java
public SubnetSelection getSubnets();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.tags\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getTags();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

Cluster resource.

---

### NodegroupRemoteAccess <a name=\\"NodegroupRemoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\"></a>

The remote access (SSH) configuration to use with your node group.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.NodegroupRemoteAccess;

NodegroupRemoteAccess.builder()
    .sshKeyName(java.lang.String)
//  .sourceSecurityGroups(java.util.List<ISecurityGroup>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\">sshKeyName</a></code> | <code>java.lang.String</code> | The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\">sourceSecurityGroups</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.ISecurityGroup></code> | The security groups that are allowed SSH access (port 22) to the worker nodes. |

---

##### \`sshKeyName\`<sup>Required</sup> <a name=\\"sshKeyName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\"></a>

\`\`\`java
public java.lang.String getSshKeyName();
\`\`\`

- *Type:* java.lang.String

The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group.

---

##### \`sourceSecurityGroups\`<sup>Optional</sup> <a name=\\"sourceSecurityGroups\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\"></a>

\`\`\`java
public java.util.List<ISecurityGroup> getSourceSecurityGroups();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.ISecurityGroup>
- *Default:* port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

The security groups that are allowed SSH access (port 22) to the worker nodes.

If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0).

---

### OpenIdConnectProviderProps <a name=\\"OpenIdConnectProviderProps\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps\\"></a>

Initialization properties for \`OpenIdConnectProvider\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.OpenIdConnectProviderProps;

OpenIdConnectProviderProps.builder()
    .url(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.property.url\\">url</a></code> | <code>java.lang.String</code> | The URL of the identity provider. |

---

##### \`url\`<sup>Required</sup> <a name=\\"url\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.property.url\\"></a>

\`\`\`java
public java.lang.String getUrl();
\`\`\`

- *Type:* java.lang.String

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---

### ProviderProperty <a name=\\"ProviderProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster.ProviderProperty;

ProviderProperty.builder()
//  .keyArn(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\">keyArn</a></code> | <code>java.lang.String</code> | \`CfnCluster.ProviderProperty.KeyArn\`. |

---

##### \`keyArn\`<sup>Optional</sup> <a name=\\"keyArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\"></a>

\`\`\`java
public java.lang.String getKeyArn();
\`\`\`

- *Type:* java.lang.String

\`CfnCluster.ProviderProperty.KeyArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn)

---

### RemoteAccessProperty <a name=\\"RemoteAccessProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty;

RemoteAccessProperty.builder()
    .ec2SshKey(java.lang.String)
//  .sourceSecurityGroups(java.util.List<java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\">ec2SshKey</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\">sourceSecurityGroups</a></code> | <code>java.util.List<java.lang.String></code> | \`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`. |

---

##### \`ec2SshKey\`<sup>Required</sup> <a name=\\"ec2SshKey\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\"></a>

\`\`\`java
public java.lang.String getEc2SshKey();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey)

---

##### \`sourceSecurityGroups\`<sup>Optional</sup> <a name=\\"sourceSecurityGroups\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSourceSecurityGroups();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups)

---

### ResourcesVpcConfigProperty <a name=\\"ResourcesVpcConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty;

ResourcesVpcConfigProperty.builder()
    .subnetIds(java.util.List<java.lang.String>)
//  .securityGroupIds(java.util.List<java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\">subnetIds</a></code> | <code>java.util.List<java.lang.String></code> | \`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\">securityGroupIds</a></code> | <code>java.util.List<java.lang.String></code> | \`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`. |

---

##### \`subnetIds\`<sup>Required</sup> <a name=\\"subnetIds\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnetIds();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids)

---

##### \`securityGroupIds\`<sup>Optional</sup> <a name=\\"securityGroupIds\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSecurityGroupIds();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids)

---

### ScalingConfigProperty <a name=\\"ScalingConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty;

ScalingConfigProperty.builder()
//  .desiredSize(java.lang.Number)
//  .maxSize(java.lang.Number)
//  .minSize(java.lang.Number)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\">desiredSize</a></code> | <code>java.lang.Number</code> | \`CfnNodegroup.ScalingConfigProperty.DesiredSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\">maxSize</a></code> | <code>java.lang.Number</code> | \`CfnNodegroup.ScalingConfigProperty.MaxSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\">minSize</a></code> | <code>java.lang.Number</code> | \`CfnNodegroup.ScalingConfigProperty.MinSize\`. |

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\"></a>

\`\`\`java
public java.lang.Number getDesiredSize();
\`\`\`

- *Type:* java.lang.Number

\`CfnNodegroup.ScalingConfigProperty.DesiredSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\"></a>

\`\`\`java
public java.lang.Number getMaxSize();
\`\`\`

- *Type:* java.lang.Number

\`CfnNodegroup.ScalingConfigProperty.MaxSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize)

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\"></a>

\`\`\`java
public java.lang.Number getMinSize();
\`\`\`

- *Type:* java.lang.Number

\`CfnNodegroup.ScalingConfigProperty.MinSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize)

---

### Selector <a name=\\"Selector\\" id=\\"aws-cdk-lib.aws_eks.Selector\\"></a>

Fargate profile selector.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.Selector.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Selector;

Selector.builder()
    .namespace(java.lang.String)
//  .labels(java.util.Map<java.lang.String, java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Selector.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The Kubernetes namespace that the selector should match. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Selector.property.labels\\">labels</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The Kubernetes labels that the selector should match. |

---

##### \`namespace\`<sup>Required</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.Selector.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String

The Kubernetes namespace that the selector should match.

You must specify a namespace for a selector. The selector only matches pods that are created in this namespace, but you can create multiple selectors to target multiple namespaces.

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.Selector.property.labels\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getLabels();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* all pods within the namespace will be selected.

The Kubernetes labels that the selector should match.

A pod must contain all of the labels that are specified in the selector for it to be considered a match.

---

### SelectorProperty <a name=\\"SelectorProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty;

SelectorProperty.builder()
    .namespace(java.lang.String)
//  .labels(IResolvable)
//  .labels(java.util.List<LabelProperty)
//  .labels(IResolvable>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | \`CfnFargateProfile.SelectorProperty.Namespace\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\">labels</a></code> | <code>software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.LabelProperty OR software.amazon.awscdk.IResolvable></code> | \`CfnFargateProfile.SelectorProperty.Labels\`. |

---

##### \`namespace\`<sup>Required</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String

\`CfnFargateProfile.SelectorProperty.Namespace\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\"></a>

\`\`\`java
public java.lang.Object getLabels();
\`\`\`

- *Type:* software.amazon.awscdk.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.LabelProperty OR software.amazon.awscdk.IResolvable>

\`CfnFargateProfile.SelectorProperty.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels)

---

### ServiceAccountOptions <a name=\\"ServiceAccountOptions\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions\\"></a>

Options for \`ServiceAccount\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ServiceAccountOptions;

ServiceAccountOptions.builder()
//  .name(java.lang.String)
//  .namespace(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions.property.name\\">name</a></code> | <code>java.lang.String</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The namespace of the service account. |

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* \\"default\\"

The namespace of the service account.

---

### ServiceAccountProps <a name=\\"ServiceAccountProps\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps\\"></a>

Properties for defining service accounts.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ServiceAccountProps;

ServiceAccountProps.builder()
//  .name(java.lang.String)
//  .namespace(java.lang.String)
    .cluster(ICluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.name\\">name</a></code> | <code>java.lang.String</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The namespace of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The cluster to apply the patch to. |

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The cluster to apply the patch to.

---

### ServiceLoadBalancerAddressOptions <a name=\\"ServiceLoadBalancerAddressOptions\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions\\"></a>

Options for fetching a ServiceLoadBalancerAddress.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ServiceLoadBalancerAddressOptions;

ServiceLoadBalancerAddressOptions.builder()
//  .namespace(java.lang.String)
//  .timeout(Duration)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The namespace the service belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.Duration</code> | Timeout for waiting on the load balancer address. |

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* 'default'

The namespace the service belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\"></a>

\`\`\`java
public Duration getTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on the load balancer address.

---

### TaintProperty <a name=\\"TaintProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty;

TaintProperty.builder()
//  .effect(java.lang.String)
//  .key(java.lang.String)
//  .value(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.effect\\">effect</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.TaintProperty.Effect\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.key\\">key</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.TaintProperty.Key\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.value\\">value</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.TaintProperty.Value\`. |

---

##### \`effect\`<sup>Optional</sup> <a name=\\"effect\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.effect\\"></a>

\`\`\`java
public java.lang.String getEffect();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.TaintProperty.Effect\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect)

---

##### \`key\`<sup>Optional</sup> <a name=\\"key\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.key\\"></a>

\`\`\`java
public java.lang.String getKey();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.TaintProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key)

---

##### \`value\`<sup>Optional</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.value\\"></a>

\`\`\`java
public java.lang.String getValue();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.TaintProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value)

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### EksOptimizedImage <a name=\\"EksOptimizedImage\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage\\"></a>

- *Implements:* software.amazon.awscdk.services.ec2.IMachineImage

Construct an Amazon Linux 2 image from the latest EKS Optimized AMI published in SSM.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.EksOptimizedImage;

EksOptimizedImage.Builder.create()
//  .cpuArch(CpuArch)
//  .kubernetesVersion(java.lang.String)
//  .nodeType(NodeType)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.cpuArch\\">cpuArch</a></code> | <code>software.amazon.awscdk.services.eks.CpuArch</code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.kubernetesVersion\\">kubernetesVersion</a></code> | <code>java.lang.String</code> | The Kubernetes version to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.nodeType\\">nodeType</a></code> | <code>software.amazon.awscdk.services.eks.NodeType</code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`cpuArch\`<sup>Optional</sup> <a name=\\"cpuArch\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.cpuArch\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CpuArch
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`kubernetesVersion\`<sup>Optional</sup> <a name=\\"kubernetesVersion\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.kubernetesVersion\\"></a>

- *Type:* java.lang.String
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`nodeType\`<sup>Optional</sup> <a name=\\"nodeType\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.nodeType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.NodeType
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.getImage\\">getImage</a></code> | Return the correct image. |

---

##### \`getImage\` <a name=\\"getImage\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.getImage\\"></a>

\`\`\`java
public getImage(Construct scope)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.getImage.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---




### EndpointAccess <a name=\\"EndpointAccess\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess\\"></a>

Endpoint access characteristics.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom\\">onlyFrom</a></code> | Restrict public access to specific CIDR blocks. |

---

##### \`onlyFrom\` <a name=\\"onlyFrom\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom\\"></a>

\`\`\`java
public onlyFrom(java.lang.String cidr)
\`\`\`

###### \`cidr\`<sup>Required</sup> <a name=\\"cidr\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom.parameter.cidr\\"></a>

- *Type:* java.lang.String

CIDR blocks.

---



#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PRIVATE\\">PRIVATE</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | The cluster endpoint is only accessible through your VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC\\">PUBLIC</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | The cluster endpoint is accessible from outside of your VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\">PUBLIC_AND_PRIVATE</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | The cluster endpoint is accessible from outside of your VPC. |

---

##### \`PRIVATE\`<sup>Required</sup> <a name=\\"PRIVATE\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PRIVATE\\"></a>

\`\`\`java
public EndpointAccess getPrivate();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess

The cluster endpoint is only accessible through your VPC.

Worker node traffic to the endpoint will stay within your VPC.

---

##### \`PUBLIC\`<sup>Required</sup> <a name=\\"PUBLIC\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC\\"></a>

\`\`\`java
public EndpointAccess getPublic();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic will leave your VPC to connect to the endpoint.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

##### \`PUBLIC_AND_PRIVATE\`<sup>Required</sup> <a name=\\"PUBLIC_AND_PRIVATE\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\"></a>

\`\`\`java
public EndpointAccess getPublicAndPrivate();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic to the endpoint will stay within your VPC.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC_AND_PRIVATE.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

### KubernetesVersion <a name=\\"KubernetesVersion\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion\\"></a>

Kubernetes cluster version.


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.of\\">of</a></code> | Custom cluster version. |

---

##### \`of\` <a name=\\"of\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.of\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesVersion;

KubernetesVersion.of(java.lang.String version)
\`\`\`

###### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.of.parameter.version\\"></a>

- *Type:* java.lang.String

custom version number.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.version\\">version</a></code> | <code>java.lang.String</code> | cluster version number. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

cluster version number.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_14\\">V1_14</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.14. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_15\\">V1_15</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.15. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_16\\">V1_16</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.16. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_17\\">V1_17</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.17. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_18\\">V1_18</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.18. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_19\\">V1_19</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.19. |

---

##### \`V1_14\`<sup>Required</sup> <a name=\\"V1_14\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_14\\"></a>

\`\`\`java
public KubernetesVersion getV114();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.14.

---

##### \`V1_15\`<sup>Required</sup> <a name=\\"V1_15\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_15\\"></a>

\`\`\`java
public KubernetesVersion getV115();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.15.

---

##### \`V1_16\`<sup>Required</sup> <a name=\\"V1_16\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_16\\"></a>

\`\`\`java
public KubernetesVersion getV116();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.16.

---

##### \`V1_17\`<sup>Required</sup> <a name=\\"V1_17\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_17\\"></a>

\`\`\`java
public KubernetesVersion getV117();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.17.

---

##### \`V1_18\`<sup>Required</sup> <a name=\\"V1_18\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_18\\"></a>

\`\`\`java
public KubernetesVersion getV118();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.18.

---

##### \`V1_19\`<sup>Required</sup> <a name=\\"V1_19\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_19\\"></a>

\`\`\`java
public KubernetesVersion getV119();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.19.

---

## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### ICluster <a name=\\"ICluster\\" id=\\"aws-cdk-lib.aws_eks.ICluster\\"></a>

- *Extends:* software.amazon.awscdk.IResource, software.amazon.awscdk.services.ec2.IConnectable

- *Implemented By:* software.amazon.awscdk.services.eks.Cluster, software.amazon.awscdk.services.eks.FargateCluster, software.amazon.awscdk.services.eks.ICluster

An EKS cluster.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addCdk8sChart\\">addCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addHelmChart\\">addHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addManifest\\">addManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addServiceAccount\\">addServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |

---

##### \`addCdk8sChart\` <a name=\\"addCdk8sChart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart\\"></a>

\`\`\`java
public addCdk8sChart(java.lang.String id, Construct chart)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* software.constructs.Construct

the cdk8s chart.

---

##### \`addHelmChart\` <a name=\\"addHelmChart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart\\"></a>

\`\`\`java
public addHelmChart(java.lang.String id, HelmChartOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this chart.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.HelmChartOptions

options of this chart.

---

##### \`addManifest\` <a name=\\"addManifest\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest\\"></a>

\`\`\`java
public addManifest(java.lang.String id, java.util.Map<java.lang.String, java.lang.Object> manifest)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this manifest.

---

###### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest.parameter.manifest\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

a list of Kubernetes resource specifications.

---

##### \`addServiceAccount\` <a name=\\"addServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount\\"></a>

\`\`\`java
public addServiceAccount(java.lang.String id)
public addServiceAccount(java.lang.String id, ServiceAccountOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of service account.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ServiceAccountOptions

service account options.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.node\\">node</a></code> | <code>software.constructs.Node</code> | The tree node. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.env\\">env</a></code> | <code>software.amazon.awscdk.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.stack\\">stack</a></code> | <code>software.amazon.awscdk.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.connections\\">connections</a></code> | <code>software.amazon.awscdk.services.ec2.Connections</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterArn\\">clusterArn</a></code> | <code>java.lang.String</code> | The unique ARN assigned to the service by AWS in the form of arn:aws:eks:. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>java.lang.String</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>java.lang.String</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>java.lang.String</code> | The API Server endpoint URL. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | The physical name of the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroup\\">clusterSecurityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>java.lang.String</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>software.amazon.awscdk.services.iam.IOpenIdConnectProvider</code> | The Open ID Connect Provider of the cluster used to configure Service Accounts. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlPrivateSubnets\\">kubectlPrivateSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.ISubnet></code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlRole\\">kubectlRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlSecurityGroup\\">kubectlSecurityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.node\\"></a>

\`\`\`java
public Node getNode();
\`\`\`

- *Type:* software.constructs.Node

The tree node.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.env\\"></a>

\`\`\`java
public ResourceEnvironment getEnv();
\`\`\`

- *Type:* software.amazon.awscdk.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.stack\\"></a>

\`\`\`java
public Stack getStack();
\`\`\`

- *Type:* software.amazon.awscdk.Stack

The stack in which this resource is defined.

---

##### \`connections\`<sup>Required</sup> <a name=\\"connections\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.connections\\"></a>

\`\`\`java
public Connections getConnections();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.Connections

---

##### \`clusterArn\`<sup>Required</sup> <a name=\\"clusterArn\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterArn\\"></a>

\`\`\`java
public java.lang.String getClusterArn();
\`\`\`

- *Type:* java.lang.String

The unique ARN assigned to the service by AWS in the form of arn:aws:eks:.

---

##### \`clusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`java
public java.lang.String getClusterCertificateAuthorityData();
\`\`\`

- *Type:* java.lang.String

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`java
public java.lang.String getClusterEncryptionConfigKeyArn();
\`\`\`

- *Type:* java.lang.String

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Required</sup> <a name=\\"clusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterEndpoint\\"></a>

\`\`\`java
public java.lang.String getClusterEndpoint();
\`\`\`

- *Type:* java.lang.String

The API Server endpoint URL.

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

The physical name of the Cluster.

---

##### \`clusterSecurityGroup\`<sup>Required</sup> <a name=\\"clusterSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroup\\"></a>

\`\`\`java
public ISecurityGroup getClusterSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`clusterSecurityGroupId\`<sup>Required</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getClusterSecurityGroupId();
\`\`\`

- *Type:* java.lang.String

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`openIdConnectProvider\`<sup>Required</sup> <a name=\\"openIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.openIdConnectProvider\\"></a>

\`\`\`java
public IOpenIdConnectProvider getOpenIdConnectProvider();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IOpenIdConnectProvider

The Open ID Connect Provider of the cluster used to configure Service Accounts.

---

##### \`prune\`<sup>Required</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean

Indicates whether Kubernetes resources can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`vpc\`<sup>Required</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion

An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI.

If not defined, a default layer will be used.

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.Size

Amount of memory to allocate to the provider's lambda function.

---

##### \`kubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnets\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`java
public java.util.List<ISubnet> getKubectlPrivateSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.ISubnet>

Subnets to host the \`kubectl\` compute resources.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

##### \`kubectlRole\`<sup>Optional</sup> <a name=\\"kubectlRole\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlRole\\"></a>

\`\`\`java
public IRole getKubectlRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`kubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlSecurityGroup\\"></a>

\`\`\`java
public ISecurityGroup getKubectlSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup

A security group to use for \`kubectl\` execution.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

### INodegroup <a name=\\"INodegroup\\" id=\\"aws-cdk-lib.aws_eks.INodegroup\\"></a>

- *Extends:* software.amazon.awscdk.IResource

- *Implemented By:* software.amazon.awscdk.services.eks.Nodegroup, software.amazon.awscdk.services.eks.INodegroup

NodeGroup interface.


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.node\\">node</a></code> | <code>software.constructs.Node</code> | The tree node. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.env\\">env</a></code> | <code>software.amazon.awscdk.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.stack\\">stack</a></code> | <code>software.amazon.awscdk.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Name of the nodegroup. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.node\\"></a>

\`\`\`java
public Node getNode();
\`\`\`

- *Type:* software.constructs.Node

The tree node.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.env\\"></a>

\`\`\`java
public ResourceEnvironment getEnv();
\`\`\`

- *Type:* software.amazon.awscdk.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.stack\\"></a>

\`\`\`java
public Stack getStack();
\`\`\`

- *Type:* software.amazon.awscdk.Stack

The stack in which this resource is defined.

---

##### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String

Name of the nodegroup.

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### CapacityType <a name=\\"CapacityType\\" id=\\"aws-cdk-lib.aws_eks.CapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType.SPOT\\">SPOT</a></code> | spot instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType.ON_DEMAND\\">ON_DEMAND</a></code> | on-demand instances. |

---

Capacity type of the managed node group.

#### \`SPOT\` <a name=\\"SPOT\\" id=\\"aws-cdk-lib.aws_eks.CapacityType.SPOT\\"></a>

spot instances.

---


#### \`ON_DEMAND\` <a name=\\"ON_DEMAND\\" id=\\"aws-cdk-lib.aws_eks.CapacityType.ON_DEMAND\\"></a>

on-demand instances.

---


### CoreDnsComputeType <a name=\\"CoreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType.EC2\\">EC2</a></code> | Deploy CoreDNS on EC2 instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType.FARGATE\\">FARGATE</a></code> | Deploy CoreDNS on Fargate-managed instances. |

---

The type of compute resources to use for CoreDNS.

#### \`EC2\` <a name=\\"EC2\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType.EC2\\"></a>

Deploy CoreDNS on EC2 instances.

---


#### \`FARGATE\` <a name=\\"FARGATE\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType.FARGATE\\"></a>

Deploy CoreDNS on Fargate-managed instances.

---


### CpuArch <a name=\\"CpuArch\\" id=\\"aws-cdk-lib.aws_eks.CpuArch\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch.ARM_64\\">ARM_64</a></code> | arm64 CPU type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch.X86_64\\">X86_64</a></code> | x86_64 CPU type. |

---

CPU architecture.

#### \`ARM_64\` <a name=\\"ARM_64\\" id=\\"aws-cdk-lib.aws_eks.CpuArch.ARM_64\\"></a>

arm64 CPU type.

---


#### \`X86_64\` <a name=\\"X86_64\\" id=\\"aws-cdk-lib.aws_eks.CpuArch.X86_64\\"></a>

x86_64 CPU type.

---


### DefaultCapacityType <a name=\\"DefaultCapacityType\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType.NODEGROUP\\">NODEGROUP</a></code> | managed node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType.EC2\\">EC2</a></code> | EC2 autoscaling group. |

---

The default capacity type for the cluster.

#### \`NODEGROUP\` <a name=\\"NODEGROUP\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType.NODEGROUP\\"></a>

managed node group.

---


#### \`EC2\` <a name=\\"EC2\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType.EC2\\"></a>

EC2 autoscaling group.

---


### MachineImageType <a name=\\"MachineImageType\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType.AMAZON_LINUX_2\\">AMAZON_LINUX_2</a></code> | Amazon EKS-optimized Linux AMI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType.BOTTLEROCKET\\">BOTTLEROCKET</a></code> | Bottlerocket AMI. |

---

The machine image type.

#### \`AMAZON_LINUX_2\` <a name=\\"AMAZON_LINUX_2\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType.AMAZON_LINUX_2\\"></a>

Amazon EKS-optimized Linux AMI.

---


#### \`BOTTLEROCKET\` <a name=\\"BOTTLEROCKET\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType.BOTTLEROCKET\\"></a>

Bottlerocket AMI.

---


### NodegroupAmiType <a name=\\"NodegroupAmiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64\\">AL2_X86_64</a></code> | Amazon Linux 2 (x86-64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\">AL2_X86_64_GPU</a></code> | Amazon Linux 2 with GPU support. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_ARM_64\\">AL2_ARM_64</a></code> | Amazon Linux 2 (ARM-64). |

---

The AMI type for your node group.

GPU instance types should use the \`AL2_x86_64_GPU\` AMI type, which uses the Amazon EKS-optimized Linux AMI with GPU support. Non-GPU instances should use the \`AL2_x86_64\` AMI type, which uses the Amazon EKS-optimized Linux AMI.

#### \`AL2_X86_64\` <a name=\\"AL2_X86_64\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64\\"></a>

Amazon Linux 2 (x86-64).

---


#### \`AL2_X86_64_GPU\` <a name=\\"AL2_X86_64_GPU\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\"></a>

Amazon Linux 2 with GPU support.

---


#### \`AL2_ARM_64\` <a name=\\"AL2_ARM_64\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_ARM_64\\"></a>

Amazon Linux 2 (ARM-64).

---


### NodeType <a name=\\"NodeType\\" id=\\"aws-cdk-lib.aws_eks.NodeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.STANDARD\\">STANDARD</a></code> | Standard instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.GPU\\">GPU</a></code> | GPU instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.INFERENTIA\\">INFERENTIA</a></code> | Inferentia instances. |

---

Whether the worker nodes should support GPU or just standard instances.

#### \`STANDARD\` <a name=\\"STANDARD\\" id=\\"aws-cdk-lib.aws_eks.NodeType.STANDARD\\"></a>

Standard instances.

---


#### \`GPU\` <a name=\\"GPU\\" id=\\"aws-cdk-lib.aws_eks.NodeType.GPU\\"></a>

GPU instances.

---


#### \`INFERENTIA\` <a name=\\"INFERENTIA\\" id=\\"aws-cdk-lib.aws_eks.NodeType.INFERENTIA\\"></a>

Inferentia instances.

---


### PatchType <a name=\\"PatchType\\" id=\\"aws-cdk-lib.aws_eks.PatchType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.JSON\\">JSON</a></code> | JSON Patch, RFC 6902. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.MERGE\\">MERGE</a></code> | JSON Merge patch. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.STRATEGIC\\">STRATEGIC</a></code> | Strategic merge patch. |

---

Values for \`kubectl patch\` --type argument.

#### \`JSON\` <a name=\\"JSON\\" id=\\"aws-cdk-lib.aws_eks.PatchType.JSON\\"></a>

JSON Patch, RFC 6902.

---


#### \`MERGE\` <a name=\\"MERGE\\" id=\\"aws-cdk-lib.aws_eks.PatchType.MERGE\\"></a>

JSON Merge patch.

---


#### \`STRATEGIC\` <a name=\\"STRATEGIC\\" id=\\"aws-cdk-lib.aws_eks.PatchType.STRATEGIC\\"></a>

Strategic merge patch.

---

"
`;

exports[`java snapshot - submodules 2 1`] = `
"# Amazon EKS Construct Library
<!--BEGIN STABILITY BANNER-->

---

![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---

<!--END STABILITY BANNER-->

This construct library allows you to define [Amazon Elastic Container Service for Kubernetes (EKS)](https://aws.amazon.com/eks/) clusters.
In addition, the library also supports defining Kubernetes resource manifests within EKS clusters.

## Table Of Contents

* [Quick Start](#quick-start)
* [API Reference](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-eks-readme.html)
* [Architectural Overview](#architectural-overview)
* [Provisioning clusters](#provisioning-clusters)
  * [Managed node groups](#managed-node-groups)
  * [Fargate Profiles](#fargate-profiles)
  * [Self-managed nodes](#self-managed-nodes)
  * [Endpoint Access](#endpoint-access)
  * [VPC Support](#vpc-support)
  * [Kubectl Support](#kubectl-support)
  * [ARM64 Support](#arm64-support)
  * [Masters Role](#masters-role)
  * [Encryption](#encryption)
* [Permissions and Security](#permissions-and-security)
* [Applying Kubernetes Resources](#applying-kubernetes-resources)
  * [Kubernetes Manifests](#kubernetes-manifests)
  * [Helm Charts](#helm-charts)
  * [CDK8s Charts](#cdk8s-charts)
* [Patching Kubernetes Resources](#patching-kubernetes-resources)
* [Querying Kubernetes Resources](#querying-kubernetes-resources)
* [Using existing clusters](#using-existing-clusters)
* [Known Issues and Limitations](#known-issues-and-limitations)

## Quick Start

This example defines an Amazon EKS cluster with the following configuration:

* Dedicated VPC with default configuration (Implicitly created using [ec2.Vpc](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#vpc))
* A Kubernetes pod with a container based on the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes) image.

\`\`\`ts
// provisiong a cluster
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
});

// apply a kubernetes manifest to the cluster
cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ]
      }
    ]
  }
});
\`\`\`

In order to interact with your cluster through \`kubectl\`, you can use the \`aws eks update-kubeconfig\` [AWS CLI command](https://docs.aws.amazon.com/cli/latest/reference/eks/update-kubeconfig.html)
to configure your local kubeconfig. The EKS module will define a CloudFormation output in your stack which contains the command to run. For example:

\`\`\`plaintext
Outputs:
ClusterConfigCommand43AAE40F = aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
\`\`\`

Execute the \`aws eks update-kubeconfig ...\` command in your terminal to create or update a local kubeconfig context:

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

And now you can simply use \`kubectl\`:

\`\`\`console
$ kubectl get all -n kube-system
NAME                           READY   STATUS    RESTARTS   AGE
pod/aws-node-fpmwv             1/1     Running   0          21m
pod/aws-node-m9htf             1/1     Running   0          21m
pod/coredns-5cb4fb54c7-q222j   1/1     Running   0          23m
pod/coredns-5cb4fb54c7-v9nxx   1/1     Running   0          23m
...
\`\`\`

## Architectural Overview

The following is a qualitative diagram of the various possible components involved in the cluster deployment.

\`\`\`text
 +-----------------------------------------------+               +-----------------+
 |                 EKS Cluster                   |    kubectl    |                 |
 |-----------------------------------------------|<-------------+| Kubectl Handler |
 |                                               |               |                 |
 |                                               |               +-----------------+
 | +--------------------+    +-----------------+ |
 | |                    |    |                 | |
 | | Managed Node Group |    | Fargate Profile | |               +-----------------+
 | |                    |    |                 | |               |                 |
 | +--------------------+    +-----------------+ |               | Cluster Handler |
 |                                               |               |                 |
 +-----------------------------------------------+               +-----------------+
    ^                                   ^                          +
    |                                   |                          |
    | connect self managed capacity     |                          | aws-sdk
    |                                   | create/update/delete     |
    +                                   |                          v
 +--------------------+                 +              +-------------------+
 |                    |                 --------------+| eks.amazonaws.com |
 | Auto Scaling Group |                                +-------------------+
 |                    |
 +--------------------+
\`\`\`

In a nutshell:

* \`EKS Cluster\` - The cluster endpoint created by EKS.
* \`Managed Node Group\` - EC2 worker nodes managed by EKS.
* \`Fargate Profile\` - Fargate worker nodes managed by EKS.
* \`Auto Scaling Group\` - EC2 worker nodes managed by the user.
* \`KubectlHandler\` - Lambda function for invoking \`kubectl\` commands on the cluster - created by CDK.
* \`ClusterHandler\` - Lambda function for interacting with EKS API to manage the cluster lifecycle - created by CDK.

A more detailed breakdown of each is provided further down this README.

## Provisioning clusters

Creating a new cluster is done using the \`Cluster\` or \`FargateCluster\` constructs. The only required property is the kubernetes \`version\`.

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

You can also use \`FargateCluster\` to provision a cluster that uses only fargate workers.

\`\`\`ts
new eks.FargateCluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

> **NOTE: Only 1 cluster per stack is supported.** If you have a use-case for multiple clusters per stack, or would like to understand more about this limitation, see <https://github.com/aws/aws-cdk/issues/10073>.

Below you'll find a few important cluster configuration options. First of which is Capacity.
Capacity is the amount and the type of worker nodes that are available to the cluster for deploying resources. Amazon EKS offers 3 ways of configuring capacity, which you can combine as you like:

### Managed node groups

Amazon EKS managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters.
With Amazon EKS managed node groups, you don’t need to separately provision or register the Amazon EC2 instances that provide compute capacity to run your Kubernetes applications. You can create, update, or terminate nodes for your cluster with a single operation. Nodes run using the latest Amazon EKS optimized AMIs in your AWS account while node updates and terminations gracefully drain nodes to ensure that your applications stay available.

> For more details visit [Amazon EKS Managed Node Groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).

**Managed Node Groups are the recommended way to allocate cluster capacity.**

By default, this library will allocate a managed node group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).

At cluster instantiation time, you can customize the number of instances and their type:

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 5,
  defaultCapacityInstance: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.SMALL),
});
\`\`\`

To access the node group that was created on your behalf, you can use \`cluster.defaultNodegroup\`.

Additional customizations are available post instantiation. To apply them, set the default capacity to 0, and use the \`cluster.addNodegroupCapacity\` method:

\`\`\`ts
const cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 0,
});

cluster.addNodegroupCapacity('custom-node-group', {
  instanceTypes: [new ec2.InstanceType('m5.large')],
  minSize: 4,
  diskSize: 100,
  amiType: eks.NodegroupAmiType.AL2_X86_64_GPU,
  ...
});
\`\`\`

#### Spot Instances Support

Use \`capacityType\` to create managed node groups comprised of spot instances. To maximize the availability of your applications while using
Spot Instances, we recommend that you configure a Spot managed node group to use multiple instance types with the \`instanceTypes\` property.

> For more details visit [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types).


\`\`\`ts
cluster.addNodegroupCapacity('extra-ng-spot', {
  instanceTypes: [
    new ec2.InstanceType('c5.large'),
    new ec2.InstanceType('c5a.large'),
    new ec2.InstanceType('c5d.large'),
  ],
  minSize: 3,
  capacityType: eks.CapacityType.SPOT,
});

\`\`\`

#### Launch Template Support

You can specify a launch template that the node group will use. For example, this can be useful if you want to use
a custom AMI or add custom user data.

When supplying a custom user data script, it must be encoded in the MIME multi-part archive format, since Amazon EKS merges with its own user data. Visit the [Launch Template Docs](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html#launch-template-user-data)
for mode details.

\`\`\`ts
const userData = \`MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\\"==MYBOUNDARY==\\"

--==MYBOUNDARY==
Content-Type: text/x-shellscript; charset=\\"us-ascii\\"

#!/bin/bash
echo \\"Running custom user data script\\"

--==MYBOUNDARY==--\\\\\\\\
\`;
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    instanceType: 't3.small',
    userData: Fn.base64(userData),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});

\`\`\`

Note that when using a custom AMI, Amazon EKS doesn't merge any user data. Which means you do not need the multi-part encoding. and are responsible for supplying the required bootstrap commands for nodes to join the cluster.
In the following example, \`/ect/eks/bootstrap.sh\` from the AMI will be used to bootstrap the node.

\`\`\`ts
const userData = ec2.UserData.forLinux();
userData.addCommands(
  'set -o xtrace',
  \`/etc/eks/bootstrap.sh \${cluster.clusterName}\`,
);
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    imageId: 'some-ami-id', // custom AMI
    instanceType: 't3.small',
    userData: Fn.base64(userData.render()),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});
\`\`\`

You may specify one \`instanceType\` in the launch template or multiple \`instanceTypes\` in the node group, **but not both**.

> For more details visit [Launch Template Support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).

Graviton 2 instance types are supported including \`c6g\`, \`m6g\`, \`r6g\` and \`t4g\`.

### Fargate profiles

AWS Fargate is a technology that provides on-demand, right-sized compute
capacity for containers. With AWS Fargate, you no longer have to provision,
configure, or scale groups of virtual machines to run containers. This removes
the need to choose server types, decide when to scale your node groups, or
optimize cluster packing.

You can control which pods start on Fargate and how they run with Fargate
Profiles, which are defined as part of your Amazon EKS cluster.

See [Fargate Considerations](https://docs.aws.amazon.com/eks/latest/userguide/fargate.html#fargate-considerations) in the AWS EKS User Guide.

You can add Fargate Profiles to any EKS cluster defined in your CDK app
through the \`addFargateProfile()\` method. The following example adds a profile
that will match all pods from the \\"default\\" namespace:

\`\`\`ts
cluster.addFargateProfile('MyProfile', {
  selectors: [ { namespace: 'default' } ]
});
\`\`\`

You can also directly use the \`FargateProfile\` construct to create profiles under different scopes:

\`\`\`ts
new eks.FargateProfile(scope, 'MyProfile', {
  cluster,
  ...
});
\`\`\`

To create an EKS cluster that **only** uses Fargate capacity, you can use \`FargateCluster\`.
The following code defines an Amazon EKS cluster with a default Fargate Profile that matches all pods from the \\"kube-system\\" and \\"default\\" namespaces. It is also configured to [run CoreDNS on Fargate](https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html#fargate-gs-coredns).

\`\`\`ts
const cluster = new eks.FargateCluster(this, 'MyCluster', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

**NOTE**: Classic Load Balancers and Network Load Balancers are not supported on
pods running on Fargate. For ingress, we recommend that you use the [ALB Ingress
Controller](https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html)
on Amazon EKS (minimum version v1.1.4).

### Self-managed nodes

Another way of allocating capacity to an EKS cluster is by using self-managed nodes.
EC2 instances that are part of the auto-scaling group will serve as worker nodes for the cluster.
This type of capacity is also commonly referred to as *EC2 Capacity** or *EC2 Nodes*.

For a detailed overview please visit [Self Managed Nodes](https://docs.aws.amazon.com/eks/latest/userguide/worker.html).

Creating an auto-scaling group and connecting it to the cluster is done using the \`cluster.addAutoScalingGroupCapacity\` method:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('frontend-nodes', {
  instanceType: new ec2.InstanceType('t2.medium'),
  minCapacity: 3,
  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC }
});
\`\`\`

To connect an already initialized auto-scaling group, use the \`cluster.connectAutoScalingGroupCapacity()\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...);
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

In both cases, the [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html#cluster-sg) will be automatically attached to
the auto-scaling group, allowing for traffic to flow freely between managed and self-managed nodes.

> **Note:** The default \`updateType\` for auto-scaling groups does not replace existing nodes. Since security groups are determined at launch time, self-managed nodes that were provisioned with version \`1.78.0\` or lower, will not be updated.
> To apply the new configuration on all your self-managed nodes, you'll need to replace the nodes using the \`UpdateType.REPLACING_UPDATE\` policy for the [\`updateType\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.AutoScalingGroup.html#updatetypespan-classapi-icon-api-icon-deprecated-titlethis-api-element-is-deprecated-its-use-is-not-recommended%EF%B8%8Fspan) property.

You can customize the [/etc/eks/boostrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh) script, which is responsible
for bootstrapping the node to the EKS cluster. For example, you can use \`kubeletExtraArgs\` to add custom node labels or taints.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  instanceType: new ec2.InstanceType('t3.large'),
  minCapacity: 2,
  bootstrapOptions: {
    kubeletExtraArgs: '--node-labels foo=bar,goo=far',
    awsApiRetryAttempts: 5
  }
});
\`\`\`

To disable bootstrapping altogether (i.e. to fully customize user-data), set \`bootstrapEnabled\` to \`false\`.
You can also configure the cluster to use an auto-scaling group as the default capacity:

\`\`\`ts
cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacityType: eks.DefaultCapacityType.EC2,
});
\`\`\`

This will allocate an auto-scaling group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).
To access the \`AutoScalingGroup\` that was created on your behalf, you can use \`cluster.defaultCapacity\`.
You can also independently create an \`AutoScalingGroup\` and connect it to the cluster using the \`cluster.connectAutoScalingGroupCapacity\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...)
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

This will add the necessary user-data to access the apiserver and configure all connections, roles, and tags needed for the instances in the auto-scaling group to properly join the cluster.

#### Spot Instances

When using self-managed nodes, you can configure the capacity to use spot instances, greatly reducing capacity cost.
To enable spot capacity, use the \`spotPrice\` property:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  spotPrice: '0.1094',
  instanceType: new ec2.InstanceType('t3.large'),
  maxCapacity: 10
});
\`\`\`

> Spot instance nodes will be labeled with \`lifecycle=Ec2Spot\` and tainted with \`PreferNoSchedule\`.

The [AWS Node Termination Handler](https://github.com/aws/aws-node-termination-handler) \`DaemonSet\` will be
installed from [Amazon EKS Helm chart repository](https://github.com/aws/eks-charts/tree/master/stable/aws-node-termination-handler) on these nodes.
The termination handler ensures that the Kubernetes control plane responds appropriately to events that
can cause your EC2 instance to become unavailable, such as [EC2 maintenance events](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html)
and [EC2 Spot interruptions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html) and helps gracefully stop all pods running on spot nodes that are about to be
terminated.

> Handler Version: [1.7.0](https://github.com/aws/aws-node-termination-handler/releases/tag/v1.7.0)
>
> Chart Version: [0.9.5](https://github.com/aws/eks-charts/blob/v0.0.28/stable/aws-node-termination-handler/Chart.yaml)

To disable the installation of the termination handler, set the \`spotInterruptHandler\` property to \`false\`. This applies both to \`addAutoScalingGroupCapacity\` and \`connectAutoScalingGroupCapacity\`.

#### Bottlerocket

[Bottlerocket](https://aws.amazon.com/bottlerocket/) is a Linux-based open-source operating system that is purpose-built by Amazon Web Services for running containers on virtual machines or bare metal hosts.
At this moment, \`Bottlerocket\` is only supported when using self-managed auto-scaling groups.

> **NOTICE**: Bottlerocket is only available in [some supported AWS regions](https://github.com/bottlerocket-os/bottlerocket/blob/develop/QUICKSTART-EKS.md#finding-an-ami).

The following example will create an auto-scaling group of 2 \`t3.small\` Linux instances running with the \`Bottlerocket\` AMI.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('BottlerocketNodes', {
  instanceType: new ec2.InstanceType('t3.small'),
  minCapacity:  2,
  machineImageType: eks.MachineImageType.BOTTLEROCKET
});
\`\`\`

The specific Bottlerocket AMI variant will be auto selected according to the k8s version for the \`x86_64\` architecture.
For example, if the Amazon EKS cluster version is \`1.17\`, the Bottlerocket AMI variant will be auto selected as
\`aws-k8s-1.17\` behind the scene.

> See [Variants](https://github.com/bottlerocket-os/bottlerocket/blob/develop/README.md#variants) for more details.

Please note Bottlerocket does not allow to customize bootstrap options and \`bootstrapOptions\` properties is not supported when you create the \`Bottlerocket\` capacity.

### Endpoint Access

When you create a new cluster, Amazon EKS creates an endpoint for the managed Kubernetes API server that you use to communicate with your cluster (using Kubernetes management tools such as \`kubectl\`)

By default, this API server endpoint is public to the internet, and access to the API server is secured using a combination of
AWS Identity and Access Management (IAM) and native Kubernetes [Role Based Access Control](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) (RBAC).

You can configure the [cluster endpoint access](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) by using the \`endpointAccess\` property:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  endpointAccess: eks.EndpointAccess.PRIVATE // No access outside of your VPC.
});
\`\`\`

The default value is \`eks.EndpointAccess.PUBLIC_AND_PRIVATE\`. Which means the cluster endpoint is accessible from outside of your VPC, but worker node traffic and \`kubectl\` commands issued by this library stay within your VPC.

### VPC Support

You can specify the VPC of the cluster using the \`vpc\` and \`vpcSubnets\` properties:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');

new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  vpc,
  vpcSubnets: [{ subnetType: ec2.SubnetType.PRIVATE }]
});
\`\`\`

> Note: Isolated VPCs (i.e with no internet access) are not currently supported. See https://github.com/aws/aws-cdk/issues/12171

If you do not specify a VPC, one will be created on your behalf, which you can then access via \`cluster.vpc\`. The cluster VPC will be associated to any EKS managed capacity (i.e Managed Node Groups and Fargate Profiles).

If you allocate self managed capacity, you can specify which subnets should the auto-scaling group use:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');
cluster.addAutoScalingGroupCapacity('nodes', {
  vpcSubnets: { subnets: vpc.privateSubnets }
});
\`\`\`

There are two additional components you might want to provision within the VPC.

#### Kubectl Handler

The \`KubectlHandler\` is a Lambda function responsible to issuing \`kubectl\` and \`helm\` commands against the cluster when you add resource manifests to the cluster.

The handler association to the VPC is derived from the \`endpointAccess\` configuration. The rule of thumb is: *If the cluster VPC can be associated, it will be*.

Breaking this down, it means that if the endpoint exposes private access (via \`EndpointAccess.PRIVATE\` or \`EndpointAccess.PUBLIC_AND_PRIVATE\`), and the VPC contains **private** subnets, the Lambda function will be provisioned inside the VPC and use the private subnets to interact with the cluster. This is the common use-case.

If the endpoint does not expose private access (via \`EndpointAccess.PUBLIC\`) **or** the VPC does not contain private subnets, the function will not be provisioned within the VPC.

#### Cluster Handler

The \`ClusterHandler\` is a Lambda function responsible to interact with the EKS API in order to control the cluster lifecycle. To provision this function inside the VPC, set the \`placeClusterHandlerInVpc\` property to \`true\`. This will place the function inside the private subnets of the VPC based on the selection strategy specified in the [\`vpcSubnets\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.Cluster.html#vpcsubnetsspan-classapi-icon-api-icon-experimental-titlethis-api-element-is-experimental-it-may-change-without-noticespan) property.

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  clusterHandlerEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

### Kubectl Support

The resources are created in the cluster by running \`kubectl apply\` from a python lambda function.

#### Environment

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  kubectlEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

#### Runtime

The kubectl handler uses \`kubectl\`, \`helm\` and the \`aws\` CLI in order to
interact with the cluster. These are bundled into AWS Lambda layers included in
the \`@aws-cdk/lambda-layer-awscli\` and \`@aws-cdk/lambda-layer-kubectl\` modules.

You can specify a custom \`lambda.LayerVersion\` if you wish to use a different
version of these tools. The handler expects the layer to include the following
three executables:

\`\`\`text
helm/helm
kubectl/kubectl
awscli/aws
\`\`\`

See more information in the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-awscli/layer) for @aws-cdk/lambda-layer-awscli
and the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-kubectl/layer) for @aws-cdk/lambda-layer-kubectl.

\`\`\`ts
const layer = new lambda.LayerVersion(this, 'KubectlLayer', {
  code: lambda.Code.fromAsset('layer.zip'),
});
\`\`\`

Now specify when the cluster is defined:

\`\`\`ts
const cluster = new eks.Cluster(this, 'MyCluster', {
  kubectlLayer: layer,
});

// or
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlLayer: layer,
});
\`\`\`

#### Memory

By default, the kubectl provider is configured with 1024MiB of memory. You can use the \`kubectlMemory\` option to specify the memory size for the AWS Lambda function:

\`\`\`ts
import { Size } from 'aws-cdk-lib';

new eks.Cluster(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});

// or
eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});
\`\`\`

### ARM64 Support

Instance types with \`ARM64\` architecture are supported in both managed nodegroup and self-managed capacity. Simply specify an ARM64 \`instanceType\` (such as \`m6g.medium\`), and the latest
Amazon Linux 2 AMI for ARM64 will be automatically selected.

\`\`\`ts
// add a managed ARM64 nodegroup
cluster.addNodegroupCapacity('extra-ng-arm', {
  instanceTypes: [new ec2.InstanceType('m6g.medium')],
  minSize: 2,
});

// add a self-managed ARM64 nodegroup
cluster.addAutoScalingGroupCapacity('self-ng-arm', {
  instanceType: new ec2.InstanceType('m6g.medium'),
  minCapacity: 2,
})
\`\`\`

### Masters Role

When you create a cluster, you can specify a \`mastersRole\`. The \`Cluster\` construct will associate this role with the \`system:masters\` [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) group, giving it super-user access to the cluster.

\`\`\`ts
const role = new iam.Role(...);
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  mastersRole: role,
});
\`\`\`

If you do not specify it, a default role will be created on your behalf, that can be assumed by anyone in the account with \`sts:AssumeRole\` permissions for this role.

This is the role you see as part of the stack outputs mentioned in the [Quick Start](#quick-start).

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

### Encryption

When you create an Amazon EKS cluster, envelope encryption of Kubernetes secrets using the AWS Key Management Service (AWS KMS) can be enabled.
The documentation on [creating a cluster](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html)
can provide more details about the customer master key (CMK) that can be used for the encryption.

You can use the \`secretsEncryptionKey\` to configure which key the cluster will use to encrypt Kubernetes secrets. By default, an AWS Managed key will be used.

> This setting can only be specified when the cluster is created and cannot be updated.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.Cluster(this, 'MyCluster', {
  secretsEncryptionKey: secretsKey,
  // ...
});
\`\`\`

You can also use a similar configuration for running a cluster built using the FargateCluster construct.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.FargateCluster(this, 'MyFargateCluster', {
  secretsEncryptionKey: secretsKey
});
\`\`\`

The Amazon Resource Name (ARN) for that CMK can be retrieved.

\`\`\`ts
const clusterEncryptionConfigKeyArn = cluster.clusterEncryptionConfigKeyArn;
\`\`\`

## Permissions and Security

Amazon EKS provides several mechanism of securing the cluster and granting permissions to specific IAM users and roles.

### AWS IAM Mapping

As described in the [Amazon EKS User Guide](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html), you can map AWS IAM users and roles to [Kubernetes Role-based access control (RBAC)](https://kubernetes.io/docs/reference/access-authn-authz/rbac).

The Amazon EKS construct manages the *aws-auth* \`ConfigMap\` Kubernetes resource on your behalf and exposes an API through the \`cluster.awsAuth\` for mapping
users, roles and accounts.

Furthermore, when auto-scaling group capacity is added to the cluster, the IAM instance role of the auto-scaling group will be automatically mapped to RBAC so nodes can connect to the cluster. No manual mapping is required.

For example, let's say you want to grant an IAM user administrative privileges on your cluster:

\`\`\`ts
const adminUser = new iam.User(this, 'Admin');
cluster.awsAuth.addUserMapping(adminUser, { groups: [ 'system:masters' ]});
\`\`\`

A convenience method for mapping a role to the \`system:masters\` group is also available:

\`\`\`ts
cluster.awsAuth.addMastersRole(role)
\`\`\`

### Cluster Security Group

When you create an Amazon EKS cluster, a [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
is automatically created as well. This security group is designed to allow all traffic from the control plane and managed node groups to flow freely
between each other.

The ID for that security group can be retrieved after creating the cluster.

\`\`\`ts
const clusterSecurityGroupId = cluster.clusterSecurityGroupId;
\`\`\`

### Node SSH Access

If you want to be able to SSH into your worker nodes, you must already have an SSH key in the region you're connecting to and pass it when
you add capacity to the cluster. You must also be able to connect to the hosts (meaning they must have a public IP and you
should be allowed to connect to them on port 22):

See [SSH into nodes](test/example.ssh-into-nodes.lit.ts) for a code example.

If you want to SSH into nodes in a private subnet, you should set up a bastion host in a public subnet. That setup is recommended, but is
unfortunately beyond the scope of this documentation.

### Service Accounts

With services account you can provide Kubernetes Pods access to AWS resources.

\`\`\`ts
// add service account
const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

const mypod = cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    serviceAccountName: sa.serviceAccountName
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ],

      }
    ]
  }
});

// create the resource after the service account.
mypod.node.addDependency(sa);

// print the IAM role arn for this service account
new cdk.CfnOutput(this, 'ServiceAccountIamRole', { value: sa.role.roleArn })
\`\`\`

Note that using \`sa.serviceAccountName\` above **does not** translate into a resource dependency.
This is why an explicit dependency is needed. See <https://github.com/aws/aws-cdk/issues/9910> for more details.

You can also add service accounts to existing clusters.
To do so, pass the \`openIdConnectProvider\` property when you import the cluster into the application.

\`\`\`ts
// you can import an existing provider
const provider = eks.OpenIdConnectProvider.fromOpenIdConnectProviderArn(this, 'Provider', 'arn:aws:iam::123456:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/AB123456ABC');

// or create a new one using an existing issuer url
const provider = new eks.OpenIdConnectProvider(this, 'Provider', issuerUrl);

const cluster = eks.Cluster.fromClusterAttributes({
  clusterName: 'Cluster',
  openIdConnectProvider: provider,
  kubectlRoleArn: 'arn:aws:iam::123456:role/service-role/k8sservicerole',
});

const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

// ...
\`\`\`

Note that adding service accounts requires running \`kubectl\` commands against the cluster.
This means you must also pass the \`kubectlRoleArn\` when importing the cluster.
See [Using existing Clusters](https://github.com/aws/aws-cdk/tree/master/packages/@aws-cdk/aws-eks#using-existing-clusters).

## Applying Kubernetes Resources

The library supports several popular resource deployment mechanisms, among which are:

### Kubernetes Manifests

The \`KubernetesManifest\` construct or \`cluster.addManifest\` method can be used
to apply Kubernetes resource manifests to this cluster.

> When using \`cluster.addManifest\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new KubernetesManifest\` to create the manifest in the scope of the other stack.

The following examples will deploy the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes)
service on the cluster:

\`\`\`ts
const appLabel = { app: \\"hello-kubernetes\\" };

const deployment = {
  apiVersion: \\"apps/v1\\",
  kind: \\"Deployment\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    replicas: 3,
    selector: { matchLabels: appLabel },
    template: {
      metadata: { labels: appLabel },
      spec: {
        containers: [
          {
            name: \\"hello-kubernetes\\",
            image: \\"paulbouwer/hello-kubernetes:1.5\\",
            ports: [ { containerPort: 8080 } ]
          }
        ]
      }
    }
  }
};

const service = {
  apiVersion: \\"v1\\",
  kind: \\"Service\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    type: \\"LoadBalancer\\",
    ports: [ { port: 80, targetPort: 8080 } ],
    selector: appLabel
  }
};

// option 1: use a construct
new KubernetesManifest(this, 'hello-kub', {
  cluster,
  manifest: [ deployment, service ]
});

// or, option2: use \`addManifest\`
cluster.addManifest('hello-kub', service, deployment);
\`\`\`

#### Adding resources from a URL

The following example will deploy the resource manifest hosting on remote server:

\`\`\`ts
import * as yaml from 'js-yaml';
import * as request from 'sync-request';

const manifestUrl = 'https://url/of/manifest.yaml';
const manifest = yaml.safeLoadAll(request('GET', manifestUrl).getBody());
cluster.addManifest('my-resource', ...manifest);
\`\`\`

#### Dependencies

There are cases where Kubernetes resources must be deployed in a specific order.
For example, you cannot define a resource in a Kubernetes namespace before the
namespace was created.

You can represent dependencies between \`KubernetesManifest\`s using
\`resource.node.addDependency()\`:

\`\`\`ts
const namespace = cluster.addManifest('my-namespace', {
  apiVersion: 'v1',
  kind: 'Namespace',
  metadata: { name: 'my-app' }
});

const service = cluster.addManifest('my-service', {
  metadata: {
    name: 'myservice',
    namespace: 'my-app'
  },
  spec: // ...
});

service.node.addDependency(namespace); // will apply \`my-namespace\` before \`my-service\`.
\`\`\`

**NOTE:** when a \`KubernetesManifest\` includes multiple resources (either directly
or through \`cluster.addManifest()\`) (e.g. \`cluster.addManifest('foo', r1, r2,
r3,...)\`), these resources will be applied as a single manifest via \`kubectl\`
and will be applied sequentially (the standard behavior in \`kubectl\`).

---

Since Kubernetes manifests are implemented as CloudFormation resources in the
CDK. This means that if the manifest is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`kubectl delete\` command and the
Kubernetes resources in that manifest will be deleted.

#### Resource Pruning

When a resource is deleted from a Kubernetes manifest, the EKS module will
automatically delete these resources by injecting a _prune label_ to all
manifest resources. This label is then passed to [\`kubectl apply --prune\`].

[\`kubectl apply --prune\`]: https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label

Pruning is enabled by default but can be disabled through the \`prune\` option
when a cluster is defined:

\`\`\`ts
new Cluster(this, 'MyCluster', {
  prune: false
});
\`\`\`

#### Manifests Validation

The \`kubectl\` CLI supports applying a manifest by skipping the validation.
This can be accomplished by setting the \`skipValidation\` flag to \`true\` in the \`KubernetesManifest\` props.

\`\`\`ts
new eks.KubernetesManifest(this, 'HelloAppWithoutValidation', {
  cluster: this.cluster,
  manifest: [ deployment, service ],
  skipValidation: true,
});
\`\`\`

### Helm Charts

The \`HelmChart\` construct or \`cluster.addHelmChart\` method can be used
to add Kubernetes resources to this cluster using Helm.

> When using \`cluster.addHelmChart\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new HelmChart\` to create the chart in the scope of the other stack.

The following example will install the [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/) to your cluster using Helm.

\`\`\`ts
// option 1: use a construct
new HelmChart(this, 'NginxIngress', {
  cluster,
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});

// or, option2: use \`addHelmChart\`
cluster.addHelmChart('NginxIngress', {
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});
\`\`\`

Helm charts will be installed and updated using \`helm upgrade --install\`, where a few parameters
are being passed down (such as \`repo\`, \`values\`, \`version\`, \`namespace\`, \`wait\`, \`timeout\`, etc).
This means that if the chart is added to CDK with the same release name, it will try to update
the chart in the cluster.

Helm charts are implemented as CloudFormation resources in CDK.
This means that if the chart is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`helm uninstall\` command and the
Helm chart will be deleted.

When there is no \`release\` defined, a unique ID will be allocated for the release based
on the construct path.

By default, all Helm charts will be installed concurrently. In some cases, this
could cause race conditions where two Helm charts attempt to deploy the same
resource or if Helm charts depend on each other. You can use
\`chart.node.addDependency()\` in order to declare a dependency order between
charts:

\`\`\`ts
const chart1 = cluster.addHelmChart(...);
const chart2 = cluster.addHelmChart(...);

chart2.node.addDependency(chart1);
\`\`\`

#### CDK8s Charts

[CDK8s](https://cdk8s.io/) is an open-source library that enables Kubernetes manifest authoring using familiar programming languages. It is founded on the same technologies as the AWS CDK, such as [\`constructs\`](https://github.com/aws/constructs) and [\`jsii\`](https://github.com/aws/jsii).

> To learn more about cdk8s, visit the [Getting Started](https://github.com/awslabs/cdk8s/tree/master/docs/getting-started) tutorials.

The EKS module natively integrates with cdk8s and allows you to apply cdk8s charts on AWS EKS clusters via the \`cluster.addCdk8sChart\` method.

In addition to \`cdk8s\`, you can also use [\`cdk8s+\`](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-plus), which provides higher level abstraction for the core kubernetes api objects.
You can think of it like the \`L2\` constructs for Kubernetes. Any other \`cdk8s\` based libraries are also supported, for example [\`cdk8s-debore\`](https://github.com/toricls/cdk8s-debore).

To get started, add the following dependencies to your \`package.json\` file:

\`\`\`json
\\"dependencies\\": {
  \\"cdk8s\\": \\"0.30.0\\",
  \\"cdk8s-plus\\": \\"0.30.0\\",
  \\"constructs\\": \\"3.0.4\\"
}
\`\`\`

> Note that the version of \`cdk8s\` must be \`>=0.30.0\`.

Similarly to how you would create a stack by extending \`@aws-cdk/core.Stack\`, we recommend you create a chart of your own that extends \`cdk8s.Chart\`,
and add your kubernetes resources to it. You can use \`aws-cdk\` construct attributes and properties inside your \`cdk8s\` construct freely.

In this example we create a chart that accepts an \`s3.Bucket\` and passes its name to a kubernetes pod as an environment variable.

Notice that the chart must accept a \`constructs.Construct\` type as its scope, not an \`@aws-cdk/core.Construct\` as you would normally use.
For this reason, to avoid possible confusion, we will create the chart in a separate file:

\`+ my-chart.ts\`

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface MyChartProps {
  readonly bucket: s3.Bucket;
}

export class MyChart extends cdk8s.Chart {
  constructor(scope: constructs.Construct, id: string, props: MyChartProps) {
    super(scope, id);

    new kplus.Pod(this, 'Pod', {
      spec: {
        containers: [
          new kplus.Container({
            image: 'my-image',
            env: {
              BUCKET_NAME: kplus.EnvValue.fromValue(props.bucket.bucketName),
            },
          }),
        ],
      },
    });
  }
}
\`\`\`

Then, in your AWS CDK app:

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as cdk8s from 'cdk8s';
import { MyChart } from './my-chart';

// some bucket..
const bucket = new s3.Bucket(this, 'Bucket');

// create a cdk8s chart and use \`cdk8s.App\` as the scope.
const myChart = new MyChart(new cdk8s.App(), 'MyChart', { bucket });

// add the cdk8s chart to the cluster
cluster.addCdk8sChart('my-chart', myChart);
\`\`\`

##### Custom CDK8s Constructs

You can also compose a few stock \`cdk8s+\` constructs into your own custom construct. However, since mixing scopes between \`aws-cdk\` and \`cdk8s\` is currently not supported, the \`Construct\` class
you'll need to use is the one from the [\`constructs\`](https://github.com/aws/constructs) module, and not from \`@aws-cdk/core\` like you normally would.
This is why we used \`new cdk8s.App()\` as the scope of the chart above.

\`\`\`ts
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface LoadBalancedWebService {
  readonly port: number;
  readonly image: string;
  readonly replicas: number;
}

export class LoadBalancedWebService extends constructs.Construct {
  constructor(scope: constructs.Construct, id: string, props: LoadBalancedWebService) {
    super(scope, id);

    const deployment = new kplus.Deployment(chart, 'Deployment', {
      spec: {
        replicas: props.replicas,
        podSpecTemplate: {
          containers: [ new kplus.Container({ image: props.image }) ]
        }
      },
    });

    deployment.expose({port: props.port, serviceType: kplus.ServiceType.LOAD_BALANCER})

  }
}
\`\`\`

##### Manually importing k8s specs and CRD's

If you find yourself unable to use \`cdk8s+\`, or just like to directly use the \`k8s\` native objects or CRD's, you can do so by manually importing them using the \`cdk8s-cli\`.

See [Importing kubernetes objects](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-cli#import) for detailed instructions.

## Patching Kubernetes Resources

The \`KubernetesPatch\` construct can be used to update existing kubernetes
resources. The following example can be used to patch the \`hello-kubernetes\`
deployment from the example above with 5 replicas.

\`\`\`ts
new KubernetesPatch(this, 'hello-kub-deployment-label', {
  cluster,
  resourceName: \\"deployment/hello-kubernetes\\",
  applyPatch: { spec: { replicas: 5 } },
  restorePatch: { spec: { replicas: 3 } }
})
\`\`\`

## Querying Kubernetes Resources

The \`KubernetesObjectValue\` construct can be used to query for information about kubernetes objects,
and use that as part of your CDK application.

For example, you can fetch the address of a [\`LoadBalancer\`](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer) type service:

\`\`\`ts
// query the load balancer address
const myServiceAddress = new KubernetesObjectValue(this, 'LoadBalancerAttribute', {
  cluster: cluster,
  objectType: 'service',
  objectName: 'my-service',
  jsonPath: '.status.loadBalancer.ingress[0].hostname', // https://kubernetes.io/docs/reference/kubectl/jsonpath/
});

// pass the address to a lambda function
const proxyFunction = new lambda.Function(this, 'ProxyFunction', {
  ...
  environment: {
    myServiceAddress: myServiceAddress.value
  },
})
\`\`\`

Specifically, since the above use-case is quite common, there is an easier way to access that information:

\`\`\`ts
const loadBalancerAddress = cluster.getServiceLoadBalancerAddress('my-service');
\`\`\`

## Using existing clusters

The Amazon EKS library allows defining Kubernetes resources such as [Kubernetes
manifests](#kubernetes-resources) and [Helm charts](#helm-charts) on clusters
that are not defined as part of your CDK app.

First, you'll need to \\"import\\" a cluster to your CDK app. To do that, use the
\`eks.Cluster.fromClusterAttributes()\` static method:

\`\`\`ts
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  clusterName: 'my-cluster-name',
  kubectlRoleArn: 'arn:aws:iam::1111111:role/iam-role-that-has-masters-access',
});
\`\`\`

Then, you can use \`addManifest\` or \`addHelmChart\` to define resources inside
your Kubernetes cluster. For example:

\`\`\`ts
cluster.addManifest('Test', {
  apiVersion: 'v1',
  kind: 'ConfigMap',
  metadata: {
    name: 'myconfigmap',
  },
  data: {
    Key: 'value',
    Another: '123454',
  },
});
\`\`\`

At the minimum, when importing clusters for \`kubectl\` management, you will need
to specify:

* \`clusterName\` - the name of the cluster.
* \`kubectlRoleArn\` - the ARN of an IAM role mapped to the \`system:masters\` RBAC
  role. If the cluster you are importing was created using the AWS CDK, the
  CloudFormation stack has an output that includes an IAM role that can be used.
  Otherwise, you can create an IAM role and map it to \`system:masters\` manually.
  The trust policy of this role should include the the
  \`arn:aws::iam::\${accountId}:root\` principal in order to allow the execution
  role of the kubectl resource to assume it.

If the cluster is configured with private-only or private and restricted public
Kubernetes [endpoint access](#endpoint-access), you must also specify:

* \`kubectlSecurityGroupId\` - the ID of an EC2 security group that is allowed
  connections to the cluster's control security group. For example, the EKS managed [cluster security group](#cluster-security-group).
* \`kubectlPrivateSubnetIds\` - a list of private VPC subnets IDs that will be used
  to access the Kubernetes endpoint.

## Known Issues and Limitations

* [One cluster per stack](https://github.com/aws/aws-cdk/issues/10073)
* [Service Account dependencies](https://github.com/aws/aws-cdk/issues/9910)
* [Support isolated VPCs](https://github.com/aws/aws-cdk/issues/12171)

# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### AwsAuth <a name=\\"AwsAuth\\" id=\\"monocdk.aws_eks.AwsAuth\\"></a>

Manages mapping between IAM users and roles to Kubernetes RBAC configuration.

> [https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.AwsAuth.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AwsAuth;

AwsAuth.Builder.create(Construct scope, java.lang.String id)
    .cluster(Cluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.Cluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.AwsAuth.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.AwsAuth.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.AwsAuth.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.Cluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.addAccount\\">addAccount</a></code> | Additional AWS account to add to the aws-auth configmap. |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.addMastersRole\\">addMastersRole</a></code> | Adds the specified IAM role to the \`system:masters\` RBAC group, which means that anyone that can assume it will be able to administer this Kubernetes system. |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.addRoleMapping\\">addRoleMapping</a></code> | Adds a mapping between an IAM role to a Kubernetes user and groups. |
| <code><a href=\\"#monocdk.aws_eks.AwsAuth.addUserMapping\\">addUserMapping</a></code> | Adds a mapping between an IAM user to a Kubernetes user and groups. |

---

##### \`addAccount\` <a name=\\"addAccount\\" id=\\"monocdk.aws_eks.AwsAuth.addAccount\\"></a>

\`\`\`java
public addAccount(java.lang.String accountId)
\`\`\`

###### \`accountId\`<sup>Required</sup> <a name=\\"accountId\\" id=\\"monocdk.aws_eks.AwsAuth.addAccount.parameter.accountId\\"></a>

- *Type:* java.lang.String

account number.

---

##### \`addMastersRole\` <a name=\\"addMastersRole\\" id=\\"monocdk.aws_eks.AwsAuth.addMastersRole\\"></a>

\`\`\`java
public addMastersRole(IRole role)
public addMastersRole(IRole role, java.lang.String username)
\`\`\`

###### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.AwsAuth.addMastersRole.parameter.role\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole

The IAM role to add.

---

###### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"monocdk.aws_eks.AwsAuth.addMastersRole.parameter.username\\"></a>

- *Type:* java.lang.String

Optional user (defaults to the role ARN).

---

##### \`addRoleMapping\` <a name=\\"addRoleMapping\\" id=\\"monocdk.aws_eks.AwsAuth.addRoleMapping\\"></a>

\`\`\`java
public addRoleMapping(IRole role, AwsAuthMapping mapping)
\`\`\`

###### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.AwsAuth.addRoleMapping.parameter.role\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole

The IAM role to map.

---

###### \`mapping\`<sup>Required</sup> <a name=\\"mapping\\" id=\\"monocdk.aws_eks.AwsAuth.addRoleMapping.parameter.mapping\\"></a>

- *Type:* software.amazon.awscdk.services.eks.AwsAuthMapping

Mapping to k8s user name and groups.

---

##### \`addUserMapping\` <a name=\\"addUserMapping\\" id=\\"monocdk.aws_eks.AwsAuth.addUserMapping\\"></a>

\`\`\`java
public addUserMapping(IUser user, AwsAuthMapping mapping)
\`\`\`

###### \`user\`<sup>Required</sup> <a name=\\"user\\" id=\\"monocdk.aws_eks.AwsAuth.addUserMapping.parameter.user\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IUser

The IAM user to map.

---

###### \`mapping\`<sup>Required</sup> <a name=\\"mapping\\" id=\\"monocdk.aws_eks.AwsAuth.addUserMapping.parameter.mapping\\"></a>

- *Type:* software.amazon.awscdk.services.eks.AwsAuthMapping

Mapping to k8s user name and groups.

---




### CfnAddon <a name=\\"CfnAddon\\" id=\\"monocdk.aws_eks.CfnAddon\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnAddon;

CfnAddon.Builder.create(Construct scope, java.lang.String id)
    .addonName(java.lang.String)
    .clusterName(java.lang.String)
//  .addonVersion(java.lang.String)
//  .resolveConflicts(java.lang.String)
//  .serviceAccountRoleArn(java.lang.String)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.addonName\\">addonName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.addonVersion\\">addonVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.resolveConflicts\\">resolveConflicts</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.serviceAccountRoleArn\\">serviceAccountRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`addonName\`<sup>Required</sup> <a name=\\"addonName\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.addonName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addonVersion\`<sup>Optional</sup> <a name=\\"addonVersion\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.addonVersion\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolveConflicts\`<sup>Optional</sup> <a name=\\"resolveConflicts\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.resolveConflicts\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`serviceAccountRoleArn\`<sup>Optional</sup> <a name=\\"serviceAccountRoleArn\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.serviceAccountRoleArn\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnAddon.Initializer.parameter.tags\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"monocdk.aws_eks.CfnAddon.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"monocdk.aws_eks.CfnAddon.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.core.TagManager</code> | \`AWS::EKS::Addon.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.addonName\\">addonName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.addonVersion\\">addonVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.resolveConflicts\\">resolveConflicts</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.serviceAccountRoleArn\\">serviceAccountRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"monocdk.aws_eks.CfnAddon.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnAddon.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.core.TagManager

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

##### \`addonName\`<sup>Required</sup> <a name=\\"addonName\\" id=\\"monocdk.aws_eks.CfnAddon.property.addonName\\"></a>

\`\`\`java
public java.lang.String getAddonName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnAddon.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addonVersion\`<sup>Optional</sup> <a name=\\"addonVersion\\" id=\\"monocdk.aws_eks.CfnAddon.property.addonVersion\\"></a>

\`\`\`java
public java.lang.String getAddonVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolveConflicts\`<sup>Optional</sup> <a name=\\"resolveConflicts\\" id=\\"monocdk.aws_eks.CfnAddon.property.resolveConflicts\\"></a>

\`\`\`java
public java.lang.String getResolveConflicts();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`serviceAccountRoleArn\`<sup>Optional</sup> <a name=\\"serviceAccountRoleArn\\" id=\\"monocdk.aws_eks.CfnAddon.property.serviceAccountRoleArn\\"></a>

\`\`\`java
public java.lang.String getServiceAccountRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"monocdk.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnCluster <a name=\\"CfnCluster\\" id=\\"monocdk.aws_eks.CfnCluster\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster;

CfnCluster.Builder.create(Construct scope, java.lang.String id)
    .resourcesVpcConfig(ResourcesVpcConfigProperty)
    .resourcesVpcConfig(IResolvable)
    .roleArn(java.lang.String)
//  .encryptionConfig(IResolvable)
//  .encryptionConfig(java.util.List<EncryptionConfigProperty)
//  .encryptionConfig(IResolvable>)
//  .kubernetesNetworkConfig(KubernetesNetworkConfigProperty)
//  .kubernetesNetworkConfig(IResolvable)
//  .name(java.lang.String)
//  .version(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.resourcesVpcConfig\\">resourcesVpcConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.roleArn\\">roleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.encryptionConfig\\">encryptionConfig</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.kubernetesNetworkConfig\\">kubernetesNetworkConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.name\\">name</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.Initializer.parameter.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`resourcesVpcConfig\`<sup>Required</sup> <a name=\\"resourcesVpcConfig\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.resourcesVpcConfig\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`roleArn\`<sup>Required</sup> <a name=\\"roleArn\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.roleArn\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryptionConfig\`<sup>Optional</sup> <a name=\\"encryptionConfig\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.encryptionConfig\\"></a>

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"kubernetesNetworkConfig\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.kubernetesNetworkConfig\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.name\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.CfnCluster.Initializer.parameter.version\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"monocdk.aws_eks.CfnCluster.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"monocdk.aws_eks.CfnCluster.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\">attrCertificateAuthorityData</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\">attrClusterSecurityGroupId</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\">attrEncryptionConfigKeyArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrEndpoint\\">attrEndpoint</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\">attrOpenIdConnectIssuerUrl</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.resourcesVpcConfig\\">resourcesVpcConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.roleArn\\">roleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.encryptionConfig\\">encryptionConfig</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\">kubernetesNetworkConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.name\\">name</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrCertificateAuthorityData\`<sup>Required</sup> <a name=\\"attrCertificateAuthorityData\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\"></a>

\`\`\`java
public java.lang.String getAttrCertificateAuthorityData();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"attrClusterSecurityGroupId\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getAttrClusterSecurityGroupId();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"attrEncryptionConfigKeyArn\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\"></a>

\`\`\`java
public java.lang.String getAttrEncryptionConfigKeyArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrEndpoint\`<sup>Required</sup> <a name=\\"attrEndpoint\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrEndpoint\\"></a>

\`\`\`java
public java.lang.String getAttrEndpoint();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"attrOpenIdConnectIssuerUrl\\" id=\\"monocdk.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\"></a>

\`\`\`java
public java.lang.String getAttrOpenIdConnectIssuerUrl();
\`\`\`

- *Type:* java.lang.String

---

##### \`resourcesVpcConfig\`<sup>Required</sup> <a name=\\"resourcesVpcConfig\\" id=\\"monocdk.aws_eks.CfnCluster.property.resourcesVpcConfig\\"></a>

\`\`\`java
public java.lang.Object getResourcesVpcConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`roleArn\`<sup>Required</sup> <a name=\\"roleArn\\" id=\\"monocdk.aws_eks.CfnCluster.property.roleArn\\"></a>

\`\`\`java
public java.lang.String getRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryptionConfig\`<sup>Optional</sup> <a name=\\"encryptionConfig\\" id=\\"monocdk.aws_eks.CfnCluster.property.encryptionConfig\\"></a>

\`\`\`java
public java.lang.Object getEncryptionConfig();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"kubernetesNetworkConfig\\" id=\\"monocdk.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\"></a>

\`\`\`java
public java.lang.Object getKubernetesNetworkConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"monocdk.aws_eks.CfnCluster.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.CfnCluster.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"monocdk.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnFargateProfile <a name=\\"CfnFargateProfile\\" id=\\"monocdk.aws_eks.CfnFargateProfile\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnFargateProfile;

CfnFargateProfile.Builder.create(Construct scope, java.lang.String id)
    .clusterName(java.lang.String)
    .podExecutionRoleArn(java.lang.String)
    .selectors(IResolvable)
    .selectors(java.util.List<SelectorProperty)
    .selectors(IResolvable>)
//  .fargateProfileName(java.lang.String)
//  .subnets(java.util.List<java.lang.String>)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.podExecutionRoleArn\\">podExecutionRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.selectors\\">selectors</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`podExecutionRoleArn\`<sup>Required</sup> <a name=\\"podExecutionRoleArn\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.podExecutionRoleArn\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.selectors\\"></a>

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.fargateProfileName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.subnets\\"></a>

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnFargateProfile.Initializer.parameter.tags\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"monocdk.aws_eks.CfnFargateProfile.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"monocdk.aws_eks.CfnFargateProfile.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.core.TagManager</code> | \`AWS::EKS::FargateProfile.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\">podExecutionRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.selectors\\">selectors</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::FargateProfile.Subnets\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.core.TagManager

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`podExecutionRoleArn\`<sup>Required</sup> <a name=\\"podExecutionRoleArn\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\"></a>

\`\`\`java
public java.lang.String getPodExecutionRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.selectors\\"></a>

\`\`\`java
public java.lang.Object getSelectors();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.subnets\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnets();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"monocdk.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### CfnNodegroup <a name=\\"CfnNodegroup\\" id=\\"monocdk.aws_eks.CfnNodegroup\\"></a>

- *Implements:* software.amazon.awscdk.core.IInspectable

A CloudFormation \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup;

CfnNodegroup.Builder.create(Construct scope, java.lang.String id)
    .clusterName(java.lang.String)
    .nodeRole(java.lang.String)
    .subnets(java.util.List<java.lang.String>)
//  .amiType(java.lang.String)
//  .capacityType(java.lang.String)
//  .diskSize(java.lang.Number)
//  .forceUpdateEnabled(java.lang.Boolean)
//  .forceUpdateEnabled(IResolvable)
//  .instanceTypes(java.util.List<java.lang.String>)
//  .labels(java.lang.Object)
//  .launchTemplate(LaunchTemplateSpecificationProperty)
//  .launchTemplate(IResolvable)
//  .nodegroupName(java.lang.String)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(RemoteAccessProperty)
//  .remoteAccess(IResolvable)
//  .scalingConfig(ScalingConfigProperty)
//  .scalingConfig(IResolvable)
//  .tags(java.lang.Object)
//  .taints(IResolvable)
//  .taints(java.util.List<TaintProperty)
//  .taints(IResolvable>)
//  .version(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.scope\\">scope</a></code> | <code>software.amazon.awscdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | - scoped id of the resource. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.nodeRole\\">nodeRole</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.amiType\\">amiType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.capacityType\\">capacityType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.forceUpdateEnabled\\">forceUpdateEnabled</a></code> | <code>java.lang.Boolean OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.labels\\">labels</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.launchTemplate\\">launchTemplate</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.scalingConfig\\">scalingConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.tags\\">tags</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.taints\\">taints</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.Initializer.parameter.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

scoped id of the resource.

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`nodeRole\`<sup>Required</sup> <a name=\\"nodeRole\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.nodeRole\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.subnets\\"></a>

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.amiType\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.capacityType\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.diskSize\\"></a>

- *Type:* java.lang.Number

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`forceUpdateEnabled\`<sup>Optional</sup> <a name=\\"forceUpdateEnabled\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.forceUpdateEnabled\\"></a>

- *Type:* java.lang.Boolean OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.instanceTypes\\"></a>

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.labels\\"></a>

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`launchTemplate\`<sup>Optional</sup> <a name=\\"launchTemplate\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.launchTemplate\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.nodegroupName\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.releaseVersion\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.remoteAccess\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scalingConfig\`<sup>Optional</sup> <a name=\\"scalingConfig\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.scalingConfig\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.tags\\"></a>

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.taints\\"></a>

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.CfnNodegroup.Initializer.parameter.version\\"></a>

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"monocdk.aws_eks.CfnNodegroup.inspect\\"></a>

\`\`\`java
public inspect(TreeInspector inspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"monocdk.aws_eks.CfnNodegroup.inspect.parameter.inspector\\"></a>

- *Type:* software.amazon.awscdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.attrArn\\">attrArn</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.attrClusterName\\">attrClusterName</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.attrNodegroupName\\">attrNodegroupName</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.core.TagManager</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.labels\\">labels</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.nodeRole\\">nodeRole</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.amiType\\">amiType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.capacityType\\">capacityType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\">forceUpdateEnabled</a></code> | <code>java.lang.Boolean OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.launchTemplate\\">launchTemplate</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.scalingConfig\\">scalingConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.taints\\">taints</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.attrArn\\"></a>

\`\`\`java
public java.lang.String getAttrArn();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrClusterName\`<sup>Required</sup> <a name=\\"attrClusterName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.attrClusterName\\"></a>

\`\`\`java
public java.lang.String getAttrClusterName();
\`\`\`

- *Type:* java.lang.String

---

##### \`attrNodegroupName\`<sup>Required</sup> <a name=\\"attrNodegroupName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.attrNodegroupName\\"></a>

\`\`\`java
public java.lang.String getAttrNodegroupName();
\`\`\`

- *Type:* java.lang.String

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.core.TagManager

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`labels\`<sup>Required</sup> <a name=\\"labels\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.labels\\"></a>

\`\`\`java
public java.lang.Object getLabels();
\`\`\`

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`nodeRole\`<sup>Required</sup> <a name=\\"nodeRole\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.nodeRole\\"></a>

\`\`\`java
public java.lang.String getNodeRole();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.subnets\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnets();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.amiType\\"></a>

\`\`\`java
public java.lang.String getAmiType();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.capacityType\\"></a>

\`\`\`java
public java.lang.String getCapacityType();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.diskSize\\"></a>

\`\`\`java
public java.lang.Number getDiskSize();
\`\`\`

- *Type:* java.lang.Number

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`forceUpdateEnabled\`<sup>Optional</sup> <a name=\\"forceUpdateEnabled\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\"></a>

\`\`\`java
public java.lang.Object getForceUpdateEnabled();
\`\`\`

- *Type:* java.lang.Boolean OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.instanceTypes\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getInstanceTypes();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`launchTemplate\`<sup>Optional</sup> <a name=\\"launchTemplate\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.launchTemplate\\"></a>

\`\`\`java
public java.lang.Object getLaunchTemplate();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.releaseVersion\\"></a>

\`\`\`java
public java.lang.String getReleaseVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.remoteAccess\\"></a>

\`\`\`java
public java.lang.Object getRemoteAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scalingConfig\`<sup>Optional</sup> <a name=\\"scalingConfig\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.scalingConfig\\"></a>

\`\`\`java
public java.lang.Object getScalingConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.taints\\"></a>

\`\`\`java
public java.lang.Object getTaints();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>java.lang.String</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"monocdk.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`java
public java.lang.String getCfnResourceTypeName();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type name for this resource class.

---

### Cluster <a name=\\"Cluster\\" id=\\"monocdk.aws_eks.Cluster\\"></a>

- *Implements:* software.amazon.awscdk.services.eks.ICluster

A Cluster represents a managed Kubernetes Service (EKS).

This is a fully managed cluster of API Servers (control-plane) The user is still required to create the worker nodes.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.Cluster.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Cluster;

Cluster.Builder.create(Construct scope, java.lang.String id)
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
//  .defaultCapacity(java.lang.Number)
//  .defaultCapacityInstance(InstanceType)
//  .defaultCapacityType(DefaultCapacityType)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | a Construct, most likely a cdk.Stack created. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | the id of the Construct to create. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.core.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.defaultCapacity\\">defaultCapacity</a></code> | <code>java.lang.Number</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.defaultCapacityInstance\\">defaultCapacityInstance</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.Initializer.parameter.defaultCapacityType\\">defaultCapacityType</a></code> | <code>software.amazon.awscdk.services.eks.DefaultCapacityType</code> | The default capacity type for the cluster. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

a Construct, most likely a cdk.Stack created.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

the id of the Construct to create.

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.version\\"></a>

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.outputClusterName\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.outputConfigCommand\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.role\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.securityGroup\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.vpc\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.vpcSubnets\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.clusterHandlerEnvironment\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.coreDnsComputeType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.endpointAccess\\"></a>

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.kubectlEnvironment\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.kubectlLayer\\"></a>

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.kubectlMemory\\"></a>

- *Type:* software.amazon.awscdk.core.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.mastersRole\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.outputMastersRoleArn\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.placeClusterHandlerInVpc\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.prune\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.secretsEncryptionKey\\"></a>

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultCapacity\`<sup>Optional</sup> <a name=\\"defaultCapacity\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.defaultCapacity\\"></a>

- *Type:* java.lang.Number
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`defaultCapacityInstance\`<sup>Optional</sup> <a name=\\"defaultCapacityInstance\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.defaultCapacityInstance\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`defaultCapacityType\`<sup>Optional</sup> <a name=\\"defaultCapacityType\\" id=\\"monocdk.aws_eks.Cluster.Initializer.parameter.defaultCapacityType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.DefaultCapacityType
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addAutoScalingGroupCapacity\\">addAutoScalingGroupCapacity</a></code> | Add nodes to this EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addCdk8sChart\\">addCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addFargateProfile\\">addFargateProfile</a></code> | Adds a Fargate profile to this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addHelmChart\\">addHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addManifest\\">addManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addNodegroupCapacity\\">addNodegroupCapacity</a></code> | Add managed nodegroup to this Amazon EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.addServiceAccount\\">addServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |
| <code><a href=\\"#monocdk.aws_eks.Cluster.connectAutoScalingGroupCapacity\\">connectAutoScalingGroupCapacity</a></code> | Connect capacity in the form of an existing AutoScalingGroup to the EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.getServiceLoadBalancerAddress\\">getServiceLoadBalancerAddress</a></code> | Fetch the load balancer address of a service of type 'LoadBalancer'. |

---

##### \`addAutoScalingGroupCapacity\` <a name=\\"addAutoScalingGroupCapacity\\" id=\\"monocdk.aws_eks.Cluster.addAutoScalingGroupCapacity\\"></a>

\`\`\`java
public addAutoScalingGroupCapacity(java.lang.String id, AutoScalingGroupCapacityOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.AutoScalingGroupCapacityOptions

---

##### \`addCdk8sChart\` <a name=\\"addCdk8sChart\\" id=\\"monocdk.aws_eks.Cluster.addCdk8sChart\\"></a>

\`\`\`java
public addCdk8sChart(java.lang.String id, Construct chart)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"monocdk.aws_eks.Cluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* software.constructs.Construct

the cdk8s chart.

---

##### \`addFargateProfile\` <a name=\\"addFargateProfile\\" id=\\"monocdk.aws_eks.Cluster.addFargateProfile\\"></a>

\`\`\`java
public addFargateProfile(java.lang.String id, FargateProfileOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.addFargateProfile.parameter.id\\"></a>

- *Type:* java.lang.String

the id of this profile.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.Cluster.addFargateProfile.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.FargateProfileOptions

profile options.

---

##### \`addHelmChart\` <a name=\\"addHelmChart\\" id=\\"monocdk.aws_eks.Cluster.addHelmChart\\"></a>

\`\`\`java
public addHelmChart(java.lang.String id, HelmChartOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.addHelmChart.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this chart.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.Cluster.addHelmChart.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.HelmChartOptions

options of this chart.

---

##### \`addManifest\` <a name=\\"addManifest\\" id=\\"monocdk.aws_eks.Cluster.addManifest\\"></a>

\`\`\`java
public addManifest(java.lang.String id, java.util.Map<java.lang.String, java.lang.Object> manifest)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.addManifest.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this manifest.

---

###### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"monocdk.aws_eks.Cluster.addManifest.parameter.manifest\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

a list of Kubernetes resource specifications.

---

##### \`addNodegroupCapacity\` <a name=\\"addNodegroupCapacity\\" id=\\"monocdk.aws_eks.Cluster.addNodegroupCapacity\\"></a>

\`\`\`java
public addNodegroupCapacity(java.lang.String id)
public addNodegroupCapacity(java.lang.String id, NodegroupOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.addNodegroupCapacity.parameter.id\\"></a>

- *Type:* java.lang.String

The ID of the nodegroup.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.Cluster.addNodegroupCapacity.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.NodegroupOptions

options for creating a new nodegroup.

---

##### \`addServiceAccount\` <a name=\\"addServiceAccount\\" id=\\"monocdk.aws_eks.Cluster.addServiceAccount\\"></a>

\`\`\`java
public addServiceAccount(java.lang.String id)
public addServiceAccount(java.lang.String id, ServiceAccountOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.addServiceAccount.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.Cluster.addServiceAccount.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ServiceAccountOptions

---

##### \`connectAutoScalingGroupCapacity\` <a name=\\"connectAutoScalingGroupCapacity\\" id=\\"monocdk.aws_eks.Cluster.connectAutoScalingGroupCapacity\\"></a>

\`\`\`java
public connectAutoScalingGroupCapacity(AutoScalingGroup autoScalingGroup, AutoScalingGroupOptions options)
\`\`\`

###### \`autoScalingGroup\`<sup>Required</sup> <a name=\\"autoScalingGroup\\" id=\\"monocdk.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.autoScalingGroup\\"></a>

- *Type:* software.amazon.awscdk.services.autoscaling.AutoScalingGroup

[disable-awslint:ref-via-interface].

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.AutoScalingGroupOptions

options for adding auto scaling groups, like customizing the bootstrap script.

---

##### \`getServiceLoadBalancerAddress\` <a name=\\"getServiceLoadBalancerAddress\\" id=\\"monocdk.aws_eks.Cluster.getServiceLoadBalancerAddress\\"></a>

\`\`\`java
public getServiceLoadBalancerAddress(java.lang.String serviceName)
public getServiceLoadBalancerAddress(java.lang.String serviceName, ServiceLoadBalancerAddressOptions options)
\`\`\`

###### \`serviceName\`<sup>Required</sup> <a name=\\"serviceName\\" id=\\"monocdk.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.serviceName\\"></a>

- *Type:* java.lang.String

The name of the service.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ServiceLoadBalancerAddressOptions

Additional operation options.

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Cluster.fromClusterAttributes\\">fromClusterAttributes</a></code> | Import an existing cluster. |

---

##### \`fromClusterAttributes\` <a name=\\"fromClusterAttributes\\" id=\\"monocdk.aws_eks.Cluster.fromClusterAttributes\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Cluster;

Cluster.fromClusterAttributes(Construct scope, java.lang.String id, ClusterAttributes attrs)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.Cluster.fromClusterAttributes.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

the construct scope, in most cases 'this'.

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Cluster.fromClusterAttributes.parameter.id\\"></a>

- *Type:* java.lang.String

the id or name to import as.

---

###### \`attrs\`<sup>Required</sup> <a name=\\"attrs\\" id=\\"monocdk.aws_eks.Cluster.fromClusterAttributes.parameter.attrs\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ClusterAttributes

the cluster properties to use for importing information.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.adminRole\\">adminRole</a></code> | <code>software.amazon.awscdk.services.iam.Role</code> | An IAM role with administrative permissions to create or update the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.awsAuth\\">awsAuth</a></code> | <code>software.amazon.awscdk.services.eks.AwsAuth</code> | Lazily creates the AwsAuth resource, which manages AWS authentication mapping. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterArn\\">clusterArn</a></code> | <code>java.lang.String</code> | The AWS generated ARN for the Cluster resource. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>java.lang.String</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>java.lang.String</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>java.lang.String</code> | The endpoint URL for the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | The Name of the created EKS Cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\">clusterOpenIdConnectIssuer</a></code> | <code>java.lang.String</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\">clusterOpenIdConnectIssuerUrl</a></code> | <code>java.lang.String</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer url. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterSecurityGroup\\">clusterSecurityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>java.lang.String</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.connections\\">connections</a></code> | <code>software.amazon.awscdk.services.ec2.Connections</code> | Manages connection rules (Security Group Rules) for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>software.amazon.awscdk.services.iam.IOpenIdConnectProvider</code> | An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Determines if Kubernetes resources can be pruned automatically. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | IAM role assumed by the EKS Control Plane. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.defaultCapacity\\">defaultCapacity</a></code> | <code>software.amazon.awscdk.services.autoscaling.AutoScalingGroup</code> | The auto scaling group that hosts the default capacity for this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.defaultNodegroup\\">defaultNodegroup</a></code> | <code>software.amazon.awscdk.services.eks.Nodegroup</code> | The node group that hosts the default capacity for this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.core.Size</code> | The amount of memory allocated to the kubectl provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlPrivateSubnets\\">kubectlPrivateSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.ISubnet></code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlRole\\">kubectlRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.Cluster.property.kubectlSecurityGroup\\">kubectlSecurityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`adminRole\`<sup>Required</sup> <a name=\\"adminRole\\" id=\\"monocdk.aws_eks.Cluster.property.adminRole\\"></a>

\`\`\`java
public Role getAdminRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.Role

An IAM role with administrative permissions to create or update the cluster.

This role also has \`systems:master\` permissions.

---

##### \`awsAuth\`<sup>Required</sup> <a name=\\"awsAuth\\" id=\\"monocdk.aws_eks.Cluster.property.awsAuth\\"></a>

\`\`\`java
public AwsAuth getAwsAuth();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.AwsAuth

Lazily creates the AwsAuth resource, which manages AWS authentication mapping.

---

##### \`clusterArn\`<sup>Required</sup> <a name=\\"clusterArn\\" id=\\"monocdk.aws_eks.Cluster.property.clusterArn\\"></a>

\`\`\`java
public java.lang.String getClusterArn();
\`\`\`

- *Type:* java.lang.String

The AWS generated ARN for the Cluster resource.

---

##### \`clusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"monocdk.aws_eks.Cluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`java
public java.lang.String getClusterCertificateAuthorityData();
\`\`\`

- *Type:* java.lang.String

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"monocdk.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`java
public java.lang.String getClusterEncryptionConfigKeyArn();
\`\`\`

- *Type:* java.lang.String

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Required</sup> <a name=\\"clusterEndpoint\\" id=\\"monocdk.aws_eks.Cluster.property.clusterEndpoint\\"></a>

\`\`\`java
public java.lang.String getClusterEndpoint();
\`\`\`

- *Type:* java.lang.String

The endpoint URL for the Cluster.

This is the URL inside the kubeconfig file to use with kubectl

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.Cluster.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

The Name of the created EKS Cluster.

---

##### \`clusterOpenIdConnectIssuer\`<sup>Required</sup> <a name=\\"clusterOpenIdConnectIssuer\\" id=\\"monocdk.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\"></a>

\`\`\`java
public java.lang.String getClusterOpenIdConnectIssuer();
\`\`\`

- *Type:* java.lang.String

If this cluster is kubectl-enabled, returns the OpenID Connect issuer.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`clusterOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"clusterOpenIdConnectIssuerUrl\\" id=\\"monocdk.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\"></a>

\`\`\`java
public java.lang.String getClusterOpenIdConnectIssuerUrl();
\`\`\`

- *Type:* java.lang.String

If this cluster is kubectl-enabled, returns the OpenID Connect issuer url.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`clusterSecurityGroup\`<sup>Required</sup> <a name=\\"clusterSecurityGroup\\" id=\\"monocdk.aws_eks.Cluster.property.clusterSecurityGroup\\"></a>

\`\`\`java
public ISecurityGroup getClusterSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`clusterSecurityGroupId\`<sup>Required</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"monocdk.aws_eks.Cluster.property.clusterSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getClusterSecurityGroupId();
\`\`\`

- *Type:* java.lang.String

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`connections\`<sup>Required</sup> <a name=\\"connections\\" id=\\"monocdk.aws_eks.Cluster.property.connections\\"></a>

\`\`\`java
public Connections getConnections();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.Connections

Manages connection rules (Security Group Rules) for the cluster.

---

##### \`openIdConnectProvider\`<sup>Required</sup> <a name=\\"openIdConnectProvider\\" id=\\"monocdk.aws_eks.Cluster.property.openIdConnectProvider\\"></a>

\`\`\`java
public IOpenIdConnectProvider getOpenIdConnectProvider();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IOpenIdConnectProvider

An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM.

A provider will only be defined if this property is accessed (lazy initialization).

---

##### \`prune\`<sup>Required</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.Cluster.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean

Determines if Kubernetes resources can be pruned automatically.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.Cluster.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

IAM role assumed by the EKS Control Plane.

---

##### \`vpc\`<sup>Required</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.Cluster.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`defaultCapacity\`<sup>Optional</sup> <a name=\\"defaultCapacity\\" id=\\"monocdk.aws_eks.Cluster.property.defaultCapacity\\"></a>

\`\`\`java
public AutoScalingGroup getDefaultCapacity();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.AutoScalingGroup

The auto scaling group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is not \`EC2\` or \`defaultCapacityType\` is \`EC2\` but default capacity is set to 0.

---

##### \`defaultNodegroup\`<sup>Optional</sup> <a name=\\"defaultNodegroup\\" id=\\"monocdk.aws_eks.Cluster.property.defaultNodegroup\\"></a>

\`\`\`java
public Nodegroup getDefaultNodegroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.Nodegroup

The node group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is \`EC2\` or \`defaultCapacityType\` is \`NODEGROUP\` but default capacity is set to 0.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion

The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI.

If undefined, a SAR app that contains this layer will be used.

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.core.Size

The amount of memory allocated to the kubectl provider's lambda function.

---

##### \`kubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnets\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`java
public java.util.List<ISubnet> getKubectlPrivateSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.ISubnet>
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

Subnets to host the \`kubectl\` compute resources.

---

##### \`kubectlRole\`<sup>Optional</sup> <a name=\\"kubectlRole\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlRole\\"></a>

\`\`\`java
public IRole getKubectlRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`kubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroup\\" id=\\"monocdk.aws_eks.Cluster.property.kubectlSecurityGroup\\"></a>

\`\`\`java
public ISecurityGroup getKubectlSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

A security group to use for \`kubectl\` execution.

---


### FargateCluster <a name=\\"FargateCluster\\" id=\\"monocdk.aws_eks.FargateCluster\\"></a>

Defines an EKS cluster that runs entirely on AWS Fargate.

The cluster is created with a default Fargate Profile that matches the \\"default\\" and \\"kube-system\\" namespaces. You can add additional profiles using \`addFargateProfile\`.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateCluster;

FargateCluster.Builder.create(Construct scope, java.lang.String id)
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
//  .defaultProfile(FargateProfileOptions)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.core.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#monocdk.aws_eks.FargateCluster.Initializer.parameter.defaultProfile\\">defaultProfile</a></code> | <code>software.amazon.awscdk.services.eks.FargateProfileOptions</code> | Fargate Profile to create along with the cluster. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.version\\"></a>

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.clusterName\\"></a>

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.outputClusterName\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.outputConfigCommand\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.role\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.securityGroup\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.vpc\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.vpcSubnets\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.clusterHandlerEnvironment\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.coreDnsComputeType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.endpointAccess\\"></a>

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.kubectlEnvironment\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.kubectlLayer\\"></a>

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.kubectlMemory\\"></a>

- *Type:* software.amazon.awscdk.core.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.mastersRole\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.outputMastersRoleArn\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.placeClusterHandlerInVpc\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.prune\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.secretsEncryptionKey\\"></a>

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultProfile\`<sup>Optional</sup> <a name=\\"defaultProfile\\" id=\\"monocdk.aws_eks.FargateCluster.Initializer.parameter.defaultProfile\\"></a>

- *Type:* software.amazon.awscdk.services.eks.FargateProfileOptions
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---





### FargateProfile <a name=\\"FargateProfile\\" id=\\"monocdk.aws_eks.FargateProfile\\"></a>

- *Implements:* software.amazon.awscdk.core.ITaggable

Fargate profiles allows an administrator to declare which pods run on Fargate.

This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and optional labels. You must define a namespace for every selector. The label field consists of multiple optional key-value pairs. Pods that match a selector (by matching a namespace for the selector and all of the labels specified in the selector) are scheduled on Fargate. If a namespace selector is defined without any labels, Amazon EKS will attempt to schedule all pods that run in that namespace onto Fargate using the profile. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is scheduled on Fargate.  If a pod matches multiple Fargate profiles, Amazon EKS picks one of the matches at random. In this case, you can specify which profile a pod should use by adding the following Kubernetes label to the pod specification: eks.amazonaws.com/fargate-profile: profile_name. However, the pod must still match a selector in that profile in order to be scheduled onto Fargate.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateProfile;

FargateProfile.Builder.create(Construct scope, java.lang.String id)
    .selectors(java.util.List<Selector>)
//  .fargateProfileName(java.lang.String)
//  .podExecutionRole(IRole)
//  .subnetSelection(SubnetSelection)
//  .vpc(IVpc)
    .cluster(Cluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.selectors\\">selectors</a></code> | <code>java.util.List<software.amazon.awscdk.services.eks.Selector></code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | The name of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.podExecutionRole\\">podExecutionRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.subnetSelection\\">subnetSelection</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.Cluster</code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.selectors\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.services.eks.Selector>

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.fargateProfileName\\"></a>

- *Type:* java.lang.String
- *Default:* generated

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Optional</sup> <a name=\\"podExecutionRole\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.podExecutionRole\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnetSelection\`<sup>Optional</sup> <a name=\\"subnetSelection\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.subnetSelection\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.vpc\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.FargateProfile.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.Cluster

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.property.fargateProfileArn\\">fargateProfileArn</a></code> | <code>java.lang.String</code> | The full Amazon Resource Name (ARN) of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | The name of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.property.podExecutionRole\\">podExecutionRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfile.property.tags\\">tags</a></code> | <code>software.amazon.awscdk.core.TagManager</code> | Resource tags. |

---

##### \`fargateProfileArn\`<sup>Required</sup> <a name=\\"fargateProfileArn\\" id=\\"monocdk.aws_eks.FargateProfile.property.fargateProfileArn\\"></a>

\`\`\`java
public java.lang.String getFargateProfileArn();
\`\`\`

- *Type:* java.lang.String

The full Amazon Resource Name (ARN) of the Fargate profile.

---

##### \`fargateProfileName\`<sup>Required</sup> <a name=\\"fargateProfileName\\" id=\\"monocdk.aws_eks.FargateProfile.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Required</sup> <a name=\\"podExecutionRole\\" id=\\"monocdk.aws_eks.FargateProfile.property.podExecutionRole\\"></a>

\`\`\`java
public IRole getPodExecutionRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.FargateProfile.property.tags\\"></a>

\`\`\`java
public TagManager getTags();
\`\`\`

- *Type:* software.amazon.awscdk.core.TagManager

Resource tags.

---


### HelmChart <a name=\\"HelmChart\\" id=\\"monocdk.aws_eks.HelmChart\\"></a>

Represents a helm chart within the Kubernetes system.

Applies/deletes the resources using \`kubectl\` in sync with the resource.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.HelmChart.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.HelmChart;

HelmChart.Builder.create(Construct scope, java.lang.String id)
    .chart(java.lang.String)
//  .createNamespace(java.lang.Boolean)
//  .namespace(java.lang.String)
//  .release(java.lang.String)
//  .repository(java.lang.String)
//  .timeout(Duration)
//  .values(java.util.Map<java.lang.String, java.lang.Object>)
//  .version(java.lang.String)
//  .wait(java.lang.Boolean)
    .cluster(ICluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.chart\\">chart</a></code> | <code>java.lang.String</code> | The name of the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.createNamespace\\">createNamespace</a></code> | <code>java.lang.Boolean</code> | create namespace if not exist. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.release\\">release</a></code> | <code>java.lang.String</code> | The name of the release. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.repository\\">repository</a></code> | <code>java.lang.String</code> | The repository which contains the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.core.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.values\\">values</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The values to be used by the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.version\\">version</a></code> | <code>java.lang.String</code> | The chart version to install. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.wait\\">wait</a></code> | <code>java.lang.Boolean</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.chart\\"></a>

- *Type:* java.lang.String

The name of the chart.

---

##### \`createNamespace\`<sup>Optional</sup> <a name=\\"createNamespace\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.createNamespace\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.namespace\\"></a>

- *Type:* java.lang.String
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.release\\"></a>

- *Type:* java.lang.String
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.repository\\"></a>

- *Type:* java.lang.String
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.timeout\\"></a>

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.values\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.version\\"></a>

- *Type:* java.lang.String
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.wait\\"></a>

- *Type:* java.lang.Boolean
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.HelmChart.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.HelmChart.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>java.lang.String</code> | The CloudFormation resource type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"monocdk.aws_eks.HelmChart.property.RESOURCE_TYPE\\"></a>

\`\`\`java
public java.lang.String getResourceType();
\`\`\`

- *Type:* java.lang.String

The CloudFormation resource type.

---

### KubernetesManifest <a name=\\"KubernetesManifest\\" id=\\"monocdk.aws_eks.KubernetesManifest\\"></a>

Represents a manifest within the Kubernetes system.

Alternatively, you can use \`cluster.addManifest(resource[, resource, ...])\` to define resources on this cluster.  Applies/deletes the manifest using \`kubectl\`.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesManifest;

KubernetesManifest.Builder.create(Construct scope, java.lang.String id)
//  .prune(java.lang.Boolean)
//  .skipValidation(java.lang.Boolean)
    .cluster(ICluster)
    .manifest(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
//  .overwrite(java.lang.Boolean)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.skipValidation\\">skipValidation</a></code> | <code>java.lang.Boolean</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.manifest\\">manifest</a></code> | <code>java.util.List<java.util.Map<java.lang.String, java.lang.Object>></code> | The manifest to apply. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.Initializer.parameter.overwrite\\">overwrite</a></code> | <code>java.lang.Boolean</code> | Overwrite any existing resources. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.prune\\"></a>

- *Type:* java.lang.Boolean
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skipValidation\`<sup>Optional</sup> <a name=\\"skipValidation\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.skipValidation\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.manifest\\"></a>

- *Type:* java.util.List<java.util.Map<java.lang.String, java.lang.Object>>

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`overwrite\`<sup>Optional</sup> <a name=\\"overwrite\\" id=\\"monocdk.aws_eks.KubernetesManifest.Initializer.parameter.overwrite\\"></a>

- *Type:* java.lang.Boolean
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>java.lang.String</code> | The CloudFormation reosurce type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"monocdk.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\"></a>

\`\`\`java
public java.lang.String getResourceType();
\`\`\`

- *Type:* java.lang.String

The CloudFormation reosurce type.

---

### KubernetesObjectValue <a name=\\"KubernetesObjectValue\\" id=\\"monocdk.aws_eks.KubernetesObjectValue\\"></a>

Represents a value of a specific object deployed in the cluster.

Use this to fetch any information available by the \`kubectl get\` command.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesObjectValue;

KubernetesObjectValue.Builder.create(Construct scope, java.lang.String id)
    .cluster(ICluster)
    .jsonPath(java.lang.String)
    .objectName(java.lang.String)
    .objectType(java.lang.String)
//  .objectNamespace(java.lang.String)
//  .timeout(Duration)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.jsonPath\\">jsonPath</a></code> | <code>java.lang.String</code> | JSONPath to the specific value. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.objectName\\">objectName</a></code> | <code>java.lang.String</code> | The name of the object to query. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.objectType\\">objectType</a></code> | <code>java.lang.String</code> | The object type to query. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.objectNamespace\\">objectNamespace</a></code> | <code>java.lang.String</code> | The namespace the object belongs to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.core.Duration</code> | Timeout for waiting on a value. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`jsonPath\`<sup>Required</sup> <a name=\\"jsonPath\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.jsonPath\\"></a>

- *Type:* java.lang.String

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`objectName\`<sup>Required</sup> <a name=\\"objectName\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.objectName\\"></a>

- *Type:* java.lang.String

The name of the object to query.

---

##### \`objectType\`<sup>Required</sup> <a name=\\"objectType\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.objectType\\"></a>

- *Type:* java.lang.String

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`objectNamespace\`<sup>Optional</sup> <a name=\\"objectNamespace\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.objectNamespace\\"></a>

- *Type:* java.lang.String
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.Initializer.parameter.timeout\\"></a>

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.property.value\\">value</a></code> | <code>java.lang.String</code> | The value as a string token. |

---

##### \`value\`<sup>Required</sup> <a name=\\"value\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.property.value\\"></a>

\`\`\`java
public java.lang.String getValue();
\`\`\`

- *Type:* java.lang.String

The value as a string token.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>java.lang.String</code> | The CloudFormation reosurce type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"monocdk.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\"></a>

\`\`\`java
public java.lang.String getResourceType();
\`\`\`

- *Type:* java.lang.String

The CloudFormation reosurce type.

---

### KubernetesPatch <a name=\\"KubernetesPatch\\" id=\\"monocdk.aws_eks.KubernetesPatch\\"></a>

A CloudFormation resource which applies/restores a JSON patch into a Kubernetes resource.

> [https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/](https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesPatch;

KubernetesPatch.Builder.create(Construct scope, java.lang.String id)
    .applyPatch(java.util.Map<java.lang.String, java.lang.Object>)
    .cluster(ICluster)
    .resourceName(java.lang.String)
    .restorePatch(java.util.Map<java.lang.String, java.lang.Object>)
//  .patchType(PatchType)
//  .resourceNamespace(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.applyPatch\\">applyPatch</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The cluster to apply the patch to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.resourceName\\">resourceName</a></code> | <code>java.lang.String</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.restorePatch\\">restorePatch</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.patchType\\">patchType</a></code> | <code>software.amazon.awscdk.services.eks.PatchType</code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatch.Initializer.parameter.resourceNamespace\\">resourceNamespace</a></code> | <code>java.lang.String</code> | The kubernetes API namespace. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`applyPatch\`<sup>Required</sup> <a name=\\"applyPatch\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.applyPatch\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`resourceName\`<sup>Required</sup> <a name=\\"resourceName\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.resourceName\\"></a>

- *Type:* java.lang.String

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`restorePatch\`<sup>Required</sup> <a name=\\"restorePatch\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.restorePatch\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`patchType\`<sup>Optional</sup> <a name=\\"patchType\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.patchType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.PatchType
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`resourceNamespace\`<sup>Optional</sup> <a name=\\"resourceNamespace\\" id=\\"monocdk.aws_eks.KubernetesPatch.Initializer.parameter.resourceNamespace\\"></a>

- *Type:* java.lang.String
- *Default:* \\"default\\"

The kubernetes API namespace.

---





### Nodegroup <a name=\\"Nodegroup\\" id=\\"monocdk.aws_eks.Nodegroup\\"></a>

- *Implements:* software.amazon.awscdk.services.eks.INodegroup

The Nodegroup resource class.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Nodegroup;

Nodegroup.Builder.create(Construct scope, java.lang.String id)
//  .amiType(NodegroupAmiType)
//  .capacityType(CapacityType)
//  .desiredSize(java.lang.Number)
//  .diskSize(java.lang.Number)
//  .forceUpdate(java.lang.Boolean)
//  .instanceType(InstanceType)
//  .instanceTypes(java.util.List<InstanceType>)
//  .labels(java.util.Map<java.lang.String, java.lang.String>)
//  .launchTemplateSpec(LaunchTemplateSpec)
//  .maxSize(java.lang.Number)
//  .minSize(java.lang.Number)
//  .nodegroupName(java.lang.String)
//  .nodeRole(IRole)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(NodegroupRemoteAccess)
//  .subnets(SubnetSelection)
//  .tags(java.util.Map<java.lang.String, java.lang.String>)
    .cluster(ICluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.amiType\\">amiType</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.capacityType\\">capacityType</a></code> | <code>software.amazon.awscdk.services.eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.desiredSize\\">desiredSize</a></code> | <code>java.lang.Number</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.forceUpdate\\">forceUpdate</a></code> | <code>java.lang.Boolean</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.instanceType\\">instanceType</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | The instance type to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.InstanceType></code> | The instance types to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.labels\\">labels</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.launchTemplateSpec\\">launchTemplateSpec</a></code> | <code>software.amazon.awscdk.services.eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.maxSize\\">maxSize</a></code> | <code>java.lang.Number</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.minSize\\">minSize</a></code> | <code>java.lang.Number</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Name of the Nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.nodeRole\\">nodeRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.subnets\\">subnets</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.tags\\">tags</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | Cluster resource. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.amiType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.capacityType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.desiredSize\\"></a>

- *Type:* java.lang.Number
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.diskSize\\"></a>

- *Type:* java.lang.Number
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`forceUpdate\`<sup>Optional</sup> <a name=\\"forceUpdate\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.forceUpdate\\"></a>

- *Type:* java.lang.Boolean
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### ~~\`instanceType\`~~<sup>Optional</sup> <a name=\\"instanceType\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.instanceType\\"></a>

- *Deprecated:* Use \`instanceTypes\` instead.

- *Type:* software.amazon.awscdk.services.ec2.InstanceType
- *Default:* t3.medium

The instance type to use for your node group.

Currently, you can specify a single instance type for a node group. The default value for this parameter is \`t3.medium\`. If you choose a GPU instance type, be sure to specify the \`AL2_x86_64_GPU\` with the amiType parameter.

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.instanceTypes\\"></a>

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.InstanceType>
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.labels\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launchTemplateSpec\`<sup>Optional</sup> <a name=\\"launchTemplateSpec\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.launchTemplateSpec\\"></a>

- *Type:* software.amazon.awscdk.services.eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.maxSize\\"></a>

- *Type:* java.lang.Number
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.minSize\\"></a>

- *Type:* java.lang.Number
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.nodegroupName\\"></a>

- *Type:* java.lang.String
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`nodeRole\`<sup>Optional</sup> <a name=\\"nodeRole\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.nodeRole\\"></a>

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.releaseVersion\\"></a>

- *Type:* java.lang.String
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.remoteAccess\\"></a>

- *Type:* software.amazon.awscdk.services.eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.subnets\\"></a>

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.tags\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.Nodegroup.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

Cluster resource.

---


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.fromNodegroupName\\">fromNodegroupName</a></code> | Import the Nodegroup from attributes. |

---

##### \`fromNodegroupName\` <a name=\\"fromNodegroupName\\" id=\\"monocdk.aws_eks.Nodegroup.fromNodegroupName\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Nodegroup;

Nodegroup.fromNodegroupName(Construct scope, java.lang.String id, java.lang.String nodegroupName)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.Nodegroup.fromNodegroupName.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.Nodegroup.fromNodegroupName.parameter.id\\"></a>

- *Type:* java.lang.String

---

###### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.Nodegroup.fromNodegroupName.parameter.nodegroupName\\"></a>

- *Type:* java.lang.String

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | the Amazon EKS cluster resource. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.property.nodegroupArn\\">nodegroupArn</a></code> | <code>java.lang.String</code> | ARN of the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Nodegroup name. |
| <code><a href=\\"#monocdk.aws_eks.Nodegroup.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | IAM role of the instance profile for the nodegroup. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.Nodegroup.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

the Amazon EKS cluster resource.

---

##### \`nodegroupArn\`<sup>Required</sup> <a name=\\"nodegroupArn\\" id=\\"monocdk.aws_eks.Nodegroup.property.nodegroupArn\\"></a>

\`\`\`java
public java.lang.String getNodegroupArn();
\`\`\`

- *Type:* java.lang.String

ARN of the nodegroup.

---

##### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.Nodegroup.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String

Nodegroup name.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.Nodegroup.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

IAM role of the instance profile for the nodegroup.

---


### OpenIdConnectProvider <a name=\\"OpenIdConnectProvider\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider\\"></a>

IAM OIDC identity providers are entities in IAM that describe an external identity provider (IdP) service that supports the OpenID Connect (OIDC) standard, such as Google or Salesforce.

You use an IAM OIDC identity provider when you want to establish trust between an OIDC-compatible IdP and your AWS account.  This implementation has default values for thumbprints and clientIds props that will be compatible with the eks cluster

> [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html)

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.OpenIdConnectProvider;

OpenIdConnectProvider.Builder.create(Construct scope, java.lang.String id)
    .url(java.lang.String)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | The definition scope. |
| <code><a href=\\"#monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | Construct ID. |
| <code><a href=\\"#monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.url\\">url</a></code> | <code>java.lang.String</code> | The URL of the identity provider. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

The definition scope.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

Construct ID.

---

##### \`url\`<sup>Required</sup> <a name=\\"url\\" id=\\"monocdk.aws_eks.OpenIdConnectProvider.Initializer.parameter.url\\"></a>

- *Type:* java.lang.String

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---





### ServiceAccount <a name=\\"ServiceAccount\\" id=\\"monocdk.aws_eks.ServiceAccount\\"></a>

- *Implements:* software.amazon.awscdk.services.iam.IPrincipal

Service Account.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ServiceAccount;

ServiceAccount.Builder.create(Construct scope, java.lang.String id)
//  .name(java.lang.String)
//  .namespace(java.lang.String)
    .cluster(ICluster)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.Initializer.parameter.scope\\">scope</a></code> | <code>software.constructs.Construct</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.Initializer.parameter.id\\">id</a></code> | <code>java.lang.String</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.Initializer.parameter.name\\">name</a></code> | <code>java.lang.String</code> | The name of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.Initializer.parameter.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The namespace of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.Initializer.parameter.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The cluster to apply the patch to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer.parameter.scope\\"></a>

- *Type:* software.constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer.parameter.id\\"></a>

- *Type:* java.lang.String

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer.parameter.name\\"></a>

- *Type:* java.lang.String
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer.parameter.namespace\\"></a>

- *Type:* java.lang.String
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.ServiceAccount.Initializer.parameter.cluster\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ICluster

The cluster to apply the patch to.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.addToPolicy\\">addToPolicy</a></code> | Add to the policy of this principal. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.addToPrincipalPolicy\\">addToPrincipalPolicy</a></code> | Add to the policy of this principal. |

---

##### ~~\`addToPolicy\`~~ <a name=\\"addToPolicy\\" id=\\"monocdk.aws_eks.ServiceAccount.addToPolicy\\"></a>

\`\`\`java
public addToPolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"monocdk.aws_eks.ServiceAccount.addToPolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---

##### \`addToPrincipalPolicy\` <a name=\\"addToPrincipalPolicy\\" id=\\"monocdk.aws_eks.ServiceAccount.addToPrincipalPolicy\\"></a>

\`\`\`java
public addToPrincipalPolicy(PolicyStatement statement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"monocdk.aws_eks.ServiceAccount.addToPrincipalPolicy.parameter.statement\\"></a>

- *Type:* software.amazon.awscdk.services.iam.PolicyStatement

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.assumeRoleAction\\">assumeRoleAction</a></code> | <code>java.lang.String</code> | When this Principal is used in an AssumeRole policy, the action to use. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.grantPrincipal\\">grantPrincipal</a></code> | <code>software.amazon.awscdk.services.iam.IPrincipal</code> | The principal to grant permissions to. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.policyFragment\\">policyFragment</a></code> | <code>software.amazon.awscdk.services.iam.PrincipalPolicyFragment</code> | Return the policy fragment that identifies this principal in a Policy. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The role which is linked to the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.serviceAccountName\\">serviceAccountName</a></code> | <code>java.lang.String</code> | The name of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccount.property.serviceAccountNamespace\\">serviceAccountNamespace</a></code> | <code>java.lang.String</code> | The namespace where the service account is located in. |

---

##### \`assumeRoleAction\`<sup>Required</sup> <a name=\\"assumeRoleAction\\" id=\\"monocdk.aws_eks.ServiceAccount.property.assumeRoleAction\\"></a>

\`\`\`java
public java.lang.String getAssumeRoleAction();
\`\`\`

- *Type:* java.lang.String

When this Principal is used in an AssumeRole policy, the action to use.

---

##### \`grantPrincipal\`<sup>Required</sup> <a name=\\"grantPrincipal\\" id=\\"monocdk.aws_eks.ServiceAccount.property.grantPrincipal\\"></a>

\`\`\`java
public IPrincipal getGrantPrincipal();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IPrincipal

The principal to grant permissions to.

---

##### \`policyFragment\`<sup>Required</sup> <a name=\\"policyFragment\\" id=\\"monocdk.aws_eks.ServiceAccount.property.policyFragment\\"></a>

\`\`\`java
public PrincipalPolicyFragment getPolicyFragment();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.PrincipalPolicyFragment

Return the policy fragment that identifies this principal in a Policy.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.ServiceAccount.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

The role which is linked to the service account.

---

##### \`serviceAccountName\`<sup>Required</sup> <a name=\\"serviceAccountName\\" id=\\"monocdk.aws_eks.ServiceAccount.property.serviceAccountName\\"></a>

\`\`\`java
public java.lang.String getServiceAccountName();
\`\`\`

- *Type:* java.lang.String

The name of the service account.

---

##### \`serviceAccountNamespace\`<sup>Required</sup> <a name=\\"serviceAccountNamespace\\" id=\\"monocdk.aws_eks.ServiceAccount.property.serviceAccountNamespace\\"></a>

\`\`\`java
public java.lang.String getServiceAccountNamespace();
\`\`\`

- *Type:* java.lang.String

The namespace where the service account is located in.

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### AutoScalingGroupCapacityOptions <a name=\\"AutoScalingGroupCapacityOptions\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions\\"></a>

Options for adding worker nodes.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AutoScalingGroupCapacityOptions;

AutoScalingGroupCapacityOptions.builder()
//  .allowAllOutbound(java.lang.Boolean)
//  .associatePublicIpAddress(java.lang.Boolean)
//  .autoScalingGroupName(java.lang.String)
//  .blockDevices(java.util.List<BlockDevice>)
//  .cooldown(Duration)
//  .desiredCapacity(java.lang.Number)
//  .groupMetrics(java.util.List<GroupMetrics>)
//  .healthCheck(HealthCheck)
//  .ignoreUnmodifiedSizeProperties(java.lang.Boolean)
//  .instanceMonitoring(Monitoring)
//  .keyName(java.lang.String)
//  .maxCapacity(java.lang.Number)
//  .maxInstanceLifetime(Duration)
//  .minCapacity(java.lang.Number)
//  .newInstancesProtectedFromScaleIn(java.lang.Boolean)
//  .notifications(java.util.List<NotificationConfiguration>)
//  .notificationsTopic(ITopic)
//  .replacingUpdateMinSuccessfulInstancesPercent(java.lang.Number)
//  .resourceSignalCount(java.lang.Number)
//  .resourceSignalTimeout(Duration)
//  .rollingUpdateConfiguration(RollingUpdateConfiguration)
//  .signals(Signals)
//  .spotPrice(java.lang.String)
//  .updatePolicy(UpdatePolicy)
//  .updateType(UpdateType)
//  .vpcSubnets(SubnetSelection)
    .instanceType(InstanceType)
//  .bootstrapEnabled(java.lang.Boolean)
//  .bootstrapOptions(BootstrapOptions)
//  .machineImageType(MachineImageType)
//  .mapRole(java.lang.Boolean)
//  .spotInterruptHandler(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\">allowAllOutbound</a></code> | <code>java.lang.Boolean</code> | Whether the instances can initiate connections to anywhere by default. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\">associatePublicIpAddress</a></code> | <code>java.lang.Boolean</code> | Whether instances in the Auto Scaling Group should have public IP addresses associated with them. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\">autoScalingGroupName</a></code> | <code>java.lang.String</code> | The name of the Auto Scaling group. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\">blockDevices</a></code> | <code>java.util.List<software.amazon.awscdk.services.autoscaling.BlockDevice></code> | Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\">cooldown</a></code> | <code>software.amazon.awscdk.core.Duration</code> | Default scaling cooldown for this AutoScalingGroup. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\">desiredCapacity</a></code> | <code>java.lang.Number</code> | Initial amount of instances in the fleet. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\">groupMetrics</a></code> | <code>java.util.List<software.amazon.awscdk.services.autoscaling.GroupMetrics></code> | Enable monitoring for group metrics, these metrics describe the group rather than any of its instances. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\">healthCheck</a></code> | <code>software.amazon.awscdk.services.autoscaling.HealthCheck</code> | Configuration for health checks. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\">ignoreUnmodifiedSizeProperties</a></code> | <code>java.lang.Boolean</code> | If the ASG has scheduled actions, don't reset unchanged group sizes. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\">instanceMonitoring</a></code> | <code>software.amazon.awscdk.services.autoscaling.Monitoring</code> | Controls whether instances in this group are launched with detailed or basic monitoring. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\">keyName</a></code> | <code>java.lang.String</code> | Name of SSH keypair to grant access to instances. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\">maxCapacity</a></code> | <code>java.lang.Number</code> | Maximum number of instances in the fleet. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\">maxInstanceLifetime</a></code> | <code>software.amazon.awscdk.core.Duration</code> | The maximum amount of time that an instance can be in service. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\">minCapacity</a></code> | <code>java.lang.Number</code> | Minimum number of instances in the fleet. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\">newInstancesProtectedFromScaleIn</a></code> | <code>java.lang.Boolean</code> | Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\">notifications</a></code> | <code>java.util.List<software.amazon.awscdk.services.autoscaling.NotificationConfiguration></code> | Configure autoscaling group to send notifications about fleet changes to an SNS topic(s). |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.notificationsTopic\\">notificationsTopic</a></code> | <code>software.amazon.awscdk.services.sns.ITopic</code> | SNS topic to send notifications about fleet changes. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.replacingUpdateMinSuccessfulInstancesPercent\\">replacingUpdateMinSuccessfulInstancesPercent</a></code> | <code>java.lang.Number</code> | Configuration for replacing updates. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.resourceSignalCount\\">resourceSignalCount</a></code> | <code>java.lang.Number</code> | How many ResourceSignal calls CloudFormation expects before the resource is considered created. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.resourceSignalTimeout\\">resourceSignalTimeout</a></code> | <code>software.amazon.awscdk.core.Duration</code> | The length of time to wait for the resourceSignalCount. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.rollingUpdateConfiguration\\">rollingUpdateConfiguration</a></code> | <code>software.amazon.awscdk.services.autoscaling.RollingUpdateConfiguration</code> | Configuration for rolling updates. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\">signals</a></code> | <code>software.amazon.awscdk.services.autoscaling.Signals</code> | Configure waiting for signals during deployment. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\">spotPrice</a></code> | <code>java.lang.String</code> | The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\">updatePolicy</a></code> | <code>software.amazon.awscdk.services.autoscaling.UpdatePolicy</code> | What to do when an AutoScalingGroup's instance configuration is changed. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.updateType\\">updateType</a></code> | <code>software.amazon.awscdk.services.autoscaling.UpdateType</code> | What to do when an AutoScalingGroup's instance configuration is changed. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | Where to place instances within the VPC. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\">instanceType</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | Instance type of the instances to start. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\">bootstrapEnabled</a></code> | <code>java.lang.Boolean</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\">bootstrapOptions</a></code> | <code>software.amazon.awscdk.services.eks.BootstrapOptions</code> | EKS node bootstrapping options. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\">machineImageType</a></code> | <code>software.amazon.awscdk.services.eks.MachineImageType</code> | Machine image type. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\">mapRole</a></code> | <code>java.lang.Boolean</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\">spotInterruptHandler</a></code> | <code>java.lang.Boolean</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`allowAllOutbound\`<sup>Optional</sup> <a name=\\"allowAllOutbound\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\"></a>

\`\`\`java
public java.lang.Boolean getAllowAllOutbound();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Whether the instances can initiate connections to anywhere by default.

---

##### \`associatePublicIpAddress\`<sup>Optional</sup> <a name=\\"associatePublicIpAddress\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\"></a>

\`\`\`java
public java.lang.Boolean getAssociatePublicIpAddress();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* Use subnet setting.

Whether instances in the Auto Scaling Group should have public IP addresses associated with them.

---

##### \`autoScalingGroupName\`<sup>Optional</sup> <a name=\\"autoScalingGroupName\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\"></a>

\`\`\`java
public java.lang.String getAutoScalingGroupName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Auto generated by CloudFormation

The name of the Auto Scaling group.

This name must be unique per Region per account.

---

##### \`blockDevices\`<sup>Optional</sup> <a name=\\"blockDevices\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\"></a>

\`\`\`java
public java.util.List<BlockDevice> getBlockDevices();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.autoscaling.BlockDevice>
- *Default:* Uses the block device mapping of the AMI

Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.

Each instance that is launched has an associated root device volume, either an Amazon EBS volume or an instance store volume. You can use block device mappings to specify additional EBS volumes or instance store volumes to attach to an instance when it is launched.

> [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)

---

##### \`cooldown\`<sup>Optional</sup> <a name=\\"cooldown\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\"></a>

\`\`\`java
public Duration getCooldown();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* Duration.minutes(5)

Default scaling cooldown for this AutoScalingGroup.

---

##### \`desiredCapacity\`<sup>Optional</sup> <a name=\\"desiredCapacity\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\"></a>

\`\`\`java
public java.lang.Number getDesiredCapacity();
\`\`\`

- *Type:* java.lang.Number
- *Default:* minCapacity, and leave unchanged during deployment

Initial amount of instances in the fleet.

If this is set to a number, every deployment will reset the amount of instances to this number. It is recommended to leave this value blank.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity)

---

##### \`groupMetrics\`<sup>Optional</sup> <a name=\\"groupMetrics\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\"></a>

\`\`\`java
public java.util.List<GroupMetrics> getGroupMetrics();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.autoscaling.GroupMetrics>
- *Default:* no group metrics will be reported

Enable monitoring for group metrics, these metrics describe the group rather than any of its instances.

To report all group metrics use \`GroupMetrics.all()\` Group metrics are reported in a granularity of 1 minute at no additional charge.

---

##### \`healthCheck\`<sup>Optional</sup> <a name=\\"healthCheck\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\"></a>

\`\`\`java
public HealthCheck getHealthCheck();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.HealthCheck
- *Default:* HealthCheck.ec2 with no grace period

Configuration for health checks.

---

##### \`ignoreUnmodifiedSizeProperties\`<sup>Optional</sup> <a name=\\"ignoreUnmodifiedSizeProperties\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\"></a>

\`\`\`java
public java.lang.Boolean getIgnoreUnmodifiedSizeProperties();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

If the ASG has scheduled actions, don't reset unchanged group sizes.

Only used if the ASG has scheduled actions (which may scale your ASG up or down regardless of cdk deployments). If true, the size of the group will only be reset if it has been changed in the CDK app. If false, the sizes will always be changed back to what they were in the CDK app on deployment.

---

##### \`instanceMonitoring\`<sup>Optional</sup> <a name=\\"instanceMonitoring\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\"></a>

\`\`\`java
public Monitoring getInstanceMonitoring();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.Monitoring
- *Default:* Monitoring.DETAILED

Controls whether instances in this group are launched with detailed or basic monitoring.

When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.

> [https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics](https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics)

---

##### \`keyName\`<sup>Optional</sup> <a name=\\"keyName\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\"></a>

\`\`\`java
public java.lang.String getKeyName();
\`\`\`

- *Type:* java.lang.String
- *Default:* No SSH access will be possible.

Name of SSH keypair to grant access to instances.

---

##### \`maxCapacity\`<sup>Optional</sup> <a name=\\"maxCapacity\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\"></a>

\`\`\`java
public java.lang.Number getMaxCapacity();
\`\`\`

- *Type:* java.lang.Number
- *Default:* desiredCapacity

Maximum number of instances in the fleet.

---

##### \`maxInstanceLifetime\`<sup>Optional</sup> <a name=\\"maxInstanceLifetime\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\"></a>

\`\`\`java
public Duration getMaxInstanceLifetime();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* none

The maximum amount of time that an instance can be in service.

The maximum duration applies to all current and future instances in the group. As an instance approaches its maximum duration, it is terminated and replaced, and cannot be used again.  You must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, leave this property undefined.

> [https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)

---

##### \`minCapacity\`<sup>Optional</sup> <a name=\\"minCapacity\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\"></a>

\`\`\`java
public java.lang.Number getMinCapacity();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 1

Minimum number of instances in the fleet.

---

##### \`newInstancesProtectedFromScaleIn\`<sup>Optional</sup> <a name=\\"newInstancesProtectedFromScaleIn\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\"></a>

\`\`\`java
public java.lang.Boolean getNewInstancesProtectedFromScaleIn();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.

By default, Auto Scaling can terminate an instance at any time after launch when scaling in an Auto Scaling Group, subject to the group's termination policy. However, you may wish to protect newly-launched instances from being scaled in if they are going to run critical applications that should not be prematurely terminated.  This flag must be enabled if the Auto Scaling Group will be associated with an ECS Capacity Provider with managed termination protection.

---

##### \`notifications\`<sup>Optional</sup> <a name=\\"notifications\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\"></a>

\`\`\`java
public java.util.List<NotificationConfiguration> getNotifications();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.autoscaling.NotificationConfiguration>
- *Default:* No fleet change notifications will be sent.

Configure autoscaling group to send notifications about fleet changes to an SNS topic(s).

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations)

---

##### ~~\`notificationsTopic\`~~<sup>Optional</sup> <a name=\\"notificationsTopic\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.notificationsTopic\\"></a>

- *Deprecated:* use \`notifications\`

\`\`\`java
public ITopic getNotificationsTopic();
\`\`\`

- *Type:* software.amazon.awscdk.services.sns.ITopic
- *Default:* No fleet change notifications will be sent.

SNS topic to send notifications about fleet changes.

---

##### ~~\`replacingUpdateMinSuccessfulInstancesPercent\`~~<sup>Optional</sup> <a name=\\"replacingUpdateMinSuccessfulInstancesPercent\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.replacingUpdateMinSuccessfulInstancesPercent\\"></a>

- *Deprecated:* Use \`signals\` instead

\`\`\`java
public java.lang.Number getReplacingUpdateMinSuccessfulInstancesPercent();
\`\`\`

- *Type:* java.lang.Number
- *Default:* minSuccessfulInstancesPercent

Configuration for replacing updates.

Only used if updateType == UpdateType.ReplacingUpdate. Specifies how many instances must signal success for the update to succeed.

---

##### ~~\`resourceSignalCount\`~~<sup>Optional</sup> <a name=\\"resourceSignalCount\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.resourceSignalCount\\"></a>

- *Deprecated:* Use \`signals\` instead.

\`\`\`java
public java.lang.Number getResourceSignalCount();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 1 if resourceSignalTimeout is set, 0 otherwise

How many ResourceSignal calls CloudFormation expects before the resource is considered created.

---

##### ~~\`resourceSignalTimeout\`~~<sup>Optional</sup> <a name=\\"resourceSignalTimeout\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.resourceSignalTimeout\\"></a>

- *Deprecated:* Use \`signals\` instead.

\`\`\`java
public Duration getResourceSignalTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* Duration.minutes(5) if resourceSignalCount is set, N/A otherwise

The length of time to wait for the resourceSignalCount.

The maximum value is 43200 (12 hours).

---

##### ~~\`rollingUpdateConfiguration\`~~<sup>Optional</sup> <a name=\\"rollingUpdateConfiguration\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.rollingUpdateConfiguration\\"></a>

- *Deprecated:* Use \`updatePolicy\` instead

\`\`\`java
public RollingUpdateConfiguration getRollingUpdateConfiguration();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.RollingUpdateConfiguration
- *Default:* RollingUpdateConfiguration with defaults.

Configuration for rolling updates.

Only used if updateType == UpdateType.RollingUpdate.

---

##### \`signals\`<sup>Optional</sup> <a name=\\"signals\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\"></a>

\`\`\`java
public Signals getSignals();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.Signals
- *Default:* Do not wait for signals

Configure waiting for signals during deployment.

Use this to pause the CloudFormation deployment to wait for the instances in the AutoScalingGroup to report successful startup during creation and updates. The UserData script needs to invoke \`cfn-signal\` with a success or failure code after it is done setting up the instance.  Without waiting for signals, the CloudFormation deployment will proceed as soon as the AutoScalingGroup has been created or updated but before the instances in the group have been started.  For example, to have instances wait for an Elastic Load Balancing health check before they signal success, add a health-check verification by using the cfn-init helper script. For an example, see the verify_instance_health command in the Auto Scaling rolling updates sample template:  https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml

---

##### \`spotPrice\`<sup>Optional</sup> <a name=\\"spotPrice\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\"></a>

\`\`\`java
public java.lang.String getSpotPrice();
\`\`\`

- *Type:* java.lang.String
- *Default:* none

The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request.

Spot Instances are launched when the price you specify exceeds the current Spot market price.

---

##### \`updatePolicy\`<sup>Optional</sup> <a name=\\"updatePolicy\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\"></a>

\`\`\`java
public UpdatePolicy getUpdatePolicy();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.UpdatePolicy
- *Default:* \`UpdatePolicy.rollingUpdate()\` if using \`init\`, \`UpdatePolicy.none()\` otherwise

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

##### ~~\`updateType\`~~<sup>Optional</sup> <a name=\\"updateType\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.updateType\\"></a>

- *Deprecated:* Use \`updatePolicy\` instead

\`\`\`java
public UpdateType getUpdateType();
\`\`\`

- *Type:* software.amazon.awscdk.services.autoscaling.UpdateType
- *Default:* UpdateType.None

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\"></a>

\`\`\`java
public SubnetSelection getVpcSubnets();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* All Private subnets.

Where to place instances within the VPC.

---

##### \`instanceType\`<sup>Required</sup> <a name=\\"instanceType\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\"></a>

\`\`\`java
public InstanceType getInstanceType();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.InstanceType

Instance type of the instances to start.

---

##### \`bootstrapEnabled\`<sup>Optional</sup> <a name=\\"bootstrapEnabled\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\"></a>

\`\`\`java
public java.lang.Boolean getBootstrapEnabled();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`bootstrapOptions\`<sup>Optional</sup> <a name=\\"bootstrapOptions\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\"></a>

\`\`\`java
public BootstrapOptions getBootstrapOptions();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.BootstrapOptions
- *Default:* none

EKS node bootstrapping options.

---

##### \`machineImageType\`<sup>Optional</sup> <a name=\\"machineImageType\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\"></a>

\`\`\`java
public MachineImageType getMachineImageType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.MachineImageType
- *Default:* MachineImageType.AMAZON_LINUX_2

Machine image type.

---

##### \`mapRole\`<sup>Optional</sup> <a name=\\"mapRole\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\"></a>

\`\`\`java
public java.lang.Boolean getMapRole();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`spotInterruptHandler\`<sup>Optional</sup> <a name=\\"spotInterruptHandler\\" id=\\"monocdk.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\"></a>

\`\`\`java
public java.lang.Boolean getSpotInterruptHandler();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is used.

---

### AutoScalingGroupOptions <a name=\\"AutoScalingGroupOptions\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions\\"></a>

Options for adding an AutoScalingGroup as capacity.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AutoScalingGroupOptions;

AutoScalingGroupOptions.builder()
//  .bootstrapEnabled(java.lang.Boolean)
//  .bootstrapOptions(BootstrapOptions)
//  .machineImageType(MachineImageType)
//  .mapRole(java.lang.Boolean)
//  .spotInterruptHandler(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\">bootstrapEnabled</a></code> | <code>java.lang.Boolean</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\">bootstrapOptions</a></code> | <code>software.amazon.awscdk.services.eks.BootstrapOptions</code> | Allows options for node bootstrapping through EC2 user data. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.machineImageType\\">machineImageType</a></code> | <code>software.amazon.awscdk.services.eks.MachineImageType</code> | Allow options to specify different machine image type. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.mapRole\\">mapRole</a></code> | <code>java.lang.Boolean</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#monocdk.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\">spotInterruptHandler</a></code> | <code>java.lang.Boolean</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`bootstrapEnabled\`<sup>Optional</sup> <a name=\\"bootstrapEnabled\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\"></a>

\`\`\`java
public java.lang.Boolean getBootstrapEnabled();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`bootstrapOptions\`<sup>Optional</sup> <a name=\\"bootstrapOptions\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\"></a>

\`\`\`java
public BootstrapOptions getBootstrapOptions();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.BootstrapOptions
- *Default:* default options

Allows options for node bootstrapping through EC2 user data.

---

##### \`machineImageType\`<sup>Optional</sup> <a name=\\"machineImageType\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.machineImageType\\"></a>

\`\`\`java
public MachineImageType getMachineImageType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.MachineImageType
- *Default:* MachineImageType.AMAZON_LINUX_2

Allow options to specify different machine image type.

---

##### \`mapRole\`<sup>Optional</sup> <a name=\\"mapRole\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.mapRole\\"></a>

\`\`\`java
public java.lang.Boolean getMapRole();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`spotInterruptHandler\`<sup>Optional</sup> <a name=\\"spotInterruptHandler\\" id=\\"monocdk.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\"></a>

\`\`\`java
public java.lang.Boolean getSpotInterruptHandler();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is configured on the auto-scaling group.

---

### AwsAuthMapping <a name=\\"AwsAuthMapping\\" id=\\"monocdk.aws_eks.AwsAuthMapping\\"></a>

AwsAuth mapping.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.AwsAuthMapping.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AwsAuthMapping;

AwsAuthMapping.builder()
    .groups(java.util.List<java.lang.String>)
//  .username(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AwsAuthMapping.property.groups\\">groups</a></code> | <code>java.util.List<java.lang.String></code> | A list of groups within Kubernetes to which the role is mapped. |
| <code><a href=\\"#monocdk.aws_eks.AwsAuthMapping.property.username\\">username</a></code> | <code>java.lang.String</code> | The user name within Kubernetes to map to the IAM role. |

---

##### \`groups\`<sup>Required</sup> <a name=\\"groups\\" id=\\"monocdk.aws_eks.AwsAuthMapping.property.groups\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getGroups();
\`\`\`

- *Type:* java.util.List<java.lang.String>

A list of groups within Kubernetes to which the role is mapped.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"monocdk.aws_eks.AwsAuthMapping.property.username\\"></a>

\`\`\`java
public java.lang.String getUsername();
\`\`\`

- *Type:* java.lang.String
- *Default:* By default, the user name is the ARN of the IAM role.

The user name within Kubernetes to map to the IAM role.

---

### AwsAuthProps <a name=\\"AwsAuthProps\\" id=\\"monocdk.aws_eks.AwsAuthProps\\"></a>

Configuration props for the AwsAuth construct.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.AwsAuthProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.AwsAuthProps;

AwsAuthProps.builder()
    .cluster(Cluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.AwsAuthProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.Cluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.AwsAuthProps.property.cluster\\"></a>

\`\`\`java
public Cluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.Cluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### BootstrapOptions <a name=\\"BootstrapOptions\\" id=\\"monocdk.aws_eks.BootstrapOptions\\"></a>

EKS node bootstrapping options.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.BootstrapOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.BootstrapOptions;

BootstrapOptions.builder()
//  .additionalArgs(java.lang.String)
//  .awsApiRetryAttempts(java.lang.Number)
//  .dnsClusterIp(java.lang.String)
//  .dockerConfigJson(java.lang.String)
//  .enableDockerBridge(java.lang.Boolean)
//  .kubeletExtraArgs(java.lang.String)
//  .useMaxPods(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.additionalArgs\\">additionalArgs</a></code> | <code>java.lang.String</code> | Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\">awsApiRetryAttempts</a></code> | <code>java.lang.Number</code> | Number of retry attempts for AWS API call (DescribeCluster). |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.dnsClusterIp\\">dnsClusterIp</a></code> | <code>java.lang.String</code> | Overrides the IP address to use for DNS queries within the cluster. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.dockerConfigJson\\">dockerConfigJson</a></code> | <code>java.lang.String</code> | The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.enableDockerBridge\\">enableDockerBridge</a></code> | <code>java.lang.Boolean</code> | Restores the docker default bridge network. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\">kubeletExtraArgs</a></code> | <code>java.lang.String</code> | Extra arguments to add to the kubelet. |
| <code><a href=\\"#monocdk.aws_eks.BootstrapOptions.property.useMaxPods\\">useMaxPods</a></code> | <code>java.lang.Boolean</code> | Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance. |

---

##### \`additionalArgs\`<sup>Optional</sup> <a name=\\"additionalArgs\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.additionalArgs\\"></a>

\`\`\`java
public java.lang.String getAdditionalArgs();
\`\`\`

- *Type:* java.lang.String
- *Default:* none

Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command.

> [https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh)

---

##### \`awsApiRetryAttempts\`<sup>Optional</sup> <a name=\\"awsApiRetryAttempts\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\"></a>

\`\`\`java
public java.lang.Number getAwsApiRetryAttempts();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 3

Number of retry attempts for AWS API call (DescribeCluster).

---

##### \`dnsClusterIp\`<sup>Optional</sup> <a name=\\"dnsClusterIp\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.dnsClusterIp\\"></a>

\`\`\`java
public java.lang.String getDnsClusterIp();
\`\`\`

- *Type:* java.lang.String
- *Default:* 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface.

Overrides the IP address to use for DNS queries within the cluster.

---

##### \`dockerConfigJson\`<sup>Optional</sup> <a name=\\"dockerConfigJson\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.dockerConfigJson\\"></a>

\`\`\`java
public java.lang.String getDockerConfigJson();
\`\`\`

- *Type:* java.lang.String
- *Default:* none

The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI.

---

##### \`enableDockerBridge\`<sup>Optional</sup> <a name=\\"enableDockerBridge\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.enableDockerBridge\\"></a>

\`\`\`java
public java.lang.Boolean getEnableDockerBridge();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Restores the docker default bridge network.

---

##### \`kubeletExtraArgs\`<sup>Optional</sup> <a name=\\"kubeletExtraArgs\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\"></a>

\`\`\`java
public java.lang.String getKubeletExtraArgs();
\`\`\`

- *Type:* java.lang.String
- *Default:* none

Extra arguments to add to the kubelet.

Useful for adding labels or taints.

---

##### \`useMaxPods\`<sup>Optional</sup> <a name=\\"useMaxPods\\" id=\\"monocdk.aws_eks.BootstrapOptions.property.useMaxPods\\"></a>

\`\`\`java
public java.lang.Boolean getUseMaxPods();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance.

---

### CfnAddonProps <a name=\\"CfnAddonProps\\" id=\\"monocdk.aws_eks.CfnAddonProps\\"></a>

Properties for defining a \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnAddonProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnAddonProps;

CfnAddonProps.builder()
    .addonName(java.lang.String)
    .clusterName(java.lang.String)
//  .addonVersion(java.lang.String)
//  .resolveConflicts(java.lang.String)
//  .serviceAccountRoleArn(java.lang.String)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.addonName\\">addonName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.addonVersion\\">addonVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.resolveConflicts\\">resolveConflicts</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\">serviceAccountRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnAddonProps.property.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`addonName\`<sup>Required</sup> <a name=\\"addonName\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.addonName\\"></a>

\`\`\`java
public java.lang.String getAddonName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addonVersion\`<sup>Optional</sup> <a name=\\"addonVersion\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.addonVersion\\"></a>

\`\`\`java
public java.lang.String getAddonVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolveConflicts\`<sup>Optional</sup> <a name=\\"resolveConflicts\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.resolveConflicts\\"></a>

\`\`\`java
public java.lang.String getResolveConflicts();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`serviceAccountRoleArn\`<sup>Optional</sup> <a name=\\"serviceAccountRoleArn\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\"></a>

\`\`\`java
public java.lang.String getServiceAccountRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnAddonProps.property.tags\\"></a>

\`\`\`java
public java.util.List<CfnTag> getTags();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

### CfnClusterProps <a name=\\"CfnClusterProps\\" id=\\"monocdk.aws_eks.CfnClusterProps\\"></a>

Properties for defining a \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnClusterProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnClusterProps;

CfnClusterProps.builder()
    .resourcesVpcConfig(ResourcesVpcConfigProperty)
    .resourcesVpcConfig(IResolvable)
    .roleArn(java.lang.String)
//  .encryptionConfig(IResolvable)
//  .encryptionConfig(java.util.List<EncryptionConfigProperty)
//  .encryptionConfig(IResolvable>)
//  .kubernetesNetworkConfig(KubernetesNetworkConfigProperty)
//  .kubernetesNetworkConfig(IResolvable)
//  .name(java.lang.String)
//  .version(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\">resourcesVpcConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.roleArn\\">roleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.encryptionConfig\\">encryptionConfig</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\">kubernetesNetworkConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.name\\">name</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnClusterProps.property.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`resourcesVpcConfig\`<sup>Required</sup> <a name=\\"resourcesVpcConfig\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\"></a>

\`\`\`java
public java.lang.Object getResourcesVpcConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`roleArn\`<sup>Required</sup> <a name=\\"roleArn\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.roleArn\\"></a>

\`\`\`java
public java.lang.String getRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryptionConfig\`<sup>Optional</sup> <a name=\\"encryptionConfig\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.encryptionConfig\\"></a>

\`\`\`java
public java.lang.Object getEncryptionConfig();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"kubernetesNetworkConfig\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\"></a>

\`\`\`java
public java.lang.Object getKubernetesNetworkConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.CfnClusterProps.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

### CfnFargateProfileProps <a name=\\"CfnFargateProfileProps\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps\\"></a>

Properties for defining a \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnFargateProfileProps;

CfnFargateProfileProps.builder()
    .clusterName(java.lang.String)
    .podExecutionRoleArn(java.lang.String)
    .selectors(IResolvable)
    .selectors(java.util.List<SelectorProperty)
    .selectors(IResolvable>)
//  .fargateProfileName(java.lang.String)
//  .subnets(java.util.List<java.lang.String>)
//  .tags(java.util.List<CfnTag>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\">podExecutionRoleArn</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.selectors\\">selectors</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfileProps.property.tags\\">tags</a></code> | <code>java.util.List<software.amazon.awscdk.core.CfnTag></code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`podExecutionRoleArn\`<sup>Required</sup> <a name=\\"podExecutionRoleArn\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\"></a>

\`\`\`java
public java.lang.String getPodExecutionRoleArn();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.selectors\\"></a>

\`\`\`java
public java.lang.Object getSelectors();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.subnets\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnets();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnFargateProfileProps.property.tags\\"></a>

\`\`\`java
public java.util.List<CfnTag> getTags();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.core.CfnTag>

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

### CfnNodegroupProps <a name=\\"CfnNodegroupProps\\" id=\\"monocdk.aws_eks.CfnNodegroupProps\\"></a>

Properties for defining a \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroupProps;

CfnNodegroupProps.builder()
    .clusterName(java.lang.String)
    .nodeRole(java.lang.String)
    .subnets(java.util.List<java.lang.String>)
//  .amiType(java.lang.String)
//  .capacityType(java.lang.String)
//  .diskSize(java.lang.Number)
//  .forceUpdateEnabled(java.lang.Boolean)
//  .forceUpdateEnabled(IResolvable)
//  .instanceTypes(java.util.List<java.lang.String>)
//  .labels(java.lang.Object)
//  .launchTemplate(LaunchTemplateSpecificationProperty)
//  .launchTemplate(IResolvable)
//  .nodegroupName(java.lang.String)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(RemoteAccessProperty)
//  .remoteAccess(IResolvable)
//  .scalingConfig(ScalingConfigProperty)
//  .scalingConfig(IResolvable)
//  .tags(java.lang.Object)
//  .taints(IResolvable)
//  .taints(java.util.List<TaintProperty)
//  .taints(IResolvable>)
//  .version(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.nodeRole\\">nodeRole</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.subnets\\">subnets</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.amiType\\">amiType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.capacityType\\">capacityType</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\">forceUpdateEnabled</a></code> | <code>java.lang.Boolean OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<java.lang.String></code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.labels\\">labels</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.launchTemplate\\">launchTemplate</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.scalingConfig\\">scalingConfig</a></code> | <code>software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.core.IResolvable</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.tags\\">tags</a></code> | <code>java.lang.Object</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.taints\\">taints</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.core.IResolvable></code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroupProps.property.version\\">version</a></code> | <code>java.lang.String</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`nodeRole\`<sup>Required</sup> <a name=\\"nodeRole\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.nodeRole\\"></a>

\`\`\`java
public java.lang.String getNodeRole();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.subnets\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnets();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.amiType\\"></a>

\`\`\`java
public java.lang.String getAmiType();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.capacityType\\"></a>

\`\`\`java
public java.lang.String getCapacityType();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.diskSize\\"></a>

\`\`\`java
public java.lang.Number getDiskSize();
\`\`\`

- *Type:* java.lang.Number

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`forceUpdateEnabled\`<sup>Optional</sup> <a name=\\"forceUpdateEnabled\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\"></a>

\`\`\`java
public java.lang.Object getForceUpdateEnabled();
\`\`\`

- *Type:* java.lang.Boolean OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.instanceTypes\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getInstanceTypes();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.labels\\"></a>

\`\`\`java
public java.lang.Object getLabels();
\`\`\`

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`launchTemplate\`<sup>Optional</sup> <a name=\\"launchTemplate\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.launchTemplate\\"></a>

\`\`\`java
public java.lang.Object getLaunchTemplate();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.releaseVersion\\"></a>

\`\`\`java
public java.lang.String getReleaseVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.remoteAccess\\"></a>

\`\`\`java
public java.lang.Object getRemoteAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scalingConfig\`<sup>Optional</sup> <a name=\\"scalingConfig\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.scalingConfig\\"></a>

\`\`\`java
public java.lang.Object getScalingConfig();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty OR software.amazon.awscdk.core.IResolvable

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.tags\\"></a>

\`\`\`java
public java.lang.Object getTags();
\`\`\`

- *Type:* java.lang.Object

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.taints\\"></a>

\`\`\`java
public java.lang.Object getTaints();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty OR software.amazon.awscdk.core.IResolvable>

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.CfnNodegroupProps.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

### ClusterAttributes <a name=\\"ClusterAttributes\\" id=\\"monocdk.aws_eks.ClusterAttributes\\"></a>

Attributes for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ClusterAttributes.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ClusterAttributes;

ClusterAttributes.builder()
    .clusterName(java.lang.String)
//  .clusterCertificateAuthorityData(java.lang.String)
//  .clusterEncryptionConfigKeyArn(java.lang.String)
//  .clusterEndpoint(java.lang.String)
//  .clusterSecurityGroupId(java.lang.String)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .kubectlPrivateSubnetIds(java.util.List<java.lang.String>)
//  .kubectlRoleArn(java.lang.String)
//  .kubectlSecurityGroupId(java.lang.String)
//  .openIdConnectProvider(IOpenIdConnectProvider)
//  .prune(java.lang.Boolean)
//  .securityGroupIds(java.util.List<java.lang.String>)
//  .vpc(IVpc)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | The physical name of the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>java.lang.String</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>java.lang.String</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>java.lang.String</code> | The API Server endpoint URL. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>java.lang.String</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables to use when running \`kubectl\` against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.core.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\">kubectlPrivateSubnetIds</a></code> | <code>java.util.List<java.lang.String></code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlRoleArn\\">kubectlRoleArn</a></code> | <code>java.lang.String</code> | An IAM role with cluster administrator and \\"system:masters\\" permissions. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\">kubectlSecurityGroupId</a></code> | <code>java.lang.String</code> | A security group to use for \`kubectl\` execution. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>software.amazon.awscdk.services.iam.IOpenIdConnectProvider</code> | An Open ID Connect provider for this cluster that can be used to configure service accounts. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.securityGroupIds\\">securityGroupIds</a></code> | <code>java.util.List<java.lang.String></code> | Additional security groups associated with this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterAttributes.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which this Cluster was created. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

The physical name of the Cluster.

---

##### \`clusterCertificateAuthorityData\`<sup>Optional</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\"></a>

\`\`\`java
public java.lang.String getClusterCertificateAuthorityData();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified \`cluster.clusterCertificateAuthorityData\` will throw an error

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Optional</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`java
public java.lang.String getClusterEncryptionConfigKeyArn();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified \`cluster.clusterEncryptionConfigKeyArn\` will throw an error

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Optional</sup> <a name=\\"clusterEndpoint\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterEndpoint\\"></a>

\`\`\`java
public java.lang.String getClusterEndpoint();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified \`cluster.clusterEndpoint\` will throw an error.

The API Server endpoint URL.

---

##### \`clusterSecurityGroupId\`<sup>Optional</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getClusterSecurityGroupId();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified \`cluster.clusterSecurityGroupId\` will throw an error

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* no additional variables

Environment variables to use when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* a layer bundled with this module.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

This layer is used by the kubectl handler to apply manifests and install helm charts.  The handler expects the layer to include the following executables:  \`\`\` helm/helm kubectl/kubectl awscli/aws \`\`\`

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.core.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`kubectlPrivateSubnetIds\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnetIds\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getKubectlPrivateSubnetIds();
\`\`\`

- *Type:* java.util.List<java.lang.String>
- *Default:* k8s endpoint is expected to be accessible publicly

Subnets to host the \`kubectl\` compute resources.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`kubectlRoleArn\`<sup>Optional</sup> <a name=\\"kubectlRoleArn\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlRoleArn\\"></a>

\`\`\`java
public java.lang.String getKubectlRoleArn();
\`\`\`

- *Type:* java.lang.String
- *Default:* if not specified, it not be possible to issue \`kubectl\` commands against an imported cluster.

An IAM role with cluster administrator and \\"system:masters\\" permissions.

---

##### \`kubectlSecurityGroupId\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroupId\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getKubectlSecurityGroupId();
\`\`\`

- *Type:* java.lang.String
- *Default:* k8s endpoint is expected to be accessible publicly

A security group to use for \`kubectl\` execution.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`openIdConnectProvider\`<sup>Optional</sup> <a name=\\"openIdConnectProvider\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.openIdConnectProvider\\"></a>

\`\`\`java
public IOpenIdConnectProvider getOpenIdConnectProvider();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IOpenIdConnectProvider
- *Default:* if not specified \`cluster.openIdConnectProvider\` and \`cluster.addServiceAccount\` will throw an error.

An Open ID Connect provider for this cluster that can be used to configure service accounts.

You can either import an existing provider using \`iam.OpenIdConnectProvider.fromProviderArn\`, or create a new provider using \`new eks.OpenIdConnectProvider\`

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`securityGroupIds\`<sup>Optional</sup> <a name=\\"securityGroupIds\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.securityGroupIds\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSecurityGroupIds();
\`\`\`

- *Type:* java.util.List<java.lang.String>
- *Default:* if not specified, no additional security groups will be considered in \`cluster.connections\`.

Additional security groups associated with this cluster.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.ClusterAttributes.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* if not specified \`cluster.vpc\` will throw an error

The VPC in which this Cluster was created.

---

### ClusterOptions <a name=\\"ClusterOptions\\" id=\\"monocdk.aws_eks.ClusterOptions\\"></a>

Options for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ClusterOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ClusterOptions;

ClusterOptions.builder()
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.core.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.ClusterOptions.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.ClusterOptions.property.version\\"></a>

\`\`\`java
public KubernetesVersion getVersion();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.ClusterOptions.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"monocdk.aws_eks.ClusterOptions.property.outputClusterName\\"></a>

\`\`\`java
public java.lang.Boolean getOutputClusterName();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"monocdk.aws_eks.ClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`java
public java.lang.Boolean getOutputConfigCommand();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.ClusterOptions.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"monocdk.aws_eks.ClusterOptions.property.securityGroup\\"></a>

\`\`\`java
public ISecurityGroup getSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.ClusterOptions.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"monocdk.aws_eks.ClusterOptions.property.vpcSubnets\\"></a>

\`\`\`java
public java.util.List<SubnetSelection> getVpcSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"monocdk.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getClusterHandlerEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"monocdk.aws_eks.ClusterOptions.property.coreDnsComputeType\\"></a>

\`\`\`java
public CoreDnsComputeType getCoreDnsComputeType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"monocdk.aws_eks.ClusterOptions.property.endpointAccess\\"></a>

\`\`\`java
public EndpointAccess getEndpointAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"monocdk.aws_eks.ClusterOptions.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"monocdk.aws_eks.ClusterOptions.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"monocdk.aws_eks.ClusterOptions.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.core.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"monocdk.aws_eks.ClusterOptions.property.mastersRole\\"></a>

\`\`\`java
public IRole getMastersRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"monocdk.aws_eks.ClusterOptions.property.outputMastersRoleArn\\"></a>

\`\`\`java
public java.lang.Boolean getOutputMastersRoleArn();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"monocdk.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\"></a>

\`\`\`java
public java.lang.Boolean getPlaceClusterHandlerInVpc();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.ClusterOptions.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"monocdk.aws_eks.ClusterOptions.property.secretsEncryptionKey\\"></a>

\`\`\`java
public IKey getSecretsEncryptionKey();
\`\`\`

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

### ClusterProps <a name=\\"ClusterProps\\" id=\\"monocdk.aws_eks.ClusterProps\\"></a>

Common configuration props for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ClusterProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ClusterProps;

ClusterProps.builder()
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
//  .defaultCapacity(java.lang.Number)
//  .defaultCapacityInstance(InstanceType)
//  .defaultCapacityType(DefaultCapacityType)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.core.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.defaultCapacity\\">defaultCapacity</a></code> | <code>java.lang.Number</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.defaultCapacityInstance\\">defaultCapacityInstance</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#monocdk.aws_eks.ClusterProps.property.defaultCapacityType\\">defaultCapacityType</a></code> | <code>software.amazon.awscdk.services.eks.DefaultCapacityType</code> | The default capacity type for the cluster. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.ClusterProps.property.version\\"></a>

\`\`\`java
public KubernetesVersion getVersion();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.ClusterProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"monocdk.aws_eks.ClusterProps.property.outputClusterName\\"></a>

\`\`\`java
public java.lang.Boolean getOutputClusterName();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"monocdk.aws_eks.ClusterProps.property.outputConfigCommand\\"></a>

\`\`\`java
public java.lang.Boolean getOutputConfigCommand();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.ClusterProps.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"monocdk.aws_eks.ClusterProps.property.securityGroup\\"></a>

\`\`\`java
public ISecurityGroup getSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.ClusterProps.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"monocdk.aws_eks.ClusterProps.property.vpcSubnets\\"></a>

\`\`\`java
public java.util.List<SubnetSelection> getVpcSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"monocdk.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getClusterHandlerEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"monocdk.aws_eks.ClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`java
public CoreDnsComputeType getCoreDnsComputeType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"monocdk.aws_eks.ClusterProps.property.endpointAccess\\"></a>

\`\`\`java
public EndpointAccess getEndpointAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"monocdk.aws_eks.ClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"monocdk.aws_eks.ClusterProps.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"monocdk.aws_eks.ClusterProps.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.core.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"monocdk.aws_eks.ClusterProps.property.mastersRole\\"></a>

\`\`\`java
public IRole getMastersRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"monocdk.aws_eks.ClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`java
public java.lang.Boolean getOutputMastersRoleArn();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"monocdk.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`java
public java.lang.Boolean getPlaceClusterHandlerInVpc();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.ClusterProps.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"monocdk.aws_eks.ClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`java
public IKey getSecretsEncryptionKey();
\`\`\`

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultCapacity\`<sup>Optional</sup> <a name=\\"defaultCapacity\\" id=\\"monocdk.aws_eks.ClusterProps.property.defaultCapacity\\"></a>

\`\`\`java
public java.lang.Number getDefaultCapacity();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`defaultCapacityInstance\`<sup>Optional</sup> <a name=\\"defaultCapacityInstance\\" id=\\"monocdk.aws_eks.ClusterProps.property.defaultCapacityInstance\\"></a>

\`\`\`java
public InstanceType getDefaultCapacityInstance();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`defaultCapacityType\`<sup>Optional</sup> <a name=\\"defaultCapacityType\\" id=\\"monocdk.aws_eks.ClusterProps.property.defaultCapacityType\\"></a>

\`\`\`java
public DefaultCapacityType getDefaultCapacityType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.DefaultCapacityType
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

### CommonClusterOptions <a name=\\"CommonClusterOptions\\" id=\\"monocdk.aws_eks.CommonClusterOptions\\"></a>

Options for configuring an EKS cluster.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CommonClusterOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CommonClusterOptions;

CommonClusterOptions.builder()
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.CommonClusterOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.version\\"></a>

\`\`\`java
public KubernetesVersion getVersion();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.outputClusterName\\"></a>

\`\`\`java
public java.lang.Boolean getOutputClusterName();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`java
public java.lang.Boolean getOutputConfigCommand();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.securityGroup\\"></a>

\`\`\`java
public ISecurityGroup getSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"monocdk.aws_eks.CommonClusterOptions.property.vpcSubnets\\"></a>

\`\`\`java
public java.util.List<SubnetSelection> getVpcSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

### EksOptimizedImageProps <a name=\\"EksOptimizedImageProps\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps\\"></a>

Properties for EksOptimizedImage.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.EksOptimizedImageProps;

EksOptimizedImageProps.builder()
//  .cpuArch(CpuArch)
//  .kubernetesVersion(java.lang.String)
//  .nodeType(NodeType)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImageProps.property.cpuArch\\">cpuArch</a></code> | <code>software.amazon.awscdk.services.eks.CpuArch</code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\">kubernetesVersion</a></code> | <code>java.lang.String</code> | The Kubernetes version to use. |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImageProps.property.nodeType\\">nodeType</a></code> | <code>software.amazon.awscdk.services.eks.NodeType</code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`cpuArch\`<sup>Optional</sup> <a name=\\"cpuArch\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps.property.cpuArch\\"></a>

\`\`\`java
public CpuArch getCpuArch();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CpuArch
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`kubernetesVersion\`<sup>Optional</sup> <a name=\\"kubernetesVersion\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\"></a>

\`\`\`java
public java.lang.String getKubernetesVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`nodeType\`<sup>Optional</sup> <a name=\\"nodeType\\" id=\\"monocdk.aws_eks.EksOptimizedImageProps.property.nodeType\\"></a>

\`\`\`java
public NodeType getNodeType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodeType
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

### EncryptionConfigProperty <a name=\\"EncryptionConfigProperty\\" id=\\"monocdk.aws_eks.CfnCluster.EncryptionConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster.EncryptionConfigProperty;

EncryptionConfigProperty.builder()
//  .provider(ProviderProperty)
//  .provider(IResolvable)
//  .resources(java.util.List<java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\">provider</a></code> | <code>software.amazon.awscdk.services.eks.CfnCluster.ProviderProperty OR software.amazon.awscdk.core.IResolvable</code> | \`CfnCluster.EncryptionConfigProperty.Provider\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\">resources</a></code> | <code>java.util.List<java.lang.String></code> | \`CfnCluster.EncryptionConfigProperty.Resources\`. |

---

##### \`provider\`<sup>Optional</sup> <a name=\\"provider\\" id=\\"monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\"></a>

\`\`\`java
public java.lang.Object getProvider();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CfnCluster.ProviderProperty OR software.amazon.awscdk.core.IResolvable

\`CfnCluster.EncryptionConfigProperty.Provider\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider)

---

##### \`resources\`<sup>Optional</sup> <a name=\\"resources\\" id=\\"monocdk.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getResources();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`CfnCluster.EncryptionConfigProperty.Resources\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources)

---

### FargateClusterProps <a name=\\"FargateClusterProps\\" id=\\"monocdk.aws_eks.FargateClusterProps\\"></a>

Configuration props for EKS Fargate.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.FargateClusterProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateClusterProps;

FargateClusterProps.builder()
    .version(KubernetesVersion)
//  .clusterName(java.lang.String)
//  .outputClusterName(java.lang.Boolean)
//  .outputConfigCommand(java.lang.Boolean)
//  .role(IRole)
//  .securityGroup(ISecurityGroup)
//  .vpc(IVpc)
//  .vpcSubnets(java.util.List<SubnetSelection>)
//  .clusterHandlerEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .coreDnsComputeType(CoreDnsComputeType)
//  .endpointAccess(EndpointAccess)
//  .kubectlEnvironment(java.util.Map<java.lang.String, java.lang.String>)
//  .kubectlLayer(ILayerVersion)
//  .kubectlMemory(Size)
//  .mastersRole(IRole)
//  .outputMastersRoleArn(java.lang.Boolean)
//  .placeClusterHandlerInVpc(java.lang.Boolean)
//  .prune(java.lang.Boolean)
//  .secretsEncryptionKey(IKey)
//  .defaultProfile(FargateProfileOptions)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.version\\">version</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | Name for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.outputClusterName\\">outputClusterName</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.role\\">role</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.securityGroup\\">securityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.vpcSubnets\\">vpcSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection></code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code>software.amazon.awscdk.services.eks.CoreDnsComputeType</code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.endpointAccess\\">endpointAccess</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.core.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.mastersRole\\">mastersRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>java.lang.Boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>java.lang.Boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>software.amazon.awscdk.services.kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#monocdk.aws_eks.FargateClusterProps.property.defaultProfile\\">defaultProfile</a></code> | <code>software.amazon.awscdk.services.eks.FargateProfileOptions</code> | Fargate Profile to create along with the cluster. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.version\\"></a>

\`\`\`java
public KubernetesVersion getVersion();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.outputClusterName\\"></a>

\`\`\`java
public java.lang.Boolean getOutputClusterName();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.outputConfigCommand\\"></a>

\`\`\`java
public java.lang.Boolean getOutputConfigCommand();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.role\\"></a>

\`\`\`java
public IRole getRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.securityGroup\\"></a>

\`\`\`java
public ISecurityGroup getSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.vpcSubnets\\"></a>

\`\`\`java
public java.util.List<SubnetSelection> getVpcSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.SubnetSelection>
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getClusterHandlerEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`java
public CoreDnsComputeType getCoreDnsComputeType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CoreDnsComputeType
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.endpointAccess\\"></a>

\`\`\`java
public EndpointAccess getEndpointAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`java // Example automatically generated from non-compiling source. May contain errors. Object layer = LayerVersion.Builder.create(this, \\"kubectl-layer\\")         .code(lambda.Code.fromAsset(String.format(\\"%s/layer.zip\\", __dirname)))         .build();[lambda.Runtime.PROVIDED] compatibleRuntimes; \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.core.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.mastersRole\\"></a>

\`\`\`java
public IRole getMastersRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`java
public java.lang.Boolean getOutputMastersRoleArn();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`java
public java.lang.Boolean getPlaceClusterHandlerInVpc();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`java
public IKey getSecretsEncryptionKey();
\`\`\`

- *Type:* software.amazon.awscdk.services.kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultProfile\`<sup>Optional</sup> <a name=\\"defaultProfile\\" id=\\"monocdk.aws_eks.FargateClusterProps.property.defaultProfile\\"></a>

\`\`\`java
public FargateProfileOptions getDefaultProfile();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.FargateProfileOptions
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---

### FargateProfileOptions <a name=\\"FargateProfileOptions\\" id=\\"monocdk.aws_eks.FargateProfileOptions\\"></a>

Options for defining EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.FargateProfileOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateProfileOptions;

FargateProfileOptions.builder()
    .selectors(java.util.List<Selector>)
//  .fargateProfileName(java.lang.String)
//  .podExecutionRole(IRole)
//  .subnetSelection(SubnetSelection)
//  .vpc(IVpc)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.selectors\\">selectors</a></code> | <code>java.util.List<software.amazon.awscdk.services.eks.Selector></code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | The name of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.podExecutionRole\\">podExecutionRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.subnetSelection\\">subnetSelection</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileOptions.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.selectors\\"></a>

\`\`\`java
public java.util.List<Selector> getSelectors();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.eks.Selector>

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String
- *Default:* generated

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Optional</sup> <a name=\\"podExecutionRole\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.podExecutionRole\\"></a>

\`\`\`java
public IRole getPodExecutionRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnetSelection\`<sup>Optional</sup> <a name=\\"subnetSelection\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.subnetSelection\\"></a>

\`\`\`java
public SubnetSelection getSubnetSelection();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.FargateProfileOptions.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

### FargateProfileProps <a name=\\"FargateProfileProps\\" id=\\"monocdk.aws_eks.FargateProfileProps\\"></a>

Configuration props for EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.FargateProfileProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.FargateProfileProps;

FargateProfileProps.builder()
    .selectors(java.util.List<Selector>)
//  .fargateProfileName(java.lang.String)
//  .podExecutionRole(IRole)
//  .subnetSelection(SubnetSelection)
//  .vpc(IVpc)
    .cluster(Cluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.selectors\\">selectors</a></code> | <code>java.util.List<software.amazon.awscdk.services.eks.Selector></code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.fargateProfileName\\">fargateProfileName</a></code> | <code>java.lang.String</code> | The name of the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.podExecutionRole\\">podExecutionRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.subnetSelection\\">subnetSelection</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#monocdk.aws_eks.FargateProfileProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.Cluster</code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.selectors\\"></a>

\`\`\`java
public java.util.List<Selector> getSelectors();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.eks.Selector>

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`java
public java.lang.String getFargateProfileName();
\`\`\`

- *Type:* java.lang.String
- *Default:* generated

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Optional</sup> <a name=\\"podExecutionRole\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.podExecutionRole\\"></a>

\`\`\`java
public IRole getPodExecutionRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnetSelection\`<sup>Optional</sup> <a name=\\"subnetSelection\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.subnetSelection\\"></a>

\`\`\`java
public SubnetSelection getSubnetSelection();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.FargateProfileProps.property.cluster\\"></a>

\`\`\`java
public Cluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.Cluster

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---

### HelmChartOptions <a name=\\"HelmChartOptions\\" id=\\"monocdk.aws_eks.HelmChartOptions\\"></a>

Helm Chart options.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.HelmChartOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.HelmChartOptions;

HelmChartOptions.builder()
    .chart(java.lang.String)
//  .createNamespace(java.lang.Boolean)
//  .namespace(java.lang.String)
//  .release(java.lang.String)
//  .repository(java.lang.String)
//  .timeout(Duration)
//  .values(java.util.Map<java.lang.String, java.lang.Object>)
//  .version(java.lang.String)
//  .wait(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.chart\\">chart</a></code> | <code>java.lang.String</code> | The name of the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.createNamespace\\">createNamespace</a></code> | <code>java.lang.Boolean</code> | create namespace if not exist. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.release\\">release</a></code> | <code>java.lang.String</code> | The name of the release. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.repository\\">repository</a></code> | <code>java.lang.String</code> | The repository which contains the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.core.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.values\\">values</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The values to be used by the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.version\\">version</a></code> | <code>java.lang.String</code> | The chart version to install. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartOptions.property.wait\\">wait</a></code> | <code>java.lang.Boolean</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.chart\\"></a>

\`\`\`java
public java.lang.String getChart();
\`\`\`

- *Type:* java.lang.String

The name of the chart.

---

##### \`createNamespace\`<sup>Optional</sup> <a name=\\"createNamespace\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.createNamespace\\"></a>

\`\`\`java
public java.lang.Boolean getCreateNamespace();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.release\\"></a>

\`\`\`java
public java.lang.String getRelease();
\`\`\`

- *Type:* java.lang.String
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.repository\\"></a>

\`\`\`java
public java.lang.String getRepository();
\`\`\`

- *Type:* java.lang.String
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.timeout\\"></a>

\`\`\`java
public Duration getTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.values\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.Object> getValues();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.Object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"monocdk.aws_eks.HelmChartOptions.property.wait\\"></a>

\`\`\`java
public java.lang.Boolean getWait();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

### HelmChartProps <a name=\\"HelmChartProps\\" id=\\"monocdk.aws_eks.HelmChartProps\\"></a>

Helm Chart properties.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.HelmChartProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.HelmChartProps;

HelmChartProps.builder()
    .chart(java.lang.String)
//  .createNamespace(java.lang.Boolean)
//  .namespace(java.lang.String)
//  .release(java.lang.String)
//  .repository(java.lang.String)
//  .timeout(Duration)
//  .values(java.util.Map<java.lang.String, java.lang.Object>)
//  .version(java.lang.String)
//  .wait(java.lang.Boolean)
    .cluster(ICluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.chart\\">chart</a></code> | <code>java.lang.String</code> | The name of the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.createNamespace\\">createNamespace</a></code> | <code>java.lang.Boolean</code> | create namespace if not exist. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.release\\">release</a></code> | <code>java.lang.String</code> | The name of the release. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.repository\\">repository</a></code> | <code>java.lang.String</code> | The repository which contains the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.core.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.values\\">values</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The values to be used by the chart. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.version\\">version</a></code> | <code>java.lang.String</code> | The chart version to install. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.wait\\">wait</a></code> | <code>java.lang.Boolean</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#monocdk.aws_eks.HelmChartProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to apply this configuration to. |

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"monocdk.aws_eks.HelmChartProps.property.chart\\"></a>

\`\`\`java
public java.lang.String getChart();
\`\`\`

- *Type:* java.lang.String

The name of the chart.

---

##### \`createNamespace\`<sup>Optional</sup> <a name=\\"createNamespace\\" id=\\"monocdk.aws_eks.HelmChartProps.property.createNamespace\\"></a>

\`\`\`java
public java.lang.Boolean getCreateNamespace();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.HelmChartProps.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"monocdk.aws_eks.HelmChartProps.property.release\\"></a>

\`\`\`java
public java.lang.String getRelease();
\`\`\`

- *Type:* java.lang.String
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"monocdk.aws_eks.HelmChartProps.property.repository\\"></a>

\`\`\`java
public java.lang.String getRepository();
\`\`\`

- *Type:* java.lang.String
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"monocdk.aws_eks.HelmChartProps.property.timeout\\"></a>

\`\`\`java
public Duration getTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"monocdk.aws_eks.HelmChartProps.property.values\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.Object> getValues();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.Object>
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.HelmChartProps.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"monocdk.aws_eks.HelmChartProps.property.wait\\"></a>

\`\`\`java
public java.lang.Boolean getWait();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.HelmChartProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### KubernetesManifestOptions <a name=\\"KubernetesManifestOptions\\" id=\\"monocdk.aws_eks.KubernetesManifestOptions\\"></a>

Options for \`KubernetesManifest\`.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.KubernetesManifestOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesManifestOptions;

KubernetesManifestOptions.builder()
//  .prune(java.lang.Boolean)
//  .skipValidation(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestOptions.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestOptions.property.skipValidation\\">skipValidation</a></code> | <code>java.lang.Boolean</code> | A flag to signify if the manifest validation should be skipped. |

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.KubernetesManifestOptions.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skipValidation\`<sup>Optional</sup> <a name=\\"skipValidation\\" id=\\"monocdk.aws_eks.KubernetesManifestOptions.property.skipValidation\\"></a>

\`\`\`java
public java.lang.Boolean getSkipValidation();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

### KubernetesManifestProps <a name=\\"KubernetesManifestProps\\" id=\\"monocdk.aws_eks.KubernetesManifestProps\\"></a>

Properties for KubernetesManifest.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesManifestProps;

KubernetesManifestProps.builder()
//  .prune(java.lang.Boolean)
//  .skipValidation(java.lang.Boolean)
    .cluster(ICluster)
    .manifest(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
//  .overwrite(java.lang.Boolean)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.skipValidation\\">skipValidation</a></code> | <code>java.lang.Boolean</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.manifest\\">manifest</a></code> | <code>java.util.List<java.util.Map<java.lang.String, java.lang.Object>></code> | The manifest to apply. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesManifestProps.property.overwrite\\">overwrite</a></code> | <code>java.lang.Boolean</code> | Overwrite any existing resources. |

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skipValidation\`<sup>Optional</sup> <a name=\\"skipValidation\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.skipValidation\\"></a>

\`\`\`java
public java.lang.Boolean getSkipValidation();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.manifest\\"></a>

\`\`\`java
public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> getManifest();
\`\`\`

- *Type:* java.util.List<java.util.Map<java.lang.String, java.lang.Object>>

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`overwrite\`<sup>Optional</sup> <a name=\\"overwrite\\" id=\\"monocdk.aws_eks.KubernetesManifestProps.property.overwrite\\"></a>

\`\`\`java
public java.lang.Boolean getOverwrite();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---

### KubernetesNetworkConfigProperty <a name=\\"KubernetesNetworkConfigProperty\\" id=\\"monocdk.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster.KubernetesNetworkConfigProperty;

KubernetesNetworkConfigProperty.builder()
//  .serviceIpv4Cidr(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\">serviceIpv4Cidr</a></code> | <code>java.lang.String</code> | \`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`. |

---

##### \`serviceIpv4Cidr\`<sup>Optional</sup> <a name=\\"serviceIpv4Cidr\\" id=\\"monocdk.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\"></a>

\`\`\`java
public java.lang.String getServiceIpv4Cidr();
\`\`\`

- *Type:* java.lang.String

\`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr)

---

### KubernetesObjectValueProps <a name=\\"KubernetesObjectValueProps\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps\\"></a>

Properties for KubernetesObjectValue.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesObjectValueProps;

KubernetesObjectValueProps.builder()
    .cluster(ICluster)
    .jsonPath(java.lang.String)
    .objectName(java.lang.String)
    .objectType(java.lang.String)
//  .objectNamespace(java.lang.String)
//  .timeout(Duration)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.jsonPath\\">jsonPath</a></code> | <code>java.lang.String</code> | JSONPath to the specific value. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.objectName\\">objectName</a></code> | <code>java.lang.String</code> | The name of the object to query. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.objectType\\">objectType</a></code> | <code>java.lang.String</code> | The object type to query. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\">objectNamespace</a></code> | <code>java.lang.String</code> | The namespace the object belongs to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesObjectValueProps.property.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.core.Duration</code> | Timeout for waiting on a value. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`jsonPath\`<sup>Required</sup> <a name=\\"jsonPath\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.jsonPath\\"></a>

\`\`\`java
public java.lang.String getJsonPath();
\`\`\`

- *Type:* java.lang.String

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`objectName\`<sup>Required</sup> <a name=\\"objectName\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.objectName\\"></a>

\`\`\`java
public java.lang.String getObjectName();
\`\`\`

- *Type:* java.lang.String

The name of the object to query.

---

##### \`objectType\`<sup>Required</sup> <a name=\\"objectType\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.objectType\\"></a>

\`\`\`java
public java.lang.String getObjectType();
\`\`\`

- *Type:* java.lang.String

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`objectNamespace\`<sup>Optional</sup> <a name=\\"objectNamespace\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\"></a>

\`\`\`java
public java.lang.String getObjectNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"monocdk.aws_eks.KubernetesObjectValueProps.property.timeout\\"></a>

\`\`\`java
public Duration getTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---

### KubernetesPatchProps <a name=\\"KubernetesPatchProps\\" id=\\"monocdk.aws_eks.KubernetesPatchProps\\"></a>

Properties for KubernetesPatch.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesPatchProps;

KubernetesPatchProps.builder()
    .applyPatch(java.util.Map<java.lang.String, java.lang.Object>)
    .cluster(ICluster)
    .resourceName(java.lang.String)
    .restorePatch(java.util.Map<java.lang.String, java.lang.Object>)
//  .patchType(PatchType)
//  .resourceNamespace(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.applyPatch\\">applyPatch</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The cluster to apply the patch to. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.resourceName\\">resourceName</a></code> | <code>java.lang.String</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.restorePatch\\">restorePatch</a></code> | <code>java.util.Map<java.lang.String, java.lang.Object></code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.patchType\\">patchType</a></code> | <code>software.amazon.awscdk.services.eks.PatchType</code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesPatchProps.property.resourceNamespace\\">resourceNamespace</a></code> | <code>java.lang.String</code> | The kubernetes API namespace. |

---

##### \`applyPatch\`<sup>Required</sup> <a name=\\"applyPatch\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.applyPatch\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.Object> getApplyPatch();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`resourceName\`<sup>Required</sup> <a name=\\"resourceName\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.resourceName\\"></a>

\`\`\`java
public java.lang.String getResourceName();
\`\`\`

- *Type:* java.lang.String

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`restorePatch\`<sup>Required</sup> <a name=\\"restorePatch\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.restorePatch\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.Object> getRestorePatch();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`patchType\`<sup>Optional</sup> <a name=\\"patchType\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.patchType\\"></a>

\`\`\`java
public PatchType getPatchType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.PatchType
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`resourceNamespace\`<sup>Optional</sup> <a name=\\"resourceNamespace\\" id=\\"monocdk.aws_eks.KubernetesPatchProps.property.resourceNamespace\\"></a>

\`\`\`java
public java.lang.String getResourceNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* \\"default\\"

The kubernetes API namespace.

---

### LabelProperty <a name=\\"LabelProperty\\" id=\\"monocdk.aws_eks.CfnFargateProfile.LabelProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnFargateProfile.LabelProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnFargateProfile.LabelProperty;

LabelProperty.builder()
    .key(java.lang.String)
    .value(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.LabelProperty.property.key\\">key</a></code> | <code>java.lang.String</code> | \`CfnFargateProfile.LabelProperty.Key\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.LabelProperty.property.value\\">value</a></code> | <code>java.lang.String</code> | \`CfnFargateProfile.LabelProperty.Value\`. |

---

##### \`key\`<sup>Required</sup> <a name=\\"key\\" id=\\"monocdk.aws_eks.CfnFargateProfile.LabelProperty.property.key\\"></a>

\`\`\`java
public java.lang.String getKey();
\`\`\`

- *Type:* java.lang.String

\`CfnFargateProfile.LabelProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key)

---

##### \`value\`<sup>Required</sup> <a name=\\"value\\" id=\\"monocdk.aws_eks.CfnFargateProfile.LabelProperty.property.value\\"></a>

\`\`\`java
public java.lang.String getValue();
\`\`\`

- *Type:* java.lang.String

\`CfnFargateProfile.LabelProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value)

---

### LaunchTemplateSpec <a name=\\"LaunchTemplateSpec\\" id=\\"monocdk.aws_eks.LaunchTemplateSpec\\"></a>

Launch template property specification.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.LaunchTemplateSpec.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.LaunchTemplateSpec;

LaunchTemplateSpec.builder()
    .id(java.lang.String)
//  .version(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.LaunchTemplateSpec.property.id\\">id</a></code> | <code>java.lang.String</code> | The Launch template ID. |
| <code><a href=\\"#monocdk.aws_eks.LaunchTemplateSpec.property.version\\">version</a></code> | <code>java.lang.String</code> | The launch template version to be used (optional). |

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.LaunchTemplateSpec.property.id\\"></a>

\`\`\`java
public java.lang.String getId();
\`\`\`

- *Type:* java.lang.String

The Launch template ID.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.LaunchTemplateSpec.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* the default version of the launch template

The launch template version to be used (optional).

---

### LaunchTemplateSpecificationProperty <a name=\\"LaunchTemplateSpecificationProperty\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup.LaunchTemplateSpecificationProperty;

LaunchTemplateSpecificationProperty.builder()
//  .id(java.lang.String)
//  .name(java.lang.String)
//  .version(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\">id</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\">name</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\">version</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`. |

---

##### \`id\`<sup>Optional</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\"></a>

\`\`\`java
public java.lang.String getId();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version)

---

### NodegroupOptions <a name=\\"NodegroupOptions\\" id=\\"monocdk.aws_eks.NodegroupOptions\\"></a>

The Nodegroup Options for addNodeGroup() method.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.NodegroupOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.NodegroupOptions;

NodegroupOptions.builder()
//  .amiType(NodegroupAmiType)
//  .capacityType(CapacityType)
//  .desiredSize(java.lang.Number)
//  .diskSize(java.lang.Number)
//  .forceUpdate(java.lang.Boolean)
//  .instanceType(InstanceType)
//  .instanceTypes(java.util.List<InstanceType>)
//  .labels(java.util.Map<java.lang.String, java.lang.String>)
//  .launchTemplateSpec(LaunchTemplateSpec)
//  .maxSize(java.lang.Number)
//  .minSize(java.lang.Number)
//  .nodegroupName(java.lang.String)
//  .nodeRole(IRole)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(NodegroupRemoteAccess)
//  .subnets(SubnetSelection)
//  .tags(java.util.Map<java.lang.String, java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.amiType\\">amiType</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.capacityType\\">capacityType</a></code> | <code>software.amazon.awscdk.services.eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.desiredSize\\">desiredSize</a></code> | <code>java.lang.Number</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.forceUpdate\\">forceUpdate</a></code> | <code>java.lang.Boolean</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.instanceType\\">instanceType</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | The instance type to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.InstanceType></code> | The instance types to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.labels\\">labels</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.launchTemplateSpec\\">launchTemplateSpec</a></code> | <code>software.amazon.awscdk.services.eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.maxSize\\">maxSize</a></code> | <code>java.lang.Number</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.minSize\\">minSize</a></code> | <code>java.lang.Number</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Name of the Nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.nodeRole\\">nodeRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.subnets\\">subnets</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupOptions.property.tags\\">tags</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The metadata to apply to the node group to assist with categorization and organization. |

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.amiType\\"></a>

\`\`\`java
public NodegroupAmiType getAmiType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.capacityType\\"></a>

\`\`\`java
public CapacityType getCapacityType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.desiredSize\\"></a>

\`\`\`java
public java.lang.Number getDesiredSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.diskSize\\"></a>

\`\`\`java
public java.lang.Number getDiskSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`forceUpdate\`<sup>Optional</sup> <a name=\\"forceUpdate\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.forceUpdate\\"></a>

\`\`\`java
public java.lang.Boolean getForceUpdate();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### ~~\`instanceType\`~~<sup>Optional</sup> <a name=\\"instanceType\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.instanceType\\"></a>

- *Deprecated:* Use \`instanceTypes\` instead.

\`\`\`java
public InstanceType getInstanceType();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.InstanceType
- *Default:* t3.medium

The instance type to use for your node group.

Currently, you can specify a single instance type for a node group. The default value for this parameter is \`t3.medium\`. If you choose a GPU instance type, be sure to specify the \`AL2_x86_64_GPU\` with the amiType parameter.

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.instanceTypes\\"></a>

\`\`\`java
public java.util.List<InstanceType> getInstanceTypes();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.InstanceType>
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.labels\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getLabels();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launchTemplateSpec\`<sup>Optional</sup> <a name=\\"launchTemplateSpec\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.launchTemplateSpec\\"></a>

\`\`\`java
public LaunchTemplateSpec getLaunchTemplateSpec();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.maxSize\\"></a>

\`\`\`java
public java.lang.Number getMaxSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.minSize\\"></a>

\`\`\`java
public java.lang.Number getMinSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`nodeRole\`<sup>Optional</sup> <a name=\\"nodeRole\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.nodeRole\\"></a>

\`\`\`java
public IRole getNodeRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.releaseVersion\\"></a>

\`\`\`java
public java.lang.String getReleaseVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.remoteAccess\\"></a>

\`\`\`java
public NodegroupRemoteAccess getRemoteAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.subnets\\"></a>

\`\`\`java
public SubnetSelection getSubnets();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.NodegroupOptions.property.tags\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getTags();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

### NodegroupProps <a name=\\"NodegroupProps\\" id=\\"monocdk.aws_eks.NodegroupProps\\"></a>

NodeGroup properties interface.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.NodegroupProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.NodegroupProps;

NodegroupProps.builder()
//  .amiType(NodegroupAmiType)
//  .capacityType(CapacityType)
//  .desiredSize(java.lang.Number)
//  .diskSize(java.lang.Number)
//  .forceUpdate(java.lang.Boolean)
//  .instanceType(InstanceType)
//  .instanceTypes(java.util.List<InstanceType>)
//  .labels(java.util.Map<java.lang.String, java.lang.String>)
//  .launchTemplateSpec(LaunchTemplateSpec)
//  .maxSize(java.lang.Number)
//  .minSize(java.lang.Number)
//  .nodegroupName(java.lang.String)
//  .nodeRole(IRole)
//  .releaseVersion(java.lang.String)
//  .remoteAccess(NodegroupRemoteAccess)
//  .subnets(SubnetSelection)
//  .tags(java.util.Map<java.lang.String, java.lang.String>)
    .cluster(ICluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.amiType\\">amiType</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupAmiType</code> | The AMI type for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.capacityType\\">capacityType</a></code> | <code>software.amazon.awscdk.services.eks.CapacityType</code> | The capacity type of the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.desiredSize\\">desiredSize</a></code> | <code>java.lang.Number</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.diskSize\\">diskSize</a></code> | <code>java.lang.Number</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.forceUpdate\\">forceUpdate</a></code> | <code>java.lang.Boolean</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.instanceType\\">instanceType</a></code> | <code>software.amazon.awscdk.services.ec2.InstanceType</code> | The instance type to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.instanceTypes\\">instanceTypes</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.InstanceType></code> | The instance types to use for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.labels\\">labels</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.launchTemplateSpec\\">launchTemplateSpec</a></code> | <code>software.amazon.awscdk.services.eks.LaunchTemplateSpec</code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.maxSize\\">maxSize</a></code> | <code>java.lang.Number</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.minSize\\">minSize</a></code> | <code>java.lang.Number</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Name of the Nodegroup. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.nodeRole\\">nodeRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.releaseVersion\\">releaseVersion</a></code> | <code>java.lang.String</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.remoteAccess\\">remoteAccess</a></code> | <code>software.amazon.awscdk.services.eks.NodegroupRemoteAccess</code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.subnets\\">subnets</a></code> | <code>software.amazon.awscdk.services.ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.tags\\">tags</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | Cluster resource. |

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"monocdk.aws_eks.NodegroupProps.property.amiType\\"></a>

\`\`\`java
public NodegroupAmiType getAmiType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodegroupAmiType
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"monocdk.aws_eks.NodegroupProps.property.capacityType\\"></a>

\`\`\`java
public CapacityType getCapacityType();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.CapacityType
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"monocdk.aws_eks.NodegroupProps.property.desiredSize\\"></a>

\`\`\`java
public java.lang.Number getDesiredSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"monocdk.aws_eks.NodegroupProps.property.diskSize\\"></a>

\`\`\`java
public java.lang.Number getDiskSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`forceUpdate\`<sup>Optional</sup> <a name=\\"forceUpdate\\" id=\\"monocdk.aws_eks.NodegroupProps.property.forceUpdate\\"></a>

\`\`\`java
public java.lang.Boolean getForceUpdate();
\`\`\`

- *Type:* java.lang.Boolean
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### ~~\`instanceType\`~~<sup>Optional</sup> <a name=\\"instanceType\\" id=\\"monocdk.aws_eks.NodegroupProps.property.instanceType\\"></a>

- *Deprecated:* Use \`instanceTypes\` instead.

\`\`\`java
public InstanceType getInstanceType();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.InstanceType
- *Default:* t3.medium

The instance type to use for your node group.

Currently, you can specify a single instance type for a node group. The default value for this parameter is \`t3.medium\`. If you choose a GPU instance type, be sure to specify the \`AL2_x86_64_GPU\` with the amiType parameter.

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"monocdk.aws_eks.NodegroupProps.property.instanceTypes\\"></a>

\`\`\`java
public java.util.List<InstanceType> getInstanceTypes();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.InstanceType>
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"monocdk.aws_eks.NodegroupProps.property.labels\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getLabels();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launchTemplateSpec\`<sup>Optional</sup> <a name=\\"launchTemplateSpec\\" id=\\"monocdk.aws_eks.NodegroupProps.property.launchTemplateSpec\\"></a>

\`\`\`java
public LaunchTemplateSpec getLaunchTemplateSpec();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.LaunchTemplateSpec
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"monocdk.aws_eks.NodegroupProps.property.maxSize\\"></a>

\`\`\`java
public java.lang.Number getMaxSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"monocdk.aws_eks.NodegroupProps.property.minSize\\"></a>

\`\`\`java
public java.lang.Number getMinSize();
\`\`\`

- *Type:* java.lang.Number
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.NodegroupProps.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`nodeRole\`<sup>Optional</sup> <a name=\\"nodeRole\\" id=\\"monocdk.aws_eks.NodegroupProps.property.nodeRole\\"></a>

\`\`\`java
public IRole getNodeRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"monocdk.aws_eks.NodegroupProps.property.releaseVersion\\"></a>

\`\`\`java
public java.lang.String getReleaseVersion();
\`\`\`

- *Type:* java.lang.String
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"monocdk.aws_eks.NodegroupProps.property.remoteAccess\\"></a>

\`\`\`java
public NodegroupRemoteAccess getRemoteAccess();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.NodegroupRemoteAccess
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"monocdk.aws_eks.NodegroupProps.property.subnets\\"></a>

\`\`\`java
public SubnetSelection getSubnets();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"monocdk.aws_eks.NodegroupProps.property.tags\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getTags();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.NodegroupProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

Cluster resource.

---

### NodegroupRemoteAccess <a name=\\"NodegroupRemoteAccess\\" id=\\"monocdk.aws_eks.NodegroupRemoteAccess\\"></a>

The remote access (SSH) configuration to use with your node group.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.NodegroupRemoteAccess.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.NodegroupRemoteAccess;

NodegroupRemoteAccess.builder()
    .sshKeyName(java.lang.String)
//  .sourceSecurityGroups(java.util.List<ISecurityGroup>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\">sshKeyName</a></code> | <code>java.lang.String</code> | The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\">sourceSecurityGroups</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.ISecurityGroup></code> | The security groups that are allowed SSH access (port 22) to the worker nodes. |

---

##### \`sshKeyName\`<sup>Required</sup> <a name=\\"sshKeyName\\" id=\\"monocdk.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\"></a>

\`\`\`java
public java.lang.String getSshKeyName();
\`\`\`

- *Type:* java.lang.String

The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group.

---

##### \`sourceSecurityGroups\`<sup>Optional</sup> <a name=\\"sourceSecurityGroups\\" id=\\"monocdk.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\"></a>

\`\`\`java
public java.util.List<ISecurityGroup> getSourceSecurityGroups();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.ISecurityGroup>
- *Default:* port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

The security groups that are allowed SSH access (port 22) to the worker nodes.

If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0).

---

### OpenIdConnectProviderProps <a name=\\"OpenIdConnectProviderProps\\" id=\\"monocdk.aws_eks.OpenIdConnectProviderProps\\"></a>

Initialization properties for \`OpenIdConnectProvider\`.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.OpenIdConnectProviderProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.OpenIdConnectProviderProps;

OpenIdConnectProviderProps.builder()
    .url(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.OpenIdConnectProviderProps.property.url\\">url</a></code> | <code>java.lang.String</code> | The URL of the identity provider. |

---

##### \`url\`<sup>Required</sup> <a name=\\"url\\" id=\\"monocdk.aws_eks.OpenIdConnectProviderProps.property.url\\"></a>

\`\`\`java
public java.lang.String getUrl();
\`\`\`

- *Type:* java.lang.String

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---

### ProviderProperty <a name=\\"ProviderProperty\\" id=\\"monocdk.aws_eks.CfnCluster.ProviderProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnCluster.ProviderProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster.ProviderProperty;

ProviderProperty.builder()
//  .keyArn(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\">keyArn</a></code> | <code>java.lang.String</code> | \`CfnCluster.ProviderProperty.KeyArn\`. |

---

##### \`keyArn\`<sup>Optional</sup> <a name=\\"keyArn\\" id=\\"monocdk.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\"></a>

\`\`\`java
public java.lang.String getKeyArn();
\`\`\`

- *Type:* java.lang.String

\`CfnCluster.ProviderProperty.KeyArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn)

---

### RemoteAccessProperty <a name=\\"RemoteAccessProperty\\" id=\\"monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup.RemoteAccessProperty;

RemoteAccessProperty.builder()
    .ec2SshKey(java.lang.String)
//  .sourceSecurityGroups(java.util.List<java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\">ec2SshKey</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\">sourceSecurityGroups</a></code> | <code>java.util.List<java.lang.String></code> | \`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`. |

---

##### \`ec2SshKey\`<sup>Required</sup> <a name=\\"ec2SshKey\\" id=\\"monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\"></a>

\`\`\`java
public java.lang.String getEc2SshKey();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey)

---

##### \`sourceSecurityGroups\`<sup>Optional</sup> <a name=\\"sourceSecurityGroups\\" id=\\"monocdk.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSourceSecurityGroups();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups)

---

### ResourcesVpcConfigProperty <a name=\\"ResourcesVpcConfigProperty\\" id=\\"monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnCluster.ResourcesVpcConfigProperty;

ResourcesVpcConfigProperty.builder()
    .subnetIds(java.util.List<java.lang.String>)
//  .securityGroupIds(java.util.List<java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\">subnetIds</a></code> | <code>java.util.List<java.lang.String></code> | \`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\">securityGroupIds</a></code> | <code>java.util.List<java.lang.String></code> | \`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`. |

---

##### \`subnetIds\`<sup>Required</sup> <a name=\\"subnetIds\\" id=\\"monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSubnetIds();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids)

---

##### \`securityGroupIds\`<sup>Optional</sup> <a name=\\"securityGroupIds\\" id=\\"monocdk.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\"></a>

\`\`\`java
public java.util.List<java.lang.String> getSecurityGroupIds();
\`\`\`

- *Type:* java.util.List<java.lang.String>

\`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids)

---

### ScalingConfigProperty <a name=\\"ScalingConfigProperty\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup.ScalingConfigProperty;

ScalingConfigProperty.builder()
//  .desiredSize(java.lang.Number)
//  .maxSize(java.lang.Number)
//  .minSize(java.lang.Number)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\">desiredSize</a></code> | <code>java.lang.Number</code> | \`CfnNodegroup.ScalingConfigProperty.DesiredSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\">maxSize</a></code> | <code>java.lang.Number</code> | \`CfnNodegroup.ScalingConfigProperty.MaxSize\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\">minSize</a></code> | <code>java.lang.Number</code> | \`CfnNodegroup.ScalingConfigProperty.MinSize\`. |

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\"></a>

\`\`\`java
public java.lang.Number getDesiredSize();
\`\`\`

- *Type:* java.lang.Number

\`CfnNodegroup.ScalingConfigProperty.DesiredSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\"></a>

\`\`\`java
public java.lang.Number getMaxSize();
\`\`\`

- *Type:* java.lang.Number

\`CfnNodegroup.ScalingConfigProperty.MaxSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize)

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"monocdk.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\"></a>

\`\`\`java
public java.lang.Number getMinSize();
\`\`\`

- *Type:* java.lang.Number

\`CfnNodegroup.ScalingConfigProperty.MinSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize)

---

### Selector <a name=\\"Selector\\" id=\\"monocdk.aws_eks.Selector\\"></a>

Fargate profile selector.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.Selector.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.Selector;

Selector.builder()
    .namespace(java.lang.String)
//  .labels(java.util.Map<java.lang.String, java.lang.String>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.Selector.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The Kubernetes namespace that the selector should match. |
| <code><a href=\\"#monocdk.aws_eks.Selector.property.labels\\">labels</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | The Kubernetes labels that the selector should match. |

---

##### \`namespace\`<sup>Required</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.Selector.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String

The Kubernetes namespace that the selector should match.

You must specify a namespace for a selector. The selector only matches pods that are created in this namespace, but you can create multiple selectors to target multiple namespaces.

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"monocdk.aws_eks.Selector.property.labels\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getLabels();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>
- *Default:* all pods within the namespace will be selected.

The Kubernetes labels that the selector should match.

A pod must contain all of the labels that are specified in the selector for it to be considered a match.

---

### SelectorProperty <a name=\\"SelectorProperty\\" id=\\"monocdk.aws_eks.CfnFargateProfile.SelectorProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnFargateProfile.SelectorProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnFargateProfile.SelectorProperty;

SelectorProperty.builder()
    .namespace(java.lang.String)
//  .labels(IResolvable)
//  .labels(java.util.List<LabelProperty)
//  .labels(IResolvable>)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | \`CfnFargateProfile.SelectorProperty.Namespace\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\">labels</a></code> | <code>software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.LabelProperty OR software.amazon.awscdk.core.IResolvable></code> | \`CfnFargateProfile.SelectorProperty.Labels\`. |

---

##### \`namespace\`<sup>Required</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String

\`CfnFargateProfile.SelectorProperty.Namespace\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"monocdk.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\"></a>

\`\`\`java
public java.lang.Object getLabels();
\`\`\`

- *Type:* software.amazon.awscdk.core.IResolvable OR java.util.List<software.amazon.awscdk.services.eks.CfnFargateProfile.LabelProperty OR software.amazon.awscdk.core.IResolvable>

\`CfnFargateProfile.SelectorProperty.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels)

---

### ServiceAccountOptions <a name=\\"ServiceAccountOptions\\" id=\\"monocdk.aws_eks.ServiceAccountOptions\\"></a>

Options for \`ServiceAccount\`.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ServiceAccountOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ServiceAccountOptions;

ServiceAccountOptions.builder()
//  .name(java.lang.String)
//  .namespace(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountOptions.property.name\\">name</a></code> | <code>java.lang.String</code> | The name of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountOptions.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The namespace of the service account. |

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"monocdk.aws_eks.ServiceAccountOptions.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.ServiceAccountOptions.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* \\"default\\"

The namespace of the service account.

---

### ServiceAccountProps <a name=\\"ServiceAccountProps\\" id=\\"monocdk.aws_eks.ServiceAccountProps\\"></a>

Properties for defining service accounts.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ServiceAccountProps.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ServiceAccountProps;

ServiceAccountProps.builder()
//  .name(java.lang.String)
//  .namespace(java.lang.String)
    .cluster(ICluster)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountProps.property.name\\">name</a></code> | <code>java.lang.String</code> | The name of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountProps.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The namespace of the service account. |
| <code><a href=\\"#monocdk.aws_eks.ServiceAccountProps.property.cluster\\">cluster</a></code> | <code>software.amazon.awscdk.services.eks.ICluster</code> | The cluster to apply the patch to. |

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"monocdk.aws_eks.ServiceAccountProps.property.name\\"></a>

\`\`\`java
public java.lang.String getName();
\`\`\`

- *Type:* java.lang.String
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.ServiceAccountProps.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"monocdk.aws_eks.ServiceAccountProps.property.cluster\\"></a>

\`\`\`java
public ICluster getCluster();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.ICluster

The cluster to apply the patch to.

---

### ServiceLoadBalancerAddressOptions <a name=\\"ServiceLoadBalancerAddressOptions\\" id=\\"monocdk.aws_eks.ServiceLoadBalancerAddressOptions\\"></a>

Options for fetching a ServiceLoadBalancerAddress.

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.ServiceLoadBalancerAddressOptions.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.ServiceLoadBalancerAddressOptions;

ServiceLoadBalancerAddressOptions.builder()
//  .namespace(java.lang.String)
//  .timeout(Duration)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\">namespace</a></code> | <code>java.lang.String</code> | The namespace the service belongs to. |
| <code><a href=\\"#monocdk.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\">timeout</a></code> | <code>software.amazon.awscdk.core.Duration</code> | Timeout for waiting on the load balancer address. |

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"monocdk.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\"></a>

\`\`\`java
public java.lang.String getNamespace();
\`\`\`

- *Type:* java.lang.String
- *Default:* 'default'

The namespace the service belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"monocdk.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\"></a>

\`\`\`java
public Duration getTimeout();
\`\`\`

- *Type:* software.amazon.awscdk.core.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on the load balancer address.

---

### TaintProperty <a name=\\"TaintProperty\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html)

#### Initializer <a name=\\"Initializer\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.CfnNodegroup.TaintProperty;

TaintProperty.builder()
//  .effect(java.lang.String)
//  .key(java.lang.String)
//  .value(java.lang.String)
    .build();
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.TaintProperty.property.effect\\">effect</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.TaintProperty.Effect\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.TaintProperty.property.key\\">key</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.TaintProperty.Key\`. |
| <code><a href=\\"#monocdk.aws_eks.CfnNodegroup.TaintProperty.property.value\\">value</a></code> | <code>java.lang.String</code> | \`CfnNodegroup.TaintProperty.Value\`. |

---

##### \`effect\`<sup>Optional</sup> <a name=\\"effect\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty.property.effect\\"></a>

\`\`\`java
public java.lang.String getEffect();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.TaintProperty.Effect\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect)

---

##### \`key\`<sup>Optional</sup> <a name=\\"key\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty.property.key\\"></a>

\`\`\`java
public java.lang.String getKey();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.TaintProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key)

---

##### \`value\`<sup>Optional</sup> <a name=\\"value\\" id=\\"monocdk.aws_eks.CfnNodegroup.TaintProperty.property.value\\"></a>

\`\`\`java
public java.lang.String getValue();
\`\`\`

- *Type:* java.lang.String

\`CfnNodegroup.TaintProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value)

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### EksOptimizedImage <a name=\\"EksOptimizedImage\\" id=\\"monocdk.aws_eks.EksOptimizedImage\\"></a>

- *Implements:* software.amazon.awscdk.services.ec2.IMachineImage

Construct an Amazon Linux 2 image from the latest EKS Optimized AMI published in SSM.

#### Initializers <a name=\\"Initializers\\" id=\\"monocdk.aws_eks.EksOptimizedImage.Initializer\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.EksOptimizedImage;

EksOptimizedImage.Builder.create()
//  .cpuArch(CpuArch)
//  .kubernetesVersion(java.lang.String)
//  .nodeType(NodeType)
    .build();
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImage.Initializer.parameter.cpuArch\\">cpuArch</a></code> | <code>software.amazon.awscdk.services.eks.CpuArch</code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImage.Initializer.parameter.kubernetesVersion\\">kubernetesVersion</a></code> | <code>java.lang.String</code> | The Kubernetes version to use. |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImage.Initializer.parameter.nodeType\\">nodeType</a></code> | <code>software.amazon.awscdk.services.eks.NodeType</code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`cpuArch\`<sup>Optional</sup> <a name=\\"cpuArch\\" id=\\"monocdk.aws_eks.EksOptimizedImage.Initializer.parameter.cpuArch\\"></a>

- *Type:* software.amazon.awscdk.services.eks.CpuArch
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`kubernetesVersion\`<sup>Optional</sup> <a name=\\"kubernetesVersion\\" id=\\"monocdk.aws_eks.EksOptimizedImage.Initializer.parameter.kubernetesVersion\\"></a>

- *Type:* java.lang.String
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`nodeType\`<sup>Optional</sup> <a name=\\"nodeType\\" id=\\"monocdk.aws_eks.EksOptimizedImage.Initializer.parameter.nodeType\\"></a>

- *Type:* software.amazon.awscdk.services.eks.NodeType
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EksOptimizedImage.getImage\\">getImage</a></code> | Return the correct image. |

---

##### \`getImage\` <a name=\\"getImage\\" id=\\"monocdk.aws_eks.EksOptimizedImage.getImage\\"></a>

\`\`\`java
public getImage(Construct scope)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"monocdk.aws_eks.EksOptimizedImage.getImage.parameter.scope\\"></a>

- *Type:* software.amazon.awscdk.core.Construct

---




### EndpointAccess <a name=\\"EndpointAccess\\" id=\\"monocdk.aws_eks.EndpointAccess\\"></a>

Endpoint access characteristics.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EndpointAccess.onlyFrom\\">onlyFrom</a></code> | Restrict public access to specific CIDR blocks. |

---

##### \`onlyFrom\` <a name=\\"onlyFrom\\" id=\\"monocdk.aws_eks.EndpointAccess.onlyFrom\\"></a>

\`\`\`java
public onlyFrom(java.lang.String cidr)
\`\`\`

###### \`cidr\`<sup>Required</sup> <a name=\\"cidr\\" id=\\"monocdk.aws_eks.EndpointAccess.onlyFrom.parameter.cidr\\"></a>

- *Type:* java.lang.String

CIDR blocks.

---



#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.EndpointAccess.property.PRIVATE\\">PRIVATE</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | The cluster endpoint is only accessible through your VPC. |
| <code><a href=\\"#monocdk.aws_eks.EndpointAccess.property.PUBLIC\\">PUBLIC</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | The cluster endpoint is accessible from outside of your VPC. |
| <code><a href=\\"#monocdk.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\">PUBLIC_AND_PRIVATE</a></code> | <code>software.amazon.awscdk.services.eks.EndpointAccess</code> | The cluster endpoint is accessible from outside of your VPC. |

---

##### \`PRIVATE\`<sup>Required</sup> <a name=\\"PRIVATE\\" id=\\"monocdk.aws_eks.EndpointAccess.property.PRIVATE\\"></a>

\`\`\`java
public EndpointAccess getPrivate();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess

The cluster endpoint is only accessible through your VPC.

Worker node traffic to the endpoint will stay within your VPC.

---

##### \`PUBLIC\`<sup>Required</sup> <a name=\\"PUBLIC\\" id=\\"monocdk.aws_eks.EndpointAccess.property.PUBLIC\\"></a>

\`\`\`java
public EndpointAccess getPublic();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic will leave your VPC to connect to the endpoint.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

##### \`PUBLIC_AND_PRIVATE\`<sup>Required</sup> <a name=\\"PUBLIC_AND_PRIVATE\\" id=\\"monocdk.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\"></a>

\`\`\`java
public EndpointAccess getPublicAndPrivate();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.EndpointAccess

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic to the endpoint will stay within your VPC.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC_AND_PRIVATE.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

### KubernetesVersion <a name=\\"KubernetesVersion\\" id=\\"monocdk.aws_eks.KubernetesVersion\\"></a>

Kubernetes cluster version.


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.of\\">of</a></code> | Custom cluster version. |

---

##### \`of\` <a name=\\"of\\" id=\\"monocdk.aws_eks.KubernetesVersion.of\\"></a>

\`\`\`java
import software.amazon.awscdk.services.eks.KubernetesVersion;

KubernetesVersion.of(java.lang.String version)
\`\`\`

###### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.KubernetesVersion.of.parameter.version\\"></a>

- *Type:* java.lang.String

custom version number.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.version\\">version</a></code> | <code>java.lang.String</code> | cluster version number. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.version\\"></a>

\`\`\`java
public java.lang.String getVersion();
\`\`\`

- *Type:* java.lang.String

cluster version number.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_14\\">V1_14</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.14. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_15\\">V1_15</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.15. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_16\\">V1_16</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.16. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_17\\">V1_17</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.17. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_18\\">V1_18</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.18. |
| <code><a href=\\"#monocdk.aws_eks.KubernetesVersion.property.V1_19\\">V1_19</a></code> | <code>software.amazon.awscdk.services.eks.KubernetesVersion</code> | Kubernetes version 1.19. |

---

##### \`V1_14\`<sup>Required</sup> <a name=\\"V1_14\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_14\\"></a>

\`\`\`java
public KubernetesVersion getV114();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.14.

---

##### \`V1_15\`<sup>Required</sup> <a name=\\"V1_15\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_15\\"></a>

\`\`\`java
public KubernetesVersion getV115();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.15.

---

##### \`V1_16\`<sup>Required</sup> <a name=\\"V1_16\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_16\\"></a>

\`\`\`java
public KubernetesVersion getV116();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.16.

---

##### \`V1_17\`<sup>Required</sup> <a name=\\"V1_17\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_17\\"></a>

\`\`\`java
public KubernetesVersion getV117();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.17.

---

##### \`V1_18\`<sup>Required</sup> <a name=\\"V1_18\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_18\\"></a>

\`\`\`java
public KubernetesVersion getV118();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.18.

---

##### \`V1_19\`<sup>Required</sup> <a name=\\"V1_19\\" id=\\"monocdk.aws_eks.KubernetesVersion.property.V1_19\\"></a>

\`\`\`java
public KubernetesVersion getV119();
\`\`\`

- *Type:* software.amazon.awscdk.services.eks.KubernetesVersion

Kubernetes version 1.19.

---

## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### ICluster <a name=\\"ICluster\\" id=\\"monocdk.aws_eks.ICluster\\"></a>

- *Extends:* software.amazon.awscdk.core.IResource, software.amazon.awscdk.services.ec2.IConnectable

- *Implemented By:* software.amazon.awscdk.services.eks.Cluster, software.amazon.awscdk.services.eks.FargateCluster, software.amazon.awscdk.services.eks.ICluster

An EKS cluster.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ICluster.addCdk8sChart\\">addCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.addHelmChart\\">addHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.addManifest\\">addManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.addServiceAccount\\">addServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |

---

##### \`addCdk8sChart\` <a name=\\"addCdk8sChart\\" id=\\"monocdk.aws_eks.ICluster.addCdk8sChart\\"></a>

\`\`\`java
public addCdk8sChart(java.lang.String id, Construct chart)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.ICluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"monocdk.aws_eks.ICluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* software.constructs.Construct

the cdk8s chart.

---

##### \`addHelmChart\` <a name=\\"addHelmChart\\" id=\\"monocdk.aws_eks.ICluster.addHelmChart\\"></a>

\`\`\`java
public addHelmChart(java.lang.String id, HelmChartOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.ICluster.addHelmChart.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this chart.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.ICluster.addHelmChart.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.HelmChartOptions

options of this chart.

---

##### \`addManifest\` <a name=\\"addManifest\\" id=\\"monocdk.aws_eks.ICluster.addManifest\\"></a>

\`\`\`java
public addManifest(java.lang.String id, java.util.Map<java.lang.String, java.lang.Object> manifest)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.ICluster.addManifest.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of this manifest.

---

###### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"monocdk.aws_eks.ICluster.addManifest.parameter.manifest\\"></a>

- *Type:* java.util.Map<java.lang.String, java.lang.Object>

a list of Kubernetes resource specifications.

---

##### \`addServiceAccount\` <a name=\\"addServiceAccount\\" id=\\"monocdk.aws_eks.ICluster.addServiceAccount\\"></a>

\`\`\`java
public addServiceAccount(java.lang.String id)
public addServiceAccount(java.lang.String id, ServiceAccountOptions options)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"monocdk.aws_eks.ICluster.addServiceAccount.parameter.id\\"></a>

- *Type:* java.lang.String

logical id of service account.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"monocdk.aws_eks.ICluster.addServiceAccount.parameter.options\\"></a>

- *Type:* software.amazon.awscdk.services.eks.ServiceAccountOptions

service account options.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.node\\">node</a></code> | <code>software.amazon.awscdk.core.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.env\\">env</a></code> | <code>software.amazon.awscdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.stack\\">stack</a></code> | <code>software.amazon.awscdk.core.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.connections\\">connections</a></code> | <code>software.amazon.awscdk.services.ec2.Connections</code> | *No description.* |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterArn\\">clusterArn</a></code> | <code>java.lang.String</code> | The unique ARN assigned to the service by AWS in the form of arn:aws:eks:. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>java.lang.String</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>java.lang.String</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>java.lang.String</code> | The API Server endpoint URL. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterName\\">clusterName</a></code> | <code>java.lang.String</code> | The physical name of the Cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterSecurityGroup\\">clusterSecurityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>java.lang.String</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>software.amazon.awscdk.services.iam.IOpenIdConnectProvider</code> | The Open ID Connect Provider of the cluster used to configure Service Accounts. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.prune\\">prune</a></code> | <code>java.lang.Boolean</code> | Indicates whether Kubernetes resources can be automatically pruned. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.vpc\\">vpc</a></code> | <code>software.amazon.awscdk.services.ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>java.util.Map<java.lang.String, java.lang.String></code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlLayer\\">kubectlLayer</a></code> | <code>software.amazon.awscdk.services.lambda.ILayerVersion</code> | An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlMemory\\">kubectlMemory</a></code> | <code>software.amazon.awscdk.core.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlPrivateSubnets\\">kubectlPrivateSubnets</a></code> | <code>java.util.List<software.amazon.awscdk.services.ec2.ISubnet></code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlRole\\">kubectlRole</a></code> | <code>software.amazon.awscdk.services.iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#monocdk.aws_eks.ICluster.property.kubectlSecurityGroup\\">kubectlSecurityGroup</a></code> | <code>software.amazon.awscdk.services.ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"monocdk.aws_eks.ICluster.property.node\\"></a>

\`\`\`java
public ConstructNode getNode();
\`\`\`

- *Type:* software.amazon.awscdk.core.ConstructNode

The construct tree node for this construct.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"monocdk.aws_eks.ICluster.property.env\\"></a>

\`\`\`java
public ResourceEnvironment getEnv();
\`\`\`

- *Type:* software.amazon.awscdk.core.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"monocdk.aws_eks.ICluster.property.stack\\"></a>

\`\`\`java
public Stack getStack();
\`\`\`

- *Type:* software.amazon.awscdk.core.Stack

The stack in which this resource is defined.

---

##### \`connections\`<sup>Required</sup> <a name=\\"connections\\" id=\\"monocdk.aws_eks.ICluster.property.connections\\"></a>

\`\`\`java
public Connections getConnections();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.Connections

---

##### \`clusterArn\`<sup>Required</sup> <a name=\\"clusterArn\\" id=\\"monocdk.aws_eks.ICluster.property.clusterArn\\"></a>

\`\`\`java
public java.lang.String getClusterArn();
\`\`\`

- *Type:* java.lang.String

The unique ARN assigned to the service by AWS in the form of arn:aws:eks:.

---

##### \`clusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"monocdk.aws_eks.ICluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`java
public java.lang.String getClusterCertificateAuthorityData();
\`\`\`

- *Type:* java.lang.String

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"monocdk.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`java
public java.lang.String getClusterEncryptionConfigKeyArn();
\`\`\`

- *Type:* java.lang.String

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Required</sup> <a name=\\"clusterEndpoint\\" id=\\"monocdk.aws_eks.ICluster.property.clusterEndpoint\\"></a>

\`\`\`java
public java.lang.String getClusterEndpoint();
\`\`\`

- *Type:* java.lang.String

The API Server endpoint URL.

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"monocdk.aws_eks.ICluster.property.clusterName\\"></a>

\`\`\`java
public java.lang.String getClusterName();
\`\`\`

- *Type:* java.lang.String

The physical name of the Cluster.

---

##### \`clusterSecurityGroup\`<sup>Required</sup> <a name=\\"clusterSecurityGroup\\" id=\\"monocdk.aws_eks.ICluster.property.clusterSecurityGroup\\"></a>

\`\`\`java
public ISecurityGroup getClusterSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`clusterSecurityGroupId\`<sup>Required</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"monocdk.aws_eks.ICluster.property.clusterSecurityGroupId\\"></a>

\`\`\`java
public java.lang.String getClusterSecurityGroupId();
\`\`\`

- *Type:* java.lang.String

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`openIdConnectProvider\`<sup>Required</sup> <a name=\\"openIdConnectProvider\\" id=\\"monocdk.aws_eks.ICluster.property.openIdConnectProvider\\"></a>

\`\`\`java
public IOpenIdConnectProvider getOpenIdConnectProvider();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IOpenIdConnectProvider

The Open ID Connect Provider of the cluster used to configure Service Accounts.

---

##### \`prune\`<sup>Required</sup> <a name=\\"prune\\" id=\\"monocdk.aws_eks.ICluster.property.prune\\"></a>

\`\`\`java
public java.lang.Boolean getPrune();
\`\`\`

- *Type:* java.lang.Boolean

Indicates whether Kubernetes resources can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`vpc\`<sup>Required</sup> <a name=\\"vpc\\" id=\\"monocdk.aws_eks.ICluster.property.vpc\\"></a>

\`\`\`java
public IVpc getVpc();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlEnvironment\\"></a>

\`\`\`java
public java.util.Map<java.lang.String, java.lang.String> getKubectlEnvironment();
\`\`\`

- *Type:* java.util.Map<java.lang.String, java.lang.String>

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlLayer\\"></a>

\`\`\`java
public ILayerVersion getKubectlLayer();
\`\`\`

- *Type:* software.amazon.awscdk.services.lambda.ILayerVersion

An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI.

If not defined, a default layer will be used.

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlMemory\\"></a>

\`\`\`java
public Size getKubectlMemory();
\`\`\`

- *Type:* software.amazon.awscdk.core.Size

Amount of memory to allocate to the provider's lambda function.

---

##### \`kubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnets\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`java
public java.util.List<ISubnet> getKubectlPrivateSubnets();
\`\`\`

- *Type:* java.util.List<software.amazon.awscdk.services.ec2.ISubnet>

Subnets to host the \`kubectl\` compute resources.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

##### \`kubectlRole\`<sup>Optional</sup> <a name=\\"kubectlRole\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlRole\\"></a>

\`\`\`java
public IRole getKubectlRole();
\`\`\`

- *Type:* software.amazon.awscdk.services.iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`kubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroup\\" id=\\"monocdk.aws_eks.ICluster.property.kubectlSecurityGroup\\"></a>

\`\`\`java
public ISecurityGroup getKubectlSecurityGroup();
\`\`\`

- *Type:* software.amazon.awscdk.services.ec2.ISecurityGroup

A security group to use for \`kubectl\` execution.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

### INodegroup <a name=\\"INodegroup\\" id=\\"monocdk.aws_eks.INodegroup\\"></a>

- *Extends:* software.amazon.awscdk.core.IResource

- *Implemented By:* software.amazon.awscdk.services.eks.Nodegroup, software.amazon.awscdk.services.eks.INodegroup

NodeGroup interface.


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#monocdk.aws_eks.INodegroup.property.node\\">node</a></code> | <code>software.amazon.awscdk.core.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#monocdk.aws_eks.INodegroup.property.env\\">env</a></code> | <code>software.amazon.awscdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#monocdk.aws_eks.INodegroup.property.stack\\">stack</a></code> | <code>software.amazon.awscdk.core.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#monocdk.aws_eks.INodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>java.lang.String</code> | Name of the nodegroup. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"monocdk.aws_eks.INodegroup.property.node\\"></a>

\`\`\`java
public ConstructNode getNode();
\`\`\`

- *Type:* software.amazon.awscdk.core.ConstructNode

The construct tree node for this construct.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"monocdk.aws_eks.INodegroup.property.env\\"></a>

\`\`\`java
public ResourceEnvironment getEnv();
\`\`\`

- *Type:* software.amazon.awscdk.core.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"monocdk.aws_eks.INodegroup.property.stack\\"></a>

\`\`\`java
public Stack getStack();
\`\`\`

- *Type:* software.amazon.awscdk.core.Stack

The stack in which this resource is defined.

---

##### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"monocdk.aws_eks.INodegroup.property.nodegroupName\\"></a>

\`\`\`java
public java.lang.String getNodegroupName();
\`\`\`

- *Type:* java.lang.String

Name of the nodegroup.

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### CapacityType <a name=\\"CapacityType\\" id=\\"monocdk.aws_eks.CapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CapacityType.SPOT\\">SPOT</a></code> | spot instances. |
| <code><a href=\\"#monocdk.aws_eks.CapacityType.ON_DEMAND\\">ON_DEMAND</a></code> | on-demand instances. |

---

Capacity type of the managed node group.

#### \`SPOT\` <a name=\\"SPOT\\" id=\\"monocdk.aws_eks.CapacityType.SPOT\\"></a>

spot instances.

---


#### \`ON_DEMAND\` <a name=\\"ON_DEMAND\\" id=\\"monocdk.aws_eks.CapacityType.ON_DEMAND\\"></a>

on-demand instances.

---


### CoreDnsComputeType <a name=\\"CoreDnsComputeType\\" id=\\"monocdk.aws_eks.CoreDnsComputeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CoreDnsComputeType.EC2\\">EC2</a></code> | Deploy CoreDNS on EC2 instances. |
| <code><a href=\\"#monocdk.aws_eks.CoreDnsComputeType.FARGATE\\">FARGATE</a></code> | Deploy CoreDNS on Fargate-managed instances. |

---

The type of compute resources to use for CoreDNS.

#### \`EC2\` <a name=\\"EC2\\" id=\\"monocdk.aws_eks.CoreDnsComputeType.EC2\\"></a>

Deploy CoreDNS on EC2 instances.

---


#### \`FARGATE\` <a name=\\"FARGATE\\" id=\\"monocdk.aws_eks.CoreDnsComputeType.FARGATE\\"></a>

Deploy CoreDNS on Fargate-managed instances.

---


### CpuArch <a name=\\"CpuArch\\" id=\\"monocdk.aws_eks.CpuArch\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.CpuArch.ARM_64\\">ARM_64</a></code> | arm64 CPU type. |
| <code><a href=\\"#monocdk.aws_eks.CpuArch.X86_64\\">X86_64</a></code> | x86_64 CPU type. |

---

CPU architecture.

#### \`ARM_64\` <a name=\\"ARM_64\\" id=\\"monocdk.aws_eks.CpuArch.ARM_64\\"></a>

arm64 CPU type.

---


#### \`X86_64\` <a name=\\"X86_64\\" id=\\"monocdk.aws_eks.CpuArch.X86_64\\"></a>

x86_64 CPU type.

---


### DefaultCapacityType <a name=\\"DefaultCapacityType\\" id=\\"monocdk.aws_eks.DefaultCapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.DefaultCapacityType.NODEGROUP\\">NODEGROUP</a></code> | managed node group. |
| <code><a href=\\"#monocdk.aws_eks.DefaultCapacityType.EC2\\">EC2</a></code> | EC2 autoscaling group. |

---

The default capacity type for the cluster.

#### \`NODEGROUP\` <a name=\\"NODEGROUP\\" id=\\"monocdk.aws_eks.DefaultCapacityType.NODEGROUP\\"></a>

managed node group.

---


#### \`EC2\` <a name=\\"EC2\\" id=\\"monocdk.aws_eks.DefaultCapacityType.EC2\\"></a>

EC2 autoscaling group.

---


### MachineImageType <a name=\\"MachineImageType\\" id=\\"monocdk.aws_eks.MachineImageType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.MachineImageType.AMAZON_LINUX_2\\">AMAZON_LINUX_2</a></code> | Amazon EKS-optimized Linux AMI. |
| <code><a href=\\"#monocdk.aws_eks.MachineImageType.BOTTLEROCKET\\">BOTTLEROCKET</a></code> | Bottlerocket AMI. |

---

The machine image type.

#### \`AMAZON_LINUX_2\` <a name=\\"AMAZON_LINUX_2\\" id=\\"monocdk.aws_eks.MachineImageType.AMAZON_LINUX_2\\"></a>

Amazon EKS-optimized Linux AMI.

---


#### \`BOTTLEROCKET\` <a name=\\"BOTTLEROCKET\\" id=\\"monocdk.aws_eks.MachineImageType.BOTTLEROCKET\\"></a>

Bottlerocket AMI.

---


### NodegroupAmiType <a name=\\"NodegroupAmiType\\" id=\\"monocdk.aws_eks.NodegroupAmiType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodegroupAmiType.AL2_X86_64\\">AL2_X86_64</a></code> | Amazon Linux 2 (x86-64). |
| <code><a href=\\"#monocdk.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\">AL2_X86_64_GPU</a></code> | Amazon Linux 2 with GPU support. |
| <code><a href=\\"#monocdk.aws_eks.NodegroupAmiType.AL2_ARM_64\\">AL2_ARM_64</a></code> | Amazon Linux 2 (ARM-64). |

---

The AMI type for your node group.

GPU instance types should use the \`AL2_x86_64_GPU\` AMI type, which uses the Amazon EKS-optimized Linux AMI with GPU support. Non-GPU instances should use the \`AL2_x86_64\` AMI type, which uses the Amazon EKS-optimized Linux AMI.

#### \`AL2_X86_64\` <a name=\\"AL2_X86_64\\" id=\\"monocdk.aws_eks.NodegroupAmiType.AL2_X86_64\\"></a>

Amazon Linux 2 (x86-64).

---


#### \`AL2_X86_64_GPU\` <a name=\\"AL2_X86_64_GPU\\" id=\\"monocdk.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\"></a>

Amazon Linux 2 with GPU support.

---


#### \`AL2_ARM_64\` <a name=\\"AL2_ARM_64\\" id=\\"monocdk.aws_eks.NodegroupAmiType.AL2_ARM_64\\"></a>

Amazon Linux 2 (ARM-64).

---


### NodeType <a name=\\"NodeType\\" id=\\"monocdk.aws_eks.NodeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.NodeType.STANDARD\\">STANDARD</a></code> | Standard instances. |
| <code><a href=\\"#monocdk.aws_eks.NodeType.GPU\\">GPU</a></code> | GPU instances. |
| <code><a href=\\"#monocdk.aws_eks.NodeType.INFERENTIA\\">INFERENTIA</a></code> | Inferentia instances. |

---

Whether the worker nodes should support GPU or just standard instances.

#### \`STANDARD\` <a name=\\"STANDARD\\" id=\\"monocdk.aws_eks.NodeType.STANDARD\\"></a>

Standard instances.

---


#### \`GPU\` <a name=\\"GPU\\" id=\\"monocdk.aws_eks.NodeType.GPU\\"></a>

GPU instances.

---


#### \`INFERENTIA\` <a name=\\"INFERENTIA\\" id=\\"monocdk.aws_eks.NodeType.INFERENTIA\\"></a>

Inferentia instances.

---


### PatchType <a name=\\"PatchType\\" id=\\"monocdk.aws_eks.PatchType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#monocdk.aws_eks.PatchType.JSON\\">JSON</a></code> | JSON Patch, RFC 6902. |
| <code><a href=\\"#monocdk.aws_eks.PatchType.MERGE\\">MERGE</a></code> | JSON Merge patch. |
| <code><a href=\\"#monocdk.aws_eks.PatchType.STRATEGIC\\">STRATEGIC</a></code> | Strategic merge patch. |

---

Values for \`kubectl patch\` --type argument.

#### \`JSON\` <a name=\\"JSON\\" id=\\"monocdk.aws_eks.PatchType.JSON\\"></a>

JSON Patch, RFC 6902.

---


#### \`MERGE\` <a name=\\"MERGE\\" id=\\"monocdk.aws_eks.PatchType.MERGE\\"></a>

JSON Merge patch.

---


#### \`STRATEGIC\` <a name=\\"STRATEGIC\\" id=\\"monocdk.aws_eks.PatchType.STRATEGIC\\"></a>

Strategic merge patch.

---

"
`;

exports[`package installation does not run lifecycle hooks 1`] = `
"# construct-library

This is a test project to make sure the \`jsii-docgen\` cli property renders API documentation
for construct libraries.
# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### GreeterBucket <a name=\\"GreeterBucket\\" id=\\"construct-library.GreeterBucket\\"></a>

#### Initializers <a name=\\"Initializers\\" id=\\"construct-library.GreeterBucket.Initializer\\"></a>

\`\`\`typescript
import { GreeterBucket } from 'construct-library'

new GreeterBucket(scope: Construct, id: string, props?: BucketProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#construct-library.GreeterBucket.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#construct-library.GreeterBucket.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#construct-library.GreeterBucket.Initializer.parameter.props\\">props</a></code> | <code>@aws-cdk/aws-s3.BucketProps</code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"construct-library.GreeterBucket.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"construct-library.GreeterBucket.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"construct-library.GreeterBucket.Initializer.parameter.props\\"></a>

- *Type:* @aws-cdk/aws-s3.BucketProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#construct-library.GreeterBucket.greet\\">greet</a></code> | *No description.* |

---

##### \`greet\` <a name=\\"greet\\" id=\\"construct-library.GreeterBucket.greet\\"></a>

\`\`\`typescript
public greet()
\`\`\`







"
`;

exports[`python for package 1`] = `
Object {
  "apiReference": Object {
    "classes": Array [
      Object {
        "constants": Array [],
        "displayName": "AuthorizationToken",
        "docs": Object {
          "links": Array [
            "https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html",
          ],
          "summary": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
        },
        "fqn": "aws_cdk.aws_ecr.AuthorizationToken",
        "id": "@aws-cdk/aws-ecr.AuthorizationToken",
        "initializer": undefined,
        "instanceMethods": Array [],
        "interfaces": Array [],
        "properties": Array [],
        "staticMethods": Array [
          Object {
            "displayName": "grant_read",
            "docs": Object {
              "summary": "Grant access to retrieve an authorization token.",
            },
            "fqn": "aws_cdk.aws_ecr.AuthorizationToken.grant_read",
            "id": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "grantee",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.AuthorizationToken.grant_read.parameter.grantee",
                "id": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IGrantable",
                      "fqn": "aws_cdk.aws_iam.IGrantable",
                      "id": "@aws-cdk/aws-iam.IGrantable",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.AuthorizationToken.grant_read(
  grantee: IGrantable
)",
          },
        ],
      },
      Object {
        "constants": Array [],
        "displayName": "PublicGalleryAuthorizationToken",
        "docs": Object {
          "links": Array [
            "https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth",
          ],
          "summary": "Authorization token to access the global public ECR Gallery via Docker CLI.",
        },
        "fqn": "aws_cdk.aws_ecr.PublicGalleryAuthorizationToken",
        "id": "@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken",
        "initializer": undefined,
        "instanceMethods": Array [],
        "interfaces": Array [],
        "properties": Array [],
        "staticMethods": Array [
          Object {
            "displayName": "grant_read",
            "docs": Object {
              "summary": "Grant access to retrieve an authorization token.",
            },
            "fqn": "aws_cdk.aws_ecr.PublicGalleryAuthorizationToken.grant_read",
            "id": "@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "grantee",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.PublicGalleryAuthorizationToken.grant_read.parameter.grantee",
                "id": "@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IGrantable",
                      "fqn": "aws_cdk.aws_iam.IGrantable",
                      "id": "@aws-cdk/aws-iam.IGrantable",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.PublicGalleryAuthorizationToken.grant_read(
  grantee: IGrantable
)",
          },
        ],
      },
    ],
    "constructs": Array [
      Object {
        "constants": Array [
          Object {
            "const": true,
            "default": undefined,
            "displayName": "CFN_RESOURCE_TYPE_NAME",
            "docs": Object {
              "summary": "The CloudFormation resource type name for this resource class.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "CFN_RESOURCE_TYPE_NAME: str",
          },
        ],
        "displayName": "CfnPublicRepository",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html",
          ],
          "summary": "A CloudFormation \`AWS::ECR::PublicRepository\`.",
        },
        "fqn": "aws_cdk.aws_ecr.CfnPublicRepository",
        "id": "@aws-cdk/aws-ecr.CfnPublicRepository",
        "initializer": Object {
          "displayName": "Initializer",
          "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.Initializer",
          "id": "@aws-cdk/aws-ecr.CfnPublicRepository.Initializer",
          "parameters": Array [
            Object {
              "default": undefined,
              "displayName": "scope",
              "docs": Object {
                "summary": "- scope in which this resource is defined.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.Initializer.parameter.scope",
              "id": "@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "%",
                "types": Array [
                  Object {
                    "displayName": "Construct",
                    "fqn": "aws_cdk.core.Construct",
                    "id": "@aws-cdk/core.Construct",
                    "packageName": "@aws-cdk/core",
                    "packageVersion": "99.99.99",
                    "submodule": undefined,
                  },
                ],
              },
            },
            Object {
              "default": undefined,
              "displayName": "id",
              "docs": Object {
                "summary": "- scoped id of the resource.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.Initializer.parameter.id",
              "id": "@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": undefined,
              "displayName": "repository_catalog_data",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata",
                ],
                "summary": "\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.Initializer.parameter.repository_catalog_data",
              "id": "@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.Any",
              },
            },
            Object {
              "default": undefined,
              "displayName": "repository_name",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname",
                ],
                "summary": "\`AWS::ECR::PublicRepository.RepositoryName\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.Initializer.parameter.repository_name",
              "id": "@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": undefined,
              "displayName": "repository_policy_text",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext",
                ],
                "summary": "\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.Initializer.parameter.repository_policy_text",
              "id": "@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.Any",
              },
            },
            Object {
              "default": undefined,
              "displayName": "tags",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags",
                ],
                "summary": "\`AWS::ECR::PublicRepository.Tags\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.Initializer.parameter.tags",
              "id": "@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.List[%]",
                "types": Array [
                  Object {
                    "formattingPattern": "%",
                    "types": Array [
                      Object {
                        "displayName": "CfnTag",
                        "fqn": "aws_cdk.core.CfnTag",
                        "id": "@aws-cdk/core.CfnTag",
                        "packageName": "@aws-cdk/core",
                        "packageVersion": "99.99.99",
                        "submodule": undefined,
                      },
                    ],
                  },
                ],
              },
            },
          ],
          "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnPublicRepository(
  scope: Construct,
  id: str,
  repository_catalog_data: typing.Any = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)",
        },
        "instanceMethods": Array [
          Object {
            "displayName": "inspect",
            "docs": Object {
              "summary": "Examines the CloudFormation resource and discloses attributes.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.inspect",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepository.inspect",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "inspector",
                "docs": Object {
                  "summary": "- tree inspector to collect and process attributes.",
                },
                "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.inspect.parameter.inspector",
                "id": "@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "TreeInspector",
                      "fqn": "aws_cdk.core.TreeInspector",
                      "id": "@aws-cdk/core.TreeInspector",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def inspect(
  inspector: TreeInspector
)",
          },
        ],
        "interfaces": Array [
          Object {
            "displayName": "IInspectable",
            "fqn": "aws_cdk.core.IInspectable",
            "id": "@aws-cdk/core.IInspectable",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "attr_arn",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.property.attr_arn",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "attr_arn: str",
          },
          Object {
            "default": undefined,
            "displayName": "tags",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags",
              ],
              "summary": "\`AWS::ECR::PublicRepository.Tags\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.property.tags",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepository.property.tags",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "TagManager",
                  "fqn": "aws_cdk.core.TagManager",
                  "id": "@aws-cdk/core.TagManager",
                  "packageName": "@aws-cdk/core",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "tags: TagManager",
          },
          Object {
            "default": undefined,
            "displayName": "repository_catalog_data",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata",
              ],
              "summary": "\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.property.repository_catalog_data",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "repository_catalog_data: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "repository_policy_text",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext",
              ],
              "summary": "\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.property.repository_policy_text",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "repository_policy_text: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "repository_name",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname",
              ],
              "summary": "\`AWS::ECR::PublicRepository.RepositoryName\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepository.property.repository_name",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
        ],
        "staticMethods": Array [],
      },
      Object {
        "constants": Array [
          Object {
            "const": true,
            "default": undefined,
            "displayName": "CFN_RESOURCE_TYPE_NAME",
            "docs": Object {
              "summary": "The CloudFormation resource type name for this resource class.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME",
            "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "CFN_RESOURCE_TYPE_NAME: str",
          },
        ],
        "displayName": "CfnRegistryPolicy",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html",
          ],
          "summary": "A CloudFormation \`AWS::ECR::RegistryPolicy\`.",
        },
        "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy",
        "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy",
        "initializer": Object {
          "displayName": "Initializer",
          "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.Initializer",
          "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer",
          "parameters": Array [
            Object {
              "default": undefined,
              "displayName": "scope",
              "docs": Object {
                "summary": "- scope in which this resource is defined.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.Initializer.parameter.scope",
              "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "%",
                "types": Array [
                  Object {
                    "displayName": "Construct",
                    "fqn": "aws_cdk.core.Construct",
                    "id": "@aws-cdk/core.Construct",
                    "packageName": "@aws-cdk/core",
                    "packageVersion": "99.99.99",
                    "submodule": undefined,
                  },
                ],
              },
            },
            Object {
              "default": undefined,
              "displayName": "id",
              "docs": Object {
                "summary": "- scoped id of the resource.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.Initializer.parameter.id",
              "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": undefined,
              "displayName": "policy_text",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext",
                ],
                "summary": "\`AWS::ECR::RegistryPolicy.PolicyText\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.Initializer.parameter.policy_text",
              "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "typing.Any",
              },
            },
          ],
          "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRegistryPolicy(
  scope: Construct,
  id: str,
  policy_text: typing.Any
)",
        },
        "instanceMethods": Array [
          Object {
            "displayName": "inspect",
            "docs": Object {
              "summary": "Examines the CloudFormation resource and discloses attributes.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.inspect",
            "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "inspector",
                "docs": Object {
                  "summary": "- tree inspector to collect and process attributes.",
                },
                "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.inspect.parameter.inspector",
                "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "TreeInspector",
                      "fqn": "aws_cdk.core.TreeInspector",
                      "id": "@aws-cdk/core.TreeInspector",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def inspect(
  inspector: TreeInspector
)",
          },
        ],
        "interfaces": Array [
          Object {
            "displayName": "IInspectable",
            "fqn": "aws_cdk.core.IInspectable",
            "id": "@aws-cdk/core.IInspectable",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "attr_registry_id",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.property.attr_registry_id",
            "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "attr_registry_id: str",
          },
          Object {
            "default": undefined,
            "displayName": "policy_text",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext",
              ],
              "summary": "\`AWS::ECR::RegistryPolicy.PolicyText\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicy.property.policy_text",
            "id": "@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "policy_text: typing.Any",
          },
        ],
        "staticMethods": Array [],
      },
      Object {
        "constants": Array [
          Object {
            "const": true,
            "default": undefined,
            "displayName": "CFN_RESOURCE_TYPE_NAME",
            "docs": Object {
              "summary": "The CloudFormation resource type name for this resource class.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "CFN_RESOURCE_TYPE_NAME: str",
          },
        ],
        "displayName": "CfnReplicationConfiguration",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html",
          ],
          "summary": "A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.",
        },
        "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration",
        "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration",
        "initializer": Object {
          "displayName": "Initializer",
          "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.Initializer",
          "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer",
          "parameters": Array [
            Object {
              "default": undefined,
              "displayName": "scope",
              "docs": Object {
                "summary": "- scope in which this resource is defined.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.Initializer.parameter.scope",
              "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "%",
                "types": Array [
                  Object {
                    "displayName": "Construct",
                    "fqn": "aws_cdk.core.Construct",
                    "id": "@aws-cdk/core.Construct",
                    "packageName": "@aws-cdk/core",
                    "packageVersion": "99.99.99",
                    "submodule": undefined,
                  },
                ],
              },
            },
            Object {
              "default": undefined,
              "displayName": "id",
              "docs": Object {
                "summary": "- scoped id of the resource.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.Initializer.parameter.id",
              "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": undefined,
              "displayName": "replication_configuration",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration",
                ],
                "summary": "\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.Initializer.parameter.replication_configuration",
              "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "typing.Union[%, %]",
                "types": Array [
                  Object {
                    "formattingPattern": "%",
                    "types": Array [
                      Object {
                        "displayName": "IResolvable",
                        "fqn": "aws_cdk.core.IResolvable",
                        "id": "@aws-cdk/core.IResolvable",
                        "packageName": "@aws-cdk/core",
                        "packageVersion": "99.99.99",
                        "submodule": undefined,
                      },
                    ],
                  },
                  Object {
                    "formattingPattern": "%",
                    "types": Array [
                      Object {
                        "displayName": "ReplicationConfigurationProperty",
                        "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty",
                        "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty",
                        "packageName": "@aws-cdk/aws-ecr",
                        "packageVersion": "99.99.99",
                        "submodule": undefined,
                      },
                    ],
                  },
                ],
              },
            },
          ],
          "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration(
  scope: Construct,
  id: str,
  replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
)",
        },
        "instanceMethods": Array [
          Object {
            "displayName": "inspect",
            "docs": Object {
              "summary": "Examines the CloudFormation resource and discloses attributes.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.inspect",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "inspector",
                "docs": Object {
                  "summary": "- tree inspector to collect and process attributes.",
                },
                "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.inspect.parameter.inspector",
                "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "TreeInspector",
                      "fqn": "aws_cdk.core.TreeInspector",
                      "id": "@aws-cdk/core.TreeInspector",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def inspect(
  inspector: TreeInspector
)",
          },
        ],
        "interfaces": Array [
          Object {
            "displayName": "IInspectable",
            "fqn": "aws_cdk.core.IInspectable",
            "id": "@aws-cdk/core.IInspectable",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "attr_registry_id",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.property.attr_registry_id",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "attr_registry_id: str",
          },
          Object {
            "default": undefined,
            "displayName": "replication_configuration",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration",
              ],
              "summary": "\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.property.replication_configuration",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Union[%, %]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IResolvable",
                      "fqn": "aws_cdk.core.IResolvable",
                      "id": "@aws-cdk/core.IResolvable",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "ReplicationConfigurationProperty",
                      "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty",
                      "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty",
                      "packageName": "@aws-cdk/aws-ecr",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              ],
            },
            "usage": "replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]",
          },
        ],
        "staticMethods": Array [],
      },
      Object {
        "constants": Array [
          Object {
            "const": true,
            "default": undefined,
            "displayName": "CFN_RESOURCE_TYPE_NAME",
            "docs": Object {
              "summary": "The CloudFormation resource type name for this resource class.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "CFN_RESOURCE_TYPE_NAME: str",
          },
        ],
        "displayName": "CfnRepository",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html",
          ],
          "summary": "A CloudFormation \`AWS::ECR::Repository\`.",
        },
        "fqn": "aws_cdk.aws_ecr.CfnRepository",
        "id": "@aws-cdk/aws-ecr.CfnRepository",
        "initializer": Object {
          "displayName": "Initializer",
          "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer",
          "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer",
          "parameters": Array [
            Object {
              "default": undefined,
              "displayName": "scope",
              "docs": Object {
                "summary": "- scope in which this resource is defined.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.scope",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "%",
                "types": Array [
                  Object {
                    "displayName": "Construct",
                    "fqn": "aws_cdk.core.Construct",
                    "id": "@aws-cdk/core.Construct",
                    "packageName": "@aws-cdk/core",
                    "packageVersion": "99.99.99",
                    "submodule": undefined,
                  },
                ],
              },
            },
            Object {
              "default": undefined,
              "displayName": "id",
              "docs": Object {
                "summary": "- scoped id of the resource.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.id",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": undefined,
              "displayName": "encryption_configuration",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration",
                ],
                "summary": "\`AWS::ECR::Repository.EncryptionConfiguration\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.encryption_configuration",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.Any",
              },
            },
            Object {
              "default": undefined,
              "displayName": "image_scanning_configuration",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration",
                ],
                "summary": "\`AWS::ECR::Repository.ImageScanningConfiguration\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.image_scanning_configuration",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.Any",
              },
            },
            Object {
              "default": undefined,
              "displayName": "image_tag_mutability",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability",
                ],
                "summary": "\`AWS::ECR::Repository.ImageTagMutability\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.image_tag_mutability",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": undefined,
              "displayName": "lifecycle_policy",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy",
                ],
                "summary": "\`AWS::ECR::Repository.LifecyclePolicy\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.lifecycle_policy",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.Union[%, %]",
                "types": Array [
                  Object {
                    "formattingPattern": "%",
                    "types": Array [
                      Object {
                        "displayName": "IResolvable",
                        "fqn": "aws_cdk.core.IResolvable",
                        "id": "@aws-cdk/core.IResolvable",
                        "packageName": "@aws-cdk/core",
                        "packageVersion": "99.99.99",
                        "submodule": undefined,
                      },
                    ],
                  },
                  Object {
                    "formattingPattern": "%",
                    "types": Array [
                      Object {
                        "displayName": "LifecyclePolicyProperty",
                        "fqn": "aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty",
                        "id": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty",
                        "packageName": "@aws-cdk/aws-ecr",
                        "packageVersion": "99.99.99",
                        "submodule": undefined,
                      },
                    ],
                  },
                ],
              },
            },
            Object {
              "default": undefined,
              "displayName": "repository_name",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname",
                ],
                "summary": "\`AWS::ECR::Repository.RepositoryName\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.repository_name",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": undefined,
              "displayName": "repository_policy_text",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext",
                ],
                "summary": "\`AWS::ECR::Repository.RepositoryPolicyText\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.repository_policy_text",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.Any",
              },
            },
            Object {
              "default": undefined,
              "displayName": "tags",
              "docs": Object {
                "links": Array [
                  "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags",
                ],
                "summary": "\`AWS::ECR::Repository.Tags\`.",
              },
              "fqn": "aws_cdk.aws_ecr.CfnRepository.Initializer.parameter.tags",
              "id": "@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.List[%]",
                "types": Array [
                  Object {
                    "formattingPattern": "%",
                    "types": Array [
                      Object {
                        "displayName": "CfnTag",
                        "fqn": "aws_cdk.core.CfnTag",
                        "id": "@aws-cdk/core.CfnTag",
                        "packageName": "@aws-cdk/core",
                        "packageVersion": "99.99.99",
                        "submodule": undefined,
                      },
                    ],
                  },
                ],
              },
            },
          ],
          "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepository(
  scope: Construct,
  id: str,
  encryption_configuration: typing.Any = None,
  image_scanning_configuration: typing.Any = None,
  image_tag_mutability: str = None,
  lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty] = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)",
        },
        "instanceMethods": Array [
          Object {
            "displayName": "inspect",
            "docs": Object {
              "summary": "Examines the CloudFormation resource and discloses attributes.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.inspect",
            "id": "@aws-cdk/aws-ecr.CfnRepository.inspect",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "inspector",
                "docs": Object {
                  "summary": "- tree inspector to collect and process attributes.",
                },
                "fqn": "aws_cdk.aws_ecr.CfnRepository.inspect.parameter.inspector",
                "id": "@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "TreeInspector",
                      "fqn": "aws_cdk.core.TreeInspector",
                      "id": "@aws-cdk/core.TreeInspector",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def inspect(
  inspector: TreeInspector
)",
          },
        ],
        "interfaces": Array [
          Object {
            "displayName": "IInspectable",
            "fqn": "aws_cdk.core.IInspectable",
            "id": "@aws-cdk/core.IInspectable",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "attr_arn",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.attr_arn",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.attrArn",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "attr_arn: str",
          },
          Object {
            "default": undefined,
            "displayName": "attr_repository_uri",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.attr_repository_uri",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "attr_repository_uri: str",
          },
          Object {
            "default": undefined,
            "displayName": "tags",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags",
              ],
              "summary": "\`AWS::ECR::Repository.Tags\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.tags",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.tags",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "TagManager",
                  "fqn": "aws_cdk.core.TagManager",
                  "id": "@aws-cdk/core.TagManager",
                  "packageName": "@aws-cdk/core",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "tags: TagManager",
          },
          Object {
            "default": undefined,
            "displayName": "encryption_configuration",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration",
              ],
              "summary": "\`AWS::ECR::Repository.EncryptionConfiguration\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.encryption_configuration",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "encryption_configuration: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "image_scanning_configuration",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration",
              ],
              "summary": "\`AWS::ECR::Repository.ImageScanningConfiguration\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.image_scanning_configuration",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "image_scanning_configuration: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "repository_policy_text",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext",
              ],
              "summary": "\`AWS::ECR::Repository.RepositoryPolicyText\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.repository_policy_text",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "repository_policy_text: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "image_tag_mutability",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability",
              ],
              "summary": "\`AWS::ECR::Repository.ImageTagMutability\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.image_tag_mutability",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "image_tag_mutability: str",
          },
          Object {
            "default": undefined,
            "displayName": "lifecycle_policy",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy",
              ],
              "summary": "\`AWS::ECR::Repository.LifecyclePolicy\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.lifecycle_policy",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Union[%, %]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IResolvable",
                      "fqn": "aws_cdk.core.IResolvable",
                      "id": "@aws-cdk/core.IResolvable",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "LifecyclePolicyProperty",
                      "fqn": "aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty",
                      "id": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty",
                      "packageName": "@aws-cdk/aws-ecr",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              ],
            },
            "usage": "lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty]",
          },
          Object {
            "default": undefined,
            "displayName": "repository_name",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname",
              ],
              "summary": "\`AWS::ECR::Repository.RepositoryName\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.property.repository_name",
            "id": "@aws-cdk/aws-ecr.CfnRepository.property.repositoryName",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
        ],
        "staticMethods": Array [],
      },
      Object {
        "constants": Array [],
        "displayName": "Repository",
        "docs": Object {
          "summary": "Define an ECR repository.",
        },
        "fqn": "aws_cdk.aws_ecr.Repository",
        "id": "@aws-cdk/aws-ecr.Repository",
        "initializer": Object {
          "displayName": "Initializer",
          "fqn": "aws_cdk.aws_ecr.Repository.Initializer",
          "id": "@aws-cdk/aws-ecr.Repository.Initializer",
          "parameters": Array [
            Object {
              "default": undefined,
              "displayName": "scope",
              "docs": Object {},
              "fqn": "aws_cdk.aws_ecr.Repository.Initializer.parameter.scope",
              "id": "@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "%",
                "types": Array [
                  Object {
                    "displayName": "Construct",
                    "fqn": "constructs.Construct",
                    "id": "constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "99.99.99",
                    "submodule": undefined,
                  },
                ],
              },
            },
            Object {
              "default": undefined,
              "displayName": "id",
              "docs": Object {},
              "fqn": "aws_cdk.aws_ecr.Repository.Initializer.parameter.id",
              "id": "@aws-cdk/aws-ecr.Repository.Initializer.parameter.id",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": "false",
              "displayName": "image_scan_on_push",
              "docs": Object {
                "summary": "Enable the scan on push when creating the repository.",
              },
              "fqn": "aws_cdk.aws_ecr.Repository.Initializer.parameter.image_scan_on_push",
              "id": "@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush",
              "optional": true,
              "type": Object {
                "formattingPattern": "bool",
              },
            },
            Object {
              "default": "TagMutability.MUTABLE",
              "displayName": "image_tag_mutability",
              "docs": Object {
                "remarks": "If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.",
                "summary": "The tag mutability setting for the repository.",
              },
              "fqn": "aws_cdk.aws_ecr.Repository.Initializer.parameter.image_tag_mutability",
              "id": "@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability",
              "optional": true,
              "type": Object {
                "formattingPattern": "%",
                "types": Array [
                  Object {
                    "displayName": "TagMutability",
                    "fqn": "aws_cdk.aws_ecr.TagMutability",
                    "id": "@aws-cdk/aws-ecr.TagMutability",
                    "packageName": "@aws-cdk/aws-ecr",
                    "packageVersion": "99.99.99",
                    "submodule": undefined,
                  },
                ],
              },
            },
            Object {
              "default": "The default registry is assumed.",
              "displayName": "lifecycle_registry_id",
              "docs": Object {
                "links": Array [
                  "https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html",
                ],
                "summary": "The AWS account ID associated with the registry that contains the repository.",
              },
              "fqn": "aws_cdk.aws_ecr.Repository.Initializer.parameter.lifecycle_registry_id",
              "id": "@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": "No life cycle rules",
              "displayName": "lifecycle_rules",
              "docs": Object {
                "summary": "Life cycle rules to apply to this registry.",
              },
              "fqn": "aws_cdk.aws_ecr.Repository.Initializer.parameter.lifecycle_rules",
              "id": "@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules",
              "optional": true,
              "type": Object {
                "formattingPattern": "typing.List[%]",
                "types": Array [
                  Object {
                    "formattingPattern": "%",
                    "types": Array [
                      Object {
                        "displayName": "LifecycleRule",
                        "fqn": "aws_cdk.aws_ecr.LifecycleRule",
                        "id": "@aws-cdk/aws-ecr.LifecycleRule",
                        "packageName": "@aws-cdk/aws-ecr",
                        "packageVersion": "99.99.99",
                        "submodule": undefined,
                      },
                    ],
                  },
                ],
              },
            },
            Object {
              "default": "RemovalPolicy.Retain",
              "displayName": "removal_policy",
              "docs": Object {
                "summary": "Determine what happens to the repository when the resource/stack is deleted.",
              },
              "fqn": "aws_cdk.aws_ecr.Repository.Initializer.parameter.removal_policy",
              "id": "@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy",
              "optional": true,
              "type": Object {
                "formattingPattern": "%",
                "types": Array [
                  Object {
                    "displayName": "RemovalPolicy",
                    "fqn": "aws_cdk.core.RemovalPolicy",
                    "id": "@aws-cdk/core.RemovalPolicy",
                    "packageName": "@aws-cdk/core",
                    "packageVersion": "99.99.99",
                    "submodule": undefined,
                  },
                ],
              },
            },
            Object {
              "default": "Automatically generated name.",
              "displayName": "repository_name",
              "docs": Object {
                "summary": "Name for this repository.",
              },
              "fqn": "aws_cdk.aws_ecr.Repository.Initializer.parameter.repository_name",
              "id": "@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
          ],
          "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository(
  scope: Construct,
  id: str,
  image_scan_on_push: bool = None,
  image_tag_mutability: TagMutability = None,
  lifecycle_registry_id: str = None,
  lifecycle_rules: typing.List[LifecycleRule] = None,
  removal_policy: RemovalPolicy = None,
  repository_name: str = None
)",
        },
        "instanceMethods": Array [
          Object {
            "displayName": "add_lifecycle_rule",
            "docs": Object {
              "remarks": "Life cycle rules automatically expire images from the repository that match
certain conditions.",
              "summary": "Add a life cycle rule to the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.Repository.add_lifecycle_rule",
            "id": "@aws-cdk/aws-ecr.Repository.addLifecycleRule",
            "parameters": Array [
              Object {
                "default": "No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "Describes the purpose of the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.Repository.add_lifecycle_rule.parameter.description",
                "id": "@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": undefined,
                "displayName": "max_image_age",
                "docs": Object {
                  "remarks": "Specify exactly one of maxImageCount and maxImageAge.",
                  "summary": "The maximum age of images to retain. The value must represent a number of days.",
                },
                "fqn": "aws_cdk.aws_ecr.Repository.add_lifecycle_rule.parameter.max_image_age",
                "id": "@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.maxImageAge",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "Duration",
                      "fqn": "aws_cdk.core.Duration",
                      "id": "@aws-cdk/core.Duration",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": undefined,
                "displayName": "max_image_count",
                "docs": Object {
                  "remarks": "Specify exactly one of maxImageCount and maxImageAge.",
                  "summary": "The maximum number of images to retain.",
                },
                "fqn": "aws_cdk.aws_ecr.Repository.add_lifecycle_rule.parameter.max_image_count",
                "id": "@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.maxImageCount",
                "optional": true,
                "type": Object {
                  "formattingPattern": "typing.Union[int, float]",
                },
              },
              Object {
                "default": "Automatically assigned",
                "displayName": "rule_priority",
                "docs": Object {
                  "remarks": "All rules must have a unique priority, where lower numbers have
higher precedence. The first rule that matches is applied to an image.

There can only be one rule with a tagStatus of Any, and it must have
the highest rulePriority.

All rules without a specified priority will have incrementing priorities
automatically assigned to them, higher than any rules that DO have priorities.",
                  "summary": "Controls the order in which rules are evaluated (low to high).",
                },
                "fqn": "aws_cdk.aws_ecr.Repository.add_lifecycle_rule.parameter.rule_priority",
                "id": "@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rulePriority",
                "optional": true,
                "type": Object {
                  "formattingPattern": "typing.Union[int, float]",
                },
              },
              Object {
                "default": undefined,
                "displayName": "tag_prefix_list",
                "docs": Object {
                  "remarks": "Only if tagStatus == TagStatus.Tagged",
                  "summary": "Select images that have ALL the given prefixes in their tag.",
                },
                "fqn": "aws_cdk.aws_ecr.Repository.add_lifecycle_rule.parameter.tag_prefix_list",
                "id": "@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.tagPrefixList",
                "optional": true,
                "type": Object {
                  "formattingPattern": "typing.List[%]",
                  "types": Array [
                    Object {
                      "formattingPattern": "str",
                    },
                  ],
                },
              },
              Object {
                "default": "TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise",
                "displayName": "tag_status",
                "docs": Object {
                  "remarks": "Only one rule is allowed to select untagged images, and it must
have the highest rulePriority.",
                  "summary": "Select images based on tags.",
                },
                "fqn": "aws_cdk.aws_ecr.Repository.add_lifecycle_rule.parameter.tag_status",
                "id": "@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.tagStatus",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "TagStatus",
                      "fqn": "aws_cdk.aws_ecr.TagStatus",
                      "id": "@aws-cdk/aws-ecr.TagStatus",
                      "packageName": "@aws-cdk/aws-ecr",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def add_lifecycle_rule(
  description: str = None,
  max_image_age: Duration = None,
  max_image_count: typing.Union[int, float] = None,
  rule_priority: typing.Union[int, float] = None,
  tag_prefix_list: typing.List[str] = None,
  tag_status: TagStatus = None
)",
          },
          Object {
            "displayName": "add_to_resource_policy",
            "docs": Object {
              "summary": "Add a policy statement to the repository's resource policy.",
            },
            "fqn": "aws_cdk.aws_ecr.Repository.add_to_resource_policy",
            "id": "@aws-cdk/aws-ecr.Repository.addToResourcePolicy",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "statement",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.add_to_resource_policy.parameter.statement",
                "id": "@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "PolicyStatement",
                      "fqn": "aws_cdk.aws_iam.PolicyStatement",
                      "id": "@aws-cdk/aws-iam.PolicyStatement",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def add_to_resource_policy(
  statement: PolicyStatement
)",
          },
        ],
        "interfaces": Array [],
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "repository_arn",
            "docs": Object {
              "summary": "The ARN of the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.Repository.property.repository_arn",
            "id": "@aws-cdk/aws-ecr.Repository.property.repositoryArn",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_arn: str",
          },
          Object {
            "default": undefined,
            "displayName": "repository_name",
            "docs": Object {
              "summary": "The name of the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.Repository.property.repository_name",
            "id": "@aws-cdk/aws-ecr.Repository.property.repositoryName",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
        ],
        "staticMethods": Array [
          Object {
            "displayName": "arn_for_local_repository",
            "docs": Object {
              "summary": "Returns an ECR ARN for a repository that resides in the same account/region as the current stack.",
            },
            "fqn": "aws_cdk.aws_ecr.Repository.arn_for_local_repository",
            "id": "@aws-cdk/aws-ecr.Repository.arnForLocalRepository",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "repository_name",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.arn_for_local_repository.parameter.repository_name",
                "id": "@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": undefined,
                "displayName": "scope",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.arn_for_local_repository.parameter.scope",
                "id": "@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IConstruct",
                      "fqn": "constructs.IConstruct",
                      "id": "constructs.IConstruct",
                      "packageName": "constructs",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": undefined,
                "displayName": "account",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.arn_for_local_repository.parameter.account",
                "id": "@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.arn_for_local_repository(
  repository_name: str,
  scope: IConstruct,
  account: str = None
)",
          },
          Object {
            "displayName": "from_repository_arn",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.Repository.from_repository_arn",
            "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryArn",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "scope",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_arn.parameter.scope",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "Construct",
                      "fqn": "constructs.Construct",
                      "id": "constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_arn.parameter.id",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": undefined,
                "displayName": "repository_arn",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_arn.parameter.repository_arn",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_arn(
  scope: Construct,
  id: str,
  repository_arn: str
)",
          },
          Object {
            "displayName": "from_repository_attributes",
            "docs": Object {
              "summary": "Import a repository.",
            },
            "fqn": "aws_cdk.aws_ecr.Repository.from_repository_attributes",
            "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "scope",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_attributes.parameter.scope",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "Construct",
                      "fqn": "constructs.Construct",
                      "id": "constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_attributes.parameter.id",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": undefined,
                "displayName": "repository_arn",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_attributes.parameter.repository_arn",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.repositoryArn",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": undefined,
                "displayName": "repository_name",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_attributes.parameter.repository_name",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.repositoryName",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_attributes(
  scope: Construct,
  id: str,
  repository_arn: str,
  repository_name: str
)",
          },
          Object {
            "displayName": "from_repository_name",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.Repository.from_repository_name",
            "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryName",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "scope",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_name.parameter.scope",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "Construct",
                      "fqn": "constructs.Construct",
                      "id": "constructs.Construct",
                      "packageName": "constructs",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_name.parameter.id",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": undefined,
                "displayName": "repository_name",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.Repository.from_repository_name.parameter.repository_name",
                "id": "@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_name(
  scope: Construct,
  id: str,
  repository_name: str
)",
          },
        ],
      },
      Object {
        "constants": Array [],
        "displayName": "RepositoryBase",
        "docs": Object {
          "remarks": "Reused between imported repositories and owned repositories.",
          "summary": "Base class for ECR repository.",
        },
        "fqn": "aws_cdk.aws_ecr.RepositoryBase",
        "id": "@aws-cdk/aws-ecr.RepositoryBase",
        "initializer": Object {
          "displayName": "Initializer",
          "fqn": "aws_cdk.aws_ecr.RepositoryBase.Initializer",
          "id": "@aws-cdk/aws-ecr.RepositoryBase.Initializer",
          "parameters": Array [
            Object {
              "default": undefined,
              "displayName": "scope",
              "docs": Object {},
              "fqn": "aws_cdk.aws_ecr.RepositoryBase.Initializer.parameter.scope",
              "id": "@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "%",
                "types": Array [
                  Object {
                    "displayName": "Construct",
                    "fqn": "constructs.Construct",
                    "id": "constructs.Construct",
                    "packageName": "constructs",
                    "packageVersion": "99.99.99",
                    "submodule": undefined,
                  },
                ],
              },
            },
            Object {
              "default": undefined,
              "displayName": "id",
              "docs": Object {},
              "fqn": "aws_cdk.aws_ecr.RepositoryBase.Initializer.parameter.id",
              "id": "@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id",
              "optional": undefined,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": "- the resource is in the same account as the stack it belongs to",
              "displayName": "account",
              "docs": Object {
                "summary": "The AWS account ID this resource belongs to.",
              },
              "fqn": "aws_cdk.aws_ecr.RepositoryBase.Initializer.parameter.account",
              "id": "@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": "- take environment from \`account\`, \`region\` parameters, or use Stack environment.",
              "displayName": "environment_from_arn",
              "docs": Object {
                "remarks": "The ARN is parsed and the account and region are taken from the ARN.
This should be used for imported resources.

Cannot be supplied together with either \`account\` or \`region\`.",
                "summary": "ARN to deduce region and account from.",
              },
              "fqn": "aws_cdk.aws_ecr.RepositoryBase.Initializer.parameter.environment_from_arn",
              "id": "@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": "- The physical name will be allocated by CloudFormation at deployment time",
              "displayName": "physical_name",
              "docs": Object {
                "remarks": "- \`undefined\` implies that a physical name will be allocated by
   CloudFormation during deployment.
- a concrete value implies a specific physical name
- \`PhysicalName.GENERATE_IF_NEEDED\` is a marker that indicates that a physical will only be generated
   by the CDK if it is needed for cross-environment references. Otherwise, it will be allocated by CloudFormation.",
                "summary": "The value passed in by users to the physical name prop of the resource.",
              },
              "fqn": "aws_cdk.aws_ecr.RepositoryBase.Initializer.parameter.physical_name",
              "id": "@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
            Object {
              "default": "- the resource is in the same region as the stack it belongs to",
              "displayName": "region",
              "docs": Object {
                "summary": "The AWS region this resource belongs to.",
              },
              "fqn": "aws_cdk.aws_ecr.RepositoryBase.Initializer.parameter.region",
              "id": "@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region",
              "optional": true,
              "type": Object {
                "formattingPattern": "str",
              },
            },
          ],
          "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryBase(
  scope: Construct,
  id: str,
  account: str = None,
  environment_from_arn: str = None,
  physical_name: str = None,
  region: str = None
)",
        },
        "instanceMethods": Array [
          Object {
            "displayName": "add_to_resource_policy",
            "docs": Object {
              "summary": "Add a policy statement to the repository's resource policy.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.add_to_resource_policy",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "statement",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.add_to_resource_policy.parameter.statement",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "PolicyStatement",
                      "fqn": "aws_cdk.aws_iam.PolicyStatement",
                      "id": "@aws-cdk/aws-iam.PolicyStatement",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def add_to_resource_policy(
  statement: PolicyStatement
)",
          },
          Object {
            "displayName": "grant",
            "docs": Object {
              "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.grant",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.grant",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "grantee",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.grant.parameter.grantee",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IGrantable",
                      "fqn": "aws_cdk.aws_iam.IGrantable",
                      "id": "@aws-cdk/aws-iam.IGrantable",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": undefined,
                "displayName": "actions",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.grant.parameter.actions",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "def grant(
  grantee: IGrantable,
  actions: str
)",
          },
          Object {
            "displayName": "grant_pull",
            "docs": Object {
              "summary": "Grant the given identity permissions to use the images in this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.grant_pull",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.grantPull",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "grantee",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.grant_pull.parameter.grantee",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IGrantable",
                      "fqn": "aws_cdk.aws_iam.IGrantable",
                      "id": "@aws-cdk/aws-iam.IGrantable",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def grant_pull(
  grantee: IGrantable
)",
          },
          Object {
            "displayName": "grant_pull_push",
            "docs": Object {
              "summary": "Grant the given identity permissions to pull and push images to this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.grant_pull_push",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.grantPullPush",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "grantee",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.grant_pull_push.parameter.grantee",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IGrantable",
                      "fqn": "aws_cdk.aws_iam.IGrantable",
                      "id": "@aws-cdk/aws-iam.IGrantable",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def grant_pull_push(
  grantee: IGrantable
)",
          },
          Object {
            "displayName": "on_cloud_trail_event",
            "docs": Object {
              "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
              "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_event",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {
                  "summary": "The id of the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_event.parameter.id",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "A description of the rule's purpose.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_event.parameter.description",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No additional filtering based on an event pattern.",
                "displayName": "event_pattern",
                "docs": Object {
                  "links": Array [
                    "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
                  ],
                  "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
                  "summary": "Additional restrictions for the event to route to the specified target.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_event.parameter.event_pattern",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.eventPattern",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "EventPattern",
                      "fqn": "aws_cdk.aws_events.EventPattern",
                      "id": "@aws-cdk/aws-events.EventPattern",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "AWS CloudFormation generates a unique physical ID.",
                "displayName": "rule_name",
                "docs": Object {
                  "summary": "A name for the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_event.parameter.rule_name",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.ruleName",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
                "displayName": "target",
                "docs": Object {
                  "summary": "The target to register for the event.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_event.parameter.target",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.target",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IRuleTarget",
                      "fqn": "aws_cdk.aws_events.IRuleTarget",
                      "id": "@aws-cdk/aws-events.IRuleTarget",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)",
          },
          Object {
            "displayName": "on_cloud_trail_image_pushed",
            "docs": Object {
              "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
              "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_image_pushed",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {
                  "summary": "The id of the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_image_pushed.parameter.id",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "A description of the rule's purpose.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_image_pushed.parameter.description",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No additional filtering based on an event pattern.",
                "displayName": "event_pattern",
                "docs": Object {
                  "links": Array [
                    "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
                  ],
                  "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
                  "summary": "Additional restrictions for the event to route to the specified target.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_image_pushed.parameter.event_pattern",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.eventPattern",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "EventPattern",
                      "fqn": "aws_cdk.aws_events.EventPattern",
                      "id": "@aws-cdk/aws-events.EventPattern",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "AWS CloudFormation generates a unique physical ID.",
                "displayName": "rule_name",
                "docs": Object {
                  "summary": "A name for the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_image_pushed.parameter.rule_name",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.ruleName",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
                "displayName": "target",
                "docs": Object {
                  "summary": "The target to register for the event.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_image_pushed.parameter.target",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.target",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IRuleTarget",
                      "fqn": "aws_cdk.aws_events.IRuleTarget",
                      "id": "@aws-cdk/aws-events.IRuleTarget",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "- Watch changes to all tags",
                "displayName": "image_tag",
                "docs": Object {
                  "summary": "Only watch changes to this image tag.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_cloud_trail_image_pushed.parameter.image_tag",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.imageTag",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)",
          },
          Object {
            "displayName": "on_event",
            "docs": Object {
              "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
              "summary": "Defines a CloudWatch event rule which triggers for repository events.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_event",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.onEvent",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_event.parameter.id",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "A description of the rule's purpose.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_event.parameter.description",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No additional filtering based on an event pattern.",
                "displayName": "event_pattern",
                "docs": Object {
                  "links": Array [
                    "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
                  ],
                  "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
                  "summary": "Additional restrictions for the event to route to the specified target.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_event.parameter.event_pattern",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.eventPattern",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "EventPattern",
                      "fqn": "aws_cdk.aws_events.EventPattern",
                      "id": "@aws-cdk/aws-events.EventPattern",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "AWS CloudFormation generates a unique physical ID.",
                "displayName": "rule_name",
                "docs": Object {
                  "summary": "A name for the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_event.parameter.rule_name",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.ruleName",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
                "displayName": "target",
                "docs": Object {
                  "summary": "The target to register for the event.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_event.parameter.target",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.target",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IRuleTarget",
                      "fqn": "aws_cdk.aws_events.IRuleTarget",
                      "id": "@aws-cdk/aws-events.IRuleTarget",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)",
          },
          Object {
            "displayName": "on_image_scan_completed",
            "docs": Object {
              "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_image_scan_completed",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {
                  "summary": "The id of the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_image_scan_completed.parameter.id",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "A description of the rule's purpose.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_image_scan_completed.parameter.description",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No additional filtering based on an event pattern.",
                "displayName": "event_pattern",
                "docs": Object {
                  "links": Array [
                    "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
                  ],
                  "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
                  "summary": "Additional restrictions for the event to route to the specified target.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_image_scan_completed.parameter.event_pattern",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.eventPattern",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "EventPattern",
                      "fqn": "aws_cdk.aws_events.EventPattern",
                      "id": "@aws-cdk/aws-events.EventPattern",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "AWS CloudFormation generates a unique physical ID.",
                "displayName": "rule_name",
                "docs": Object {
                  "summary": "A name for the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_image_scan_completed.parameter.rule_name",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.ruleName",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
                "displayName": "target",
                "docs": Object {
                  "summary": "The target to register for the event.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_image_scan_completed.parameter.target",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.target",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IRuleTarget",
                      "fqn": "aws_cdk.aws_events.IRuleTarget",
                      "id": "@aws-cdk/aws-events.IRuleTarget",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "- Watch the changes to the repository with all image tags",
                "displayName": "image_tags",
                "docs": Object {
                  "remarks": "Leave it undefined to watch the full repository.",
                  "summary": "Only watch changes to the image tags spedified.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.on_image_scan_completed.parameter.image_tags",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.imageTags",
                "optional": true,
                "type": Object {
                  "formattingPattern": "typing.List[%]",
                  "types": Array [
                    Object {
                      "formattingPattern": "str",
                    },
                  ],
                },
              },
            ],
            "usage": "def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)",
          },
          Object {
            "displayName": "repository_uri_for_digest",
            "docs": Object {
              "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
              "summary": "Returns the URL of the repository. Can be used in \`docker push/pull\`.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.repository_uri_for_digest",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "digest",
                "docs": Object {
                  "summary": "Optional image digest.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.repository_uri_for_digest.parameter.digest",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "def repository_uri_for_digest(
  digest: str = None
)",
          },
          Object {
            "displayName": "repository_uri_for_tag",
            "docs": Object {
              "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
              "summary": "Returns the URL of the repository. Can be used in \`docker push/pull\`.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.repository_uri_for_tag",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "tag",
                "docs": Object {
                  "summary": "Optional image tag.",
                },
                "fqn": "aws_cdk.aws_ecr.RepositoryBase.repository_uri_for_tag.parameter.tag",
                "id": "@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "def repository_uri_for_tag(
  tag: str = None
)",
          },
        ],
        "interfaces": Array [
          Object {
            "displayName": "IRepository",
            "fqn": "aws_cdk.aws_ecr.IRepository",
            "id": "@aws-cdk/aws-ecr.IRepository",
            "packageName": "@aws-cdk/aws-ecr",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "repository_arn",
            "docs": Object {
              "summary": "The ARN of the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.property.repository_arn",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_arn: str",
          },
          Object {
            "default": undefined,
            "displayName": "repository_name",
            "docs": Object {
              "summary": "The name of the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.property.repository_name",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
          Object {
            "default": undefined,
            "displayName": "repository_uri",
            "docs": Object {
              "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
              "summary": "The URI of this repository (represents the latest image):.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryBase.property.repository_uri",
            "id": "@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_uri: str",
          },
        ],
        "staticMethods": Array [],
      },
    ],
    "enums": Array [
      Object {
        "displayName": "TagMutability",
        "docs": Object {
          "summary": "The tag mutability setting for your repository.",
        },
        "fqn": "aws_cdk.aws_ecr.TagMutability",
        "id": "@aws-cdk/aws-ecr.TagMutability",
        "members": Array [
          Object {
            "displayName": "MUTABLE",
            "docs": Object {
              "summary": "allow image tags to be overwritten.",
            },
            "fqn": "aws_cdk.aws_ecr.TagMutability.MUTABLE",
            "id": "@aws-cdk/aws-ecr.TagMutability.MUTABLE",
          },
          Object {
            "displayName": "IMMUTABLE",
            "docs": Object {
              "summary": "all image tags within the repository will be immutable which will prevent them from being overwritten.",
            },
            "fqn": "aws_cdk.aws_ecr.TagMutability.IMMUTABLE",
            "id": "@aws-cdk/aws-ecr.TagMutability.IMMUTABLE",
          },
        ],
      },
      Object {
        "displayName": "TagStatus",
        "docs": Object {
          "summary": "Select images based on tags.",
        },
        "fqn": "aws_cdk.aws_ecr.TagStatus",
        "id": "@aws-cdk/aws-ecr.TagStatus",
        "members": Array [
          Object {
            "displayName": "ANY",
            "docs": Object {
              "summary": "Rule applies to all images.",
            },
            "fqn": "aws_cdk.aws_ecr.TagStatus.ANY",
            "id": "@aws-cdk/aws-ecr.TagStatus.ANY",
          },
          Object {
            "displayName": "TAGGED",
            "docs": Object {
              "summary": "Rule applies to tagged images.",
            },
            "fqn": "aws_cdk.aws_ecr.TagStatus.TAGGED",
            "id": "@aws-cdk/aws-ecr.TagStatus.TAGGED",
          },
          Object {
            "displayName": "UNTAGGED",
            "docs": Object {
              "summary": "Rule applies to untagged images.",
            },
            "fqn": "aws_cdk.aws_ecr.TagStatus.UNTAGGED",
            "id": "@aws-cdk/aws-ecr.TagStatus.UNTAGGED",
          },
        ],
      },
    ],
    "interfaces": Array [
      Object {
        "displayName": "IRepository",
        "docs": Object {
          "summary": "Represents an ECR repository.",
        },
        "fqn": "aws_cdk.aws_ecr.IRepository",
        "id": "@aws-cdk/aws-ecr.IRepository",
        "implementations": Array [
          Object {
            "displayName": "Repository",
            "fqn": "aws_cdk.aws_ecr.Repository",
            "id": "@aws-cdk/aws-ecr.Repository",
            "packageName": "@aws-cdk/aws-ecr",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
          Object {
            "displayName": "RepositoryBase",
            "fqn": "aws_cdk.aws_ecr.RepositoryBase",
            "id": "@aws-cdk/aws-ecr.RepositoryBase",
            "packageName": "@aws-cdk/aws-ecr",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
          Object {
            "displayName": "IRepository",
            "fqn": "aws_cdk.aws_ecr.IRepository",
            "id": "@aws-cdk/aws-ecr.IRepository",
            "packageName": "@aws-cdk/aws-ecr",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
        "instanceMethods": Array [
          Object {
            "displayName": "add_to_resource_policy",
            "docs": Object {
              "summary": "Add a policy statement to the repository's resource policy.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.add_to_resource_policy",
            "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "statement",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.IRepository.add_to_resource_policy.parameter.statement",
                "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "PolicyStatement",
                      "fqn": "aws_cdk.aws_iam.PolicyStatement",
                      "id": "@aws-cdk/aws-iam.PolicyStatement",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def add_to_resource_policy(
  statement: PolicyStatement
)",
          },
          Object {
            "displayName": "grant",
            "docs": Object {
              "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.grant",
            "id": "@aws-cdk/aws-ecr.IRepository.grant",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "grantee",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.IRepository.grant.parameter.grantee",
                "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IGrantable",
                      "fqn": "aws_cdk.aws_iam.IGrantable",
                      "id": "@aws-cdk/aws-iam.IGrantable",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": undefined,
                "displayName": "actions",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.IRepository.grant.parameter.actions",
                "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "def grant(
  grantee: IGrantable,
  actions: str
)",
          },
          Object {
            "displayName": "grant_pull",
            "docs": Object {
              "summary": "Grant the given identity permissions to pull images in this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull",
            "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "grantee",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull.parameter.grantee",
                "id": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IGrantable",
                      "fqn": "aws_cdk.aws_iam.IGrantable",
                      "id": "@aws-cdk/aws-iam.IGrantable",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def grant_pull(
  grantee: IGrantable
)",
          },
          Object {
            "displayName": "grant_pull_push",
            "docs": Object {
              "summary": "Grant the given identity permissions to pull and push images to this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull_push",
            "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "grantee",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull_push.parameter.grantee",
                "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IGrantable",
                      "fqn": "aws_cdk.aws_iam.IGrantable",
                      "id": "@aws-cdk/aws-iam.IGrantable",
                      "packageName": "@aws-cdk/aws-iam",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def grant_pull_push(
  grantee: IGrantable
)",
          },
          Object {
            "displayName": "on_cloud_trail_event",
            "docs": Object {
              "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
              "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event",
            "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {
                  "summary": "The id of the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.id",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "A description of the rule's purpose.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.description",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No additional filtering based on an event pattern.",
                "displayName": "event_pattern",
                "docs": Object {
                  "links": Array [
                    "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
                  ],
                  "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
                  "summary": "Additional restrictions for the event to route to the specified target.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.event_pattern",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.eventPattern",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "EventPattern",
                      "fqn": "aws_cdk.aws_events.EventPattern",
                      "id": "@aws-cdk/aws-events.EventPattern",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "AWS CloudFormation generates a unique physical ID.",
                "displayName": "rule_name",
                "docs": Object {
                  "summary": "A name for the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.rule_name",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.ruleName",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
                "displayName": "target",
                "docs": Object {
                  "summary": "The target to register for the event.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.target",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.target",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IRuleTarget",
                      "fqn": "aws_cdk.aws_events.IRuleTarget",
                      "id": "@aws-cdk/aws-events.IRuleTarget",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)",
          },
          Object {
            "displayName": "on_cloud_trail_image_pushed",
            "docs": Object {
              "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
              "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed",
            "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {
                  "summary": "The id of the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.id",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "A description of the rule's purpose.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.description",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No additional filtering based on an event pattern.",
                "displayName": "event_pattern",
                "docs": Object {
                  "links": Array [
                    "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
                  ],
                  "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
                  "summary": "Additional restrictions for the event to route to the specified target.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.event_pattern",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.eventPattern",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "EventPattern",
                      "fqn": "aws_cdk.aws_events.EventPattern",
                      "id": "@aws-cdk/aws-events.EventPattern",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "AWS CloudFormation generates a unique physical ID.",
                "displayName": "rule_name",
                "docs": Object {
                  "summary": "A name for the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.rule_name",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.ruleName",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
                "displayName": "target",
                "docs": Object {
                  "summary": "The target to register for the event.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.target",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.target",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IRuleTarget",
                      "fqn": "aws_cdk.aws_events.IRuleTarget",
                      "id": "@aws-cdk/aws-events.IRuleTarget",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "- Watch changes to all tags",
                "displayName": "image_tag",
                "docs": Object {
                  "summary": "Only watch changes to this image tag.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.image_tag",
                "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.imageTag",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)",
          },
          Object {
            "displayName": "on_event",
            "docs": Object {
              "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
              "summary": "Defines a CloudWatch event rule which triggers for repository events.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.on_event",
            "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {},
                "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.id",
                "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "A description of the rule's purpose.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.description",
                "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No additional filtering based on an event pattern.",
                "displayName": "event_pattern",
                "docs": Object {
                  "links": Array [
                    "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
                  ],
                  "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
                  "summary": "Additional restrictions for the event to route to the specified target.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.event_pattern",
                "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.eventPattern",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "EventPattern",
                      "fqn": "aws_cdk.aws_events.EventPattern",
                      "id": "@aws-cdk/aws-events.EventPattern",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "AWS CloudFormation generates a unique physical ID.",
                "displayName": "rule_name",
                "docs": Object {
                  "summary": "A name for the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.rule_name",
                "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.ruleName",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
                "displayName": "target",
                "docs": Object {
                  "summary": "The target to register for the event.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.target",
                "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.target",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IRuleTarget",
                      "fqn": "aws_cdk.aws_events.IRuleTarget",
                      "id": "@aws-cdk/aws-events.IRuleTarget",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
            ],
            "usage": "def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)",
          },
          Object {
            "displayName": "on_image_scan_completed",
            "docs": Object {
              "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed",
            "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "id",
                "docs": Object {
                  "summary": "The id of the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.id",
                "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id",
                "optional": undefined,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No description",
                "displayName": "description",
                "docs": Object {
                  "summary": "A description of the rule's purpose.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.description",
                "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.description",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No additional filtering based on an event pattern.",
                "displayName": "event_pattern",
                "docs": Object {
                  "links": Array [
                    "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
                  ],
                  "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
                  "summary": "Additional restrictions for the event to route to the specified target.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.event_pattern",
                "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.eventPattern",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "EventPattern",
                      "fqn": "aws_cdk.aws_events.EventPattern",
                      "id": "@aws-cdk/aws-events.EventPattern",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "AWS CloudFormation generates a unique physical ID.",
                "displayName": "rule_name",
                "docs": Object {
                  "summary": "A name for the rule.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.rule_name",
                "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.ruleName",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
              Object {
                "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
                "displayName": "target",
                "docs": Object {
                  "summary": "The target to register for the event.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.target",
                "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.target",
                "optional": true,
                "type": Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IRuleTarget",
                      "fqn": "aws_cdk.aws_events.IRuleTarget",
                      "id": "@aws-cdk/aws-events.IRuleTarget",
                      "packageName": "@aws-cdk/aws-events",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              },
              Object {
                "default": "- Watch the changes to the repository with all image tags",
                "displayName": "image_tags",
                "docs": Object {
                  "remarks": "Leave it undefined to watch the full repository.",
                  "summary": "Only watch changes to the image tags spedified.",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.image_tags",
                "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.imageTags",
                "optional": true,
                "type": Object {
                  "formattingPattern": "typing.List[%]",
                  "types": Array [
                    Object {
                      "formattingPattern": "str",
                    },
                  ],
                },
              },
            ],
            "usage": "def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)",
          },
          Object {
            "displayName": "repository_uri_for_digest",
            "docs": Object {
              "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
              "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_digest",
            "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "digest",
                "docs": Object {
                  "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_digest.parameter.digest",
                "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "def repository_uri_for_digest(
  digest: str = None
)",
          },
          Object {
            "displayName": "repository_uri_for_tag",
            "docs": Object {
              "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
              "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_tag",
            "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
            "parameters": Array [
              Object {
                "default": undefined,
                "displayName": "tag",
                "docs": Object {
                  "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
                },
                "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_tag.parameter.tag",
                "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
                "optional": true,
                "type": Object {
                  "formattingPattern": "str",
                },
              },
            ],
            "usage": "def repository_uri_for_tag(
  tag: str = None
)",
          },
        ],
        "interfaces": Array [
          Object {
            "displayName": "IResource",
            "fqn": "aws_cdk.core.IResource",
            "id": "@aws-cdk/core.IResource",
            "packageName": "@aws-cdk/core",
            "packageVersion": "1.106.0",
            "submodule": undefined,
          },
        ],
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "node",
            "docs": Object {
              "summary": "The construct tree node for this construct.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.property.node",
            "id": "@aws-cdk/aws-ecr.IRepository.property.node",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "ConstructNode",
                  "fqn": "aws_cdk.core.ConstructNode",
                  "id": "@aws-cdk/core.ConstructNode",
                  "packageName": "@aws-cdk/core",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "node: ConstructNode",
          },
          Object {
            "default": undefined,
            "displayName": "env",
            "docs": Object {
              "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
              "summary": "The environment this resource belongs to.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.property.env",
            "id": "@aws-cdk/aws-ecr.IRepository.property.env",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "ResourceEnvironment",
                  "fqn": "aws_cdk.core.ResourceEnvironment",
                  "id": "@aws-cdk/core.ResourceEnvironment",
                  "packageName": "@aws-cdk/core",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "env: ResourceEnvironment",
          },
          Object {
            "default": undefined,
            "displayName": "stack",
            "docs": Object {
              "summary": "The stack in which this resource is defined.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.property.stack",
            "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "Stack",
                  "fqn": "aws_cdk.core.Stack",
                  "id": "@aws-cdk/core.Stack",
                  "packageName": "@aws-cdk/core",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "stack: Stack",
          },
          Object {
            "default": undefined,
            "displayName": "repository_arn",
            "docs": Object {
              "summary": "The ARN of the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_arn",
            "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_arn: str",
          },
          Object {
            "default": undefined,
            "displayName": "repository_name",
            "docs": Object {
              "summary": "The name of the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_name",
            "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
          Object {
            "default": undefined,
            "displayName": "repository_uri",
            "docs": Object {
              "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
              "summary": "The URI of this repository (represents the latest image):.",
            },
            "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_uri",
            "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_uri: str",
          },
        ],
      },
    ],
    "structs": Array [
      Object {
        "displayName": "CfnPublicRepositoryProps",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html",
          ],
          "summary": "Properties for defining a \`AWS::ECR::PublicRepository\`.",
        },
        "fqn": "aws_cdk.aws_ecr.CfnPublicRepositoryProps",
        "id": "@aws-cdk/aws-ecr.CfnPublicRepositoryProps",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "repository_catalog_data",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata",
              ],
              "summary": "\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepositoryProps.property.repository_catalog_data",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "repository_catalog_data: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "repository_name",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname",
              ],
              "summary": "\`AWS::ECR::PublicRepository.RepositoryName\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepositoryProps.property.repository_name",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
          Object {
            "default": undefined,
            "displayName": "repository_policy_text",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext",
              ],
              "summary": "\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepositoryProps.property.repository_policy_text",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "repository_policy_text: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "tags",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags",
              ],
              "summary": "\`AWS::ECR::PublicRepository.Tags\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnPublicRepositoryProps.property.tags",
            "id": "@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.List[%]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "CfnTag",
                      "fqn": "aws_cdk.core.CfnTag",
                      "id": "@aws-cdk/core.CfnTag",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              ],
            },
            "usage": "tags: typing.List[CfnTag]",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnPublicRepositoryProps(
  repository_catalog_data: typing.Any = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)",
      },
      Object {
        "displayName": "CfnRegistryPolicyProps",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html",
          ],
          "summary": "Properties for defining a \`AWS::ECR::RegistryPolicy\`.",
        },
        "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicyProps",
        "id": "@aws-cdk/aws-ecr.CfnRegistryPolicyProps",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "policy_text",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext",
              ],
              "summary": "\`AWS::ECR::RegistryPolicy.PolicyText\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRegistryPolicyProps.property.policy_text",
            "id": "@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "policy_text: typing.Any",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRegistryPolicyProps(
  policy_text: typing.Any
)",
      },
      Object {
        "displayName": "CfnReplicationConfigurationProps",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html",
          ],
          "summary": "Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.",
        },
        "fqn": "aws_cdk.aws_ecr.CfnReplicationConfigurationProps",
        "id": "@aws-cdk/aws-ecr.CfnReplicationConfigurationProps",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "replication_configuration",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration",
              ],
              "summary": "\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfigurationProps.property.replication_configuration",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Union[%, %]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IResolvable",
                      "fqn": "aws_cdk.core.IResolvable",
                      "id": "@aws-cdk/core.IResolvable",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "ReplicationConfigurationProperty",
                      "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty",
                      "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty",
                      "packageName": "@aws-cdk/aws-ecr",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              ],
            },
            "usage": "replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfigurationProps(
  replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
)",
      },
      Object {
        "displayName": "CfnRepositoryProps",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html",
          ],
          "summary": "Properties for defining a \`AWS::ECR::Repository\`.",
        },
        "fqn": "aws_cdk.aws_ecr.CfnRepositoryProps",
        "id": "@aws-cdk/aws-ecr.CfnRepositoryProps",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "encryption_configuration",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration",
              ],
              "summary": "\`AWS::ECR::Repository.EncryptionConfiguration\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepositoryProps.property.encryption_configuration",
            "id": "@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "encryption_configuration: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "image_scanning_configuration",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration",
              ],
              "summary": "\`AWS::ECR::Repository.ImageScanningConfiguration\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepositoryProps.property.image_scanning_configuration",
            "id": "@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "image_scanning_configuration: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "image_tag_mutability",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability",
              ],
              "summary": "\`AWS::ECR::Repository.ImageTagMutability\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepositoryProps.property.image_tag_mutability",
            "id": "@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "image_tag_mutability: str",
          },
          Object {
            "default": undefined,
            "displayName": "lifecycle_policy",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy",
              ],
              "summary": "\`AWS::ECR::Repository.LifecyclePolicy\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepositoryProps.property.lifecycle_policy",
            "id": "@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Union[%, %]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IResolvable",
                      "fqn": "aws_cdk.core.IResolvable",
                      "id": "@aws-cdk/core.IResolvable",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "LifecyclePolicyProperty",
                      "fqn": "aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty",
                      "id": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty",
                      "packageName": "@aws-cdk/aws-ecr",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              ],
            },
            "usage": "lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty]",
          },
          Object {
            "default": undefined,
            "displayName": "repository_name",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname",
              ],
              "summary": "\`AWS::ECR::Repository.RepositoryName\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepositoryProps.property.repository_name",
            "id": "@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
          Object {
            "default": undefined,
            "displayName": "repository_policy_text",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext",
              ],
              "summary": "\`AWS::ECR::Repository.RepositoryPolicyText\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepositoryProps.property.repository_policy_text",
            "id": "@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Any",
            },
            "usage": "repository_policy_text: typing.Any",
          },
          Object {
            "default": undefined,
            "displayName": "tags",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags",
              ],
              "summary": "\`AWS::ECR::Repository.Tags\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepositoryProps.property.tags",
            "id": "@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.List[%]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "CfnTag",
                      "fqn": "aws_cdk.core.CfnTag",
                      "id": "@aws-cdk/core.CfnTag",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              ],
            },
            "usage": "tags: typing.List[CfnTag]",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepositoryProps(
  encryption_configuration: typing.Any = None,
  image_scanning_configuration: typing.Any = None,
  image_tag_mutability: str = None,
  lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty] = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)",
      },
      Object {
        "displayName": "LifecyclePolicyProperty",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html",
          ],
        },
        "fqn": "aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty",
        "id": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "lifecycle_policy_text",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext",
              ],
              "summary": "\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty.property.lifecycle_policy_text",
            "id": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "lifecycle_policy_text: str",
          },
          Object {
            "default": undefined,
            "displayName": "registry_id",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid",
              ],
              "summary": "\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty.property.registry_id",
            "id": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "registry_id: str",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty(
  lifecycle_policy_text: str = None,
  registry_id: str = None
)",
      },
      Object {
        "displayName": "LifecycleRule",
        "docs": Object {
          "summary": "An ECR life cycle rule.",
        },
        "fqn": "aws_cdk.aws_ecr.LifecycleRule",
        "id": "@aws-cdk/aws-ecr.LifecycleRule",
        "properties": Array [
          Object {
            "default": "No description",
            "displayName": "description",
            "docs": Object {
              "summary": "Describes the purpose of the rule.",
            },
            "fqn": "aws_cdk.aws_ecr.LifecycleRule.property.description",
            "id": "@aws-cdk/aws-ecr.LifecycleRule.property.description",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "description: str",
          },
          Object {
            "default": undefined,
            "displayName": "max_image_age",
            "docs": Object {
              "remarks": "Specify exactly one of maxImageCount and maxImageAge.",
              "summary": "The maximum age of images to retain. The value must represent a number of days.",
            },
            "fqn": "aws_cdk.aws_ecr.LifecycleRule.property.max_image_age",
            "id": "@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge",
            "optional": true,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "Duration",
                  "fqn": "aws_cdk.core.Duration",
                  "id": "@aws-cdk/core.Duration",
                  "packageName": "@aws-cdk/core",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "max_image_age: Duration",
          },
          Object {
            "default": undefined,
            "displayName": "max_image_count",
            "docs": Object {
              "remarks": "Specify exactly one of maxImageCount and maxImageAge.",
              "summary": "The maximum number of images to retain.",
            },
            "fqn": "aws_cdk.aws_ecr.LifecycleRule.property.max_image_count",
            "id": "@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Union[int, float]",
            },
            "usage": "max_image_count: typing.Union[int, float]",
          },
          Object {
            "default": "Automatically assigned",
            "displayName": "rule_priority",
            "docs": Object {
              "remarks": "All rules must have a unique priority, where lower numbers have
higher precedence. The first rule that matches is applied to an image.

There can only be one rule with a tagStatus of Any, and it must have
the highest rulePriority.

All rules without a specified priority will have incrementing priorities
automatically assigned to them, higher than any rules that DO have priorities.",
              "summary": "Controls the order in which rules are evaluated (low to high).",
            },
            "fqn": "aws_cdk.aws_ecr.LifecycleRule.property.rule_priority",
            "id": "@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.Union[int, float]",
            },
            "usage": "rule_priority: typing.Union[int, float]",
          },
          Object {
            "default": undefined,
            "displayName": "tag_prefix_list",
            "docs": Object {
              "remarks": "Only if tagStatus == TagStatus.Tagged",
              "summary": "Select images that have ALL the given prefixes in their tag.",
            },
            "fqn": "aws_cdk.aws_ecr.LifecycleRule.property.tag_prefix_list",
            "id": "@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.List[%]",
              "types": Array [
                Object {
                  "formattingPattern": "str",
                },
              ],
            },
            "usage": "tag_prefix_list: typing.List[str]",
          },
          Object {
            "default": "TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise",
            "displayName": "tag_status",
            "docs": Object {
              "remarks": "Only one rule is allowed to select untagged images, and it must
have the highest rulePriority.",
              "summary": "Select images based on tags.",
            },
            "fqn": "aws_cdk.aws_ecr.LifecycleRule.property.tag_status",
            "id": "@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus",
            "optional": true,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "TagStatus",
                  "fqn": "aws_cdk.aws_ecr.TagStatus",
                  "id": "@aws-cdk/aws-ecr.TagStatus",
                  "packageName": "@aws-cdk/aws-ecr",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "tag_status: TagStatus",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.LifecycleRule(
  description: str = None,
  max_image_age: Duration = None,
  max_image_count: typing.Union[int, float] = None,
  rule_priority: typing.Union[int, float] = None,
  tag_prefix_list: typing.List[str] = None,
  tag_status: TagStatus = None
)",
      },
      Object {
        "displayName": "OnCloudTrailImagePushedOptions",
        "docs": Object {
          "summary": "Options for the onCloudTrailImagePushed method.",
        },
        "fqn": "aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions",
        "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
        "properties": Array [
          Object {
            "default": "- No description",
            "displayName": "description",
            "docs": Object {
              "summary": "A description of the rule's purpose.",
            },
            "fqn": "aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.property.description",
            "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "description: str",
          },
          Object {
            "default": "- No additional filtering based on an event pattern.",
            "displayName": "event_pattern",
            "docs": Object {
              "links": Array [
                "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
              ],
              "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
              "summary": "Additional restrictions for the event to route to the specified target.",
            },
            "fqn": "aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.property.event_pattern",
            "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern",
            "optional": true,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "EventPattern",
                  "fqn": "aws_cdk.aws_events.EventPattern",
                  "id": "@aws-cdk/aws-events.EventPattern",
                  "packageName": "@aws-cdk/aws-events",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "event_pattern: EventPattern",
          },
          Object {
            "default": "AWS CloudFormation generates a unique physical ID.",
            "displayName": "rule_name",
            "docs": Object {
              "summary": "A name for the rule.",
            },
            "fqn": "aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.property.rule_name",
            "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "rule_name: str",
          },
          Object {
            "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
            "displayName": "target",
            "docs": Object {
              "summary": "The target to register for the event.",
            },
            "fqn": "aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.property.target",
            "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target",
            "optional": true,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "IRuleTarget",
                  "fqn": "aws_cdk.aws_events.IRuleTarget",
                  "id": "@aws-cdk/aws-events.IRuleTarget",
                  "packageName": "@aws-cdk/aws-events",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "target: IRuleTarget",
          },
          Object {
            "default": "- Watch changes to all tags",
            "displayName": "image_tag",
            "docs": Object {
              "summary": "Only watch changes to this image tag.",
            },
            "fqn": "aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions.property.image_tag",
            "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "image_tag: str",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions(
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)",
      },
      Object {
        "displayName": "OnImageScanCompletedOptions",
        "docs": Object {
          "summary": "Options for the OnImageScanCompleted method.",
        },
        "fqn": "aws_cdk.aws_ecr.OnImageScanCompletedOptions",
        "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
        "properties": Array [
          Object {
            "default": "- No description",
            "displayName": "description",
            "docs": Object {
              "summary": "A description of the rule's purpose.",
            },
            "fqn": "aws_cdk.aws_ecr.OnImageScanCompletedOptions.property.description",
            "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "description: str",
          },
          Object {
            "default": "- No additional filtering based on an event pattern.",
            "displayName": "event_pattern",
            "docs": Object {
              "links": Array [
                "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
              ],
              "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
              "summary": "Additional restrictions for the event to route to the specified target.",
            },
            "fqn": "aws_cdk.aws_ecr.OnImageScanCompletedOptions.property.event_pattern",
            "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern",
            "optional": true,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "EventPattern",
                  "fqn": "aws_cdk.aws_events.EventPattern",
                  "id": "@aws-cdk/aws-events.EventPattern",
                  "packageName": "@aws-cdk/aws-events",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "event_pattern: EventPattern",
          },
          Object {
            "default": "AWS CloudFormation generates a unique physical ID.",
            "displayName": "rule_name",
            "docs": Object {
              "summary": "A name for the rule.",
            },
            "fqn": "aws_cdk.aws_ecr.OnImageScanCompletedOptions.property.rule_name",
            "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "rule_name: str",
          },
          Object {
            "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
            "displayName": "target",
            "docs": Object {
              "summary": "The target to register for the event.",
            },
            "fqn": "aws_cdk.aws_ecr.OnImageScanCompletedOptions.property.target",
            "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target",
            "optional": true,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "IRuleTarget",
                  "fqn": "aws_cdk.aws_events.IRuleTarget",
                  "id": "@aws-cdk/aws-events.IRuleTarget",
                  "packageName": "@aws-cdk/aws-events",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "target: IRuleTarget",
          },
          Object {
            "default": "- Watch the changes to the repository with all image tags",
            "displayName": "image_tags",
            "docs": Object {
              "remarks": "Leave it undefined to watch the full repository.",
              "summary": "Only watch changes to the image tags spedified.",
            },
            "fqn": "aws_cdk.aws_ecr.OnImageScanCompletedOptions.property.image_tags",
            "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.List[%]",
              "types": Array [
                Object {
                  "formattingPattern": "str",
                },
              ],
            },
            "usage": "image_tags: typing.List[str]",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.OnImageScanCompletedOptions(
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)",
      },
      Object {
        "displayName": "ReplicationConfigurationProperty",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html",
          ],
        },
        "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty",
        "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "rules",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules",
              ],
              "summary": "\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Union[%, %]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IResolvable",
                      "fqn": "aws_cdk.core.IResolvable",
                      "id": "@aws-cdk/core.IResolvable",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
                Object {
                  "formattingPattern": "typing.List[%]",
                  "types": Array [
                    Object {
                      "formattingPattern": "typing.Union[%, %]",
                      "types": Array [
                        Object {
                          "formattingPattern": "%",
                          "types": Array [
                            Object {
                              "displayName": "IResolvable",
                              "fqn": "aws_cdk.core.IResolvable",
                              "id": "@aws-cdk/core.IResolvable",
                              "packageName": "@aws-cdk/core",
                              "packageVersion": "99.99.99",
                              "submodule": undefined,
                            },
                          ],
                        },
                        Object {
                          "formattingPattern": "%",
                          "types": Array [
                            Object {
                              "displayName": "ReplicationRuleProperty",
                              "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationRuleProperty",
                              "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty",
                              "packageName": "@aws-cdk/aws-ecr",
                              "packageVersion": "99.99.99",
                              "submodule": undefined,
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            "usage": "rules: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationRuleProperty]]]",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty(
  rules: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationRuleProperty]]]
)",
      },
      Object {
        "displayName": "ReplicationDestinationProperty",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html",
          ],
        },
        "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationDestinationProperty",
        "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "region",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region",
              ],
              "summary": "\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "region: str",
          },
          Object {
            "default": undefined,
            "displayName": "registry_id",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid",
              ],
              "summary": "\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registry_id",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "registry_id: str",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationDestinationProperty(
  region: str,
  registry_id: str
)",
      },
      Object {
        "displayName": "ReplicationRuleProperty",
        "docs": Object {
          "links": Array [
            "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html",
          ],
        },
        "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationRuleProperty",
        "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "destinations",
            "docs": Object {
              "links": Array [
                "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations",
              ],
              "summary": "\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.",
            },
            "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations",
            "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "typing.Union[%, %]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "IResolvable",
                      "fqn": "aws_cdk.core.IResolvable",
                      "id": "@aws-cdk/core.IResolvable",
                      "packageName": "@aws-cdk/core",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
                Object {
                  "formattingPattern": "typing.List[%]",
                  "types": Array [
                    Object {
                      "formattingPattern": "typing.Union[%, %]",
                      "types": Array [
                        Object {
                          "formattingPattern": "%",
                          "types": Array [
                            Object {
                              "displayName": "IResolvable",
                              "fqn": "aws_cdk.core.IResolvable",
                              "id": "@aws-cdk/core.IResolvable",
                              "packageName": "@aws-cdk/core",
                              "packageVersion": "99.99.99",
                              "submodule": undefined,
                            },
                          ],
                        },
                        Object {
                          "formattingPattern": "%",
                          "types": Array [
                            Object {
                              "displayName": "ReplicationDestinationProperty",
                              "fqn": "aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationDestinationProperty",
                              "id": "@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty",
                              "packageName": "@aws-cdk/aws-ecr",
                              "packageVersion": "99.99.99",
                              "submodule": undefined,
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            "usage": "destinations: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationDestinationProperty]]]",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationRuleProperty(
  destinations: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationDestinationProperty]]]
)",
      },
      Object {
        "displayName": "RepositoryAttributes",
        "docs": Object {},
        "fqn": "aws_cdk.aws_ecr.RepositoryAttributes",
        "id": "@aws-cdk/aws-ecr.RepositoryAttributes",
        "properties": Array [
          Object {
            "default": undefined,
            "displayName": "repository_arn",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.RepositoryAttributes.property.repository_arn",
            "id": "@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_arn: str",
          },
          Object {
            "default": undefined,
            "displayName": "repository_name",
            "docs": Object {},
            "fqn": "aws_cdk.aws_ecr.RepositoryAttributes.property.repository_name",
            "id": "@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName",
            "optional": undefined,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryAttributes(
  repository_arn: str,
  repository_name: str
)",
      },
      Object {
        "displayName": "RepositoryProps",
        "docs": Object {},
        "fqn": "aws_cdk.aws_ecr.RepositoryProps",
        "id": "@aws-cdk/aws-ecr.RepositoryProps",
        "properties": Array [
          Object {
            "default": "false",
            "displayName": "image_scan_on_push",
            "docs": Object {
              "summary": "Enable the scan on push when creating the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryProps.property.image_scan_on_push",
            "id": "@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush",
            "optional": true,
            "type": Object {
              "formattingPattern": "bool",
            },
            "usage": "image_scan_on_push: bool",
          },
          Object {
            "default": "TagMutability.MUTABLE",
            "displayName": "image_tag_mutability",
            "docs": Object {
              "remarks": "If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.",
              "summary": "The tag mutability setting for the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryProps.property.image_tag_mutability",
            "id": "@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability",
            "optional": true,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "TagMutability",
                  "fqn": "aws_cdk.aws_ecr.TagMutability",
                  "id": "@aws-cdk/aws-ecr.TagMutability",
                  "packageName": "@aws-cdk/aws-ecr",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "image_tag_mutability: TagMutability",
          },
          Object {
            "default": "The default registry is assumed.",
            "displayName": "lifecycle_registry_id",
            "docs": Object {
              "links": Array [
                "https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html",
              ],
              "summary": "The AWS account ID associated with the registry that contains the repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryProps.property.lifecycle_registry_id",
            "id": "@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "lifecycle_registry_id: str",
          },
          Object {
            "default": "No life cycle rules",
            "displayName": "lifecycle_rules",
            "docs": Object {
              "summary": "Life cycle rules to apply to this registry.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryProps.property.lifecycle_rules",
            "id": "@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules",
            "optional": true,
            "type": Object {
              "formattingPattern": "typing.List[%]",
              "types": Array [
                Object {
                  "formattingPattern": "%",
                  "types": Array [
                    Object {
                      "displayName": "LifecycleRule",
                      "fqn": "aws_cdk.aws_ecr.LifecycleRule",
                      "id": "@aws-cdk/aws-ecr.LifecycleRule",
                      "packageName": "@aws-cdk/aws-ecr",
                      "packageVersion": "99.99.99",
                      "submodule": undefined,
                    },
                  ],
                },
              ],
            },
            "usage": "lifecycle_rules: typing.List[LifecycleRule]",
          },
          Object {
            "default": "RemovalPolicy.Retain",
            "displayName": "removal_policy",
            "docs": Object {
              "summary": "Determine what happens to the repository when the resource/stack is deleted.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryProps.property.removal_policy",
            "id": "@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy",
            "optional": true,
            "type": Object {
              "formattingPattern": "%",
              "types": Array [
                Object {
                  "displayName": "RemovalPolicy",
                  "fqn": "aws_cdk.core.RemovalPolicy",
                  "id": "@aws-cdk/core.RemovalPolicy",
                  "packageName": "@aws-cdk/core",
                  "packageVersion": "99.99.99",
                  "submodule": undefined,
                },
              ],
            },
            "usage": "removal_policy: RemovalPolicy",
          },
          Object {
            "default": "Automatically generated name.",
            "displayName": "repository_name",
            "docs": Object {
              "summary": "Name for this repository.",
            },
            "fqn": "aws_cdk.aws_ecr.RepositoryProps.property.repository_name",
            "id": "@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName",
            "optional": true,
            "type": Object {
              "formattingPattern": "str",
            },
            "usage": "repository_name: str",
          },
        ],
        "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryProps(
  image_scan_on_push: bool = None,
  image_tag_mutability: TagMutability = None,
  lifecycle_registry_id: str = None,
  lifecycle_rules: typing.List[LifecycleRule] = None,
  removal_policy: RemovalPolicy = None,
  repository_name: str = None
)",
      },
    ],
  },
  "language": "python",
  "metadata": Object {
    "packageName": "@aws-cdk/aws-ecr",
    "packageVersion": "1.106.0",
    "submodule": undefined,
  },
  "readme": "# Amazon ECR Construct Library

<!--BEGIN STABILITY BANNER-->---


![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository = ecr.Repository(self, \\"Repository\\")
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository = ecr.Repository(stack, \\"Repo\\",
    image_scan_on_push=True
)
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository.on_image_scan_completed(\\"ImageScanComplete\\").add_target(...)
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
import aws_cdk.aws_iam as iam
import aws_cdk.aws_ecr as ecr

user = iam.User(self, \\"User\\", ...)
ecr.AuthorizationToken.grant_read(user)
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
import aws_cdk.aws_iam as iam
import aws_cdk.aws_ecr as ecr

user = iam.User(self, \\"User\\", ...)
ecr.PublicGalleryAuthorizationToken.grant_read(user)
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
ecr.Repository(stack, \\"Repo\\", image_tag_mutability=ecr.TagMutability.IMMUTABLE)
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository.add_lifecycle_rule(tag_prefix_list=[\\"prod\\"], max_image_count=9999)
repository.add_lifecycle_rule(max_image_age=cdk.Duration.days(30))
\`\`\`",
  "version": "0.1",
}
`;

exports[`python for package 2`] = `
"# Amazon ECR Construct Library

<!--BEGIN STABILITY BANNER-->---


![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository = ecr.Repository(self, \\"Repository\\")
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository = ecr.Repository(stack, \\"Repo\\",
    image_scan_on_push=True
)
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository.on_image_scan_completed(\\"ImageScanComplete\\").add_target(...)
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
import aws_cdk.aws_iam as iam
import aws_cdk.aws_ecr as ecr

user = iam.User(self, \\"User\\", ...)
ecr.AuthorizationToken.grant_read(user)
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
import aws_cdk.aws_iam as iam
import aws_cdk.aws_ecr as ecr

user = iam.User(self, \\"User\\", ...)
ecr.PublicGalleryAuthorizationToken.grant_read(user)
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
ecr.Repository(stack, \\"Repo\\", image_tag_mutability=ecr.TagMutability.IMMUTABLE)
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository.add_lifecycle_rule(tag_prefix_list=[\\"prod\\"], max_image_count=9999)
repository.add_lifecycle_rule(max_image_age=cdk.Duration.days(30))
\`\`\`
# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### CfnPublicRepository <a name=\\"CfnPublicRepository\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository\\"></a>

- *Implements:* aws_cdk.core.IInspectable

A CloudFormation \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnPublicRepository(
  scope: Construct,
  id: str,
  repository_catalog_data: typing.Any = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\">scope</a></code> | <code>aws_cdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData\\">repository_catalog_data</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags\\">tags</a></code> | <code>typing.List[aws_cdk.core.CfnTag]</code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\"></a>

- *Type:* aws_cdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`repository_catalog_data\`<sup>Optional</sup> <a name=\\"repository_catalog_data\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData\\"></a>

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName\\"></a>

- *Type:* str

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repository_policy_text\`<sup>Optional</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText\\"></a>

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags\\"></a>

- *Type:* typing.List[aws_cdk.core.CfnTag]

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\">attr_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\">tags</a></code> | <code>aws_cdk.core.TagManager</code> | \`AWS::ECR::PublicRepository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\">repository_catalog_data</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |

---

##### \`attr_arn\`<sup>Required</sup> <a name=\\"attr_arn\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\"></a>

\`\`\`python
attr_arn: str
\`\`\`

- *Type:* str

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\"></a>

\`\`\`python
tags: TagManager
\`\`\`

- *Type:* aws_cdk.core.TagManager

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

##### \`repository_catalog_data\`<sup>Required</sup> <a name=\\"repository_catalog_data\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\"></a>

\`\`\`python
repository_catalog_data: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repository_policy_text\`<sup>Required</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\"></a>

\`\`\`python
repository_policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnRegistryPolicy <a name=\\"CfnRegistryPolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy\\"></a>

- *Implements:* aws_cdk.core.IInspectable

A CloudFormation \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRegistryPolicy(
  scope: Construct,
  id: str,
  policy_text: typing.Any
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\">scope</a></code> | <code>aws_cdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText\\">policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\"></a>

- *Type:* aws_cdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`policy_text\`<sup>Required</sup> <a name=\\"policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText\\"></a>

- *Type:* typing.Any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\">attr_registry_id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\">policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`attr_registry_id\`<sup>Required</sup> <a name=\\"attr_registry_id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\"></a>

\`\`\`python
attr_registry_id: str
\`\`\`

- *Type:* str

---

##### \`policy_text\`<sup>Required</sup> <a name=\\"policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\"></a>

\`\`\`python
policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnReplicationConfiguration <a name=\\"CfnReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration\\"></a>

- *Implements:* aws_cdk.core.IInspectable

A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration(
  scope: Construct,
  id: str,
  replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\">scope</a></code> | <code>aws_cdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration\\">replication_configuration</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\"></a>

- *Type:* aws_cdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`replication_configuration\`<sup>Required</sup> <a name=\\"replication_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration\\"></a>

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\">attr_registry_id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\">replication_configuration</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`attr_registry_id\`<sup>Required</sup> <a name=\\"attr_registry_id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\"></a>

\`\`\`python
attr_registry_id: str
\`\`\`

- *Type:* str

---

##### \`replication_configuration\`<sup>Required</sup> <a name=\\"replication_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\"></a>

\`\`\`python
replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnRepository <a name=\\"CfnRepository\\" id=\\"@aws-cdk/aws-ecr.CfnRepository\\"></a>

- *Implements:* aws_cdk.core.IInspectable

A CloudFormation \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepository(
  scope: Construct,
  id: str,
  encryption_configuration: typing.Any = None,
  image_scanning_configuration: typing.Any = None,
  image_tag_mutability: str = None,
  lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty] = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\">scope</a></code> | <code>aws_cdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration\\">encryption_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration\\">image_scanning_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability\\">image_tag_mutability</a></code> | <code>str</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy\\">lifecycle_policy</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags\\">tags</a></code> | <code>typing.List[aws_cdk.core.CfnTag]</code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\"></a>

- *Type:* aws_cdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`encryption_configuration\`<sup>Optional</sup> <a name=\\"encryption_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration\\"></a>

- *Type:* typing.Any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`image_scanning_configuration\`<sup>Optional</sup> <a name=\\"image_scanning_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration\\"></a>

- *Type:* typing.Any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability\\"></a>

- *Type:* str

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecycle_policy\`<sup>Optional</sup> <a name=\\"lifecycle_policy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy\\"></a>

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName\\"></a>

- *Type:* str

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repository_policy_text\`<sup>Optional</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText\\"></a>

- *Type:* typing.Any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags\\"></a>

- *Type:* typing.List[aws_cdk.core.CfnTag]

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\">attr_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\">attr_repository_uri</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.tags\\">tags</a></code> | <code>aws_cdk.core.TagManager</code> | \`AWS::ECR::Repository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\">encryption_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\">image_scanning_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\">image_tag_mutability</a></code> | <code>str</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\">lifecycle_policy</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::Repository.RepositoryName\`. |

---

##### \`attr_arn\`<sup>Required</sup> <a name=\\"attr_arn\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\"></a>

\`\`\`python
attr_arn: str
\`\`\`

- *Type:* str

---

##### \`attr_repository_uri\`<sup>Required</sup> <a name=\\"attr_repository_uri\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\"></a>

\`\`\`python
attr_repository_uri: str
\`\`\`

- *Type:* str

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.tags\\"></a>

\`\`\`python
tags: TagManager
\`\`\`

- *Type:* aws_cdk.core.TagManager

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

##### \`encryption_configuration\`<sup>Required</sup> <a name=\\"encryption_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\"></a>

\`\`\`python
encryption_configuration: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`image_scanning_configuration\`<sup>Required</sup> <a name=\\"image_scanning_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\"></a>

\`\`\`python
image_scanning_configuration: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`repository_policy_text\`<sup>Required</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\"></a>

\`\`\`python
repository_policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\"></a>

\`\`\`python
image_tag_mutability: str
\`\`\`

- *Type:* str

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecycle_policy\`<sup>Optional</sup> <a name=\\"lifecycle_policy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\"></a>

\`\`\`python
lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### Repository <a name=\\"Repository\\" id=\\"@aws-cdk/aws-ecr.Repository\\"></a>

Define an ECR repository.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository(
  scope: Construct,
  id: str,
  image_scan_on_push: bool = None,
  image_tag_mutability: TagMutability = None,
  lifecycle_registry_id: str = None,
  lifecycle_rules: typing.List[LifecycleRule] = None,
  removal_policy: RemovalPolicy = None,
  repository_name: str = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush\\">image_scan_on_push</a></code> | <code>bool</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability\\">image_tag_mutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId\\">lifecycle_registry_id</a></code> | <code>str</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules\\">lifecycle_rules</a></code> | <code>typing.List[<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>]</code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy\\">removal_policy</a></code> | <code>aws_cdk.core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName\\">repository_name</a></code> | <code>str</code> | Name for this repository. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`image_scan_on_push\`<sup>Optional</sup> <a name=\\"image_scan_on_push\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush\\"></a>

- *Type:* bool
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycle_registry_id\`<sup>Optional</sup> <a name=\\"lifecycle_registry_id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId\\"></a>

- *Type:* str
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycle_rules\`<sup>Optional</sup> <a name=\\"lifecycle_rules\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules\\"></a>

- *Type:* typing.List[<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>]
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removal_policy\`<sup>Optional</sup> <a name=\\"removal_policy\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy\\"></a>

- *Type:* aws_cdk.core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName\\"></a>

- *Type:* str
- *Default:* Automatically generated name.

Name for this repository.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addLifecycleRule\\">add_lifecycle_rule</a></code> | Add a life cycle rule to the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\">add_to_resource_policy</a></code> | Add a policy statement to the repository's resource policy. |

---

##### \`add_lifecycle_rule\` <a name=\\"add_lifecycle_rule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule\\"></a>

\`\`\`python
def add_lifecycle_rule(
  description: str = None,
  max_image_age: Duration = None,
  max_image_count: typing.Union[int, float] = None,
  rule_priority: typing.Union[int, float] = None,
  tag_prefix_list: typing.List[str] = None,
  tag_status: TagStatus = None
)
\`\`\`

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

Describes the purpose of the rule.

---

###### \`max_image_age\`<sup>Optional</sup> <a name=\\"max_image_age\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.maxImageAge\\"></a>

- *Type:* aws_cdk.core.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

###### \`max_image_count\`<sup>Optional</sup> <a name=\\"max_image_count\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.maxImageCount\\"></a>

- *Type:* typing.Union[int, float]

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

###### \`rule_priority\`<sup>Optional</sup> <a name=\\"rule_priority\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rulePriority\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

###### \`tag_prefix_list\`<sup>Optional</sup> <a name=\\"tag_prefix_list\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.tagPrefixList\\"></a>

- *Type:* typing.List[str]

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

###### \`tag_status\`<sup>Optional</sup> <a name=\\"tag_status\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.tagStatus\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

##### \`add_to_resource_policy\` <a name=\\"add_to_resource_policy\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\"></a>

\`\`\`python
def add_to_resource_policy(
  statement: PolicyStatement
)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* aws_cdk.aws_iam.PolicyStatement

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\">arn_for_local_repository</a></code> | Returns an ECR ARN for a repository that resides in the same account/region as the current stack. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\">from_repository_arn</a></code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\">from_repository_attributes</a></code> | Import a repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryName\\">from_repository_name</a></code> | *No description.* |

---

##### \`arn_for_local_repository\` <a name=\\"arn_for_local_repository\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.arn_for_local_repository(
  repository_name: str,
  scope: IConstruct,
  account: str = None
)
\`\`\`

###### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName\\"></a>

- *Type:* str

---

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope\\"></a>

- *Type:* constructs.IConstruct

---

###### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account\\"></a>

- *Type:* str

---

##### \`from_repository_arn\` <a name=\\"from_repository_arn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_arn(
  scope: Construct,
  id: str,
  repository_arn: str
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id\\"></a>

- *Type:* str

---

###### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn\\"></a>

- *Type:* str

---

##### \`from_repository_attributes\` <a name=\\"from_repository_attributes\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_attributes(
  scope: Construct,
  id: str,
  repository_arn: str,
  repository_name: str
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id\\"></a>

- *Type:* str

---

###### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.repositoryArn\\"></a>

- *Type:* str

---

###### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.repositoryName\\"></a>

- *Type:* str

---

##### \`from_repository_name\` <a name=\\"from_repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_name(
  scope: Construct,
  id: str,
  repository_name: str
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id\\"></a>

- *Type:* str

---

###### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName\\"></a>

- *Type:* str

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | The name of the repository. |

---

##### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryArn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* str

The ARN of the repository.

---

##### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

The name of the repository.

---


### RepositoryBase <a name=\\"RepositoryBase\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase\\"></a>

- *Implements:* <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Base class for ECR repository.

Reused between imported repositories and owned repositories.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryBase(
  scope: Construct,
  id: str,
  account: str = None,
  environment_from_arn: str = None,
  physical_name: str = None,
  region: str = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account\\">account</a></code> | <code>str</code> | The AWS account ID this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn\\">environment_from_arn</a></code> | <code>str</code> | ARN to deduce region and account from. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName\\">physical_name</a></code> | <code>str</code> | The value passed in by users to the physical name prop of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region\\">region</a></code> | <code>str</code> | The AWS region this resource belongs to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account\\"></a>

- *Type:* str
- *Default:* the resource is in the same account as the stack it belongs to

The AWS account ID this resource belongs to.

---

##### \`environment_from_arn\`<sup>Optional</sup> <a name=\\"environment_from_arn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn\\"></a>

- *Type:* str
- *Default:* take environment from \`account\`, \`region\` parameters, or use Stack environment.

ARN to deduce region and account from.

The ARN is parsed and the account and region are taken from the ARN. This should be used for imported resources.  Cannot be supplied together with either \`account\` or \`region\`.

---

##### \`physical_name\`<sup>Optional</sup> <a name=\\"physical_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName\\"></a>

- *Type:* str
- *Default:* The physical name will be allocated by CloudFormation at deployment time

The value passed in by users to the physical name prop of the resource.

\`undefined\` implies that a physical name will be allocated by    CloudFormation during deployment. - a concrete value implies a specific physical name - \`PhysicalName.GENERATE_IF_NEEDED\` is a marker that indicates that a physical will only be generated    by the CDK if it is needed for cross-environment references. Otherwise, it will be allocated by CloudFormation.

---

##### \`region\`<sup>Optional</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region\\"></a>

- *Type:* str
- *Default:* the resource is in the same region as the stack it belongs to

The AWS region this resource belongs to.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\">add_to_resource_policy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPull\\">grant_pull</a></code> | Grant the given identity permissions to use the images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\">grant_pull_push</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\">on_cloud_trail_event</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\">on_cloud_trail_image_pushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onEvent\\">on_event</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\">on_image_scan_completed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\">repository_uri_for_digest</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\">repository_uri_for_tag</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |

---

##### \`add_to_resource_policy\` <a name=\\"add_to_resource_policy\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\"></a>

\`\`\`python
def add_to_resource_policy(
  statement: PolicyStatement
)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* aws_cdk.aws_iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant\\"></a>

\`\`\`python
def grant(
  grantee: IGrantable,
  actions: str
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions\\"></a>

- *Type:* str

---

##### \`grant_pull\` <a name=\\"grant_pull\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull\\"></a>

\`\`\`python
def grant_pull(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

##### \`grant_pull_push\` <a name=\\"grant_pull_push\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\"></a>

\`\`\`python
def grant_pull_push(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

##### \`on_cloud_trail_event\` <a name=\\"on_cloud_trail_event\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\"></a>

\`\`\`python
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`on_cloud_trail_image_pushed\` <a name=\\"on_cloud_trail_image_pushed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\"></a>

\`\`\`python
def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

###### \`image_tag\`<sup>Optional</sup> <a name=\\"image_tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.imageTag\\"></a>

- *Type:* str
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

##### \`on_event\` <a name=\\"on_event\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent\\"></a>

\`\`\`python
def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id\\"></a>

- *Type:* str

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`on_image_scan_completed\` <a name=\\"on_image_scan_completed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\"></a>

\`\`\`python
def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

###### \`image_tags\`<sup>Optional</sup> <a name=\\"image_tags\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.imageTags\\"></a>

- *Type:* typing.List[str]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

##### \`repository_uri_for_digest\` <a name=\\"repository_uri_for_digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\"></a>

\`\`\`python
def repository_uri_for_digest(
  digest: str = None
)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* str

Optional image digest.

---

##### \`repository_uri_for_tag\` <a name=\\"repository_uri_for_tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\"></a>

\`\`\`python
def repository_uri_for_tag(
  tag: str = None
)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* str

Optional image tag.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\">repository_name</a></code> | <code>str</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\">repository_uri</a></code> | <code>str</code> | The URI of this repository (represents the latest image):. |

---

##### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* str

The ARN of the repository.

---

##### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

The name of the repository.

---

##### \`repository_uri\`<sup>Required</sup> <a name=\\"repository_uri\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\"></a>

\`\`\`python
repository_uri: str
\`\`\`

- *Type:* str

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### CfnPublicRepositoryProps <a name=\\"CfnPublicRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnPublicRepositoryProps(
  repository_catalog_data: typing.Any = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\">repository_catalog_data</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\">tags</a></code> | <code>typing.List[aws_cdk.core.CfnTag]</code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`repository_catalog_data\`<sup>Optional</sup> <a name=\\"repository_catalog_data\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\"></a>

\`\`\`python
repository_catalog_data: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repository_policy_text\`<sup>Optional</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`python
repository_policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\"></a>

\`\`\`python
tags: typing.List[CfnTag]
\`\`\`

- *Type:* typing.List[aws_cdk.core.CfnTag]

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

### CfnRegistryPolicyProps <a name=\\"CfnRegistryPolicyProps\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\"></a>

Properties for defining a \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRegistryPolicyProps(
  policy_text: typing.Any
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\">policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`policy_text\`<sup>Required</sup> <a name=\\"policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\"></a>

\`\`\`python
policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

### CfnReplicationConfigurationProps <a name=\\"CfnReplicationConfigurationProps\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\"></a>

Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfigurationProps(
  replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\">replication_configuration</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`replication_configuration\`<sup>Required</sup> <a name=\\"replication_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\"></a>

\`\`\`python
replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

### CfnRepositoryProps <a name=\\"CfnRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepositoryProps(
  encryption_configuration: typing.Any = None,
  image_scanning_configuration: typing.Any = None,
  image_tag_mutability: str = None,
  lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty] = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\">encryption_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\">image_scanning_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\">image_tag_mutability</a></code> | <code>str</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\">lifecycle_policy</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\">tags</a></code> | <code>typing.List[aws_cdk.core.CfnTag]</code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`encryption_configuration\`<sup>Optional</sup> <a name=\\"encryption_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\"></a>

\`\`\`python
encryption_configuration: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`image_scanning_configuration\`<sup>Optional</sup> <a name=\\"image_scanning_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\"></a>

\`\`\`python
image_scanning_configuration: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\"></a>

\`\`\`python
image_tag_mutability: str
\`\`\`

- *Type:* str

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecycle_policy\`<sup>Optional</sup> <a name=\\"lifecycle_policy\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\"></a>

\`\`\`python
lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repository_policy_text\`<sup>Optional</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`python
repository_policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\"></a>

\`\`\`python
tags: typing.List[CfnTag]
\`\`\`

- *Type:* typing.List[aws_cdk.core.CfnTag]

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

### LifecyclePolicyProperty <a name=\\"LifecyclePolicyProperty\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty(
  lifecycle_policy_text: str = None,
  registry_id: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\">lifecycle_policy_text</a></code> | <code>str</code> | \`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\">registry_id</a></code> | <code>str</code> | \`CfnRepository.LifecyclePolicyProperty.RegistryId\`. |

---

##### \`lifecycle_policy_text\`<sup>Optional</sup> <a name=\\"lifecycle_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\"></a>

\`\`\`python
lifecycle_policy_text: str
\`\`\`

- *Type:* str

\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext)

---

##### \`registry_id\`<sup>Optional</sup> <a name=\\"registry_id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\"></a>

\`\`\`python
registry_id: str
\`\`\`

- *Type:* str

\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid)

---

### LifecycleRule <a name=\\"LifecycleRule\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule\\"></a>

An ECR life cycle rule.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.LifecycleRule(
  description: str = None,
  max_image_age: Duration = None,
  max_image_count: typing.Union[int, float] = None,
  rule_priority: typing.Union[int, float] = None,
  tag_prefix_list: typing.List[str] = None,
  tag_status: TagStatus = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.description\\">description</a></code> | <code>str</code> | Describes the purpose of the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\">max_image_age</a></code> | <code>aws_cdk.core.Duration</code> | The maximum age of images to retain. The value must represent a number of days. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\">max_image_count</a></code> | <code>typing.Union[int, float]</code> | The maximum number of images to retain. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\">rule_priority</a></code> | <code>typing.Union[int, float]</code> | Controls the order in which rules are evaluated (low to high). |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\">tag_prefix_list</a></code> | <code>typing.List[str]</code> | Select images that have ALL the given prefixes in their tag. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\">tag_status</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a></code> | Select images based on tags. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.description\\"></a>

\`\`\`python
description: str
\`\`\`

- *Type:* str
- *Default:* No description

Describes the purpose of the rule.

---

##### \`max_image_age\`<sup>Optional</sup> <a name=\\"max_image_age\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\"></a>

\`\`\`python
max_image_age: Duration
\`\`\`

- *Type:* aws_cdk.core.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`max_image_count\`<sup>Optional</sup> <a name=\\"max_image_count\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\"></a>

\`\`\`python
max_image_count: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`rule_priority\`<sup>Optional</sup> <a name=\\"rule_priority\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\"></a>

\`\`\`python
rule_priority: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

##### \`tag_prefix_list\`<sup>Optional</sup> <a name=\\"tag_prefix_list\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\"></a>

\`\`\`python
tag_prefix_list: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

##### \`tag_status\`<sup>Optional</sup> <a name=\\"tag_status\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\"></a>

\`\`\`python
tag_status: TagStatus
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

### OnCloudTrailImagePushedOptions <a name=\\"OnCloudTrailImagePushedOptions\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\"></a>

Options for the onCloudTrailImagePushed method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions(
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\">description</a></code> | <code>str</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\">event_pattern</a></code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\">rule_name</a></code> | <code>str</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\">target</a></code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\">image_tag</a></code> | <code>str</code> | Only watch changes to this image tag. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\"></a>

\`\`\`python
description: str
\`\`\`

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

##### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\"></a>

\`\`\`python
event_pattern: EventPattern
\`\`\`

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\"></a>

\`\`\`python
rule_name: str
\`\`\`

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\"></a>

\`\`\`python
target: IRuleTarget
\`\`\`

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`image_tag\`<sup>Optional</sup> <a name=\\"image_tag\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\"></a>

\`\`\`python
image_tag: str
\`\`\`

- *Type:* str
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

### OnImageScanCompletedOptions <a name=\\"OnImageScanCompletedOptions\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\"></a>

Options for the OnImageScanCompleted method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.OnImageScanCompletedOptions(
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\">description</a></code> | <code>str</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\">event_pattern</a></code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\">rule_name</a></code> | <code>str</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\">target</a></code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\">image_tags</a></code> | <code>typing.List[str]</code> | Only watch changes to the image tags spedified. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\"></a>

\`\`\`python
description: str
\`\`\`

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

##### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\"></a>

\`\`\`python
event_pattern: EventPattern
\`\`\`

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\"></a>

\`\`\`python
rule_name: str
\`\`\`

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\"></a>

\`\`\`python
target: IRuleTarget
\`\`\`

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`image_tags\`<sup>Optional</sup> <a name=\\"image_tags\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\"></a>

\`\`\`python
image_tags: typing.List[str]
\`\`\`

- *Type:* typing.List[str]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

### ReplicationConfigurationProperty <a name=\\"ReplicationConfigurationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty(
  rules: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationRuleProperty]]]
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\">rules</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, typing.List[typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>]]]</code> | \`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`. |

---

##### \`rules\`<sup>Required</sup> <a name=\\"rules\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\"></a>

\`\`\`python
rules: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationRuleProperty]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, typing.List[typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>]]]

\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules)

---

### ReplicationDestinationProperty <a name=\\"ReplicationDestinationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationDestinationProperty(
  region: str,
  registry_id: str
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\">region</a></code> | <code>str</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\">registry_id</a></code> | <code>str</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`. |

---

##### \`region\`<sup>Required</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\"></a>

\`\`\`python
region: str
\`\`\`

- *Type:* str

\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region)

---

##### \`registry_id\`<sup>Required</sup> <a name=\\"registry_id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\"></a>

\`\`\`python
registry_id: str
\`\`\`

- *Type:* str

\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid)

---

### ReplicationRuleProperty <a name=\\"ReplicationRuleProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationRuleProperty(
  destinations: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationDestinationProperty]]]
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\">destinations</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, typing.List[typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>]]]</code> | \`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`. |

---

##### \`destinations\`<sup>Required</sup> <a name=\\"destinations\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\"></a>

\`\`\`python
destinations: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationDestinationProperty]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, typing.List[typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>]]]

\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations)

---

### RepositoryAttributes <a name=\\"RepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryAttributes(
  repository_arn: str,
  repository_name: str
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\">repository_name</a></code> | <code>str</code> | *No description.* |

---

##### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* str

---

##### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

---

### RepositoryProps <a name=\\"RepositoryProps\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryProps(
  image_scan_on_push: bool = None,
  image_tag_mutability: TagMutability = None,
  lifecycle_registry_id: str = None,
  lifecycle_rules: typing.List[LifecycleRule] = None,
  removal_policy: RemovalPolicy = None,
  repository_name: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\">image_scan_on_push</a></code> | <code>bool</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\">image_tag_mutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\">lifecycle_registry_id</a></code> | <code>str</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\">lifecycle_rules</a></code> | <code>typing.List[<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>]</code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\">removal_policy</a></code> | <code>aws_cdk.core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\">repository_name</a></code> | <code>str</code> | Name for this repository. |

---

##### \`image_scan_on_push\`<sup>Optional</sup> <a name=\\"image_scan_on_push\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\"></a>

\`\`\`python
image_scan_on_push: bool
\`\`\`

- *Type:* bool
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\"></a>

\`\`\`python
image_tag_mutability: TagMutability
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycle_registry_id\`<sup>Optional</sup> <a name=\\"lifecycle_registry_id\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\"></a>

\`\`\`python
lifecycle_registry_id: str
\`\`\`

- *Type:* str
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycle_rules\`<sup>Optional</sup> <a name=\\"lifecycle_rules\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\"></a>

\`\`\`python
lifecycle_rules: typing.List[LifecycleRule]
\`\`\`

- *Type:* typing.List[<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>]
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removal_policy\`<sup>Optional</sup> <a name=\\"removal_policy\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\"></a>

\`\`\`python
removal_policy: RemovalPolicy
\`\`\`

- *Type:* aws_cdk.core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str
- *Default:* Automatically generated name.

Name for this repository.

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\">grant_read</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grant_read\` <a name=\\"grant_read\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.AuthorizationToken.grant_read(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---



### PublicGalleryAuthorizationToken <a name=\\"PublicGalleryAuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken\\"></a>

Authorization token to access the global public ECR Gallery via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\">grant_read</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grant_read\` <a name=\\"grant_read\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.PublicGalleryAuthorizationToken.grant_read(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---



## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* aws_cdk.core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">add_to_resource_policy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grant_pull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grant_pull_push</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">on_cloud_trail_event</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">on_cloud_trail_image_pushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">on_event</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">on_image_scan_completed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repository_uri_for_digest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repository_uri_for_tag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

##### \`add_to_resource_policy\` <a name=\\"add_to_resource_policy\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

\`\`\`python
def add_to_resource_policy(
  statement: PolicyStatement
)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* aws_cdk.aws_iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

\`\`\`python
def grant(
  grantee: IGrantable,
  actions: str
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.actions\\"></a>

- *Type:* str

---

##### \`grant_pull\` <a name=\\"grant_pull\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

\`\`\`python
def grant_pull(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

##### \`grant_pull_push\` <a name=\\"grant_pull_push\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

\`\`\`python
def grant_pull_push(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

##### \`on_cloud_trail_event\` <a name=\\"on_cloud_trail_event\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

\`\`\`python
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`on_cloud_trail_image_pushed\` <a name=\\"on_cloud_trail_image_pushed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

\`\`\`python
def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

###### \`image_tag\`<sup>Optional</sup> <a name=\\"image_tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.imageTag\\"></a>

- *Type:* str
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

##### \`on_event\` <a name=\\"on_event\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

\`\`\`python
def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id\\"></a>

- *Type:* str

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`on_image_scan_completed\` <a name=\\"on_image_scan_completed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

\`\`\`python
def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

###### \`image_tags\`<sup>Optional</sup> <a name=\\"image_tags\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.imageTags\\"></a>

- *Type:* typing.List[str]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

##### \`repository_uri_for_digest\` <a name=\\"repository_uri_for_digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

\`\`\`python
def repository_uri_for_digest(
  digest: str = None
)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* str

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

##### \`repository_uri_for_tag\` <a name=\\"repository_uri_for_tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

\`\`\`python
def repository_uri_for_tag(
  tag: str = None
)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* str

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code>aws_cdk.core.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code>aws_cdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code>aws_cdk.core.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repository_uri</a></code> | <code>str</code> | The URI of this repository (represents the latest image):. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

\`\`\`python
node: ConstructNode
\`\`\`

- *Type:* aws_cdk.core.ConstructNode

The construct tree node for this construct.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

\`\`\`python
env: ResourceEnvironment
\`\`\`

- *Type:* aws_cdk.core.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

\`\`\`python
stack: Stack
\`\`\`

- *Type:* aws_cdk.core.Stack

The stack in which this resource is defined.

---

##### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* str

The ARN of the repository.

---

##### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

The name of the repository.

---

##### \`repository_uri\`<sup>Required</sup> <a name=\\"repository_uri\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

\`\`\`python
repository_uri: str
\`\`\`

- *Type:* str

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### TagMutability <a name=\\"TagMutability\\" id=\\"@aws-cdk/aws-ecr.TagMutability\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.MUTABLE\\">MUTABLE</a></code> | allow image tags to be overwritten. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\">IMMUTABLE</a></code> | all image tags within the repository will be immutable which will prevent them from being overwritten. |

---

The tag mutability setting for your repository.

#### \`MUTABLE\` <a name=\\"MUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.MUTABLE\\"></a>

allow image tags to be overwritten.

---


#### \`IMMUTABLE\` <a name=\\"IMMUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\"></a>

all image tags within the repository will be immutable which will prevent them from being overwritten.

---


### TagStatus <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.TagStatus\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.ANY\\">ANY</a></code> | Rule applies to all images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.TAGGED\\">TAGGED</a></code> | Rule applies to tagged images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\">UNTAGGED</a></code> | Rule applies to untagged images. |

---

Select images based on tags.

#### \`ANY\` <a name=\\"ANY\\" id=\\"@aws-cdk/aws-ecr.TagStatus.ANY\\"></a>

Rule applies to all images.

---


#### \`TAGGED\` <a name=\\"TAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.TAGGED\\"></a>

Rule applies to tagged images.

---


#### \`UNTAGGED\` <a name=\\"UNTAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\"></a>

Rule applies to untagged images.

---

"
`;

exports[`python snapshot - root module 1`] = `
"# Amazon ECR Construct Library

<!--BEGIN STABILITY BANNER-->---


![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository = ecr.Repository(self, \\"Repository\\")
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository = ecr.Repository(stack, \\"Repo\\",
    image_scan_on_push=True
)
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository.on_image_scan_completed(\\"ImageScanComplete\\").add_target(...)
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
import aws_cdk.aws_iam as iam
import aws_cdk.aws_ecr as ecr

user = iam.User(self, \\"User\\", ...)
ecr.AuthorizationToken.grant_read(user)
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
import aws_cdk.aws_iam as iam
import aws_cdk.aws_ecr as ecr

user = iam.User(self, \\"User\\", ...)
ecr.PublicGalleryAuthorizationToken.grant_read(user)
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
ecr.Repository(stack, \\"Repo\\", image_tag_mutability=ecr.TagMutability.IMMUTABLE)
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`python
# Example automatically generated from non-compiling source. May contain errors.
repository.add_lifecycle_rule(tag_prefix_list=[\\"prod\\"], max_image_count=9999)
repository.add_lifecycle_rule(max_image_age=cdk.Duration.days(30))
\`\`\`
# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### CfnPublicRepository <a name=\\"CfnPublicRepository\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository\\"></a>

- *Implements:* aws_cdk.core.IInspectable

A CloudFormation \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnPublicRepository(
  scope: Construct,
  id: str,
  repository_catalog_data: typing.Any = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\">scope</a></code> | <code>aws_cdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData\\">repository_catalog_data</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags\\">tags</a></code> | <code>typing.List[aws_cdk.core.CfnTag]</code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\"></a>

- *Type:* aws_cdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`repository_catalog_data\`<sup>Optional</sup> <a name=\\"repository_catalog_data\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryCatalogData\\"></a>

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryName\\"></a>

- *Type:* str

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repository_policy_text\`<sup>Optional</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.repositoryPolicyText\\"></a>

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.tags\\"></a>

- *Type:* typing.List[aws_cdk.core.CfnTag]

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\">attr_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\">tags</a></code> | <code>aws_cdk.core.TagManager</code> | \`AWS::ECR::PublicRepository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\">repository_catalog_data</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |

---

##### \`attr_arn\`<sup>Required</sup> <a name=\\"attr_arn\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\"></a>

\`\`\`python
attr_arn: str
\`\`\`

- *Type:* str

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\"></a>

\`\`\`python
tags: TagManager
\`\`\`

- *Type:* aws_cdk.core.TagManager

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

##### \`repository_catalog_data\`<sup>Required</sup> <a name=\\"repository_catalog_data\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\"></a>

\`\`\`python
repository_catalog_data: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repository_policy_text\`<sup>Required</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\"></a>

\`\`\`python
repository_policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnRegistryPolicy <a name=\\"CfnRegistryPolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy\\"></a>

- *Implements:* aws_cdk.core.IInspectable

A CloudFormation \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRegistryPolicy(
  scope: Construct,
  id: str,
  policy_text: typing.Any
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\">scope</a></code> | <code>aws_cdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText\\">policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\"></a>

- *Type:* aws_cdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`policy_text\`<sup>Required</sup> <a name=\\"policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.policyText\\"></a>

- *Type:* typing.Any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\">attr_registry_id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\">policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`attr_registry_id\`<sup>Required</sup> <a name=\\"attr_registry_id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\"></a>

\`\`\`python
attr_registry_id: str
\`\`\`

- *Type:* str

---

##### \`policy_text\`<sup>Required</sup> <a name=\\"policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\"></a>

\`\`\`python
policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnReplicationConfiguration <a name=\\"CfnReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration\\"></a>

- *Implements:* aws_cdk.core.IInspectable

A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration(
  scope: Construct,
  id: str,
  replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\">scope</a></code> | <code>aws_cdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration\\">replication_configuration</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\"></a>

- *Type:* aws_cdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`replication_configuration\`<sup>Required</sup> <a name=\\"replication_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.replicationConfiguration\\"></a>

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\">attr_registry_id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\">replication_configuration</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`attr_registry_id\`<sup>Required</sup> <a name=\\"attr_registry_id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\"></a>

\`\`\`python
attr_registry_id: str
\`\`\`

- *Type:* str

---

##### \`replication_configuration\`<sup>Required</sup> <a name=\\"replication_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\"></a>

\`\`\`python
replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnRepository <a name=\\"CfnRepository\\" id=\\"@aws-cdk/aws-ecr.CfnRepository\\"></a>

- *Implements:* aws_cdk.core.IInspectable

A CloudFormation \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepository(
  scope: Construct,
  id: str,
  encryption_configuration: typing.Any = None,
  image_scanning_configuration: typing.Any = None,
  image_tag_mutability: str = None,
  lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty] = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\">scope</a></code> | <code>aws_cdk.core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration\\">encryption_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration\\">image_scanning_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability\\">image_tag_mutability</a></code> | <code>str</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy\\">lifecycle_policy</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags\\">tags</a></code> | <code>typing.List[aws_cdk.core.CfnTag]</code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\"></a>

- *Type:* aws_cdk.core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`encryption_configuration\`<sup>Optional</sup> <a name=\\"encryption_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.encryptionConfiguration\\"></a>

- *Type:* typing.Any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`image_scanning_configuration\`<sup>Optional</sup> <a name=\\"image_scanning_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageScanningConfiguration\\"></a>

- *Type:* typing.Any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.imageTagMutability\\"></a>

- *Type:* str

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecycle_policy\`<sup>Optional</sup> <a name=\\"lifecycle_policy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.lifecyclePolicy\\"></a>

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryName\\"></a>

- *Type:* str

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repository_policy_text\`<sup>Optional</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.repositoryPolicyText\\"></a>

- *Type:* typing.Any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.tags\\"></a>

- *Type:* typing.List[aws_cdk.core.CfnTag]

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\">attr_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\">attr_repository_uri</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.tags\\">tags</a></code> | <code>aws_cdk.core.TagManager</code> | \`AWS::ECR::Repository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\">encryption_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\">image_scanning_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\">image_tag_mutability</a></code> | <code>str</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\">lifecycle_policy</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::Repository.RepositoryName\`. |

---

##### \`attr_arn\`<sup>Required</sup> <a name=\\"attr_arn\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\"></a>

\`\`\`python
attr_arn: str
\`\`\`

- *Type:* str

---

##### \`attr_repository_uri\`<sup>Required</sup> <a name=\\"attr_repository_uri\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\"></a>

\`\`\`python
attr_repository_uri: str
\`\`\`

- *Type:* str

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.tags\\"></a>

\`\`\`python
tags: TagManager
\`\`\`

- *Type:* aws_cdk.core.TagManager

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

##### \`encryption_configuration\`<sup>Required</sup> <a name=\\"encryption_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\"></a>

\`\`\`python
encryption_configuration: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`image_scanning_configuration\`<sup>Required</sup> <a name=\\"image_scanning_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\"></a>

\`\`\`python
image_scanning_configuration: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`repository_policy_text\`<sup>Required</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\"></a>

\`\`\`python
repository_policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\"></a>

\`\`\`python
image_tag_mutability: str
\`\`\`

- *Type:* str

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecycle_policy\`<sup>Optional</sup> <a name=\\"lifecycle_policy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\"></a>

\`\`\`python
lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### Repository <a name=\\"Repository\\" id=\\"@aws-cdk/aws-ecr.Repository\\"></a>

Define an ECR repository.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository(
  scope: Construct,
  id: str,
  image_scan_on_push: bool = None,
  image_tag_mutability: TagMutability = None,
  lifecycle_registry_id: str = None,
  lifecycle_rules: typing.List[LifecycleRule] = None,
  removal_policy: RemovalPolicy = None,
  repository_name: str = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush\\">image_scan_on_push</a></code> | <code>bool</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability\\">image_tag_mutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId\\">lifecycle_registry_id</a></code> | <code>str</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules\\">lifecycle_rules</a></code> | <code>typing.List[<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>]</code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy\\">removal_policy</a></code> | <code>aws_cdk.core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName\\">repository_name</a></code> | <code>str</code> | Name for this repository. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`image_scan_on_push\`<sup>Optional</sup> <a name=\\"image_scan_on_push\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageScanOnPush\\"></a>

- *Type:* bool
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.imageTagMutability\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycle_registry_id\`<sup>Optional</sup> <a name=\\"lifecycle_registry_id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRegistryId\\"></a>

- *Type:* str
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycle_rules\`<sup>Optional</sup> <a name=\\"lifecycle_rules\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.lifecycleRules\\"></a>

- *Type:* typing.List[<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>]
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removal_policy\`<sup>Optional</sup> <a name=\\"removal_policy\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.removalPolicy\\"></a>

- *Type:* aws_cdk.core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.repositoryName\\"></a>

- *Type:* str
- *Default:* Automatically generated name.

Name for this repository.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addLifecycleRule\\">add_lifecycle_rule</a></code> | Add a life cycle rule to the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\">add_to_resource_policy</a></code> | Add a policy statement to the repository's resource policy. |

---

##### \`add_lifecycle_rule\` <a name=\\"add_lifecycle_rule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule\\"></a>

\`\`\`python
def add_lifecycle_rule(
  description: str = None,
  max_image_age: Duration = None,
  max_image_count: typing.Union[int, float] = None,
  rule_priority: typing.Union[int, float] = None,
  tag_prefix_list: typing.List[str] = None,
  tag_status: TagStatus = None
)
\`\`\`

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

Describes the purpose of the rule.

---

###### \`max_image_age\`<sup>Optional</sup> <a name=\\"max_image_age\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.maxImageAge\\"></a>

- *Type:* aws_cdk.core.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

###### \`max_image_count\`<sup>Optional</sup> <a name=\\"max_image_count\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.maxImageCount\\"></a>

- *Type:* typing.Union[int, float]

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

###### \`rule_priority\`<sup>Optional</sup> <a name=\\"rule_priority\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rulePriority\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

###### \`tag_prefix_list\`<sup>Optional</sup> <a name=\\"tag_prefix_list\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.tagPrefixList\\"></a>

- *Type:* typing.List[str]

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

###### \`tag_status\`<sup>Optional</sup> <a name=\\"tag_status\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.tagStatus\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

##### \`add_to_resource_policy\` <a name=\\"add_to_resource_policy\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\"></a>

\`\`\`python
def add_to_resource_policy(
  statement: PolicyStatement
)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* aws_cdk.aws_iam.PolicyStatement

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\">arn_for_local_repository</a></code> | Returns an ECR ARN for a repository that resides in the same account/region as the current stack. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\">from_repository_arn</a></code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\">from_repository_attributes</a></code> | Import a repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryName\\">from_repository_name</a></code> | *No description.* |

---

##### \`arn_for_local_repository\` <a name=\\"arn_for_local_repository\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.arn_for_local_repository(
  repository_name: str,
  scope: IConstruct,
  account: str = None
)
\`\`\`

###### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName\\"></a>

- *Type:* str

---

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope\\"></a>

- *Type:* constructs.IConstruct

---

###### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account\\"></a>

- *Type:* str

---

##### \`from_repository_arn\` <a name=\\"from_repository_arn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_arn(
  scope: Construct,
  id: str,
  repository_arn: str
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id\\"></a>

- *Type:* str

---

###### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn\\"></a>

- *Type:* str

---

##### \`from_repository_attributes\` <a name=\\"from_repository_attributes\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_attributes(
  scope: Construct,
  id: str,
  repository_arn: str,
  repository_name: str
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id\\"></a>

- *Type:* str

---

###### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.repositoryArn\\"></a>

- *Type:* str

---

###### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.repositoryName\\"></a>

- *Type:* str

---

##### \`from_repository_name\` <a name=\\"from_repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.Repository.from_repository_name(
  scope: Construct,
  id: str,
  repository_name: str
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id\\"></a>

- *Type:* str

---

###### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName\\"></a>

- *Type:* str

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | The name of the repository. |

---

##### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryArn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* str

The ARN of the repository.

---

##### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

The name of the repository.

---


### RepositoryBase <a name=\\"RepositoryBase\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase\\"></a>

- *Implements:* <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Base class for ECR repository.

Reused between imported repositories and owned repositories.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryBase(
  scope: Construct,
  id: str,
  account: str = None,
  environment_from_arn: str = None,
  physical_name: str = None,
  region: str = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account\\">account</a></code> | <code>str</code> | The AWS account ID this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn\\">environment_from_arn</a></code> | <code>str</code> | ARN to deduce region and account from. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName\\">physical_name</a></code> | <code>str</code> | The value passed in by users to the physical name prop of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region\\">region</a></code> | <code>str</code> | The AWS region this resource belongs to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.account\\"></a>

- *Type:* str
- *Default:* the resource is in the same account as the stack it belongs to

The AWS account ID this resource belongs to.

---

##### \`environment_from_arn\`<sup>Optional</sup> <a name=\\"environment_from_arn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.environmentFromArn\\"></a>

- *Type:* str
- *Default:* take environment from \`account\`, \`region\` parameters, or use Stack environment.

ARN to deduce region and account from.

The ARN is parsed and the account and region are taken from the ARN. This should be used for imported resources.  Cannot be supplied together with either \`account\` or \`region\`.

---

##### \`physical_name\`<sup>Optional</sup> <a name=\\"physical_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.physicalName\\"></a>

- *Type:* str
- *Default:* The physical name will be allocated by CloudFormation at deployment time

The value passed in by users to the physical name prop of the resource.

\`undefined\` implies that a physical name will be allocated by    CloudFormation during deployment. - a concrete value implies a specific physical name - \`PhysicalName.GENERATE_IF_NEEDED\` is a marker that indicates that a physical will only be generated    by the CDK if it is needed for cross-environment references. Otherwise, it will be allocated by CloudFormation.

---

##### \`region\`<sup>Optional</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.region\\"></a>

- *Type:* str
- *Default:* the resource is in the same region as the stack it belongs to

The AWS region this resource belongs to.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\">add_to_resource_policy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPull\\">grant_pull</a></code> | Grant the given identity permissions to use the images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\">grant_pull_push</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\">on_cloud_trail_event</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\">on_cloud_trail_image_pushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onEvent\\">on_event</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\">on_image_scan_completed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\">repository_uri_for_digest</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\">repository_uri_for_tag</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |

---

##### \`add_to_resource_policy\` <a name=\\"add_to_resource_policy\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\"></a>

\`\`\`python
def add_to_resource_policy(
  statement: PolicyStatement
)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* aws_cdk.aws_iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant\\"></a>

\`\`\`python
def grant(
  grantee: IGrantable,
  actions: str
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions\\"></a>

- *Type:* str

---

##### \`grant_pull\` <a name=\\"grant_pull\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull\\"></a>

\`\`\`python
def grant_pull(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

##### \`grant_pull_push\` <a name=\\"grant_pull_push\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\"></a>

\`\`\`python
def grant_pull_push(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

##### \`on_cloud_trail_event\` <a name=\\"on_cloud_trail_event\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\"></a>

\`\`\`python
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`on_cloud_trail_image_pushed\` <a name=\\"on_cloud_trail_image_pushed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\"></a>

\`\`\`python
def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

###### \`image_tag\`<sup>Optional</sup> <a name=\\"image_tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.imageTag\\"></a>

- *Type:* str
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

##### \`on_event\` <a name=\\"on_event\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent\\"></a>

\`\`\`python
def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id\\"></a>

- *Type:* str

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`on_image_scan_completed\` <a name=\\"on_image_scan_completed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\"></a>

\`\`\`python
def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

###### \`image_tags\`<sup>Optional</sup> <a name=\\"image_tags\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.imageTags\\"></a>

- *Type:* typing.List[str]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

##### \`repository_uri_for_digest\` <a name=\\"repository_uri_for_digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\"></a>

\`\`\`python
def repository_uri_for_digest(
  digest: str = None
)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* str

Optional image digest.

---

##### \`repository_uri_for_tag\` <a name=\\"repository_uri_for_tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\"></a>

\`\`\`python
def repository_uri_for_tag(
  tag: str = None
)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* str

Optional image tag.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\">repository_name</a></code> | <code>str</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\">repository_uri</a></code> | <code>str</code> | The URI of this repository (represents the latest image):. |

---

##### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* str

The ARN of the repository.

---

##### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

The name of the repository.

---

##### \`repository_uri\`<sup>Required</sup> <a name=\\"repository_uri\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\"></a>

\`\`\`python
repository_uri: str
\`\`\`

- *Type:* str

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### CfnPublicRepositoryProps <a name=\\"CfnPublicRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnPublicRepositoryProps(
  repository_catalog_data: typing.Any = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\">repository_catalog_data</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\">tags</a></code> | <code>typing.List[aws_cdk.core.CfnTag]</code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`repository_catalog_data\`<sup>Optional</sup> <a name=\\"repository_catalog_data\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\"></a>

\`\`\`python
repository_catalog_data: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repository_policy_text\`<sup>Optional</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`python
repository_policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\"></a>

\`\`\`python
tags: typing.List[CfnTag]
\`\`\`

- *Type:* typing.List[aws_cdk.core.CfnTag]

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

### CfnRegistryPolicyProps <a name=\\"CfnRegistryPolicyProps\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\"></a>

Properties for defining a \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRegistryPolicyProps(
  policy_text: typing.Any
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\">policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`policy_text\`<sup>Required</sup> <a name=\\"policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\"></a>

\`\`\`python
policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

### CfnReplicationConfigurationProps <a name=\\"CfnReplicationConfigurationProps\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\"></a>

Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfigurationProps(
  replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\">replication_configuration</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]</code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`replication_configuration\`<sup>Required</sup> <a name=\\"replication_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\"></a>

\`\`\`python
replication_configuration: typing.Union[IResolvable, ReplicationConfigurationProperty]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>]

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

### CfnRepositoryProps <a name=\\"CfnRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepositoryProps(
  encryption_configuration: typing.Any = None,
  image_scanning_configuration: typing.Any = None,
  image_tag_mutability: str = None,
  lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty] = None,
  repository_name: str = None,
  repository_policy_text: typing.Any = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\">encryption_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\">image_scanning_configuration</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\">image_tag_mutability</a></code> | <code>str</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\">lifecycle_policy</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]</code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\">repository_name</a></code> | <code>str</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\">repository_policy_text</a></code> | <code>typing.Any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\">tags</a></code> | <code>typing.List[aws_cdk.core.CfnTag]</code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`encryption_configuration\`<sup>Optional</sup> <a name=\\"encryption_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\"></a>

\`\`\`python
encryption_configuration: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`image_scanning_configuration\`<sup>Optional</sup> <a name=\\"image_scanning_configuration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\"></a>

\`\`\`python
image_scanning_configuration: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\"></a>

\`\`\`python
image_tag_mutability: str
\`\`\`

- *Type:* str

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecycle_policy\`<sup>Optional</sup> <a name=\\"lifecycle_policy\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\"></a>

\`\`\`python
lifecycle_policy: typing.Union[IResolvable, LifecyclePolicyProperty]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>]

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repository_policy_text\`<sup>Optional</sup> <a name=\\"repository_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`python
repository_policy_text: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\"></a>

\`\`\`python
tags: typing.List[CfnTag]
\`\`\`

- *Type:* typing.List[aws_cdk.core.CfnTag]

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

### LifecyclePolicyProperty <a name=\\"LifecyclePolicyProperty\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnRepository.LifecyclePolicyProperty(
  lifecycle_policy_text: str = None,
  registry_id: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\">lifecycle_policy_text</a></code> | <code>str</code> | \`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\">registry_id</a></code> | <code>str</code> | \`CfnRepository.LifecyclePolicyProperty.RegistryId\`. |

---

##### \`lifecycle_policy_text\`<sup>Optional</sup> <a name=\\"lifecycle_policy_text\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\"></a>

\`\`\`python
lifecycle_policy_text: str
\`\`\`

- *Type:* str

\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext)

---

##### \`registry_id\`<sup>Optional</sup> <a name=\\"registry_id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\"></a>

\`\`\`python
registry_id: str
\`\`\`

- *Type:* str

\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid)

---

### LifecycleRule <a name=\\"LifecycleRule\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule\\"></a>

An ECR life cycle rule.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.LifecycleRule(
  description: str = None,
  max_image_age: Duration = None,
  max_image_count: typing.Union[int, float] = None,
  rule_priority: typing.Union[int, float] = None,
  tag_prefix_list: typing.List[str] = None,
  tag_status: TagStatus = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.description\\">description</a></code> | <code>str</code> | Describes the purpose of the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\">max_image_age</a></code> | <code>aws_cdk.core.Duration</code> | The maximum age of images to retain. The value must represent a number of days. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\">max_image_count</a></code> | <code>typing.Union[int, float]</code> | The maximum number of images to retain. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\">rule_priority</a></code> | <code>typing.Union[int, float]</code> | Controls the order in which rules are evaluated (low to high). |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\">tag_prefix_list</a></code> | <code>typing.List[str]</code> | Select images that have ALL the given prefixes in their tag. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\">tag_status</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a></code> | Select images based on tags. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.description\\"></a>

\`\`\`python
description: str
\`\`\`

- *Type:* str
- *Default:* No description

Describes the purpose of the rule.

---

##### \`max_image_age\`<sup>Optional</sup> <a name=\\"max_image_age\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\"></a>

\`\`\`python
max_image_age: Duration
\`\`\`

- *Type:* aws_cdk.core.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`max_image_count\`<sup>Optional</sup> <a name=\\"max_image_count\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\"></a>

\`\`\`python
max_image_count: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`rule_priority\`<sup>Optional</sup> <a name=\\"rule_priority\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\"></a>

\`\`\`python
rule_priority: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

##### \`tag_prefix_list\`<sup>Optional</sup> <a name=\\"tag_prefix_list\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\"></a>

\`\`\`python
tag_prefix_list: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

##### \`tag_status\`<sup>Optional</sup> <a name=\\"tag_status\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\"></a>

\`\`\`python
tag_status: TagStatus
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

### OnCloudTrailImagePushedOptions <a name=\\"OnCloudTrailImagePushedOptions\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\"></a>

Options for the onCloudTrailImagePushed method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.OnCloudTrailImagePushedOptions(
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\">description</a></code> | <code>str</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\">event_pattern</a></code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\">rule_name</a></code> | <code>str</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\">target</a></code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\">image_tag</a></code> | <code>str</code> | Only watch changes to this image tag. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\"></a>

\`\`\`python
description: str
\`\`\`

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

##### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\"></a>

\`\`\`python
event_pattern: EventPattern
\`\`\`

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\"></a>

\`\`\`python
rule_name: str
\`\`\`

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\"></a>

\`\`\`python
target: IRuleTarget
\`\`\`

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`image_tag\`<sup>Optional</sup> <a name=\\"image_tag\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\"></a>

\`\`\`python
image_tag: str
\`\`\`

- *Type:* str
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

### OnImageScanCompletedOptions <a name=\\"OnImageScanCompletedOptions\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\"></a>

Options for the OnImageScanCompleted method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.OnImageScanCompletedOptions(
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\">description</a></code> | <code>str</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\">event_pattern</a></code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\">rule_name</a></code> | <code>str</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\">target</a></code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\">image_tags</a></code> | <code>typing.List[str]</code> | Only watch changes to the image tags spedified. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\"></a>

\`\`\`python
description: str
\`\`\`

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

##### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\"></a>

\`\`\`python
event_pattern: EventPattern
\`\`\`

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\"></a>

\`\`\`python
rule_name: str
\`\`\`

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\"></a>

\`\`\`python
target: IRuleTarget
\`\`\`

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`image_tags\`<sup>Optional</sup> <a name=\\"image_tags\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\"></a>

\`\`\`python
image_tags: typing.List[str]
\`\`\`

- *Type:* typing.List[str]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

### ReplicationConfigurationProperty <a name=\\"ReplicationConfigurationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty(
  rules: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationRuleProperty]]]
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\">rules</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, typing.List[typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>]]]</code> | \`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`. |

---

##### \`rules\`<sup>Required</sup> <a name=\\"rules\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\"></a>

\`\`\`python
rules: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationRuleProperty]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, typing.List[typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>]]]

\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules)

---

### ReplicationDestinationProperty <a name=\\"ReplicationDestinationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationDestinationProperty(
  region: str,
  registry_id: str
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\">region</a></code> | <code>str</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\">registry_id</a></code> | <code>str</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`. |

---

##### \`region\`<sup>Required</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\"></a>

\`\`\`python
region: str
\`\`\`

- *Type:* str

\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region)

---

##### \`registry_id\`<sup>Required</sup> <a name=\\"registry_id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\"></a>

\`\`\`python
registry_id: str
\`\`\`

- *Type:* str

\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid)

---

### ReplicationRuleProperty <a name=\\"ReplicationRuleProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.CfnReplicationConfiguration.ReplicationRuleProperty(
  destinations: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationDestinationProperty]]]
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\">destinations</a></code> | <code>typing.Union[aws_cdk.core.IResolvable, typing.List[typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>]]]</code> | \`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`. |

---

##### \`destinations\`<sup>Required</sup> <a name=\\"destinations\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\"></a>

\`\`\`python
destinations: typing.Union[IResolvable, typing.List[typing.Union[IResolvable, ReplicationDestinationProperty]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.core.IResolvable, typing.List[typing.Union[aws_cdk.core.IResolvable, <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>]]]

\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations)

---

### RepositoryAttributes <a name=\\"RepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryAttributes(
  repository_arn: str,
  repository_name: str
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\">repository_name</a></code> | <code>str</code> | *No description.* |

---

##### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* str

---

##### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

---

### RepositoryProps <a name=\\"RepositoryProps\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.Initializer\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.RepositoryProps(
  image_scan_on_push: bool = None,
  image_tag_mutability: TagMutability = None,
  lifecycle_registry_id: str = None,
  lifecycle_rules: typing.List[LifecycleRule] = None,
  removal_policy: RemovalPolicy = None,
  repository_name: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\">image_scan_on_push</a></code> | <code>bool</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\">image_tag_mutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\">lifecycle_registry_id</a></code> | <code>str</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\">lifecycle_rules</a></code> | <code>typing.List[<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>]</code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\">removal_policy</a></code> | <code>aws_cdk.core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\">repository_name</a></code> | <code>str</code> | Name for this repository. |

---

##### \`image_scan_on_push\`<sup>Optional</sup> <a name=\\"image_scan_on_push\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\"></a>

\`\`\`python
image_scan_on_push: bool
\`\`\`

- *Type:* bool
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`image_tag_mutability\`<sup>Optional</sup> <a name=\\"image_tag_mutability\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\"></a>

\`\`\`python
image_tag_mutability: TagMutability
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycle_registry_id\`<sup>Optional</sup> <a name=\\"lifecycle_registry_id\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\"></a>

\`\`\`python
lifecycle_registry_id: str
\`\`\`

- *Type:* str
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycle_rules\`<sup>Optional</sup> <a name=\\"lifecycle_rules\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\"></a>

\`\`\`python
lifecycle_rules: typing.List[LifecycleRule]
\`\`\`

- *Type:* typing.List[<a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>]
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removal_policy\`<sup>Optional</sup> <a name=\\"removal_policy\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\"></a>

\`\`\`python
removal_policy: RemovalPolicy
\`\`\`

- *Type:* aws_cdk.core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repository_name\`<sup>Optional</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str
- *Default:* Automatically generated name.

Name for this repository.

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\">grant_read</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grant_read\` <a name=\\"grant_read\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.AuthorizationToken.grant_read(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---



### PublicGalleryAuthorizationToken <a name=\\"PublicGalleryAuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken\\"></a>

Authorization token to access the global public ECR Gallery via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\">grant_read</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grant_read\` <a name=\\"grant_read\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.PublicGalleryAuthorizationToken.grant_read(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---



## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* aws_cdk.core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">add_to_resource_policy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grant_pull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grant_pull_push</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">on_cloud_trail_event</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">on_cloud_trail_image_pushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">on_event</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">on_image_scan_completed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repository_uri_for_digest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repository_uri_for_tag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

##### \`add_to_resource_policy\` <a name=\\"add_to_resource_policy\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

\`\`\`python
def add_to_resource_policy(
  statement: PolicyStatement
)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* aws_cdk.aws_iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

\`\`\`python
def grant(
  grantee: IGrantable,
  actions: str
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.actions\\"></a>

- *Type:* str

---

##### \`grant_pull\` <a name=\\"grant_pull\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

\`\`\`python
def grant_pull(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

##### \`grant_pull_push\` <a name=\\"grant_pull_push\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

\`\`\`python
def grant_pull_push(
  grantee: IGrantable
)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee\\"></a>

- *Type:* aws_cdk.aws_iam.IGrantable

---

##### \`on_cloud_trail_event\` <a name=\\"on_cloud_trail_event\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

\`\`\`python
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`on_cloud_trail_image_pushed\` <a name=\\"on_cloud_trail_image_pushed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

\`\`\`python
def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

###### \`image_tag\`<sup>Optional</sup> <a name=\\"image_tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.imageTag\\"></a>

- *Type:* str
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

##### \`on_event\` <a name=\\"on_event\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

\`\`\`python
def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id\\"></a>

- *Type:* str

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`on_image_scan_completed\` <a name=\\"on_image_scan_completed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

\`\`\`python
def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id\\"></a>

- *Type:* str

The id of the rule.

---

###### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.description\\"></a>

- *Type:* str
- *Default:* No description

A description of the rule's purpose.

---

###### \`event_pattern\`<sup>Optional</sup> <a name=\\"event_pattern\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.eventPattern\\"></a>

- *Type:* aws_cdk.aws_events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

###### \`rule_name\`<sup>Optional</sup> <a name=\\"rule_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.ruleName\\"></a>

- *Type:* str
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

###### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.target\\"></a>

- *Type:* aws_cdk.aws_events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

###### \`image_tags\`<sup>Optional</sup> <a name=\\"image_tags\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.imageTags\\"></a>

- *Type:* typing.List[str]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

##### \`repository_uri_for_digest\` <a name=\\"repository_uri_for_digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

\`\`\`python
def repository_uri_for_digest(
  digest: str = None
)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* str

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

##### \`repository_uri_for_tag\` <a name=\\"repository_uri_for_tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

\`\`\`python
def repository_uri_for_tag(
  tag: str = None
)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* str

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code>aws_cdk.core.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code>aws_cdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code>aws_cdk.core.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repository_arn</a></code> | <code>str</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repository_name</a></code> | <code>str</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repository_uri</a></code> | <code>str</code> | The URI of this repository (represents the latest image):. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

\`\`\`python
node: ConstructNode
\`\`\`

- *Type:* aws_cdk.core.ConstructNode

The construct tree node for this construct.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

\`\`\`python
env: ResourceEnvironment
\`\`\`

- *Type:* aws_cdk.core.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

\`\`\`python
stack: Stack
\`\`\`

- *Type:* aws_cdk.core.Stack

The stack in which this resource is defined.

---

##### \`repository_arn\`<sup>Required</sup> <a name=\\"repository_arn\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

\`\`\`python
repository_arn: str
\`\`\`

- *Type:* str

The ARN of the repository.

---

##### \`repository_name\`<sup>Required</sup> <a name=\\"repository_name\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

\`\`\`python
repository_name: str
\`\`\`

- *Type:* str

The name of the repository.

---

##### \`repository_uri\`<sup>Required</sup> <a name=\\"repository_uri\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

\`\`\`python
repository_uri: str
\`\`\`

- *Type:* str

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### TagMutability <a name=\\"TagMutability\\" id=\\"@aws-cdk/aws-ecr.TagMutability\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.MUTABLE\\">MUTABLE</a></code> | allow image tags to be overwritten. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\">IMMUTABLE</a></code> | all image tags within the repository will be immutable which will prevent them from being overwritten. |

---

The tag mutability setting for your repository.

#### \`MUTABLE\` <a name=\\"MUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.MUTABLE\\"></a>

allow image tags to be overwritten.

---


#### \`IMMUTABLE\` <a name=\\"IMMUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\"></a>

all image tags within the repository will be immutable which will prevent them from being overwritten.

---


### TagStatus <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.TagStatus\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.ANY\\">ANY</a></code> | Rule applies to all images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.TAGGED\\">TAGGED</a></code> | Rule applies to tagged images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\">UNTAGGED</a></code> | Rule applies to untagged images. |

---

Select images based on tags.

#### \`ANY\` <a name=\\"ANY\\" id=\\"@aws-cdk/aws-ecr.TagStatus.ANY\\"></a>

Rule applies to all images.

---


#### \`TAGGED\` <a name=\\"TAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.TAGGED\\"></a>

Rule applies to tagged images.

---


#### \`UNTAGGED\` <a name=\\"UNTAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\"></a>

Rule applies to untagged images.

---

"
`;

exports[`python snapshot - submodules 1`] = `
"# Amazon EKS Construct Library
<!--BEGIN STABILITY BANNER-->

---

![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---

<!--END STABILITY BANNER-->

This construct library allows you to define [Amazon Elastic Container Service for Kubernetes (EKS)](https://aws.amazon.com/eks/) clusters.
In addition, the library also supports defining Kubernetes resource manifests within EKS clusters.

## Table Of Contents

* [Quick Start](#quick-start)
* [API Reference](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-eks-readme.html)
* [Architectural Overview](#architectural-overview)
* [Provisioning clusters](#provisioning-clusters)
  * [Managed node groups](#managed-node-groups)
  * [Fargate Profiles](#fargate-profiles)
  * [Self-managed nodes](#self-managed-nodes)
  * [Endpoint Access](#endpoint-access)
  * [VPC Support](#vpc-support)
  * [Kubectl Support](#kubectl-support)
  * [ARM64 Support](#arm64-support)
  * [Masters Role](#masters-role)
  * [Encryption](#encryption)
* [Permissions and Security](#permissions-and-security)
* [Applying Kubernetes Resources](#applying-kubernetes-resources)
  * [Kubernetes Manifests](#kubernetes-manifests)
  * [Helm Charts](#helm-charts)
  * [CDK8s Charts](#cdk8s-charts)
* [Patching Kubernetes Resources](#patching-kubernetes-resources)
* [Querying Kubernetes Resources](#querying-kubernetes-resources)
* [Using existing clusters](#using-existing-clusters)
* [Known Issues and Limitations](#known-issues-and-limitations)

## Quick Start

This example defines an Amazon EKS cluster with the following configuration:

* Dedicated VPC with default configuration (Implicitly created using [ec2.Vpc](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#vpc))
* A Kubernetes pod with a container based on the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes) image.

\`\`\`ts
// provisiong a cluster
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
});

// apply a kubernetes manifest to the cluster
cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ]
      }
    ]
  }
});
\`\`\`

In order to interact with your cluster through \`kubectl\`, you can use the \`aws eks update-kubeconfig\` [AWS CLI command](https://docs.aws.amazon.com/cli/latest/reference/eks/update-kubeconfig.html)
to configure your local kubeconfig. The EKS module will define a CloudFormation output in your stack which contains the command to run. For example:

\`\`\`plaintext
Outputs:
ClusterConfigCommand43AAE40F = aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
\`\`\`

Execute the \`aws eks update-kubeconfig ...\` command in your terminal to create or update a local kubeconfig context:

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

And now you can simply use \`kubectl\`:

\`\`\`console
$ kubectl get all -n kube-system
NAME                           READY   STATUS    RESTARTS   AGE
pod/aws-node-fpmwv             1/1     Running   0          21m
pod/aws-node-m9htf             1/1     Running   0          21m
pod/coredns-5cb4fb54c7-q222j   1/1     Running   0          23m
pod/coredns-5cb4fb54c7-v9nxx   1/1     Running   0          23m
...
\`\`\`

## Architectural Overview

The following is a qualitative diagram of the various possible components involved in the cluster deployment.

\`\`\`text
 +-----------------------------------------------+               +-----------------+
 |                 EKS Cluster                   |    kubectl    |                 |
 |-----------------------------------------------|<-------------+| Kubectl Handler |
 |                                               |               |                 |
 |                                               |               +-----------------+
 | +--------------------+    +-----------------+ |
 | |                    |    |                 | |
 | | Managed Node Group |    | Fargate Profile | |               +-----------------+
 | |                    |    |                 | |               |                 |
 | +--------------------+    +-----------------+ |               | Cluster Handler |
 |                                               |               |                 |
 +-----------------------------------------------+               +-----------------+
    ^                                   ^                          +
    |                                   |                          |
    | connect self managed capacity     |                          | aws-sdk
    |                                   | create/update/delete     |
    +                                   |                          v
 +--------------------+                 +              +-------------------+
 |                    |                 --------------+| eks.amazonaws.com |
 | Auto Scaling Group |                                +-------------------+
 |                    |
 +--------------------+
\`\`\`

In a nutshell:

* \`EKS Cluster\` - The cluster endpoint created by EKS.
* \`Managed Node Group\` - EC2 worker nodes managed by EKS.
* \`Fargate Profile\` - Fargate worker nodes managed by EKS.
* \`Auto Scaling Group\` - EC2 worker nodes managed by the user.
* \`KubectlHandler\` - Lambda function for invoking \`kubectl\` commands on the cluster - created by CDK.
* \`ClusterHandler\` - Lambda function for interacting with EKS API to manage the cluster lifecycle - created by CDK.

A more detailed breakdown of each is provided further down this README.

## Provisioning clusters

Creating a new cluster is done using the \`Cluster\` or \`FargateCluster\` constructs. The only required property is the kubernetes \`version\`.

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

You can also use \`FargateCluster\` to provision a cluster that uses only fargate workers.

\`\`\`ts
new eks.FargateCluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

> **NOTE: Only 1 cluster per stack is supported.** If you have a use-case for multiple clusters per stack, or would like to understand more about this limitation, see <https://github.com/aws/aws-cdk/issues/10073>.

Below you'll find a few important cluster configuration options. First of which is Capacity.
Capacity is the amount and the type of worker nodes that are available to the cluster for deploying resources. Amazon EKS offers 3 ways of configuring capacity, which you can combine as you like:

### Managed node groups

Amazon EKS managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters.
With Amazon EKS managed node groups, you don’t need to separately provision or register the Amazon EC2 instances that provide compute capacity to run your Kubernetes applications. You can create, update, or terminate nodes for your cluster with a single operation. Nodes run using the latest Amazon EKS optimized AMIs in your AWS account while node updates and terminations gracefully drain nodes to ensure that your applications stay available.

> For more details visit [Amazon EKS Managed Node Groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).

**Managed Node Groups are the recommended way to allocate cluster capacity.**

By default, this library will allocate a managed node group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).

At cluster instantiation time, you can customize the number of instances and their type:

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 5,
  defaultCapacityInstance: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.SMALL),
});
\`\`\`

To access the node group that was created on your behalf, you can use \`cluster.defaultNodegroup\`.

Additional customizations are available post instantiation. To apply them, set the default capacity to 0, and use the \`cluster.addNodegroupCapacity\` method:

\`\`\`ts
const cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 0,
});

cluster.addNodegroupCapacity('custom-node-group', {
  instanceTypes: [new ec2.InstanceType('m5.large')],
  minSize: 4,
  diskSize: 100,
  amiType: eks.NodegroupAmiType.AL2_X86_64_GPU,
  ...
});
\`\`\`

#### Spot Instances Support

Use \`capacityType\` to create managed node groups comprised of spot instances. To maximize the availability of your applications while using
Spot Instances, we recommend that you configure a Spot managed node group to use multiple instance types with the \`instanceTypes\` property.

> For more details visit [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types).


\`\`\`ts
cluster.addNodegroupCapacity('extra-ng-spot', {
  instanceTypes: [
    new ec2.InstanceType('c5.large'),
    new ec2.InstanceType('c5a.large'),
    new ec2.InstanceType('c5d.large'),
  ],
  minSize: 3,
  capacityType: eks.CapacityType.SPOT,
});

\`\`\`

#### Launch Template Support

You can specify a launch template that the node group will use. For example, this can be useful if you want to use
a custom AMI or add custom user data.

When supplying a custom user data script, it must be encoded in the MIME multi-part archive format, since Amazon EKS merges with its own user data. Visit the [Launch Template Docs](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html#launch-template-user-data)
for mode details.

\`\`\`ts
const userData = \`MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\\"==MYBOUNDARY==\\"

--==MYBOUNDARY==
Content-Type: text/x-shellscript; charset=\\"us-ascii\\"

#!/bin/bash
echo \\"Running custom user data script\\"

--==MYBOUNDARY==--\\\\\\\\
\`;
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    instanceType: 't3.small',
    userData: Fn.base64(userData),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});

\`\`\`

Note that when using a custom AMI, Amazon EKS doesn't merge any user data. Which means you do not need the multi-part encoding. and are responsible for supplying the required bootstrap commands for nodes to join the cluster.
In the following example, \`/ect/eks/bootstrap.sh\` from the AMI will be used to bootstrap the node.

\`\`\`ts
const userData = ec2.UserData.forLinux();
userData.addCommands(
  'set -o xtrace',
  \`/etc/eks/bootstrap.sh \${cluster.clusterName}\`,
);
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    imageId: 'some-ami-id', // custom AMI
    instanceType: 't3.small',
    userData: Fn.base64(userData.render()),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});
\`\`\`

You may specify one \`instanceType\` in the launch template or multiple \`instanceTypes\` in the node group, **but not both**.

> For more details visit [Launch Template Support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).

Graviton 2 instance types are supported including \`c6g\`, \`m6g\`, \`r6g\` and \`t4g\`.

### Fargate profiles

AWS Fargate is a technology that provides on-demand, right-sized compute
capacity for containers. With AWS Fargate, you no longer have to provision,
configure, or scale groups of virtual machines to run containers. This removes
the need to choose server types, decide when to scale your node groups, or
optimize cluster packing.

You can control which pods start on Fargate and how they run with Fargate
Profiles, which are defined as part of your Amazon EKS cluster.

See [Fargate Considerations](https://docs.aws.amazon.com/eks/latest/userguide/fargate.html#fargate-considerations) in the AWS EKS User Guide.

You can add Fargate Profiles to any EKS cluster defined in your CDK app
through the \`addFargateProfile()\` method. The following example adds a profile
that will match all pods from the \\"default\\" namespace:

\`\`\`ts
cluster.addFargateProfile('MyProfile', {
  selectors: [ { namespace: 'default' } ]
});
\`\`\`

You can also directly use the \`FargateProfile\` construct to create profiles under different scopes:

\`\`\`ts
new eks.FargateProfile(scope, 'MyProfile', {
  cluster,
  ...
});
\`\`\`

To create an EKS cluster that **only** uses Fargate capacity, you can use \`FargateCluster\`.
The following code defines an Amazon EKS cluster with a default Fargate Profile that matches all pods from the \\"kube-system\\" and \\"default\\" namespaces. It is also configured to [run CoreDNS on Fargate](https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html#fargate-gs-coredns).

\`\`\`ts
const cluster = new eks.FargateCluster(this, 'MyCluster', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

**NOTE**: Classic Load Balancers and Network Load Balancers are not supported on
pods running on Fargate. For ingress, we recommend that you use the [ALB Ingress
Controller](https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html)
on Amazon EKS (minimum version v1.1.4).

### Self-managed nodes

Another way of allocating capacity to an EKS cluster is by using self-managed nodes.
EC2 instances that are part of the auto-scaling group will serve as worker nodes for the cluster.
This type of capacity is also commonly referred to as *EC2 Capacity** or *EC2 Nodes*.

For a detailed overview please visit [Self Managed Nodes](https://docs.aws.amazon.com/eks/latest/userguide/worker.html).

Creating an auto-scaling group and connecting it to the cluster is done using the \`cluster.addAutoScalingGroupCapacity\` method:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('frontend-nodes', {
  instanceType: new ec2.InstanceType('t2.medium'),
  minCapacity: 3,
  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC }
});
\`\`\`

To connect an already initialized auto-scaling group, use the \`cluster.connectAutoScalingGroupCapacity()\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...);
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

In both cases, the [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html#cluster-sg) will be automatically attached to
the auto-scaling group, allowing for traffic to flow freely between managed and self-managed nodes.

> **Note:** The default \`updateType\` for auto-scaling groups does not replace existing nodes. Since security groups are determined at launch time, self-managed nodes that were provisioned with version \`1.78.0\` or lower, will not be updated.
> To apply the new configuration on all your self-managed nodes, you'll need to replace the nodes using the \`UpdateType.REPLACING_UPDATE\` policy for the [\`updateType\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.AutoScalingGroup.html#updatetypespan-classapi-icon-api-icon-deprecated-titlethis-api-element-is-deprecated-its-use-is-not-recommended%EF%B8%8Fspan) property.

You can customize the [/etc/eks/boostrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh) script, which is responsible
for bootstrapping the node to the EKS cluster. For example, you can use \`kubeletExtraArgs\` to add custom node labels or taints.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  instanceType: new ec2.InstanceType('t3.large'),
  minCapacity: 2,
  bootstrapOptions: {
    kubeletExtraArgs: '--node-labels foo=bar,goo=far',
    awsApiRetryAttempts: 5
  }
});
\`\`\`

To disable bootstrapping altogether (i.e. to fully customize user-data), set \`bootstrapEnabled\` to \`false\`.
You can also configure the cluster to use an auto-scaling group as the default capacity:

\`\`\`ts
cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacityType: eks.DefaultCapacityType.EC2,
});
\`\`\`

This will allocate an auto-scaling group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).
To access the \`AutoScalingGroup\` that was created on your behalf, you can use \`cluster.defaultCapacity\`.
You can also independently create an \`AutoScalingGroup\` and connect it to the cluster using the \`cluster.connectAutoScalingGroupCapacity\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...)
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

This will add the necessary user-data to access the apiserver and configure all connections, roles, and tags needed for the instances in the auto-scaling group to properly join the cluster.

#### Spot Instances

When using self-managed nodes, you can configure the capacity to use spot instances, greatly reducing capacity cost.
To enable spot capacity, use the \`spotPrice\` property:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  spotPrice: '0.1094',
  instanceType: new ec2.InstanceType('t3.large'),
  maxCapacity: 10
});
\`\`\`

> Spot instance nodes will be labeled with \`lifecycle=Ec2Spot\` and tainted with \`PreferNoSchedule\`.

The [AWS Node Termination Handler](https://github.com/aws/aws-node-termination-handler) \`DaemonSet\` will be
installed from [Amazon EKS Helm chart repository](https://github.com/aws/eks-charts/tree/master/stable/aws-node-termination-handler) on these nodes.
The termination handler ensures that the Kubernetes control plane responds appropriately to events that
can cause your EC2 instance to become unavailable, such as [EC2 maintenance events](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html)
and [EC2 Spot interruptions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html) and helps gracefully stop all pods running on spot nodes that are about to be
terminated.

> Handler Version: [1.7.0](https://github.com/aws/aws-node-termination-handler/releases/tag/v1.7.0)
>
> Chart Version: [0.9.5](https://github.com/aws/eks-charts/blob/v0.0.28/stable/aws-node-termination-handler/Chart.yaml)

To disable the installation of the termination handler, set the \`spotInterruptHandler\` property to \`false\`. This applies both to \`addAutoScalingGroupCapacity\` and \`connectAutoScalingGroupCapacity\`.

#### Bottlerocket

[Bottlerocket](https://aws.amazon.com/bottlerocket/) is a Linux-based open-source operating system that is purpose-built by Amazon Web Services for running containers on virtual machines or bare metal hosts.
At this moment, \`Bottlerocket\` is only supported when using self-managed auto-scaling groups.

> **NOTICE**: Bottlerocket is only available in [some supported AWS regions](https://github.com/bottlerocket-os/bottlerocket/blob/develop/QUICKSTART-EKS.md#finding-an-ami).

The following example will create an auto-scaling group of 2 \`t3.small\` Linux instances running with the \`Bottlerocket\` AMI.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('BottlerocketNodes', {
  instanceType: new ec2.InstanceType('t3.small'),
  minCapacity:  2,
  machineImageType: eks.MachineImageType.BOTTLEROCKET
});
\`\`\`

The specific Bottlerocket AMI variant will be auto selected according to the k8s version for the \`x86_64\` architecture.
For example, if the Amazon EKS cluster version is \`1.17\`, the Bottlerocket AMI variant will be auto selected as
\`aws-k8s-1.17\` behind the scene.

> See [Variants](https://github.com/bottlerocket-os/bottlerocket/blob/develop/README.md#variants) for more details.

Please note Bottlerocket does not allow to customize bootstrap options and \`bootstrapOptions\` properties is not supported when you create the \`Bottlerocket\` capacity.

### Endpoint Access

When you create a new cluster, Amazon EKS creates an endpoint for the managed Kubernetes API server that you use to communicate with your cluster (using Kubernetes management tools such as \`kubectl\`)

By default, this API server endpoint is public to the internet, and access to the API server is secured using a combination of
AWS Identity and Access Management (IAM) and native Kubernetes [Role Based Access Control](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) (RBAC).

You can configure the [cluster endpoint access](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) by using the \`endpointAccess\` property:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  endpointAccess: eks.EndpointAccess.PRIVATE // No access outside of your VPC.
});
\`\`\`

The default value is \`eks.EndpointAccess.PUBLIC_AND_PRIVATE\`. Which means the cluster endpoint is accessible from outside of your VPC, but worker node traffic and \`kubectl\` commands issued by this library stay within your VPC.

### VPC Support

You can specify the VPC of the cluster using the \`vpc\` and \`vpcSubnets\` properties:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');

new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  vpc,
  vpcSubnets: [{ subnetType: ec2.SubnetType.PRIVATE }]
});
\`\`\`

> Note: Isolated VPCs (i.e with no internet access) are not currently supported. See https://github.com/aws/aws-cdk/issues/12171

If you do not specify a VPC, one will be created on your behalf, which you can then access via \`cluster.vpc\`. The cluster VPC will be associated to any EKS managed capacity (i.e Managed Node Groups and Fargate Profiles).

If you allocate self managed capacity, you can specify which subnets should the auto-scaling group use:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');
cluster.addAutoScalingGroupCapacity('nodes', {
  vpcSubnets: { subnets: vpc.privateSubnets }
});
\`\`\`

There are two additional components you might want to provision within the VPC.

#### Kubectl Handler

The \`KubectlHandler\` is a Lambda function responsible to issuing \`kubectl\` and \`helm\` commands against the cluster when you add resource manifests to the cluster.

The handler association to the VPC is derived from the \`endpointAccess\` configuration. The rule of thumb is: *If the cluster VPC can be associated, it will be*.

Breaking this down, it means that if the endpoint exposes private access (via \`EndpointAccess.PRIVATE\` or \`EndpointAccess.PUBLIC_AND_PRIVATE\`), and the VPC contains **private** subnets, the Lambda function will be provisioned inside the VPC and use the private subnets to interact with the cluster. This is the common use-case.

If the endpoint does not expose private access (via \`EndpointAccess.PUBLIC\`) **or** the VPC does not contain private subnets, the function will not be provisioned within the VPC.

#### Cluster Handler

The \`ClusterHandler\` is a Lambda function responsible to interact with the EKS API in order to control the cluster lifecycle. To provision this function inside the VPC, set the \`placeClusterHandlerInVpc\` property to \`true\`. This will place the function inside the private subnets of the VPC based on the selection strategy specified in the [\`vpcSubnets\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.Cluster.html#vpcsubnetsspan-classapi-icon-api-icon-experimental-titlethis-api-element-is-experimental-it-may-change-without-noticespan) property.

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  clusterHandlerEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

### Kubectl Support

The resources are created in the cluster by running \`kubectl apply\` from a python lambda function.

#### Environment

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  kubectlEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

#### Runtime

The kubectl handler uses \`kubectl\`, \`helm\` and the \`aws\` CLI in order to
interact with the cluster. These are bundled into AWS Lambda layers included in
the \`@aws-cdk/lambda-layer-awscli\` and \`@aws-cdk/lambda-layer-kubectl\` modules.

You can specify a custom \`lambda.LayerVersion\` if you wish to use a different
version of these tools. The handler expects the layer to include the following
three executables:

\`\`\`text
helm/helm
kubectl/kubectl
awscli/aws
\`\`\`

See more information in the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-awscli/layer) for @aws-cdk/lambda-layer-awscli
and the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-kubectl/layer) for @aws-cdk/lambda-layer-kubectl.

\`\`\`ts
const layer = new lambda.LayerVersion(this, 'KubectlLayer', {
  code: lambda.Code.fromAsset('layer.zip'),
});
\`\`\`

Now specify when the cluster is defined:

\`\`\`ts
const cluster = new eks.Cluster(this, 'MyCluster', {
  kubectlLayer: layer,
});

// or
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlLayer: layer,
});
\`\`\`

#### Memory

By default, the kubectl provider is configured with 1024MiB of memory. You can use the \`kubectlMemory\` option to specify the memory size for the AWS Lambda function:

\`\`\`ts
import { Size } from 'aws-cdk-lib';

new eks.Cluster(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});

// or
eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});
\`\`\`

### ARM64 Support

Instance types with \`ARM64\` architecture are supported in both managed nodegroup and self-managed capacity. Simply specify an ARM64 \`instanceType\` (such as \`m6g.medium\`), and the latest
Amazon Linux 2 AMI for ARM64 will be automatically selected.

\`\`\`ts
// add a managed ARM64 nodegroup
cluster.addNodegroupCapacity('extra-ng-arm', {
  instanceTypes: [new ec2.InstanceType('m6g.medium')],
  minSize: 2,
});

// add a self-managed ARM64 nodegroup
cluster.addAutoScalingGroupCapacity('self-ng-arm', {
  instanceType: new ec2.InstanceType('m6g.medium'),
  minCapacity: 2,
})
\`\`\`

### Masters Role

When you create a cluster, you can specify a \`mastersRole\`. The \`Cluster\` construct will associate this role with the \`system:masters\` [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) group, giving it super-user access to the cluster.

\`\`\`ts
const role = new iam.Role(...);
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  mastersRole: role,
});
\`\`\`

If you do not specify it, a default role will be created on your behalf, that can be assumed by anyone in the account with \`sts:AssumeRole\` permissions for this role.

This is the role you see as part of the stack outputs mentioned in the [Quick Start](#quick-start).

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

### Encryption

When you create an Amazon EKS cluster, envelope encryption of Kubernetes secrets using the AWS Key Management Service (AWS KMS) can be enabled.
The documentation on [creating a cluster](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html)
can provide more details about the customer master key (CMK) that can be used for the encryption.

You can use the \`secretsEncryptionKey\` to configure which key the cluster will use to encrypt Kubernetes secrets. By default, an AWS Managed key will be used.

> This setting can only be specified when the cluster is created and cannot be updated.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.Cluster(this, 'MyCluster', {
  secretsEncryptionKey: secretsKey,
  // ...
});
\`\`\`

You can also use a similar configuration for running a cluster built using the FargateCluster construct.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.FargateCluster(this, 'MyFargateCluster', {
  secretsEncryptionKey: secretsKey
});
\`\`\`

The Amazon Resource Name (ARN) for that CMK can be retrieved.

\`\`\`ts
const clusterEncryptionConfigKeyArn = cluster.clusterEncryptionConfigKeyArn;
\`\`\`

## Permissions and Security

Amazon EKS provides several mechanism of securing the cluster and granting permissions to specific IAM users and roles.

### AWS IAM Mapping

As described in the [Amazon EKS User Guide](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html), you can map AWS IAM users and roles to [Kubernetes Role-based access control (RBAC)](https://kubernetes.io/docs/reference/access-authn-authz/rbac).

The Amazon EKS construct manages the *aws-auth* \`ConfigMap\` Kubernetes resource on your behalf and exposes an API through the \`cluster.awsAuth\` for mapping
users, roles and accounts.

Furthermore, when auto-scaling group capacity is added to the cluster, the IAM instance role of the auto-scaling group will be automatically mapped to RBAC so nodes can connect to the cluster. No manual mapping is required.

For example, let's say you want to grant an IAM user administrative privileges on your cluster:

\`\`\`ts
const adminUser = new iam.User(this, 'Admin');
cluster.awsAuth.addUserMapping(adminUser, { groups: [ 'system:masters' ]});
\`\`\`

A convenience method for mapping a role to the \`system:masters\` group is also available:

\`\`\`ts
cluster.awsAuth.addMastersRole(role)
\`\`\`

### Cluster Security Group

When you create an Amazon EKS cluster, a [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
is automatically created as well. This security group is designed to allow all traffic from the control plane and managed node groups to flow freely
between each other.

The ID for that security group can be retrieved after creating the cluster.

\`\`\`ts
const clusterSecurityGroupId = cluster.clusterSecurityGroupId;
\`\`\`

### Node SSH Access

If you want to be able to SSH into your worker nodes, you must already have an SSH key in the region you're connecting to and pass it when
you add capacity to the cluster. You must also be able to connect to the hosts (meaning they must have a public IP and you
should be allowed to connect to them on port 22):

See [SSH into nodes](test/example.ssh-into-nodes.lit.ts) for a code example.

If you want to SSH into nodes in a private subnet, you should set up a bastion host in a public subnet. That setup is recommended, but is
unfortunately beyond the scope of this documentation.

### Service Accounts

With services account you can provide Kubernetes Pods access to AWS resources.

\`\`\`ts
// add service account
const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

const mypod = cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    serviceAccountName: sa.serviceAccountName
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ],

      }
    ]
  }
});

// create the resource after the service account.
mypod.node.addDependency(sa);

// print the IAM role arn for this service account
new cdk.CfnOutput(this, 'ServiceAccountIamRole', { value: sa.role.roleArn })
\`\`\`

Note that using \`sa.serviceAccountName\` above **does not** translate into a resource dependency.
This is why an explicit dependency is needed. See <https://github.com/aws/aws-cdk/issues/9910> for more details.

You can also add service accounts to existing clusters.
To do so, pass the \`openIdConnectProvider\` property when you import the cluster into the application.

\`\`\`ts
// you can import an existing provider
const provider = eks.OpenIdConnectProvider.fromOpenIdConnectProviderArn(this, 'Provider', 'arn:aws:iam::123456:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/AB123456ABC');

// or create a new one using an existing issuer url
const provider = new eks.OpenIdConnectProvider(this, 'Provider', issuerUrl);

const cluster = eks.Cluster.fromClusterAttributes({
  clusterName: 'Cluster',
  openIdConnectProvider: provider,
  kubectlRoleArn: 'arn:aws:iam::123456:role/service-role/k8sservicerole',
});

const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

// ...
\`\`\`

Note that adding service accounts requires running \`kubectl\` commands against the cluster.
This means you must also pass the \`kubectlRoleArn\` when importing the cluster.
See [Using existing Clusters](https://github.com/aws/aws-cdk/tree/master/packages/@aws-cdk/aws-eks#using-existing-clusters).

## Applying Kubernetes Resources

The library supports several popular resource deployment mechanisms, among which are:

### Kubernetes Manifests

The \`KubernetesManifest\` construct or \`cluster.addManifest\` method can be used
to apply Kubernetes resource manifests to this cluster.

> When using \`cluster.addManifest\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new KubernetesManifest\` to create the manifest in the scope of the other stack.

The following examples will deploy the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes)
service on the cluster:

\`\`\`ts
const appLabel = { app: \\"hello-kubernetes\\" };

const deployment = {
  apiVersion: \\"apps/v1\\",
  kind: \\"Deployment\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    replicas: 3,
    selector: { matchLabels: appLabel },
    template: {
      metadata: { labels: appLabel },
      spec: {
        containers: [
          {
            name: \\"hello-kubernetes\\",
            image: \\"paulbouwer/hello-kubernetes:1.5\\",
            ports: [ { containerPort: 8080 } ]
          }
        ]
      }
    }
  }
};

const service = {
  apiVersion: \\"v1\\",
  kind: \\"Service\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    type: \\"LoadBalancer\\",
    ports: [ { port: 80, targetPort: 8080 } ],
    selector: appLabel
  }
};

// option 1: use a construct
new KubernetesManifest(this, 'hello-kub', {
  cluster,
  manifest: [ deployment, service ]
});

// or, option2: use \`addManifest\`
cluster.addManifest('hello-kub', service, deployment);
\`\`\`

#### Adding resources from a URL

The following example will deploy the resource manifest hosting on remote server:

\`\`\`ts
import * as yaml from 'js-yaml';
import * as request from 'sync-request';

const manifestUrl = 'https://url/of/manifest.yaml';
const manifest = yaml.safeLoadAll(request('GET', manifestUrl).getBody());
cluster.addManifest('my-resource', ...manifest);
\`\`\`

#### Dependencies

There are cases where Kubernetes resources must be deployed in a specific order.
For example, you cannot define a resource in a Kubernetes namespace before the
namespace was created.

You can represent dependencies between \`KubernetesManifest\`s using
\`resource.node.addDependency()\`:

\`\`\`ts
const namespace = cluster.addManifest('my-namespace', {
  apiVersion: 'v1',
  kind: 'Namespace',
  metadata: { name: 'my-app' }
});

const service = cluster.addManifest('my-service', {
  metadata: {
    name: 'myservice',
    namespace: 'my-app'
  },
  spec: // ...
});

service.node.addDependency(namespace); // will apply \`my-namespace\` before \`my-service\`.
\`\`\`

**NOTE:** when a \`KubernetesManifest\` includes multiple resources (either directly
or through \`cluster.addManifest()\`) (e.g. \`cluster.addManifest('foo', r1, r2,
r3,...)\`), these resources will be applied as a single manifest via \`kubectl\`
and will be applied sequentially (the standard behavior in \`kubectl\`).

---

Since Kubernetes manifests are implemented as CloudFormation resources in the
CDK. This means that if the manifest is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`kubectl delete\` command and the
Kubernetes resources in that manifest will be deleted.

#### Resource Pruning

When a resource is deleted from a Kubernetes manifest, the EKS module will
automatically delete these resources by injecting a _prune label_ to all
manifest resources. This label is then passed to [\`kubectl apply --prune\`].

[\`kubectl apply --prune\`]: https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label

Pruning is enabled by default but can be disabled through the \`prune\` option
when a cluster is defined:

\`\`\`ts
new Cluster(this, 'MyCluster', {
  prune: false
});
\`\`\`

#### Manifests Validation

The \`kubectl\` CLI supports applying a manifest by skipping the validation.
This can be accomplished by setting the \`skipValidation\` flag to \`true\` in the \`KubernetesManifest\` props.

\`\`\`ts
new eks.KubernetesManifest(this, 'HelloAppWithoutValidation', {
  cluster: this.cluster,
  manifest: [ deployment, service ],
  skipValidation: true,
});
\`\`\`

### Helm Charts

The \`HelmChart\` construct or \`cluster.addHelmChart\` method can be used
to add Kubernetes resources to this cluster using Helm.

> When using \`cluster.addHelmChart\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new HelmChart\` to create the chart in the scope of the other stack.

The following example will install the [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/) to your cluster using Helm.

\`\`\`ts
// option 1: use a construct
new HelmChart(this, 'NginxIngress', {
  cluster,
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});

// or, option2: use \`addHelmChart\`
cluster.addHelmChart('NginxIngress', {
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});
\`\`\`

Helm charts will be installed and updated using \`helm upgrade --install\`, where a few parameters
are being passed down (such as \`repo\`, \`values\`, \`version\`, \`namespace\`, \`wait\`, \`timeout\`, etc).
This means that if the chart is added to CDK with the same release name, it will try to update
the chart in the cluster.

Helm charts are implemented as CloudFormation resources in CDK.
This means that if the chart is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`helm uninstall\` command and the
Helm chart will be deleted.

When there is no \`release\` defined, a unique ID will be allocated for the release based
on the construct path.

By default, all Helm charts will be installed concurrently. In some cases, this
could cause race conditions where two Helm charts attempt to deploy the same
resource or if Helm charts depend on each other. You can use
\`chart.node.addDependency()\` in order to declare a dependency order between
charts:

\`\`\`ts
const chart1 = cluster.addHelmChart(...);
const chart2 = cluster.addHelmChart(...);

chart2.node.addDependency(chart1);
\`\`\`

#### CDK8s Charts

[CDK8s](https://cdk8s.io/) is an open-source library that enables Kubernetes manifest authoring using familiar programming languages. It is founded on the same technologies as the AWS CDK, such as [\`constructs\`](https://github.com/aws/constructs) and [\`jsii\`](https://github.com/aws/jsii).

> To learn more about cdk8s, visit the [Getting Started](https://github.com/awslabs/cdk8s/tree/master/docs/getting-started) tutorials.

The EKS module natively integrates with cdk8s and allows you to apply cdk8s charts on AWS EKS clusters via the \`cluster.addCdk8sChart\` method.

In addition to \`cdk8s\`, you can also use [\`cdk8s+\`](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-plus), which provides higher level abstraction for the core kubernetes api objects.
You can think of it like the \`L2\` constructs for Kubernetes. Any other \`cdk8s\` based libraries are also supported, for example [\`cdk8s-debore\`](https://github.com/toricls/cdk8s-debore).

To get started, add the following dependencies to your \`package.json\` file:

\`\`\`json
\\"dependencies\\": {
  \\"cdk8s\\": \\"0.30.0\\",
  \\"cdk8s-plus\\": \\"0.30.0\\",
  \\"constructs\\": \\"3.0.4\\"
}
\`\`\`

> Note that the version of \`cdk8s\` must be \`>=0.30.0\`.

Similarly to how you would create a stack by extending \`@aws-cdk/core.Stack\`, we recommend you create a chart of your own that extends \`cdk8s.Chart\`,
and add your kubernetes resources to it. You can use \`aws-cdk\` construct attributes and properties inside your \`cdk8s\` construct freely.

In this example we create a chart that accepts an \`s3.Bucket\` and passes its name to a kubernetes pod as an environment variable.

Notice that the chart must accept a \`constructs.Construct\` type as its scope, not an \`@aws-cdk/core.Construct\` as you would normally use.
For this reason, to avoid possible confusion, we will create the chart in a separate file:

\`+ my-chart.ts\`

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface MyChartProps {
  readonly bucket: s3.Bucket;
}

export class MyChart extends cdk8s.Chart {
  constructor(scope: constructs.Construct, id: string, props: MyChartProps) {
    super(scope, id);

    new kplus.Pod(this, 'Pod', {
      spec: {
        containers: [
          new kplus.Container({
            image: 'my-image',
            env: {
              BUCKET_NAME: kplus.EnvValue.fromValue(props.bucket.bucketName),
            },
          }),
        ],
      },
    });
  }
}
\`\`\`

Then, in your AWS CDK app:

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as cdk8s from 'cdk8s';
import { MyChart } from './my-chart';

// some bucket..
const bucket = new s3.Bucket(this, 'Bucket');

// create a cdk8s chart and use \`cdk8s.App\` as the scope.
const myChart = new MyChart(new cdk8s.App(), 'MyChart', { bucket });

// add the cdk8s chart to the cluster
cluster.addCdk8sChart('my-chart', myChart);
\`\`\`

##### Custom CDK8s Constructs

You can also compose a few stock \`cdk8s+\` constructs into your own custom construct. However, since mixing scopes between \`aws-cdk\` and \`cdk8s\` is currently not supported, the \`Construct\` class
you'll need to use is the one from the [\`constructs\`](https://github.com/aws/constructs) module, and not from \`@aws-cdk/core\` like you normally would.
This is why we used \`new cdk8s.App()\` as the scope of the chart above.

\`\`\`ts
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface LoadBalancedWebService {
  readonly port: number;
  readonly image: string;
  readonly replicas: number;
}

export class LoadBalancedWebService extends constructs.Construct {
  constructor(scope: constructs.Construct, id: string, props: LoadBalancedWebService) {
    super(scope, id);

    const deployment = new kplus.Deployment(chart, 'Deployment', {
      spec: {
        replicas: props.replicas,
        podSpecTemplate: {
          containers: [ new kplus.Container({ image: props.image }) ]
        }
      },
    });

    deployment.expose({port: props.port, serviceType: kplus.ServiceType.LOAD_BALANCER})

  }
}
\`\`\`

##### Manually importing k8s specs and CRD's

If you find yourself unable to use \`cdk8s+\`, or just like to directly use the \`k8s\` native objects or CRD's, you can do so by manually importing them using the \`cdk8s-cli\`.

See [Importing kubernetes objects](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-cli#import) for detailed instructions.

## Patching Kubernetes Resources

The \`KubernetesPatch\` construct can be used to update existing kubernetes
resources. The following example can be used to patch the \`hello-kubernetes\`
deployment from the example above with 5 replicas.

\`\`\`ts
new KubernetesPatch(this, 'hello-kub-deployment-label', {
  cluster,
  resourceName: \\"deployment/hello-kubernetes\\",
  applyPatch: { spec: { replicas: 5 } },
  restorePatch: { spec: { replicas: 3 } }
})
\`\`\`

## Querying Kubernetes Resources

The \`KubernetesObjectValue\` construct can be used to query for information about kubernetes objects,
and use that as part of your CDK application.

For example, you can fetch the address of a [\`LoadBalancer\`](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer) type service:

\`\`\`ts
// query the load balancer address
const myServiceAddress = new KubernetesObjectValue(this, 'LoadBalancerAttribute', {
  cluster: cluster,
  objectType: 'service',
  objectName: 'my-service',
  jsonPath: '.status.loadBalancer.ingress[0].hostname', // https://kubernetes.io/docs/reference/kubectl/jsonpath/
});

// pass the address to a lambda function
const proxyFunction = new lambda.Function(this, 'ProxyFunction', {
  ...
  environment: {
    myServiceAddress: myServiceAddress.value
  },
})
\`\`\`

Specifically, since the above use-case is quite common, there is an easier way to access that information:

\`\`\`ts
const loadBalancerAddress = cluster.getServiceLoadBalancerAddress('my-service');
\`\`\`

## Using existing clusters

The Amazon EKS library allows defining Kubernetes resources such as [Kubernetes
manifests](#kubernetes-resources) and [Helm charts](#helm-charts) on clusters
that are not defined as part of your CDK app.

First, you'll need to \\"import\\" a cluster to your CDK app. To do that, use the
\`eks.Cluster.fromClusterAttributes()\` static method:

\`\`\`ts
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  clusterName: 'my-cluster-name',
  kubectlRoleArn: 'arn:aws:iam::1111111:role/iam-role-that-has-masters-access',
});
\`\`\`

Then, you can use \`addManifest\` or \`addHelmChart\` to define resources inside
your Kubernetes cluster. For example:

\`\`\`ts
cluster.addManifest('Test', {
  apiVersion: 'v1',
  kind: 'ConfigMap',
  metadata: {
    name: 'myconfigmap',
  },
  data: {
    Key: 'value',
    Another: '123454',
  },
});
\`\`\`

At the minimum, when importing clusters for \`kubectl\` management, you will need
to specify:

* \`clusterName\` - the name of the cluster.
* \`kubectlRoleArn\` - the ARN of an IAM role mapped to the \`system:masters\` RBAC
  role. If the cluster you are importing was created using the AWS CDK, the
  CloudFormation stack has an output that includes an IAM role that can be used.
  Otherwise, you can create an IAM role and map it to \`system:masters\` manually.
  The trust policy of this role should include the the
  \`arn:aws::iam::\${accountId}:root\` principal in order to allow the execution
  role of the kubectl resource to assume it.

If the cluster is configured with private-only or private and restricted public
Kubernetes [endpoint access](#endpoint-access), you must also specify:

* \`kubectlSecurityGroupId\` - the ID of an EC2 security group that is allowed
  connections to the cluster's control security group. For example, the EKS managed [cluster security group](#cluster-security-group).
* \`kubectlPrivateSubnetIds\` - a list of private VPC subnets IDs that will be used
  to access the Kubernetes endpoint.

## Known Issues and Limitations

* [One cluster per stack](https://github.com/aws/aws-cdk/issues/10073)
* [Service Account dependencies](https://github.com/aws/aws-cdk/issues/9910)
* [Support isolated VPCs](https://github.com/aws/aws-cdk/issues/12171)

# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### AwsAuth <a name=\\"AwsAuth\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth\\"></a>

Manages mapping between IAM users and roles to Kubernetes RBAC configuration.

> [https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.AwsAuth(
  scope: Construct,
  id: str,
  cluster: Cluster
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a></code> | The EKS cluster to apply this configuration to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.cluster\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a>

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addAccount\\">add_account</a></code> | Additional AWS account to add to the aws-auth configmap. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addMastersRole\\">add_masters_role</a></code> | Adds the specified IAM role to the \`system:masters\` RBAC group, which means that anyone that can assume it will be able to administer this Kubernetes system. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping\\">add_role_mapping</a></code> | Adds a mapping between an IAM role to a Kubernetes user and groups. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addUserMapping\\">add_user_mapping</a></code> | Adds a mapping between an IAM user to a Kubernetes user and groups. |

---

##### \`add_account\` <a name=\\"add_account\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addAccount\\"></a>

\`\`\`python
def add_account(
  account_id: str
)
\`\`\`

###### \`account_id\`<sup>Required</sup> <a name=\\"account_id\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addAccount.parameter.accountId\\"></a>

- *Type:* str

account number.

---

##### \`add_masters_role\` <a name=\\"add_masters_role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole\\"></a>

\`\`\`python
def add_masters_role(
  role: IRole,
  username: str = None
)
\`\`\`

###### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole.parameter.role\\"></a>

- *Type:* aws_cdk.aws_iam.IRole

The IAM role to add.

---

###### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole.parameter.username\\"></a>

- *Type:* str

Optional user (defaults to the role ARN).

---

##### \`add_role_mapping\` <a name=\\"add_role_mapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping\\"></a>

\`\`\`python
def add_role_mapping(
  role: IRole,
  groups: typing.List[str],
  username: str = None
)
\`\`\`

###### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.role\\"></a>

- *Type:* aws_cdk.aws_iam.IRole

The IAM role to map.

---

###### \`groups\`<sup>Required</sup> <a name=\\"groups\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.groups\\"></a>

- *Type:* typing.List[str]

A list of groups within Kubernetes to which the role is mapped.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

###### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.username\\"></a>

- *Type:* str
- *Default:* By default, the user name is the ARN of the IAM role.

The user name within Kubernetes to map to the IAM role.

---

##### \`add_user_mapping\` <a name=\\"add_user_mapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping\\"></a>

\`\`\`python
def add_user_mapping(
  user: IUser,
  groups: typing.List[str],
  username: str = None
)
\`\`\`

###### \`user\`<sup>Required</sup> <a name=\\"user\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.user\\"></a>

- *Type:* aws_cdk.aws_iam.IUser

The IAM user to map.

---

###### \`groups\`<sup>Required</sup> <a name=\\"groups\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.groups\\"></a>

- *Type:* typing.List[str]

A list of groups within Kubernetes to which the role is mapped.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

###### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.username\\"></a>

- *Type:* str
- *Default:* By default, the user name is the ARN of the IAM role.

The user name within Kubernetes to map to the IAM role.

---




### CfnAddon <a name=\\"CfnAddon\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon\\"></a>

- *Implements:* aws_cdk.IInspectable

A CloudFormation \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnAddon(
  scope: Construct,
  id: str,
  addon_name: str,
  cluster_name: str,
  addon_version: str = None,
  resolve_conflicts: str = None,
  service_account_role_arn: str = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.addonName\\">addon_name</a></code> | <code>str</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.addonVersion\\">addon_version</a></code> | <code>str</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.resolveConflicts\\">resolve_conflicts</a></code> | <code>str</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.serviceAccountRoleArn\\">service_account_role_arn</a></code> | <code>str</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.tags\\">tags</a></code> | <code>typing.List[aws_cdk.CfnTag]</code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`addon_name\`<sup>Required</sup> <a name=\\"addon_name\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.addonName\\"></a>

- *Type:* str

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.clusterName\\"></a>

- *Type:* str

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addon_version\`<sup>Optional</sup> <a name=\\"addon_version\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.addonVersion\\"></a>

- *Type:* str

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolve_conflicts\`<sup>Optional</sup> <a name=\\"resolve_conflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.resolveConflicts\\"></a>

- *Type:* str

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`service_account_role_arn\`<sup>Optional</sup> <a name=\\"service_account_role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.serviceAccountRoleArn\\"></a>

- *Type:* str

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.tags\\"></a>

- *Type:* typing.List[aws_cdk.CfnTag]

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.attrArn\\">attr_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.tags\\">tags</a></code> | <code>aws_cdk.TagManager</code> | \`AWS::EKS::Addon.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.addonName\\">addon_name</a></code> | <code>str</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.addonVersion\\">addon_version</a></code> | <code>str</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.resolveConflicts\\">resolve_conflicts</a></code> | <code>str</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.serviceAccountRoleArn\\">service_account_role_arn</a></code> | <code>str</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |

---

##### \`attr_arn\`<sup>Required</sup> <a name=\\"attr_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.attrArn\\"></a>

\`\`\`python
attr_arn: str
\`\`\`

- *Type:* str

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.tags\\"></a>

\`\`\`python
tags: TagManager
\`\`\`

- *Type:* aws_cdk.TagManager

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

##### \`addon_name\`<sup>Required</sup> <a name=\\"addon_name\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.addonName\\"></a>

\`\`\`python
addon_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addon_version\`<sup>Optional</sup> <a name=\\"addon_version\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.addonVersion\\"></a>

\`\`\`python
addon_version: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolve_conflicts\`<sup>Optional</sup> <a name=\\"resolve_conflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.resolveConflicts\\"></a>

\`\`\`python
resolve_conflicts: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`service_account_role_arn\`<sup>Optional</sup> <a name=\\"service_account_role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.serviceAccountRoleArn\\"></a>

\`\`\`python
service_account_role_arn: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnCluster <a name=\\"CfnCluster\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster\\"></a>

- *Implements:* aws_cdk.IInspectable

A CloudFormation \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnCluster(
  scope: Construct,
  id: str,
  resources_vpc_config: typing.Union[ResourcesVpcConfigProperty, IResolvable],
  role_arn: str,
  encryption_config: typing.Union[IResolvable, typing.List[typing.Union[EncryptionConfigProperty, IResolvable]]] = None,
  kubernetes_network_config: typing.Union[KubernetesNetworkConfigProperty, IResolvable] = None,
  name: str = None,
  version: str = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.resourcesVpcConfig\\">resources_vpc_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.roleArn\\">role_arn</a></code> | <code>str</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.encryptionConfig\\">encryption_config</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.kubernetesNetworkConfig\\">kubernetes_network_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.name\\">name</a></code> | <code>str</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.version\\">version</a></code> | <code>str</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`resources_vpc_config\`<sup>Required</sup> <a name=\\"resources_vpc_config\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.resourcesVpcConfig\\"></a>

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`role_arn\`<sup>Required</sup> <a name=\\"role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.roleArn\\"></a>

- *Type:* str

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryption_config\`<sup>Optional</sup> <a name=\\"encryption_config\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.encryptionConfig\\"></a>

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetes_network_config\`<sup>Optional</sup> <a name=\\"kubernetes_network_config\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.kubernetesNetworkConfig\\"></a>

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.name\\"></a>

- *Type:* str

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.version\\"></a>

- *Type:* str

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrArn\\">attr_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\">attr_certificate_authority_data</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\">attr_cluster_security_group_id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\">attr_encryption_config_key_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrEndpoint\\">attr_endpoint</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\">attr_open_id_connect_issuer_url</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.resourcesVpcConfig\\">resources_vpc_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.roleArn\\">role_arn</a></code> | <code>str</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.encryptionConfig\\">encryption_config</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\">kubernetes_network_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.name\\">name</a></code> | <code>str</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.version\\">version</a></code> | <code>str</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`attr_arn\`<sup>Required</sup> <a name=\\"attr_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrArn\\"></a>

\`\`\`python
attr_arn: str
\`\`\`

- *Type:* str

---

##### \`attr_certificate_authority_data\`<sup>Required</sup> <a name=\\"attr_certificate_authority_data\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\"></a>

\`\`\`python
attr_certificate_authority_data: str
\`\`\`

- *Type:* str

---

##### \`attr_cluster_security_group_id\`<sup>Required</sup> <a name=\\"attr_cluster_security_group_id\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\"></a>

\`\`\`python
attr_cluster_security_group_id: str
\`\`\`

- *Type:* str

---

##### \`attr_encryption_config_key_arn\`<sup>Required</sup> <a name=\\"attr_encryption_config_key_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\"></a>

\`\`\`python
attr_encryption_config_key_arn: str
\`\`\`

- *Type:* str

---

##### \`attr_endpoint\`<sup>Required</sup> <a name=\\"attr_endpoint\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrEndpoint\\"></a>

\`\`\`python
attr_endpoint: str
\`\`\`

- *Type:* str

---

##### \`attr_open_id_connect_issuer_url\`<sup>Required</sup> <a name=\\"attr_open_id_connect_issuer_url\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\"></a>

\`\`\`python
attr_open_id_connect_issuer_url: str
\`\`\`

- *Type:* str

---

##### \`resources_vpc_config\`<sup>Required</sup> <a name=\\"resources_vpc_config\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.resourcesVpcConfig\\"></a>

\`\`\`python
resources_vpc_config: typing.Union[ResourcesVpcConfigProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`role_arn\`<sup>Required</sup> <a name=\\"role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.roleArn\\"></a>

\`\`\`python
role_arn: str
\`\`\`

- *Type:* str

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryption_config\`<sup>Optional</sup> <a name=\\"encryption_config\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.encryptionConfig\\"></a>

\`\`\`python
encryption_config: typing.Union[IResolvable, typing.List[typing.Union[EncryptionConfigProperty, IResolvable]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetes_network_config\`<sup>Optional</sup> <a name=\\"kubernetes_network_config\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\"></a>

\`\`\`python
kubernetes_network_config: typing.Union[KubernetesNetworkConfigProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.name\\"></a>

\`\`\`python
name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnFargateProfile <a name=\\"CfnFargateProfile\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile\\"></a>

- *Implements:* aws_cdk.IInspectable

A CloudFormation \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnFargateProfile(
  scope: Construct,
  id: str,
  cluster_name: str,
  pod_execution_role_arn: str,
  selectors: typing.Union[IResolvable, typing.List[typing.Union[SelectorProperty, IResolvable]]],
  fargate_profile_name: str = None,
  subnets: typing.List[str] = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.podExecutionRoleArn\\">pod_execution_role_arn</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.selectors\\">selectors</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.fargateProfileName\\">fargate_profile_name</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.subnets\\">subnets</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.tags\\">tags</a></code> | <code>typing.List[aws_cdk.CfnTag]</code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.clusterName\\"></a>

- *Type:* str

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`pod_execution_role_arn\`<sup>Required</sup> <a name=\\"pod_execution_role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.podExecutionRoleArn\\"></a>

- *Type:* str

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.selectors\\"></a>

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargate_profile_name\`<sup>Optional</sup> <a name=\\"fargate_profile_name\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.fargateProfileName\\"></a>

- *Type:* str

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.subnets\\"></a>

- *Type:* typing.List[str]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.tags\\"></a>

- *Type:* typing.List[aws_cdk.CfnTag]

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.attrArn\\">attr_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.tags\\">tags</a></code> | <code>aws_cdk.TagManager</code> | \`AWS::EKS::FargateProfile.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\">pod_execution_role_arn</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.selectors\\">selectors</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.fargateProfileName\\">fargate_profile_name</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.subnets\\">subnets</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |

---

##### \`attr_arn\`<sup>Required</sup> <a name=\\"attr_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.attrArn\\"></a>

\`\`\`python
attr_arn: str
\`\`\`

- *Type:* str

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.tags\\"></a>

\`\`\`python
tags: TagManager
\`\`\`

- *Type:* aws_cdk.TagManager

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`pod_execution_role_arn\`<sup>Required</sup> <a name=\\"pod_execution_role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\"></a>

\`\`\`python
pod_execution_role_arn: str
\`\`\`

- *Type:* str

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.selectors\\"></a>

\`\`\`python
selectors: typing.Union[IResolvable, typing.List[typing.Union[SelectorProperty, IResolvable]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargate_profile_name\`<sup>Optional</sup> <a name=\\"fargate_profile_name\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.fargateProfileName\\"></a>

\`\`\`python
fargate_profile_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.subnets\\"></a>

\`\`\`python
subnets: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### CfnNodegroup <a name=\\"CfnNodegroup\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup\\"></a>

- *Implements:* aws_cdk.IInspectable

A CloudFormation \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnNodegroup(
  scope: Construct,
  id: str,
  cluster_name: str,
  node_role: str,
  subnets: typing.List[str],
  ami_type: str = None,
  capacity_type: str = None,
  disk_size: typing.Union[int, float] = None,
  force_update_enabled: typing.Union[bool, IResolvable] = None,
  instance_types: typing.List[str] = None,
  labels: typing.Any = None,
  launch_template: typing.Union[LaunchTemplateSpecificationProperty, IResolvable] = None,
  nodegroup_name: str = None,
  release_version: str = None,
  remote_access: typing.Union[RemoteAccessProperty, IResolvable] = None,
  scaling_config: typing.Union[ScalingConfigProperty, IResolvable] = None,
  tags: typing.Any = None,
  taints: typing.Union[IResolvable, typing.List[typing.Union[TaintProperty, IResolvable]]] = None,
  version: str = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.id\\">id</a></code> | <code>str</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.nodeRole\\">node_role</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.subnets\\">subnets</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.amiType\\">ami_type</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.capacityType\\">capacity_type</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.diskSize\\">disk_size</a></code> | <code>typing.Union[int, float]</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.forceUpdateEnabled\\">force_update_enabled</a></code> | <code>typing.Union[bool, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.instanceTypes\\">instance_types</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.labels\\">labels</a></code> | <code>typing.Any</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.launchTemplate\\">launch_template</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.nodegroupName\\">nodegroup_name</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.releaseVersion\\">release_version</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.remoteAccess\\">remote_access</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scalingConfig\\">scaling_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.tags\\">tags</a></code> | <code>typing.Any</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.taints\\">taints</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.version\\">version</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.id\\"></a>

- *Type:* str

scoped id of the resource.

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.clusterName\\"></a>

- *Type:* str

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`node_role\`<sup>Required</sup> <a name=\\"node_role\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.nodeRole\\"></a>

- *Type:* str

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.subnets\\"></a>

- *Type:* typing.List[str]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`ami_type\`<sup>Optional</sup> <a name=\\"ami_type\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.amiType\\"></a>

- *Type:* str

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacity_type\`<sup>Optional</sup> <a name=\\"capacity_type\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.capacityType\\"></a>

- *Type:* str

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`disk_size\`<sup>Optional</sup> <a name=\\"disk_size\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.diskSize\\"></a>

- *Type:* typing.Union[int, float]

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`force_update_enabled\`<sup>Optional</sup> <a name=\\"force_update_enabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.forceUpdateEnabled\\"></a>

- *Type:* typing.Union[bool, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instance_types\`<sup>Optional</sup> <a name=\\"instance_types\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.instanceTypes\\"></a>

- *Type:* typing.List[str]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.labels\\"></a>

- *Type:* typing.Any

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`launch_template\`<sup>Optional</sup> <a name=\\"launch_template\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.launchTemplate\\"></a>

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroup_name\`<sup>Optional</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.nodegroupName\\"></a>

- *Type:* str

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`release_version\`<sup>Optional</sup> <a name=\\"release_version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.releaseVersion\\"></a>

- *Type:* str

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remote_access\`<sup>Optional</sup> <a name=\\"remote_access\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.remoteAccess\\"></a>

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scaling_config\`<sup>Optional</sup> <a name=\\"scaling_config\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scalingConfig\\"></a>

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.tags\\"></a>

- *Type:* typing.Any

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.taints\\"></a>

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.version\\"></a>

- *Type:* str

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.inspect\\"></a>

\`\`\`python
def inspect(
  inspector: TreeInspector
)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.inspect.parameter.inspector\\"></a>

- *Type:* aws_cdk.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrArn\\">attr_arn</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrClusterName\\">attr_cluster_name</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrNodegroupName\\">attr_nodegroup_name</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.tags\\">tags</a></code> | <code>aws_cdk.TagManager</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.labels\\">labels</a></code> | <code>typing.Any</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.nodeRole\\">node_role</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.subnets\\">subnets</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.amiType\\">ami_type</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.capacityType\\">capacity_type</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.diskSize\\">disk_size</a></code> | <code>typing.Union[int, float]</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\">force_update_enabled</a></code> | <code>typing.Union[bool, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.instanceTypes\\">instance_types</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.launchTemplate\\">launch_template</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.nodegroupName\\">nodegroup_name</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.releaseVersion\\">release_version</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.remoteAccess\\">remote_access</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.scalingConfig\\">scaling_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.taints\\">taints</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.version\\">version</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`attr_arn\`<sup>Required</sup> <a name=\\"attr_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrArn\\"></a>

\`\`\`python
attr_arn: str
\`\`\`

- *Type:* str

---

##### \`attr_cluster_name\`<sup>Required</sup> <a name=\\"attr_cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrClusterName\\"></a>

\`\`\`python
attr_cluster_name: str
\`\`\`

- *Type:* str

---

##### \`attr_nodegroup_name\`<sup>Required</sup> <a name=\\"attr_nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrNodegroupName\\"></a>

\`\`\`python
attr_nodegroup_name: str
\`\`\`

- *Type:* str

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.tags\\"></a>

\`\`\`python
tags: TagManager
\`\`\`

- *Type:* aws_cdk.TagManager

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`labels\`<sup>Required</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.labels\\"></a>

\`\`\`python
labels: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`node_role\`<sup>Required</sup> <a name=\\"node_role\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.nodeRole\\"></a>

\`\`\`python
node_role: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.subnets\\"></a>

\`\`\`python
subnets: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`ami_type\`<sup>Optional</sup> <a name=\\"ami_type\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.amiType\\"></a>

\`\`\`python
ami_type: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacity_type\`<sup>Optional</sup> <a name=\\"capacity_type\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.capacityType\\"></a>

\`\`\`python
capacity_type: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`disk_size\`<sup>Optional</sup> <a name=\\"disk_size\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.diskSize\\"></a>

\`\`\`python
disk_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`force_update_enabled\`<sup>Optional</sup> <a name=\\"force_update_enabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\"></a>

\`\`\`python
force_update_enabled: typing.Union[bool, IResolvable]
\`\`\`

- *Type:* typing.Union[bool, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instance_types\`<sup>Optional</sup> <a name=\\"instance_types\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.instanceTypes\\"></a>

\`\`\`python
instance_types: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`launch_template\`<sup>Optional</sup> <a name=\\"launch_template\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.launchTemplate\\"></a>

\`\`\`python
launch_template: typing.Union[LaunchTemplateSpecificationProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroup_name\`<sup>Optional</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.nodegroupName\\"></a>

\`\`\`python
nodegroup_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`release_version\`<sup>Optional</sup> <a name=\\"release_version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.releaseVersion\\"></a>

\`\`\`python
release_version: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remote_access\`<sup>Optional</sup> <a name=\\"remote_access\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.remoteAccess\\"></a>

\`\`\`python
remote_access: typing.Union[RemoteAccessProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scaling_config\`<sup>Optional</sup> <a name=\\"scaling_config\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.scalingConfig\\"></a>

\`\`\`python
scaling_config: typing.Union[ScalingConfigProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.taints\\"></a>

\`\`\`python
taints: typing.Union[IResolvable, typing.List[typing.Union[TaintProperty, IResolvable]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>str</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`python
CFN_RESOURCE_TYPE_NAME: str
\`\`\`

- *Type:* str

The CloudFormation resource type name for this resource class.

---

### Cluster <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.Cluster\\"></a>

- *Implements:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

A Cluster represents a managed Kubernetes Service (EKS).

This is a fully managed cluster of API Servers (control-plane) The user is still required to create the worker nodes.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.Cluster(
  scope: Construct,
  id: str,
  version: KubernetesVersion,
  cluster_name: str = None,
  output_cluster_name: bool = None,
  output_config_command: bool = None,
  role: IRole = None,
  security_group: ISecurityGroup = None,
  vpc: IVpc = None,
  vpc_subnets: typing.List[SubnetSelection] = None,
  cluster_handler_environment: typing.Mapping[str] = None,
  core_dns_compute_type: CoreDnsComputeType = None,
  endpoint_access: EndpointAccess = None,
  kubectl_environment: typing.Mapping[str] = None,
  kubectl_layer: ILayerVersion = None,
  kubectl_memory: Size = None,
  masters_role: IRole = None,
  output_masters_role_arn: bool = None,
  place_cluster_handler_in_vpc: bool = None,
  prune: bool = None,
  secrets_encryption_key: IKey = None,
  default_capacity: typing.Union[int, float] = None,
  default_capacity_instance: InstanceType = None,
  default_capacity_type: DefaultCapacityType = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | a Construct, most likely a cdk.Stack created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.id\\">id</a></code> | <code>str</code> | the id of the Construct to create. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.clusterName\\">cluster_name</a></code> | <code>str</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputClusterName\\">output_cluster_name</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputConfigCommand\\">output_config_command</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.securityGroup\\">security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.vpcSubnets\\">vpc_subnets</a></code> | <code>typing.List[aws_cdk.aws_ec2.SubnetSelection]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.clusterHandlerEnvironment\\">cluster_handler_environment</a></code> | <code>typing.Mapping[str]</code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.coreDnsComputeType\\">core_dns_compute_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a></code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.endpointAccess\\">endpoint_access</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlEnvironment\\">kubectl_environment</a></code> | <code>typing.Mapping[str]</code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlLayer\\">kubectl_layer</a></code> | <code>aws_cdk.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlMemory\\">kubectl_memory</a></code> | <code>aws_cdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.mastersRole\\">masters_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputMastersRoleArn\\">output_masters_role_arn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.placeClusterHandlerInVpc\\">place_cluster_handler_in_vpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.prune\\">prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.secretsEncryptionKey\\">secrets_encryption_key</a></code> | <code>aws_cdk.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacity\\">default_capacity</a></code> | <code>typing.Union[int, float]</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacityInstance\\">default_capacity_instance</a></code> | <code>aws_cdk.aws_ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacityType\\">default_capacity_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType\\">DefaultCapacityType</a></code> | The default capacity type for the cluster. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

a Construct, most likely a cdk.Stack created.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.id\\"></a>

- *Type:* str

the id of the Construct to create.

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.version\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`cluster_name\`<sup>Optional</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.clusterName\\"></a>

- *Type:* str
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`output_cluster_name\`<sup>Optional</sup> <a name=\\"output_cluster_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputClusterName\\"></a>

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`output_config_command\`<sup>Optional</sup> <a name=\\"output_config_command\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputConfigCommand\\"></a>

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.role\\"></a>

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`security_group\`<sup>Optional</sup> <a name=\\"security_group\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.securityGroup\\"></a>

- *Type:* aws_cdk.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.vpc\\"></a>

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpc_subnets\`<sup>Optional</sup> <a name=\\"vpc_subnets\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.vpcSubnets\\"></a>

- *Type:* typing.List[aws_cdk.aws_ec2.SubnetSelection]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`cluster_handler_environment\`<sup>Optional</sup> <a name=\\"cluster_handler_environment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.clusterHandlerEnvironment\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`core_dns_compute_type\`<sup>Optional</sup> <a name=\\"core_dns_compute_type\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.coreDnsComputeType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a>
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpoint_access\`<sup>Optional</sup> <a name=\\"endpoint_access\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.endpointAccess\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlEnvironment\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlLayer\\"></a>

- *Type:* aws_cdk.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. layer = lambda_.LayerVersion(self, \\"kubectl-layer\\",     code=lambda_.Code.from_asset(f\\"{__dirname}/layer.zip\\") )# compatible_runtimes: [lambda.Runtime.PROVIDED] \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.kubectlMemory\\"></a>

- *Type:* aws_cdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`masters_role\`<sup>Optional</sup> <a name=\\"masters_role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.mastersRole\\"></a>

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`output_masters_role_arn\`<sup>Optional</sup> <a name=\\"output_masters_role_arn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.outputMastersRoleArn\\"></a>

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`place_cluster_handler_in_vpc\`<sup>Optional</sup> <a name=\\"place_cluster_handler_in_vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.placeClusterHandlerInVpc\\"></a>

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.prune\\"></a>

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secrets_encryption_key\`<sup>Optional</sup> <a name=\\"secrets_encryption_key\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.secretsEncryptionKey\\"></a>

- *Type:* aws_cdk.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`default_capacity\`<sup>Optional</sup> <a name=\\"default_capacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacity\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`default_capacity_instance\`<sup>Optional</sup> <a name=\\"default_capacity_instance\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacityInstance\\"></a>

- *Type:* aws_cdk.aws_ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`default_capacity_type\`<sup>Optional</sup> <a name=\\"default_capacity_type\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.defaultCapacityType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType\\">DefaultCapacityType</a>
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity\\">add_auto_scaling_group_capacity</a></code> | Add nodes to this EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addCdk8sChart\\">add_cdk8s_chart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addFargateProfile\\">add_fargate_profile</a></code> | Adds a Fargate profile to this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addHelmChart\\">add_helm_chart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addManifest\\">add_manifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity\\">add_nodegroup_capacity</a></code> | Add managed nodegroup to this Amazon EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addServiceAccount\\">add_service_account</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity\\">connect_auto_scaling_group_capacity</a></code> | Connect capacity in the form of an existing AutoScalingGroup to the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress\\">get_service_load_balancer_address</a></code> | Fetch the load balancer address of a service of type 'LoadBalancer'. |

---

##### \`add_auto_scaling_group_capacity\` <a name=\\"add_auto_scaling_group_capacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity\\"></a>

\`\`\`python
def add_auto_scaling_group_capacity(
  id: str,
  allow_all_outbound: bool = None,
  associate_public_ip_address: bool = None,
  auto_scaling_group_name: str = None,
  block_devices: typing.List[BlockDevice] = None,
  cooldown: Duration = None,
  desired_capacity: typing.Union[int, float] = None,
  group_metrics: typing.List[GroupMetrics] = None,
  health_check: HealthCheck = None,
  ignore_unmodified_size_properties: bool = None,
  instance_monitoring: Monitoring = None,
  key_name: str = None,
  max_capacity: typing.Union[int, float] = None,
  max_instance_lifetime: Duration = None,
  min_capacity: typing.Union[int, float] = None,
  new_instances_protected_from_scale_in: bool = None,
  notifications: typing.List[NotificationConfiguration] = None,
  signals: Signals = None,
  spot_price: str = None,
  update_policy: UpdatePolicy = None,
  vpc_subnets: SubnetSelection = None,
  instance_type: InstanceType,
  bootstrap_enabled: bool = None,
  bootstrap_options: BootstrapOptions = None,
  machine_image_type: MachineImageType = None,
  map_role: bool = None,
  spot_interrupt_handler: bool = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.id\\"></a>

- *Type:* str

---

###### \`allow_all_outbound\`<sup>Optional</sup> <a name=\\"allow_all_outbound\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.allowAllOutbound\\"></a>

- *Type:* bool
- *Default:* true

Whether the instances can initiate connections to anywhere by default.

---

###### \`associate_public_ip_address\`<sup>Optional</sup> <a name=\\"associate_public_ip_address\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.associatePublicIpAddress\\"></a>

- *Type:* bool
- *Default:* Use subnet setting.

Whether instances in the Auto Scaling Group should have public IP addresses associated with them.

---

###### \`auto_scaling_group_name\`<sup>Optional</sup> <a name=\\"auto_scaling_group_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.autoScalingGroupName\\"></a>

- *Type:* str
- *Default:* Auto generated by CloudFormation

The name of the Auto Scaling group.

This name must be unique per Region per account.

---

###### \`block_devices\`<sup>Optional</sup> <a name=\\"block_devices\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.blockDevices\\"></a>

- *Type:* typing.List[aws_cdk.aws_autoscaling.BlockDevice]
- *Default:* Uses the block device mapping of the AMI

Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.

Each instance that is launched has an associated root device volume, either an Amazon EBS volume or an instance store volume. You can use block device mappings to specify additional EBS volumes or instance store volumes to attach to an instance when it is launched.

> [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)

---

###### \`cooldown\`<sup>Optional</sup> <a name=\\"cooldown\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.cooldown\\"></a>

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Default scaling cooldown for this AutoScalingGroup.

---

###### \`desired_capacity\`<sup>Optional</sup> <a name=\\"desired_capacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.desiredCapacity\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* minCapacity, and leave unchanged during deployment

Initial amount of instances in the fleet.

If this is set to a number, every deployment will reset the amount of instances to this number. It is recommended to leave this value blank.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity)

---

###### \`group_metrics\`<sup>Optional</sup> <a name=\\"group_metrics\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.groupMetrics\\"></a>

- *Type:* typing.List[aws_cdk.aws_autoscaling.GroupMetrics]
- *Default:* no group metrics will be reported

Enable monitoring for group metrics, these metrics describe the group rather than any of its instances.

To report all group metrics use \`GroupMetrics.all()\` Group metrics are reported in a granularity of 1 minute at no additional charge.

---

###### \`health_check\`<sup>Optional</sup> <a name=\\"health_check\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.healthCheck\\"></a>

- *Type:* aws_cdk.aws_autoscaling.HealthCheck
- *Default:* HealthCheck.ec2 with no grace period

Configuration for health checks.

---

###### \`ignore_unmodified_size_properties\`<sup>Optional</sup> <a name=\\"ignore_unmodified_size_properties\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.ignoreUnmodifiedSizeProperties\\"></a>

- *Type:* bool
- *Default:* true

If the ASG has scheduled actions, don't reset unchanged group sizes.

Only used if the ASG has scheduled actions (which may scale your ASG up or down regardless of cdk deployments). If true, the size of the group will only be reset if it has been changed in the CDK app. If false, the sizes will always be changed back to what they were in the CDK app on deployment.

---

###### \`instance_monitoring\`<sup>Optional</sup> <a name=\\"instance_monitoring\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.instanceMonitoring\\"></a>

- *Type:* aws_cdk.aws_autoscaling.Monitoring
- *Default:* Monitoring.DETAILED

Controls whether instances in this group are launched with detailed or basic monitoring.

When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.

> [https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics](https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics)

---

###### \`key_name\`<sup>Optional</sup> <a name=\\"key_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.keyName\\"></a>

- *Type:* str
- *Default:* No SSH access will be possible.

Name of SSH keypair to grant access to instances.

---

###### \`max_capacity\`<sup>Optional</sup> <a name=\\"max_capacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.maxCapacity\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* desiredCapacity

Maximum number of instances in the fleet.

---

###### \`max_instance_lifetime\`<sup>Optional</sup> <a name=\\"max_instance_lifetime\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.maxInstanceLifetime\\"></a>

- *Type:* aws_cdk.Duration
- *Default:* none

The maximum amount of time that an instance can be in service.

The maximum duration applies to all current and future instances in the group. As an instance approaches its maximum duration, it is terminated and replaced, and cannot be used again.  You must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, leave this property undefined.

> [https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)

---

###### \`min_capacity\`<sup>Optional</sup> <a name=\\"min_capacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.minCapacity\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* 1

Minimum number of instances in the fleet.

---

###### \`new_instances_protected_from_scale_in\`<sup>Optional</sup> <a name=\\"new_instances_protected_from_scale_in\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.newInstancesProtectedFromScaleIn\\"></a>

- *Type:* bool
- *Default:* false

Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.

By default, Auto Scaling can terminate an instance at any time after launch when scaling in an Auto Scaling Group, subject to the group's termination policy. However, you may wish to protect newly-launched instances from being scaled in if they are going to run critical applications that should not be prematurely terminated.  This flag must be enabled if the Auto Scaling Group will be associated with an ECS Capacity Provider with managed termination protection.

---

###### \`notifications\`<sup>Optional</sup> <a name=\\"notifications\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.notifications\\"></a>

- *Type:* typing.List[aws_cdk.aws_autoscaling.NotificationConfiguration]
- *Default:* No fleet change notifications will be sent.

Configure autoscaling group to send notifications about fleet changes to an SNS topic(s).

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations)

---

###### \`signals\`<sup>Optional</sup> <a name=\\"signals\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.signals\\"></a>

- *Type:* aws_cdk.aws_autoscaling.Signals
- *Default:* Do not wait for signals

Configure waiting for signals during deployment.

Use this to pause the CloudFormation deployment to wait for the instances in the AutoScalingGroup to report successful startup during creation and updates. The UserData script needs to invoke \`cfn-signal\` with a success or failure code after it is done setting up the instance.  Without waiting for signals, the CloudFormation deployment will proceed as soon as the AutoScalingGroup has been created or updated but before the instances in the group have been started.  For example, to have instances wait for an Elastic Load Balancing health check before they signal success, add a health-check verification by using the cfn-init helper script. For an example, see the verify_instance_health command in the Auto Scaling rolling updates sample template:  https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml

---

###### \`spot_price\`<sup>Optional</sup> <a name=\\"spot_price\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.spotPrice\\"></a>

- *Type:* str
- *Default:* none

The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request.

Spot Instances are launched when the price you specify exceeds the current Spot market price.

---

###### \`update_policy\`<sup>Optional</sup> <a name=\\"update_policy\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.updatePolicy\\"></a>

- *Type:* aws_cdk.aws_autoscaling.UpdatePolicy
- *Default:* \`UpdatePolicy.rollingUpdate()\` if using \`init\`, \`UpdatePolicy.none()\` otherwise

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

###### \`vpc_subnets\`<sup>Optional</sup> <a name=\\"vpc_subnets\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.vpcSubnets\\"></a>

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* All Private subnets.

Where to place instances within the VPC.

---

###### \`instance_type\`<sup>Required</sup> <a name=\\"instance_type\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.instanceType\\"></a>

- *Type:* aws_cdk.aws_ec2.InstanceType

Instance type of the instances to start.

---

###### \`bootstrap_enabled\`<sup>Optional</sup> <a name=\\"bootstrap_enabled\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.bootstrapEnabled\\"></a>

- *Type:* bool
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

###### \`bootstrap_options\`<sup>Optional</sup> <a name=\\"bootstrap_options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.bootstrapOptions\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a>
- *Default:* none

EKS node bootstrapping options.

---

###### \`machine_image_type\`<sup>Optional</sup> <a name=\\"machine_image_type\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.machineImageType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a>
- *Default:* MachineImageType.AMAZON_LINUX_2

Machine image type.

---

###### \`map_role\`<sup>Optional</sup> <a name=\\"map_role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.mapRole\\"></a>

- *Type:* bool
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

###### \`spot_interrupt_handler\`<sup>Optional</sup> <a name=\\"spot_interrupt_handler\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.spotInterruptHandler\\"></a>

- *Type:* bool
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is used.

---

##### \`add_cdk8s_chart\` <a name=\\"add_cdk8s_chart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart\\"></a>

\`\`\`python
def add_cdk8s_chart(
  id: str,
  chart: Construct
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* str

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* constructs.Construct

the cdk8s chart.

---

##### \`add_fargate_profile\` <a name=\\"add_fargate_profile\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile\\"></a>

\`\`\`python
def add_fargate_profile(
  id: str,
  selectors: typing.List[Selector],
  fargate_profile_name: str = None,
  pod_execution_role: IRole = None,
  subnet_selection: SubnetSelection = None,
  vpc: IVpc = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.id\\"></a>

- *Type:* str

the id of this profile.

---

###### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.selectors\\"></a>

- *Type:* typing.List[<a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

###### \`fargate_profile_name\`<sup>Optional</sup> <a name=\\"fargate_profile_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.fargateProfileName\\"></a>

- *Type:* str
- *Default:* generated

The name of the Fargate profile.

---

###### \`pod_execution_role\`<sup>Optional</sup> <a name=\\"pod_execution_role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.podExecutionRole\\"></a>

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

###### \`subnet_selection\`<sup>Optional</sup> <a name=\\"subnet_selection\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.subnetSelection\\"></a>

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

###### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.vpc\\"></a>

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`add_helm_chart\` <a name=\\"add_helm_chart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart\\"></a>

\`\`\`python
def add_helm_chart(
  id: str,
  chart: str,
  create_namespace: bool = None,
  namespace: str = None,
  release: str = None,
  repository: str = None,
  timeout: Duration = None,
  values: typing.Mapping[typing.Any] = None,
  version: str = None,
  wait: bool = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.id\\"></a>

- *Type:* str

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.chart\\"></a>

- *Type:* str

The name of the chart.

---

###### \`create_namespace\`<sup>Optional</sup> <a name=\\"create_namespace\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.createNamespace\\"></a>

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

###### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.namespace\\"></a>

- *Type:* str
- *Default:* default

The Kubernetes namespace scope of the requests.

---

###### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.release\\"></a>

- *Type:* str
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

###### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.repository\\"></a>

- *Type:* str
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

###### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.timeout\\"></a>

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

###### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.values\\"></a>

- *Type:* typing.Mapping[typing.Any]
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

###### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.version\\"></a>

- *Type:* str
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

###### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.wait\\"></a>

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`add_manifest\` <a name=\\"add_manifest\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest\\"></a>

\`\`\`python
def add_manifest(
  id: str,
  manifest: typing.Mapping[typing.Any]
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest.parameter.id\\"></a>

- *Type:* str

logical id of this manifest.

---

###### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest.parameter.manifest\\"></a>

- *Type:* typing.Mapping[typing.Any]

a list of Kubernetes resource specifications.

---

##### \`add_nodegroup_capacity\` <a name=\\"add_nodegroup_capacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity\\"></a>

\`\`\`python
def add_nodegroup_capacity(
  id: str,
  ami_type: NodegroupAmiType = None,
  capacity_type: CapacityType = None,
  desired_size: typing.Union[int, float] = None,
  disk_size: typing.Union[int, float] = None,
  force_update: bool = None,
  instance_types: typing.List[InstanceType] = None,
  labels: typing.Mapping[str] = None,
  launch_template_spec: LaunchTemplateSpec = None,
  max_size: typing.Union[int, float] = None,
  min_size: typing.Union[int, float] = None,
  nodegroup_name: str = None,
  node_role: IRole = None,
  release_version: str = None,
  remote_access: NodegroupRemoteAccess = None,
  subnets: SubnetSelection = None,
  tags: typing.Mapping[str] = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.id\\"></a>

- *Type:* str

The ID of the nodegroup.

---

###### \`ami_type\`<sup>Optional</sup> <a name=\\"ami_type\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.amiType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a>
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

###### \`capacity_type\`<sup>Optional</sup> <a name=\\"capacity_type\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.capacityType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a>
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

###### \`desired_size\`<sup>Optional</sup> <a name=\\"desired_size\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.desiredSize\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

###### \`disk_size\`<sup>Optional</sup> <a name=\\"disk_size\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.diskSize\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

###### \`force_update\`<sup>Optional</sup> <a name=\\"force_update\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.forceUpdate\\"></a>

- *Type:* bool
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

###### \`instance_types\`<sup>Optional</sup> <a name=\\"instance_types\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.instanceTypes\\"></a>

- *Type:* typing.List[aws_cdk.aws_ec2.InstanceType]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

###### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.labels\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

###### \`launch_template_spec\`<sup>Optional</sup> <a name=\\"launch_template_spec\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.launchTemplateSpec\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a>
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

###### \`max_size\`<sup>Optional</sup> <a name=\\"max_size\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.maxSize\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

###### \`min_size\`<sup>Optional</sup> <a name=\\"min_size\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.minSize\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

###### \`nodegroup_name\`<sup>Optional</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.nodegroupName\\"></a>

- *Type:* str
- *Default:* resource ID

Name of the Nodegroup.

---

###### \`node_role\`<sup>Optional</sup> <a name=\\"node_role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.nodeRole\\"></a>

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

###### \`release_version\`<sup>Optional</sup> <a name=\\"release_version\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.releaseVersion\\"></a>

- *Type:* str
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

###### \`remote_access\`<sup>Optional</sup> <a name=\\"remote_access\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.remoteAccess\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a>
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

###### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.subnets\\"></a>

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

###### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.tags\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`add_service_account\` <a name=\\"add_service_account\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount\\"></a>

\`\`\`python
def add_service_account(
  id: str,
  name: str = None,
  namespace: str = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.id\\"></a>

- *Type:* str

---

###### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.name\\"></a>

- *Type:* str
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

###### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.namespace\\"></a>

- *Type:* str
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`connect_auto_scaling_group_capacity\` <a name=\\"connect_auto_scaling_group_capacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity\\"></a>

\`\`\`python
def connect_auto_scaling_group_capacity(
  auto_scaling_group: AutoScalingGroup,
  bootstrap_enabled: bool = None,
  bootstrap_options: BootstrapOptions = None,
  machine_image_type: MachineImageType = None,
  map_role: bool = None,
  spot_interrupt_handler: bool = None
)
\`\`\`

###### \`auto_scaling_group\`<sup>Required</sup> <a name=\\"auto_scaling_group\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.autoScalingGroup\\"></a>

- *Type:* aws_cdk.aws_autoscaling.AutoScalingGroup

[disable-awslint:ref-via-interface].

---

###### \`bootstrap_enabled\`<sup>Optional</sup> <a name=\\"bootstrap_enabled\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.bootstrapEnabled\\"></a>

- *Type:* bool
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

###### \`bootstrap_options\`<sup>Optional</sup> <a name=\\"bootstrap_options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.bootstrapOptions\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a>
- *Default:* default options

Allows options for node bootstrapping through EC2 user data.

---

###### \`machine_image_type\`<sup>Optional</sup> <a name=\\"machine_image_type\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.machineImageType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a>
- *Default:* MachineImageType.AMAZON_LINUX_2

Allow options to specify different machine image type.

---

###### \`map_role\`<sup>Optional</sup> <a name=\\"map_role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.mapRole\\"></a>

- *Type:* bool
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

###### \`spot_interrupt_handler\`<sup>Optional</sup> <a name=\\"spot_interrupt_handler\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.spotInterruptHandler\\"></a>

- *Type:* bool
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is configured on the auto-scaling group.

---

##### \`get_service_load_balancer_address\` <a name=\\"get_service_load_balancer_address\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress\\"></a>

\`\`\`python
def get_service_load_balancer_address(
  service_name: str,
  namespace: str = None,
  timeout: Duration = None
)
\`\`\`

###### \`service_name\`<sup>Required</sup> <a name=\\"service_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.serviceName\\"></a>

- *Type:* str

The name of the service.

---

###### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.namespace\\"></a>

- *Type:* str
- *Default:* 'default'

The namespace the service belongs to.

---

###### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.timeout\\"></a>

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on the load balancer address.

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes\\">from_cluster_attributes</a></code> | Import an existing cluster. |

---

##### \`from_cluster_attributes\` <a name=\\"from_cluster_attributes\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.Cluster.from_cluster_attributes(
  scope: Construct,
  id: str,
  cluster_name: str,
  cluster_certificate_authority_data: str = None,
  cluster_encryption_config_key_arn: str = None,
  cluster_endpoint: str = None,
  cluster_security_group_id: str = None,
  kubectl_environment: typing.Mapping[str] = None,
  kubectl_layer: ILayerVersion = None,
  kubectl_memory: Size = None,
  kubectl_private_subnet_ids: typing.List[str] = None,
  kubectl_role_arn: str = None,
  kubectl_security_group_id: str = None,
  open_id_connect_provider: IOpenIdConnectProvider = None,
  prune: bool = None,
  security_group_ids: typing.List[str] = None,
  vpc: IVpc = None
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.scope\\"></a>

- *Type:* constructs.Construct

the construct scope, in most cases 'this'.

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.id\\"></a>

- *Type:* str

the id or name to import as.

---

###### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.clusterName\\"></a>

- *Type:* str

The physical name of the Cluster.

---

###### \`cluster_certificate_authority_data\`<sup>Optional</sup> <a name=\\"cluster_certificate_authority_data\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.clusterCertificateAuthorityData\\"></a>

- *Type:* str
- *Default:* if not specified \`cluster.clusterCertificateAuthorityData\` will throw an error

The certificate-authority-data for your cluster.

---

###### \`cluster_encryption_config_key_arn\`<sup>Optional</sup> <a name=\\"cluster_encryption_config_key_arn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.clusterEncryptionConfigKeyArn\\"></a>

- *Type:* str
- *Default:* if not specified \`cluster.clusterEncryptionConfigKeyArn\` will throw an error

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

###### \`cluster_endpoint\`<sup>Optional</sup> <a name=\\"cluster_endpoint\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.clusterEndpoint\\"></a>

- *Type:* str
- *Default:* if not specified \`cluster.clusterEndpoint\` will throw an error.

The API Server endpoint URL.

---

###### \`cluster_security_group_id\`<sup>Optional</sup> <a name=\\"cluster_security_group_id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.clusterSecurityGroupId\\"></a>

- *Type:* str
- *Default:* if not specified \`cluster.clusterSecurityGroupId\` will throw an error

The cluster security group that was created by Amazon EKS for the cluster.

---

###### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.kubectlEnvironment\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* no additional variables

Environment variables to use when running \`kubectl\` against this cluster.

---

###### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.kubectlLayer\\"></a>

- *Type:* aws_cdk.aws_lambda.ILayerVersion
- *Default:* a layer bundled with this module.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

This layer is used by the kubectl handler to apply manifests and install helm charts.  The handler expects the layer to include the following executables:  \`\`\` helm/helm kubectl/kubectl awscli/aws \`\`\`

---

###### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.kubectlMemory\\"></a>

- *Type:* aws_cdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

###### \`kubectl_private_subnet_ids\`<sup>Optional</sup> <a name=\\"kubectl_private_subnet_ids\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.kubectlPrivateSubnetIds\\"></a>

- *Type:* typing.List[str]
- *Default:* k8s endpoint is expected to be accessible publicly

Subnets to host the \`kubectl\` compute resources.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

###### \`kubectl_role_arn\`<sup>Optional</sup> <a name=\\"kubectl_role_arn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.kubectlRoleArn\\"></a>

- *Type:* str
- *Default:* if not specified, it not be possible to issue \`kubectl\` commands against an imported cluster.

An IAM role with cluster administrator and \\"system:masters\\" permissions.

---

###### \`kubectl_security_group_id\`<sup>Optional</sup> <a name=\\"kubectl_security_group_id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.kubectlSecurityGroupId\\"></a>

- *Type:* str
- *Default:* k8s endpoint is expected to be accessible publicly

A security group to use for \`kubectl\` execution.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

###### \`open_id_connect_provider\`<sup>Optional</sup> <a name=\\"open_id_connect_provider\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.openIdConnectProvider\\"></a>

- *Type:* aws_cdk.aws_iam.IOpenIdConnectProvider
- *Default:* if not specified \`cluster.openIdConnectProvider\` and \`cluster.addServiceAccount\` will throw an error.

An Open ID Connect provider for this cluster that can be used to configure service accounts.

You can either import an existing provider using \`iam.OpenIdConnectProvider.fromProviderArn\`, or create a new provider using \`new eks.OpenIdConnectProvider\`

---

###### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.prune\\"></a>

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

###### \`security_group_ids\`<sup>Optional</sup> <a name=\\"security_group_ids\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.securityGroupIds\\"></a>

- *Type:* typing.List[str]
- *Default:* if not specified, no additional security groups will be considered in \`cluster.connections\`.

Additional security groups associated with this cluster.

---

###### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.vpc\\"></a>

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* if not specified \`cluster.vpc\` will throw an error

The VPC in which this Cluster was created.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.adminRole\\">admin_role</a></code> | <code>aws_cdk.aws_iam.Role</code> | An IAM role with administrative permissions to create or update the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.awsAuth\\">aws_auth</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth\\">AwsAuth</a></code> | Lazily creates the AwsAuth resource, which manages AWS authentication mapping. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterArn\\">cluster_arn</a></code> | <code>str</code> | The AWS generated ARN for the Cluster resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterCertificateAuthorityData\\">cluster_certificate_authority_data</a></code> | <code>str</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\">cluster_encryption_config_key_arn</a></code> | <code>str</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterEndpoint\\">cluster_endpoint</a></code> | <code>str</code> | The endpoint URL for the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterName\\">cluster_name</a></code> | <code>str</code> | The Name of the created EKS Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\">cluster_open_id_connect_issuer</a></code> | <code>str</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\">cluster_open_id_connect_issuer_url</a></code> | <code>str</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer url. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroup\\">cluster_security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroupId\\">cluster_security_group_id</a></code> | <code>str</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.connections\\">connections</a></code> | <code>aws_cdk.aws_ec2.Connections</code> | Manages connection rules (Security Group Rules) for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.openIdConnectProvider\\">open_id_connect_provider</a></code> | <code>aws_cdk.aws_iam.IOpenIdConnectProvider</code> | An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.prune\\">prune</a></code> | <code>bool</code> | Determines if Kubernetes resources can be pruned automatically. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | IAM role assumed by the EKS Control Plane. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.defaultCapacity\\">default_capacity</a></code> | <code>aws_cdk.aws_autoscaling.AutoScalingGroup</code> | The auto scaling group that hosts the default capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.defaultNodegroup\\">default_nodegroup</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup\\">Nodegroup</a></code> | The node group that hosts the default capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlEnvironment\\">kubectl_environment</a></code> | <code>typing.Mapping[str]</code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlLayer\\">kubectl_layer</a></code> | <code>aws_cdk.aws_lambda.ILayerVersion</code> | The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlMemory\\">kubectl_memory</a></code> | <code>aws_cdk.Size</code> | The amount of memory allocated to the kubectl provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlPrivateSubnets\\">kubectl_private_subnets</a></code> | <code>typing.List[aws_cdk.aws_ec2.ISubnet]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlRole\\">kubectl_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlSecurityGroup\\">kubectl_security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`admin_role\`<sup>Required</sup> <a name=\\"admin_role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.adminRole\\"></a>

\`\`\`python
admin_role: Role
\`\`\`

- *Type:* aws_cdk.aws_iam.Role

An IAM role with administrative permissions to create or update the cluster.

This role also has \`systems:master\` permissions.

---

##### \`aws_auth\`<sup>Required</sup> <a name=\\"aws_auth\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.awsAuth\\"></a>

\`\`\`python
aws_auth: AwsAuth
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.AwsAuth\\">AwsAuth</a>

Lazily creates the AwsAuth resource, which manages AWS authentication mapping.

---

##### \`cluster_arn\`<sup>Required</sup> <a name=\\"cluster_arn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterArn\\"></a>

\`\`\`python
cluster_arn: str
\`\`\`

- *Type:* str

The AWS generated ARN for the Cluster resource.

---

##### \`cluster_certificate_authority_data\`<sup>Required</sup> <a name=\\"cluster_certificate_authority_data\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`python
cluster_certificate_authority_data: str
\`\`\`

- *Type:* str

The certificate-authority-data for your cluster.

---

##### \`cluster_encryption_config_key_arn\`<sup>Required</sup> <a name=\\"cluster_encryption_config_key_arn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`python
cluster_encryption_config_key_arn: str
\`\`\`

- *Type:* str

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`cluster_endpoint\`<sup>Required</sup> <a name=\\"cluster_endpoint\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterEndpoint\\"></a>

\`\`\`python
cluster_endpoint: str
\`\`\`

- *Type:* str

The endpoint URL for the Cluster.

This is the URL inside the kubeconfig file to use with kubectl

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

The Name of the created EKS Cluster.

---

##### \`cluster_open_id_connect_issuer\`<sup>Required</sup> <a name=\\"cluster_open_id_connect_issuer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\"></a>

\`\`\`python
cluster_open_id_connect_issuer: str
\`\`\`

- *Type:* str

If this cluster is kubectl-enabled, returns the OpenID Connect issuer.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`cluster_open_id_connect_issuer_url\`<sup>Required</sup> <a name=\\"cluster_open_id_connect_issuer_url\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\"></a>

\`\`\`python
cluster_open_id_connect_issuer_url: str
\`\`\`

- *Type:* str

If this cluster is kubectl-enabled, returns the OpenID Connect issuer url.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`cluster_security_group\`<sup>Required</sup> <a name=\\"cluster_security_group\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroup\\"></a>

\`\`\`python
cluster_security_group: ISecurityGroup
\`\`\`

- *Type:* aws_cdk.aws_ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`cluster_security_group_id\`<sup>Required</sup> <a name=\\"cluster_security_group_id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroupId\\"></a>

\`\`\`python
cluster_security_group_id: str
\`\`\`

- *Type:* str

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`connections\`<sup>Required</sup> <a name=\\"connections\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.connections\\"></a>

\`\`\`python
connections: Connections
\`\`\`

- *Type:* aws_cdk.aws_ec2.Connections

Manages connection rules (Security Group Rules) for the cluster.

---

##### \`open_id_connect_provider\`<sup>Required</sup> <a name=\\"open_id_connect_provider\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.openIdConnectProvider\\"></a>

\`\`\`python
open_id_connect_provider: IOpenIdConnectProvider
\`\`\`

- *Type:* aws_cdk.aws_iam.IOpenIdConnectProvider

An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM.

A provider will only be defined if this property is accessed (lazy initialization).

---

##### \`prune\`<sup>Required</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.prune\\"></a>

\`\`\`python
prune: bool
\`\`\`

- *Type:* bool

Determines if Kubernetes resources can be pruned automatically.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.role\\"></a>

\`\`\`python
role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole

IAM role assumed by the EKS Control Plane.

---

##### \`vpc\`<sup>Required</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`default_capacity\`<sup>Optional</sup> <a name=\\"default_capacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.defaultCapacity\\"></a>

\`\`\`python
default_capacity: AutoScalingGroup
\`\`\`

- *Type:* aws_cdk.aws_autoscaling.AutoScalingGroup

The auto scaling group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is not \`EC2\` or \`defaultCapacityType\` is \`EC2\` but default capacity is set to 0.

---

##### \`default_nodegroup\`<sup>Optional</sup> <a name=\\"default_nodegroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.defaultNodegroup\\"></a>

\`\`\`python
default_nodegroup: Nodegroup
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Nodegroup\\">Nodegroup</a>

The node group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is \`EC2\` or \`defaultCapacityType\` is \`NODEGROUP\` but default capacity is set to 0.

---

##### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlEnvironment\\"></a>

\`\`\`python
kubectl_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlLayer\\"></a>

\`\`\`python
kubectl_layer: ILayerVersion
\`\`\`

- *Type:* aws_cdk.aws_lambda.ILayerVersion

The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI.

If undefined, a SAR app that contains this layer will be used.

---

##### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlMemory\\"></a>

\`\`\`python
kubectl_memory: Size
\`\`\`

- *Type:* aws_cdk.Size

The amount of memory allocated to the kubectl provider's lambda function.

---

##### \`kubectl_private_subnets\`<sup>Optional</sup> <a name=\\"kubectl_private_subnets\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`python
kubectl_private_subnets: typing.List[ISubnet]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.ISubnet]
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

Subnets to host the \`kubectl\` compute resources.

---

##### \`kubectl_role\`<sup>Optional</sup> <a name=\\"kubectl_role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlRole\\"></a>

\`\`\`python
kubectl_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`kubectl_security_group\`<sup>Optional</sup> <a name=\\"kubectl_security_group\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlSecurityGroup\\"></a>

\`\`\`python
kubectl_security_group: ISecurityGroup
\`\`\`

- *Type:* aws_cdk.aws_ec2.ISecurityGroup
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

A security group to use for \`kubectl\` execution.

---


### FargateCluster <a name=\\"FargateCluster\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster\\"></a>

Defines an EKS cluster that runs entirely on AWS Fargate.

The cluster is created with a default Fargate Profile that matches the \\"default\\" and \\"kube-system\\" namespaces. You can add additional profiles using \`addFargateProfile\`.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.FargateCluster(
  scope: Construct,
  id: str,
  version: KubernetesVersion,
  cluster_name: str = None,
  output_cluster_name: bool = None,
  output_config_command: bool = None,
  role: IRole = None,
  security_group: ISecurityGroup = None,
  vpc: IVpc = None,
  vpc_subnets: typing.List[SubnetSelection] = None,
  cluster_handler_environment: typing.Mapping[str] = None,
  core_dns_compute_type: CoreDnsComputeType = None,
  endpoint_access: EndpointAccess = None,
  kubectl_environment: typing.Mapping[str] = None,
  kubectl_layer: ILayerVersion = None,
  kubectl_memory: Size = None,
  masters_role: IRole = None,
  output_masters_role_arn: bool = None,
  place_cluster_handler_in_vpc: bool = None,
  prune: bool = None,
  secrets_encryption_key: IKey = None,
  default_profile: FargateProfileOptions = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.clusterName\\">cluster_name</a></code> | <code>str</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputClusterName\\">output_cluster_name</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputConfigCommand\\">output_config_command</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.securityGroup\\">security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.vpcSubnets\\">vpc_subnets</a></code> | <code>typing.List[aws_cdk.aws_ec2.SubnetSelection]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.clusterHandlerEnvironment\\">cluster_handler_environment</a></code> | <code>typing.Mapping[str]</code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.coreDnsComputeType\\">core_dns_compute_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a></code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.endpointAccess\\">endpoint_access</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlEnvironment\\">kubectl_environment</a></code> | <code>typing.Mapping[str]</code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlLayer\\">kubectl_layer</a></code> | <code>aws_cdk.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlMemory\\">kubectl_memory</a></code> | <code>aws_cdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.mastersRole\\">masters_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputMastersRoleArn\\">output_masters_role_arn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.placeClusterHandlerInVpc\\">place_cluster_handler_in_vpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.prune\\">prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.secretsEncryptionKey\\">secrets_encryption_key</a></code> | <code>aws_cdk.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.defaultProfile\\">default_profile</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions\\">FargateProfileOptions</a></code> | Fargate Profile to create along with the cluster. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.version\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`cluster_name\`<sup>Optional</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.clusterName\\"></a>

- *Type:* str
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`output_cluster_name\`<sup>Optional</sup> <a name=\\"output_cluster_name\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputClusterName\\"></a>

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`output_config_command\`<sup>Optional</sup> <a name=\\"output_config_command\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputConfigCommand\\"></a>

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.role\\"></a>

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`security_group\`<sup>Optional</sup> <a name=\\"security_group\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.securityGroup\\"></a>

- *Type:* aws_cdk.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.vpc\\"></a>

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpc_subnets\`<sup>Optional</sup> <a name=\\"vpc_subnets\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.vpcSubnets\\"></a>

- *Type:* typing.List[aws_cdk.aws_ec2.SubnetSelection]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`cluster_handler_environment\`<sup>Optional</sup> <a name=\\"cluster_handler_environment\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.clusterHandlerEnvironment\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`core_dns_compute_type\`<sup>Optional</sup> <a name=\\"core_dns_compute_type\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.coreDnsComputeType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a>
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpoint_access\`<sup>Optional</sup> <a name=\\"endpoint_access\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.endpointAccess\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlEnvironment\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlLayer\\"></a>

- *Type:* aws_cdk.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. layer = lambda_.LayerVersion(self, \\"kubectl-layer\\",     code=lambda_.Code.from_asset(f\\"{__dirname}/layer.zip\\") )# compatible_runtimes: [lambda.Runtime.PROVIDED] \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.kubectlMemory\\"></a>

- *Type:* aws_cdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`masters_role\`<sup>Optional</sup> <a name=\\"masters_role\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.mastersRole\\"></a>

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`output_masters_role_arn\`<sup>Optional</sup> <a name=\\"output_masters_role_arn\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.outputMastersRoleArn\\"></a>

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`place_cluster_handler_in_vpc\`<sup>Optional</sup> <a name=\\"place_cluster_handler_in_vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.placeClusterHandlerInVpc\\"></a>

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.prune\\"></a>

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secrets_encryption_key\`<sup>Optional</sup> <a name=\\"secrets_encryption_key\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.secretsEncryptionKey\\"></a>

- *Type:* aws_cdk.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`default_profile\`<sup>Optional</sup> <a name=\\"default_profile\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.defaultProfile\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions\\">FargateProfileOptions</a>
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---





### FargateProfile <a name=\\"FargateProfile\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile\\"></a>

- *Implements:* aws_cdk.ITaggable

Fargate profiles allows an administrator to declare which pods run on Fargate.

This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and optional labels. You must define a namespace for every selector. The label field consists of multiple optional key-value pairs. Pods that match a selector (by matching a namespace for the selector and all of the labels specified in the selector) are scheduled on Fargate. If a namespace selector is defined without any labels, Amazon EKS will attempt to schedule all pods that run in that namespace onto Fargate using the profile. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is scheduled on Fargate.  If a pod matches multiple Fargate profiles, Amazon EKS picks one of the matches at random. In this case, you can specify which profile a pod should use by adding the following Kubernetes label to the pod specification: eks.amazonaws.com/fargate-profile: profile_name. However, the pod must still match a selector in that profile in order to be scheduled onto Fargate.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.FargateProfile(
  scope: Construct,
  id: str,
  selectors: typing.List[Selector],
  fargate_profile_name: str = None,
  pod_execution_role: IRole = None,
  subnet_selection: SubnetSelection = None,
  vpc: IVpc = None,
  cluster: Cluster
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.selectors\\">selectors</a></code> | <code>typing.List[<a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.fargateProfileName\\">fargate_profile_name</a></code> | <code>str</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.podExecutionRole\\">pod_execution_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.subnetSelection\\">subnet_selection</a></code> | <code>aws_cdk.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a></code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.selectors\\"></a>

- *Type:* typing.List[<a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargate_profile_name\`<sup>Optional</sup> <a name=\\"fargate_profile_name\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.fargateProfileName\\"></a>

- *Type:* str
- *Default:* generated

The name of the Fargate profile.

---

##### \`pod_execution_role\`<sup>Optional</sup> <a name=\\"pod_execution_role\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.podExecutionRole\\"></a>

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnet_selection\`<sup>Optional</sup> <a name=\\"subnet_selection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.subnetSelection\\"></a>

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.vpc\\"></a>

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.cluster\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a>

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileArn\\">fargate_profile_arn</a></code> | <code>str</code> | The full Amazon Resource Name (ARN) of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileName\\">fargate_profile_name</a></code> | <code>str</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.podExecutionRole\\">pod_execution_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.tags\\">tags</a></code> | <code>aws_cdk.TagManager</code> | Resource tags. |

---

##### \`fargate_profile_arn\`<sup>Required</sup> <a name=\\"fargate_profile_arn\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileArn\\"></a>

\`\`\`python
fargate_profile_arn: str
\`\`\`

- *Type:* str

The full Amazon Resource Name (ARN) of the Fargate profile.

---

##### \`fargate_profile_name\`<sup>Required</sup> <a name=\\"fargate_profile_name\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileName\\"></a>

\`\`\`python
fargate_profile_name: str
\`\`\`

- *Type:* str

The name of the Fargate profile.

---

##### \`pod_execution_role\`<sup>Required</sup> <a name=\\"pod_execution_role\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.podExecutionRole\\"></a>

\`\`\`python
pod_execution_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.tags\\"></a>

\`\`\`python
tags: TagManager
\`\`\`

- *Type:* aws_cdk.TagManager

Resource tags.

---


### HelmChart <a name=\\"HelmChart\\" id=\\"aws-cdk-lib.aws_eks.HelmChart\\"></a>

Represents a helm chart within the Kubernetes system.

Applies/deletes the resources using \`kubectl\` in sync with the resource.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.HelmChart(
  scope: Construct,
  id: str,
  chart: str,
  create_namespace: bool = None,
  namespace: str = None,
  release: str = None,
  repository: str = None,
  timeout: Duration = None,
  values: typing.Mapping[typing.Any] = None,
  version: str = None,
  wait: bool = None,
  cluster: ICluster
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.chart\\">chart</a></code> | <code>str</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.createNamespace\\">create_namespace</a></code> | <code>bool</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.namespace\\">namespace</a></code> | <code>str</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.release\\">release</a></code> | <code>str</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.repository\\">repository</a></code> | <code>str</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.timeout\\">timeout</a></code> | <code>aws_cdk.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.values\\">values</a></code> | <code>typing.Mapping[typing.Any]</code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.version\\">version</a></code> | <code>str</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.wait\\">wait</a></code> | <code>bool</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to apply this configuration to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.chart\\"></a>

- *Type:* str

The name of the chart.

---

##### \`create_namespace\`<sup>Optional</sup> <a name=\\"create_namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.createNamespace\\"></a>

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.namespace\\"></a>

- *Type:* str
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.release\\"></a>

- *Type:* str
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.repository\\"></a>

- *Type:* str
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.timeout\\"></a>

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.values\\"></a>

- *Type:* typing.Mapping[typing.Any]
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.version\\"></a>

- *Type:* str
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.wait\\"></a>

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.cluster\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>str</code> | The CloudFormation resource type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.property.RESOURCE_TYPE\\"></a>

\`\`\`python
RESOURCE_TYPE: str
\`\`\`

- *Type:* str

The CloudFormation resource type.

---

### KubernetesManifest <a name=\\"KubernetesManifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest\\"></a>

Represents a manifest within the Kubernetes system.

Alternatively, you can use \`cluster.addManifest(resource[, resource, ...])\` to define resources on this cluster.  Applies/deletes the manifest using \`kubectl\`.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.KubernetesManifest(
  scope: Construct,
  id: str,
  prune: bool = None,
  skip_validation: bool = None,
  cluster: ICluster,
  manifest: typing.List[typing.Mapping[typing.Any]],
  overwrite: bool = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.prune\\">prune</a></code> | <code>bool</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.skipValidation\\">skip_validation</a></code> | <code>bool</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.manifest\\">manifest</a></code> | <code>typing.List[typing.Mapping[typing.Any]]</code> | The manifest to apply. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.overwrite\\">overwrite</a></code> | <code>bool</code> | Overwrite any existing resources. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.prune\\"></a>

- *Type:* bool
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skip_validation\`<sup>Optional</sup> <a name=\\"skip_validation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.skipValidation\\"></a>

- *Type:* bool
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.cluster\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.manifest\\"></a>

- *Type:* typing.List[typing.Mapping[typing.Any]]

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`overwrite\`<sup>Optional</sup> <a name=\\"overwrite\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.overwrite\\"></a>

- *Type:* bool
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>str</code> | The CloudFormation reosurce type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\"></a>

\`\`\`python
RESOURCE_TYPE: str
\`\`\`

- *Type:* str

The CloudFormation reosurce type.

---

### KubernetesObjectValue <a name=\\"KubernetesObjectValue\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue\\"></a>

Represents a value of a specific object deployed in the cluster.

Use this to fetch any information available by the \`kubectl get\` command.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.KubernetesObjectValue(
  scope: Construct,
  id: str,
  cluster: ICluster,
  json_path: str,
  object_name: str,
  object_type: str,
  object_namespace: str = None,
  timeout: Duration = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.jsonPath\\">json_path</a></code> | <code>str</code> | JSONPath to the specific value. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectName\\">object_name</a></code> | <code>str</code> | The name of the object to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectType\\">object_type</a></code> | <code>str</code> | The object type to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectNamespace\\">object_namespace</a></code> | <code>str</code> | The namespace the object belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.timeout\\">timeout</a></code> | <code>aws_cdk.Duration</code> | Timeout for waiting on a value. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.cluster\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`json_path\`<sup>Required</sup> <a name=\\"json_path\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.jsonPath\\"></a>

- *Type:* str

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`object_name\`<sup>Required</sup> <a name=\\"object_name\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectName\\"></a>

- *Type:* str

The name of the object to query.

---

##### \`object_type\`<sup>Required</sup> <a name=\\"object_type\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectType\\"></a>

- *Type:* str

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`object_namespace\`<sup>Optional</sup> <a name=\\"object_namespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.objectNamespace\\"></a>

- *Type:* str
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.timeout\\"></a>

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.property.value\\">value</a></code> | <code>str</code> | The value as a string token. |

---

##### \`value\`<sup>Required</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.property.value\\"></a>

\`\`\`python
value: str
\`\`\`

- *Type:* str

The value as a string token.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>str</code> | The CloudFormation reosurce type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\"></a>

\`\`\`python
RESOURCE_TYPE: str
\`\`\`

- *Type:* str

The CloudFormation reosurce type.

---

### KubernetesPatch <a name=\\"KubernetesPatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch\\"></a>

A CloudFormation resource which applies/restores a JSON patch into a Kubernetes resource.

> [https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/](https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.KubernetesPatch(
  scope: Construct,
  id: str,
  apply_patch: typing.Mapping[typing.Any],
  cluster: ICluster,
  resource_name: str,
  restore_patch: typing.Mapping[typing.Any],
  patch_type: PatchType = None,
  resource_namespace: str = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.applyPatch\\">apply_patch</a></code> | <code>typing.Mapping[typing.Any]</code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The cluster to apply the patch to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.resourceName\\">resource_name</a></code> | <code>str</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.restorePatch\\">restore_patch</a></code> | <code>typing.Mapping[typing.Any]</code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.patchType\\">patch_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType\\">PatchType</a></code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.resourceNamespace\\">resource_namespace</a></code> | <code>str</code> | The kubernetes API namespace. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`apply_patch\`<sup>Required</sup> <a name=\\"apply_patch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.applyPatch\\"></a>

- *Type:* typing.Mapping[typing.Any]

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.cluster\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`resource_name\`<sup>Required</sup> <a name=\\"resource_name\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.resourceName\\"></a>

- *Type:* str

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`restore_patch\`<sup>Required</sup> <a name=\\"restore_patch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.restorePatch\\"></a>

- *Type:* typing.Mapping[typing.Any]

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`patch_type\`<sup>Optional</sup> <a name=\\"patch_type\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.patchType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.PatchType\\">PatchType</a>
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`resource_namespace\`<sup>Optional</sup> <a name=\\"resource_namespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.resourceNamespace\\"></a>

- *Type:* str
- *Default:* \\"default\\"

The kubernetes API namespace.

---





### Nodegroup <a name=\\"Nodegroup\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup\\"></a>

- *Implements:* <a href=\\"#aws-cdk-lib.aws_eks.INodegroup\\">INodegroup</a>

The Nodegroup resource class.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.Nodegroup(
  scope: Construct,
  id: str,
  ami_type: NodegroupAmiType = None,
  capacity_type: CapacityType = None,
  desired_size: typing.Union[int, float] = None,
  disk_size: typing.Union[int, float] = None,
  force_update: bool = None,
  instance_types: typing.List[InstanceType] = None,
  labels: typing.Mapping[str] = None,
  launch_template_spec: LaunchTemplateSpec = None,
  max_size: typing.Union[int, float] = None,
  min_size: typing.Union[int, float] = None,
  nodegroup_name: str = None,
  node_role: IRole = None,
  release_version: str = None,
  remote_access: NodegroupRemoteAccess = None,
  subnets: SubnetSelection = None,
  tags: typing.Mapping[str] = None,
  cluster: ICluster
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.amiType\\">ami_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a></code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.capacityType\\">capacity_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a></code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.desiredSize\\">desired_size</a></code> | <code>typing.Union[int, float]</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.diskSize\\">disk_size</a></code> | <code>typing.Union[int, float]</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.forceUpdate\\">force_update</a></code> | <code>bool</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.instanceTypes\\">instance_types</a></code> | <code>typing.List[aws_cdk.aws_ec2.InstanceType]</code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.labels\\">labels</a></code> | <code>typing.Mapping[str]</code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.launchTemplateSpec\\">launch_template_spec</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a></code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.maxSize\\">max_size</a></code> | <code>typing.Union[int, float]</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.minSize\\">min_size</a></code> | <code>typing.Union[int, float]</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.nodegroupName\\">nodegroup_name</a></code> | <code>str</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.nodeRole\\">node_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.releaseVersion\\">release_version</a></code> | <code>str</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.remoteAccess\\">remote_access</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a></code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.subnets\\">subnets</a></code> | <code>aws_cdk.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.tags\\">tags</a></code> | <code>typing.Mapping[str]</code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | Cluster resource. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`ami_type\`<sup>Optional</sup> <a name=\\"ami_type\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.amiType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a>
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacity_type\`<sup>Optional</sup> <a name=\\"capacity_type\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.capacityType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a>
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desired_size\`<sup>Optional</sup> <a name=\\"desired_size\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.desiredSize\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`disk_size\`<sup>Optional</sup> <a name=\\"disk_size\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.diskSize\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`force_update\`<sup>Optional</sup> <a name=\\"force_update\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.forceUpdate\\"></a>

- *Type:* bool
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`instance_types\`<sup>Optional</sup> <a name=\\"instance_types\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.instanceTypes\\"></a>

- *Type:* typing.List[aws_cdk.aws_ec2.InstanceType]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.labels\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launch_template_spec\`<sup>Optional</sup> <a name=\\"launch_template_spec\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.launchTemplateSpec\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a>
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`max_size\`<sup>Optional</sup> <a name=\\"max_size\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.maxSize\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`min_size\`<sup>Optional</sup> <a name=\\"min_size\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.minSize\\"></a>

- *Type:* typing.Union[int, float]
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroup_name\`<sup>Optional</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.nodegroupName\\"></a>

- *Type:* str
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`node_role\`<sup>Optional</sup> <a name=\\"node_role\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.nodeRole\\"></a>

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`release_version\`<sup>Optional</sup> <a name=\\"release_version\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.releaseVersion\\"></a>

- *Type:* str
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remote_access\`<sup>Optional</sup> <a name=\\"remote_access\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.remoteAccess\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a>
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.subnets\\"></a>

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.tags\\"></a>

- *Type:* typing.Mapping[str]
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.cluster\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

Cluster resource.

---


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName\\">from_nodegroup_name</a></code> | Import the Nodegroup from attributes. |

---

##### \`from_nodegroup_name\` <a name=\\"from_nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.Nodegroup.from_nodegroup_name(
  scope: Construct,
  id: str,
  nodegroup_name: str
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.id\\"></a>

- *Type:* str

---

###### \`nodegroup_name\`<sup>Required</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.nodegroupName\\"></a>

- *Type:* str

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | the Amazon EKS cluster resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupArn\\">nodegroup_arn</a></code> | <code>str</code> | ARN of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupName\\">nodegroup_name</a></code> | <code>str</code> | Nodegroup name. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | IAM role of the instance profile for the nodegroup. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.cluster\\"></a>

\`\`\`python
cluster: ICluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

the Amazon EKS cluster resource.

---

##### \`nodegroup_arn\`<sup>Required</sup> <a name=\\"nodegroup_arn\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupArn\\"></a>

\`\`\`python
nodegroup_arn: str
\`\`\`

- *Type:* str

ARN of the nodegroup.

---

##### \`nodegroup_name\`<sup>Required</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupName\\"></a>

\`\`\`python
nodegroup_name: str
\`\`\`

- *Type:* str

Nodegroup name.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.role\\"></a>

\`\`\`python
role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole

IAM role of the instance profile for the nodegroup.

---


### OpenIdConnectProvider <a name=\\"OpenIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider\\"></a>

IAM OIDC identity providers are entities in IAM that describe an external identity provider (IdP) service that supports the OpenID Connect (OIDC) standard, such as Google or Salesforce.

You use an IAM OIDC identity provider when you want to establish trust between an OIDC-compatible IdP and your AWS account.  This implementation has default values for thumbprints and clientIds props that will be compatible with the eks cluster

> [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.OpenIdConnectProvider(
  scope: Construct,
  id: str,
  url: str
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | The definition scope. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\">id</a></code> | <code>str</code> | Construct ID. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.url\\">url</a></code> | <code>str</code> | The URL of the identity provider. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

The definition scope.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\"></a>

- *Type:* str

Construct ID.

---

##### \`url\`<sup>Required</sup> <a name=\\"url\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.url\\"></a>

- *Type:* str

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---





### ServiceAccount <a name=\\"ServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount\\"></a>

- *Implements:* aws_cdk.aws_iam.IPrincipal

Service Account.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.ServiceAccount(
  scope: Construct,
  id: str,
  name: str = None,
  namespace: str = None,
  cluster: ICluster
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.id\\">id</a></code> | <code>str</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.name\\">name</a></code> | <code>str</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.namespace\\">namespace</a></code> | <code>str</code> | The namespace of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The cluster to apply the patch to. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.id\\"></a>

- *Type:* str

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.name\\"></a>

- *Type:* str
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.namespace\\"></a>

- *Type:* str
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.cluster\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The cluster to apply the patch to.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy\\">add_to_principal_policy</a></code> | Add to the policy of this principal. |

---

##### \`add_to_principal_policy\` <a name=\\"add_to_principal_policy\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy\\"></a>

\`\`\`python
def add_to_principal_policy(
  statement: PolicyStatement
)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy.parameter.statement\\"></a>

- *Type:* aws_cdk.aws_iam.PolicyStatement

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.assumeRoleAction\\">assume_role_action</a></code> | <code>str</code> | When this Principal is used in an AssumeRole policy, the action to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.grantPrincipal\\">grant_principal</a></code> | <code>aws_cdk.aws_iam.IPrincipal</code> | The principal to grant permissions to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.policyFragment\\">policy_fragment</a></code> | <code>aws_cdk.aws_iam.PrincipalPolicyFragment</code> | Return the policy fragment that identifies this principal in a Policy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | The role which is linked to the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountName\\">service_account_name</a></code> | <code>str</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountNamespace\\">service_account_namespace</a></code> | <code>str</code> | The namespace where the service account is located in. |

---

##### \`assume_role_action\`<sup>Required</sup> <a name=\\"assume_role_action\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.assumeRoleAction\\"></a>

\`\`\`python
assume_role_action: str
\`\`\`

- *Type:* str

When this Principal is used in an AssumeRole policy, the action to use.

---

##### \`grant_principal\`<sup>Required</sup> <a name=\\"grant_principal\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.grantPrincipal\\"></a>

\`\`\`python
grant_principal: IPrincipal
\`\`\`

- *Type:* aws_cdk.aws_iam.IPrincipal

The principal to grant permissions to.

---

##### \`policy_fragment\`<sup>Required</sup> <a name=\\"policy_fragment\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.policyFragment\\"></a>

\`\`\`python
policy_fragment: PrincipalPolicyFragment
\`\`\`

- *Type:* aws_cdk.aws_iam.PrincipalPolicyFragment

Return the policy fragment that identifies this principal in a Policy.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.role\\"></a>

\`\`\`python
role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole

The role which is linked to the service account.

---

##### \`service_account_name\`<sup>Required</sup> <a name=\\"service_account_name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountName\\"></a>

\`\`\`python
service_account_name: str
\`\`\`

- *Type:* str

The name of the service account.

---

##### \`service_account_namespace\`<sup>Required</sup> <a name=\\"service_account_namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountNamespace\\"></a>

\`\`\`python
service_account_namespace: str
\`\`\`

- *Type:* str

The namespace where the service account is located in.

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### AutoScalingGroupCapacityOptions <a name=\\"AutoScalingGroupCapacityOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions\\"></a>

Options for adding worker nodes.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.AutoScalingGroupCapacityOptions(
  allow_all_outbound: bool = None,
  associate_public_ip_address: bool = None,
  auto_scaling_group_name: str = None,
  block_devices: typing.List[BlockDevice] = None,
  cooldown: Duration = None,
  desired_capacity: typing.Union[int, float] = None,
  group_metrics: typing.List[GroupMetrics] = None,
  health_check: HealthCheck = None,
  ignore_unmodified_size_properties: bool = None,
  instance_monitoring: Monitoring = None,
  key_name: str = None,
  max_capacity: typing.Union[int, float] = None,
  max_instance_lifetime: Duration = None,
  min_capacity: typing.Union[int, float] = None,
  new_instances_protected_from_scale_in: bool = None,
  notifications: typing.List[NotificationConfiguration] = None,
  signals: Signals = None,
  spot_price: str = None,
  update_policy: UpdatePolicy = None,
  vpc_subnets: SubnetSelection = None,
  instance_type: InstanceType,
  bootstrap_enabled: bool = None,
  bootstrap_options: BootstrapOptions = None,
  machine_image_type: MachineImageType = None,
  map_role: bool = None,
  spot_interrupt_handler: bool = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\">allow_all_outbound</a></code> | <code>bool</code> | Whether the instances can initiate connections to anywhere by default. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\">associate_public_ip_address</a></code> | <code>bool</code> | Whether instances in the Auto Scaling Group should have public IP addresses associated with them. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\">auto_scaling_group_name</a></code> | <code>str</code> | The name of the Auto Scaling group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\">block_devices</a></code> | <code>typing.List[aws_cdk.aws_autoscaling.BlockDevice]</code> | Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\">cooldown</a></code> | <code>aws_cdk.Duration</code> | Default scaling cooldown for this AutoScalingGroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\">desired_capacity</a></code> | <code>typing.Union[int, float]</code> | Initial amount of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\">group_metrics</a></code> | <code>typing.List[aws_cdk.aws_autoscaling.GroupMetrics]</code> | Enable monitoring for group metrics, these metrics describe the group rather than any of its instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\">health_check</a></code> | <code>aws_cdk.aws_autoscaling.HealthCheck</code> | Configuration for health checks. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\">ignore_unmodified_size_properties</a></code> | <code>bool</code> | If the ASG has scheduled actions, don't reset unchanged group sizes. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\">instance_monitoring</a></code> | <code>aws_cdk.aws_autoscaling.Monitoring</code> | Controls whether instances in this group are launched with detailed or basic monitoring. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\">key_name</a></code> | <code>str</code> | Name of SSH keypair to grant access to instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\">max_capacity</a></code> | <code>typing.Union[int, float]</code> | Maximum number of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\">max_instance_lifetime</a></code> | <code>aws_cdk.Duration</code> | The maximum amount of time that an instance can be in service. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\">min_capacity</a></code> | <code>typing.Union[int, float]</code> | Minimum number of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\">new_instances_protected_from_scale_in</a></code> | <code>bool</code> | Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\">notifications</a></code> | <code>typing.List[aws_cdk.aws_autoscaling.NotificationConfiguration]</code> | Configure autoscaling group to send notifications about fleet changes to an SNS topic(s). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\">signals</a></code> | <code>aws_cdk.aws_autoscaling.Signals</code> | Configure waiting for signals during deployment. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\">spot_price</a></code> | <code>str</code> | The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\">update_policy</a></code> | <code>aws_cdk.aws_autoscaling.UpdatePolicy</code> | What to do when an AutoScalingGroup's instance configuration is changed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\">vpc_subnets</a></code> | <code>aws_cdk.aws_ec2.SubnetSelection</code> | Where to place instances within the VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\">instance_type</a></code> | <code>aws_cdk.aws_ec2.InstanceType</code> | Instance type of the instances to start. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\">bootstrap_enabled</a></code> | <code>bool</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\">bootstrap_options</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a></code> | EKS node bootstrapping options. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\">machine_image_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a></code> | Machine image type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\">map_role</a></code> | <code>bool</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\">spot_interrupt_handler</a></code> | <code>bool</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`allow_all_outbound\`<sup>Optional</sup> <a name=\\"allow_all_outbound\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\"></a>

\`\`\`python
allow_all_outbound: bool
\`\`\`

- *Type:* bool
- *Default:* true

Whether the instances can initiate connections to anywhere by default.

---

##### \`associate_public_ip_address\`<sup>Optional</sup> <a name=\\"associate_public_ip_address\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\"></a>

\`\`\`python
associate_public_ip_address: bool
\`\`\`

- *Type:* bool
- *Default:* Use subnet setting.

Whether instances in the Auto Scaling Group should have public IP addresses associated with them.

---

##### \`auto_scaling_group_name\`<sup>Optional</sup> <a name=\\"auto_scaling_group_name\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\"></a>

\`\`\`python
auto_scaling_group_name: str
\`\`\`

- *Type:* str
- *Default:* Auto generated by CloudFormation

The name of the Auto Scaling group.

This name must be unique per Region per account.

---

##### \`block_devices\`<sup>Optional</sup> <a name=\\"block_devices\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\"></a>

\`\`\`python
block_devices: typing.List[BlockDevice]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_autoscaling.BlockDevice]
- *Default:* Uses the block device mapping of the AMI

Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.

Each instance that is launched has an associated root device volume, either an Amazon EBS volume or an instance store volume. You can use block device mappings to specify additional EBS volumes or instance store volumes to attach to an instance when it is launched.

> [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)

---

##### \`cooldown\`<sup>Optional</sup> <a name=\\"cooldown\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\"></a>

\`\`\`python
cooldown: Duration
\`\`\`

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Default scaling cooldown for this AutoScalingGroup.

---

##### \`desired_capacity\`<sup>Optional</sup> <a name=\\"desired_capacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\"></a>

\`\`\`python
desired_capacity: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* minCapacity, and leave unchanged during deployment

Initial amount of instances in the fleet.

If this is set to a number, every deployment will reset the amount of instances to this number. It is recommended to leave this value blank.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity)

---

##### \`group_metrics\`<sup>Optional</sup> <a name=\\"group_metrics\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\"></a>

\`\`\`python
group_metrics: typing.List[GroupMetrics]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_autoscaling.GroupMetrics]
- *Default:* no group metrics will be reported

Enable monitoring for group metrics, these metrics describe the group rather than any of its instances.

To report all group metrics use \`GroupMetrics.all()\` Group metrics are reported in a granularity of 1 minute at no additional charge.

---

##### \`health_check\`<sup>Optional</sup> <a name=\\"health_check\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\"></a>

\`\`\`python
health_check: HealthCheck
\`\`\`

- *Type:* aws_cdk.aws_autoscaling.HealthCheck
- *Default:* HealthCheck.ec2 with no grace period

Configuration for health checks.

---

##### \`ignore_unmodified_size_properties\`<sup>Optional</sup> <a name=\\"ignore_unmodified_size_properties\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\"></a>

\`\`\`python
ignore_unmodified_size_properties: bool
\`\`\`

- *Type:* bool
- *Default:* true

If the ASG has scheduled actions, don't reset unchanged group sizes.

Only used if the ASG has scheduled actions (which may scale your ASG up or down regardless of cdk deployments). If true, the size of the group will only be reset if it has been changed in the CDK app. If false, the sizes will always be changed back to what they were in the CDK app on deployment.

---

##### \`instance_monitoring\`<sup>Optional</sup> <a name=\\"instance_monitoring\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\"></a>

\`\`\`python
instance_monitoring: Monitoring
\`\`\`

- *Type:* aws_cdk.aws_autoscaling.Monitoring
- *Default:* Monitoring.DETAILED

Controls whether instances in this group are launched with detailed or basic monitoring.

When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.

> [https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics](https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics)

---

##### \`key_name\`<sup>Optional</sup> <a name=\\"key_name\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\"></a>

\`\`\`python
key_name: str
\`\`\`

- *Type:* str
- *Default:* No SSH access will be possible.

Name of SSH keypair to grant access to instances.

---

##### \`max_capacity\`<sup>Optional</sup> <a name=\\"max_capacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\"></a>

\`\`\`python
max_capacity: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* desiredCapacity

Maximum number of instances in the fleet.

---

##### \`max_instance_lifetime\`<sup>Optional</sup> <a name=\\"max_instance_lifetime\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\"></a>

\`\`\`python
max_instance_lifetime: Duration
\`\`\`

- *Type:* aws_cdk.Duration
- *Default:* none

The maximum amount of time that an instance can be in service.

The maximum duration applies to all current and future instances in the group. As an instance approaches its maximum duration, it is terminated and replaced, and cannot be used again.  You must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, leave this property undefined.

> [https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)

---

##### \`min_capacity\`<sup>Optional</sup> <a name=\\"min_capacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\"></a>

\`\`\`python
min_capacity: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 1

Minimum number of instances in the fleet.

---

##### \`new_instances_protected_from_scale_in\`<sup>Optional</sup> <a name=\\"new_instances_protected_from_scale_in\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\"></a>

\`\`\`python
new_instances_protected_from_scale_in: bool
\`\`\`

- *Type:* bool
- *Default:* false

Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.

By default, Auto Scaling can terminate an instance at any time after launch when scaling in an Auto Scaling Group, subject to the group's termination policy. However, you may wish to protect newly-launched instances from being scaled in if they are going to run critical applications that should not be prematurely terminated.  This flag must be enabled if the Auto Scaling Group will be associated with an ECS Capacity Provider with managed termination protection.

---

##### \`notifications\`<sup>Optional</sup> <a name=\\"notifications\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\"></a>

\`\`\`python
notifications: typing.List[NotificationConfiguration]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_autoscaling.NotificationConfiguration]
- *Default:* No fleet change notifications will be sent.

Configure autoscaling group to send notifications about fleet changes to an SNS topic(s).

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations)

---

##### \`signals\`<sup>Optional</sup> <a name=\\"signals\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\"></a>

\`\`\`python
signals: Signals
\`\`\`

- *Type:* aws_cdk.aws_autoscaling.Signals
- *Default:* Do not wait for signals

Configure waiting for signals during deployment.

Use this to pause the CloudFormation deployment to wait for the instances in the AutoScalingGroup to report successful startup during creation and updates. The UserData script needs to invoke \`cfn-signal\` with a success or failure code after it is done setting up the instance.  Without waiting for signals, the CloudFormation deployment will proceed as soon as the AutoScalingGroup has been created or updated but before the instances in the group have been started.  For example, to have instances wait for an Elastic Load Balancing health check before they signal success, add a health-check verification by using the cfn-init helper script. For an example, see the verify_instance_health command in the Auto Scaling rolling updates sample template:  https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml

---

##### \`spot_price\`<sup>Optional</sup> <a name=\\"spot_price\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\"></a>

\`\`\`python
spot_price: str
\`\`\`

- *Type:* str
- *Default:* none

The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request.

Spot Instances are launched when the price you specify exceeds the current Spot market price.

---

##### \`update_policy\`<sup>Optional</sup> <a name=\\"update_policy\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\"></a>

\`\`\`python
update_policy: UpdatePolicy
\`\`\`

- *Type:* aws_cdk.aws_autoscaling.UpdatePolicy
- *Default:* \`UpdatePolicy.rollingUpdate()\` if using \`init\`, \`UpdatePolicy.none()\` otherwise

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

##### \`vpc_subnets\`<sup>Optional</sup> <a name=\\"vpc_subnets\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\"></a>

\`\`\`python
vpc_subnets: SubnetSelection
\`\`\`

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* All Private subnets.

Where to place instances within the VPC.

---

##### \`instance_type\`<sup>Required</sup> <a name=\\"instance_type\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\"></a>

\`\`\`python
instance_type: InstanceType
\`\`\`

- *Type:* aws_cdk.aws_ec2.InstanceType

Instance type of the instances to start.

---

##### \`bootstrap_enabled\`<sup>Optional</sup> <a name=\\"bootstrap_enabled\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\"></a>

\`\`\`python
bootstrap_enabled: bool
\`\`\`

- *Type:* bool
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`bootstrap_options\`<sup>Optional</sup> <a name=\\"bootstrap_options\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\"></a>

\`\`\`python
bootstrap_options: BootstrapOptions
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a>
- *Default:* none

EKS node bootstrapping options.

---

##### \`machine_image_type\`<sup>Optional</sup> <a name=\\"machine_image_type\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\"></a>

\`\`\`python
machine_image_type: MachineImageType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a>
- *Default:* MachineImageType.AMAZON_LINUX_2

Machine image type.

---

##### \`map_role\`<sup>Optional</sup> <a name=\\"map_role\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\"></a>

\`\`\`python
map_role: bool
\`\`\`

- *Type:* bool
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`spot_interrupt_handler\`<sup>Optional</sup> <a name=\\"spot_interrupt_handler\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\"></a>

\`\`\`python
spot_interrupt_handler: bool
\`\`\`

- *Type:* bool
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is used.

---

### AutoScalingGroupOptions <a name=\\"AutoScalingGroupOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions\\"></a>

Options for adding an AutoScalingGroup as capacity.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.AutoScalingGroupOptions(
  bootstrap_enabled: bool = None,
  bootstrap_options: BootstrapOptions = None,
  machine_image_type: MachineImageType = None,
  map_role: bool = None,
  spot_interrupt_handler: bool = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\">bootstrap_enabled</a></code> | <code>bool</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\">bootstrap_options</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a></code> | Allows options for node bootstrapping through EC2 user data. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.machineImageType\\">machine_image_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a></code> | Allow options to specify different machine image type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.mapRole\\">map_role</a></code> | <code>bool</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\">spot_interrupt_handler</a></code> | <code>bool</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`bootstrap_enabled\`<sup>Optional</sup> <a name=\\"bootstrap_enabled\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\"></a>

\`\`\`python
bootstrap_enabled: bool
\`\`\`

- *Type:* bool
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`bootstrap_options\`<sup>Optional</sup> <a name=\\"bootstrap_options\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\"></a>

\`\`\`python
bootstrap_options: BootstrapOptions
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a>
- *Default:* default options

Allows options for node bootstrapping through EC2 user data.

---

##### \`machine_image_type\`<sup>Optional</sup> <a name=\\"machine_image_type\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.machineImageType\\"></a>

\`\`\`python
machine_image_type: MachineImageType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a>
- *Default:* MachineImageType.AMAZON_LINUX_2

Allow options to specify different machine image type.

---

##### \`map_role\`<sup>Optional</sup> <a name=\\"map_role\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.mapRole\\"></a>

\`\`\`python
map_role: bool
\`\`\`

- *Type:* bool
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`spot_interrupt_handler\`<sup>Optional</sup> <a name=\\"spot_interrupt_handler\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\"></a>

\`\`\`python
spot_interrupt_handler: bool
\`\`\`

- *Type:* bool
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is configured on the auto-scaling group.

---

### AwsAuthMapping <a name=\\"AwsAuthMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping\\"></a>

AwsAuth mapping.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.AwsAuthMapping(
  groups: typing.List[str],
  username: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping.property.groups\\">groups</a></code> | <code>typing.List[str]</code> | A list of groups within Kubernetes to which the role is mapped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping.property.username\\">username</a></code> | <code>str</code> | The user name within Kubernetes to map to the IAM role. |

---

##### \`groups\`<sup>Required</sup> <a name=\\"groups\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.property.groups\\"></a>

\`\`\`python
groups: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

A list of groups within Kubernetes to which the role is mapped.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.property.username\\"></a>

\`\`\`python
username: str
\`\`\`

- *Type:* str
- *Default:* By default, the user name is the ARN of the IAM role.

The user name within Kubernetes to map to the IAM role.

---

### AwsAuthProps <a name=\\"AwsAuthProps\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps\\"></a>

Configuration props for the AwsAuth construct.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.AwsAuthProps(
  cluster: Cluster
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a></code> | The EKS cluster to apply this configuration to. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps.property.cluster\\"></a>

\`\`\`python
cluster: Cluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a>

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### BootstrapOptions <a name=\\"BootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions\\"></a>

EKS node bootstrapping options.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.BootstrapOptions(
  additional_args: str = None,
  aws_api_retry_attempts: typing.Union[int, float] = None,
  dns_cluster_ip: str = None,
  docker_config_json: str = None,
  enable_docker_bridge: bool = None,
  kubelet_extra_args: str = None,
  use_max_pods: bool = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.additionalArgs\\">additional_args</a></code> | <code>str</code> | Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\">aws_api_retry_attempts</a></code> | <code>typing.Union[int, float]</code> | Number of retry attempts for AWS API call (DescribeCluster). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.dnsClusterIp\\">dns_cluster_ip</a></code> | <code>str</code> | Overrides the IP address to use for DNS queries within the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.dockerConfigJson\\">docker_config_json</a></code> | <code>str</code> | The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.enableDockerBridge\\">enable_docker_bridge</a></code> | <code>bool</code> | Restores the docker default bridge network. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\">kubelet_extra_args</a></code> | <code>str</code> | Extra arguments to add to the kubelet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.useMaxPods\\">use_max_pods</a></code> | <code>bool</code> | Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance. |

---

##### \`additional_args\`<sup>Optional</sup> <a name=\\"additional_args\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.additionalArgs\\"></a>

\`\`\`python
additional_args: str
\`\`\`

- *Type:* str
- *Default:* none

Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command.

> [https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh)

---

##### \`aws_api_retry_attempts\`<sup>Optional</sup> <a name=\\"aws_api_retry_attempts\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\"></a>

\`\`\`python
aws_api_retry_attempts: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 3

Number of retry attempts for AWS API call (DescribeCluster).

---

##### \`dns_cluster_ip\`<sup>Optional</sup> <a name=\\"dns_cluster_ip\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.dnsClusterIp\\"></a>

\`\`\`python
dns_cluster_ip: str
\`\`\`

- *Type:* str
- *Default:* 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface.

Overrides the IP address to use for DNS queries within the cluster.

---

##### \`docker_config_json\`<sup>Optional</sup> <a name=\\"docker_config_json\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.dockerConfigJson\\"></a>

\`\`\`python
docker_config_json: str
\`\`\`

- *Type:* str
- *Default:* none

The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI.

---

##### \`enable_docker_bridge\`<sup>Optional</sup> <a name=\\"enable_docker_bridge\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.enableDockerBridge\\"></a>

\`\`\`python
enable_docker_bridge: bool
\`\`\`

- *Type:* bool
- *Default:* false

Restores the docker default bridge network.

---

##### \`kubelet_extra_args\`<sup>Optional</sup> <a name=\\"kubelet_extra_args\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\"></a>

\`\`\`python
kubelet_extra_args: str
\`\`\`

- *Type:* str
- *Default:* none

Extra arguments to add to the kubelet.

Useful for adding labels or taints.

---

##### \`use_max_pods\`<sup>Optional</sup> <a name=\\"use_max_pods\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.useMaxPods\\"></a>

\`\`\`python
use_max_pods: bool
\`\`\`

- *Type:* bool
- *Default:* true

Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance.

---

### CfnAddonProps <a name=\\"CfnAddonProps\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps\\"></a>

Properties for defining a \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnAddonProps(
  addon_name: str,
  cluster_name: str,
  addon_version: str = None,
  resolve_conflicts: str = None,
  service_account_role_arn: str = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.addonName\\">addon_name</a></code> | <code>str</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.addonVersion\\">addon_version</a></code> | <code>str</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.resolveConflicts\\">resolve_conflicts</a></code> | <code>str</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\">service_account_role_arn</a></code> | <code>str</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.tags\\">tags</a></code> | <code>typing.List[aws_cdk.CfnTag]</code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`addon_name\`<sup>Required</sup> <a name=\\"addon_name\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.addonName\\"></a>

\`\`\`python
addon_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addon_version\`<sup>Optional</sup> <a name=\\"addon_version\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.addonVersion\\"></a>

\`\`\`python
addon_version: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolve_conflicts\`<sup>Optional</sup> <a name=\\"resolve_conflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.resolveConflicts\\"></a>

\`\`\`python
resolve_conflicts: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`service_account_role_arn\`<sup>Optional</sup> <a name=\\"service_account_role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\"></a>

\`\`\`python
service_account_role_arn: str
\`\`\`

- *Type:* str

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.tags\\"></a>

\`\`\`python
tags: typing.List[CfnTag]
\`\`\`

- *Type:* typing.List[aws_cdk.CfnTag]

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

### CfnClusterProps <a name=\\"CfnClusterProps\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps\\"></a>

Properties for defining a \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnClusterProps(
  resources_vpc_config: typing.Union[ResourcesVpcConfigProperty, IResolvable],
  role_arn: str,
  encryption_config: typing.Union[IResolvable, typing.List[typing.Union[EncryptionConfigProperty, IResolvable]]] = None,
  kubernetes_network_config: typing.Union[KubernetesNetworkConfigProperty, IResolvable] = None,
  name: str = None,
  version: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\">resources_vpc_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.roleArn\\">role_arn</a></code> | <code>str</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.encryptionConfig\\">encryption_config</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\">kubernetes_network_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.name\\">name</a></code> | <code>str</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.version\\">version</a></code> | <code>str</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`resources_vpc_config\`<sup>Required</sup> <a name=\\"resources_vpc_config\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\"></a>

\`\`\`python
resources_vpc_config: typing.Union[ResourcesVpcConfigProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`role_arn\`<sup>Required</sup> <a name=\\"role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.roleArn\\"></a>

\`\`\`python
role_arn: str
\`\`\`

- *Type:* str

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryption_config\`<sup>Optional</sup> <a name=\\"encryption_config\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.encryptionConfig\\"></a>

\`\`\`python
encryption_config: typing.Union[IResolvable, typing.List[typing.Union[EncryptionConfigProperty, IResolvable]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetes_network_config\`<sup>Optional</sup> <a name=\\"kubernetes_network_config\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\"></a>

\`\`\`python
kubernetes_network_config: typing.Union[KubernetesNetworkConfigProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.name\\"></a>

\`\`\`python
name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

### CfnFargateProfileProps <a name=\\"CfnFargateProfileProps\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps\\"></a>

Properties for defining a \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnFargateProfileProps(
  cluster_name: str,
  pod_execution_role_arn: str,
  selectors: typing.Union[IResolvable, typing.List[typing.Union[SelectorProperty, IResolvable]]],
  fargate_profile_name: str = None,
  subnets: typing.List[str] = None,
  tags: typing.List[CfnTag] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\">pod_execution_role_arn</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.selectors\\">selectors</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\">fargate_profile_name</a></code> | <code>str</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.subnets\\">subnets</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.tags\\">tags</a></code> | <code>typing.List[aws_cdk.CfnTag]</code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`pod_execution_role_arn\`<sup>Required</sup> <a name=\\"pod_execution_role_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\"></a>

\`\`\`python
pod_execution_role_arn: str
\`\`\`

- *Type:* str

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.selectors\\"></a>

\`\`\`python
selectors: typing.Union[IResolvable, typing.List[typing.Union[SelectorProperty, IResolvable]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargate_profile_name\`<sup>Optional</sup> <a name=\\"fargate_profile_name\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`python
fargate_profile_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.subnets\\"></a>

\`\`\`python
subnets: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.tags\\"></a>

\`\`\`python
tags: typing.List[CfnTag]
\`\`\`

- *Type:* typing.List[aws_cdk.CfnTag]

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

### CfnNodegroupProps <a name=\\"CfnNodegroupProps\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps\\"></a>

Properties for defining a \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnNodegroupProps(
  cluster_name: str,
  node_role: str,
  subnets: typing.List[str],
  ami_type: str = None,
  capacity_type: str = None,
  disk_size: typing.Union[int, float] = None,
  force_update_enabled: typing.Union[bool, IResolvable] = None,
  instance_types: typing.List[str] = None,
  labels: typing.Any = None,
  launch_template: typing.Union[LaunchTemplateSpecificationProperty, IResolvable] = None,
  nodegroup_name: str = None,
  release_version: str = None,
  remote_access: typing.Union[RemoteAccessProperty, IResolvable] = None,
  scaling_config: typing.Union[ScalingConfigProperty, IResolvable] = None,
  tags: typing.Any = None,
  taints: typing.Union[IResolvable, typing.List[typing.Union[TaintProperty, IResolvable]]] = None,
  version: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.clusterName\\">cluster_name</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodeRole\\">node_role</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.subnets\\">subnets</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.amiType\\">ami_type</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.capacityType\\">capacity_type</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.diskSize\\">disk_size</a></code> | <code>typing.Union[int, float]</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\">force_update_enabled</a></code> | <code>typing.Union[bool, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.instanceTypes\\">instance_types</a></code> | <code>typing.List[str]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.labels\\">labels</a></code> | <code>typing.Any</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.launchTemplate\\">launch_template</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodegroupName\\">nodegroup_name</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.releaseVersion\\">release_version</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.remoteAccess\\">remote_access</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.scalingConfig\\">scaling_config</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a>, aws_cdk.IResolvable]</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.tags\\">tags</a></code> | <code>typing.Any</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.taints\\">taints</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a>, aws_cdk.IResolvable]]]</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.version\\">version</a></code> | <code>str</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`node_role\`<sup>Required</sup> <a name=\\"node_role\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodeRole\\"></a>

\`\`\`python
node_role: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.subnets\\"></a>

\`\`\`python
subnets: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`ami_type\`<sup>Optional</sup> <a name=\\"ami_type\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.amiType\\"></a>

\`\`\`python
ami_type: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacity_type\`<sup>Optional</sup> <a name=\\"capacity_type\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.capacityType\\"></a>

\`\`\`python
capacity_type: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`disk_size\`<sup>Optional</sup> <a name=\\"disk_size\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.diskSize\\"></a>

\`\`\`python
disk_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`force_update_enabled\`<sup>Optional</sup> <a name=\\"force_update_enabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\"></a>

\`\`\`python
force_update_enabled: typing.Union[bool, IResolvable]
\`\`\`

- *Type:* typing.Union[bool, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instance_types\`<sup>Optional</sup> <a name=\\"instance_types\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.instanceTypes\\"></a>

\`\`\`python
instance_types: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.labels\\"></a>

\`\`\`python
labels: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`launch_template\`<sup>Optional</sup> <a name=\\"launch_template\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.launchTemplate\\"></a>

\`\`\`python
launch_template: typing.Union[LaunchTemplateSpecificationProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroup_name\`<sup>Optional</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodegroupName\\"></a>

\`\`\`python
nodegroup_name: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`release_version\`<sup>Optional</sup> <a name=\\"release_version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.releaseVersion\\"></a>

\`\`\`python
release_version: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remote_access\`<sup>Optional</sup> <a name=\\"remote_access\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.remoteAccess\\"></a>

\`\`\`python
remote_access: typing.Union[RemoteAccessProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scaling_config\`<sup>Optional</sup> <a name=\\"scaling_config\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.scalingConfig\\"></a>

\`\`\`python
scaling_config: typing.Union[ScalingConfigProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a>, aws_cdk.IResolvable]

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.tags\\"></a>

\`\`\`python
tags: typing.Any
\`\`\`

- *Type:* typing.Any

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.taints\\"></a>

\`\`\`python
taints: typing.Union[IResolvable, typing.List[typing.Union[TaintProperty, IResolvable]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a>, aws_cdk.IResolvable]]]

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

### ClusterAttributes <a name=\\"ClusterAttributes\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes\\"></a>

Attributes for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.ClusterAttributes(
  cluster_name: str,
  cluster_certificate_authority_data: str = None,
  cluster_encryption_config_key_arn: str = None,
  cluster_endpoint: str = None,
  cluster_security_group_id: str = None,
  kubectl_environment: typing.Mapping[str] = None,
  kubectl_layer: ILayerVersion = None,
  kubectl_memory: Size = None,
  kubectl_private_subnet_ids: typing.List[str] = None,
  kubectl_role_arn: str = None,
  kubectl_security_group_id: str = None,
  open_id_connect_provider: IOpenIdConnectProvider = None,
  prune: bool = None,
  security_group_ids: typing.List[str] = None,
  vpc: IVpc = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterName\\">cluster_name</a></code> | <code>str</code> | The physical name of the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\">cluster_certificate_authority_data</a></code> | <code>str</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\">cluster_encryption_config_key_arn</a></code> | <code>str</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEndpoint\\">cluster_endpoint</a></code> | <code>str</code> | The API Server endpoint URL. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\">cluster_security_group_id</a></code> | <code>str</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlEnvironment\\">kubectl_environment</a></code> | <code>typing.Mapping[str]</code> | Environment variables to use when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlLayer\\">kubectl_layer</a></code> | <code>aws_cdk.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlMemory\\">kubectl_memory</a></code> | <code>aws_cdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\">kubectl_private_subnet_ids</a></code> | <code>typing.List[str]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlRoleArn\\">kubectl_role_arn</a></code> | <code>str</code> | An IAM role with cluster administrator and \\"system:masters\\" permissions. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\">kubectl_security_group_id</a></code> | <code>str</code> | A security group to use for \`kubectl\` execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.openIdConnectProvider\\">open_id_connect_provider</a></code> | <code>aws_cdk.aws_iam.IOpenIdConnectProvider</code> | An Open ID Connect provider for this cluster that can be used to configure service accounts. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.prune\\">prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.securityGroupIds\\">security_group_ids</a></code> | <code>typing.List[str]</code> | Additional security groups associated with this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

The physical name of the Cluster.

---

##### \`cluster_certificate_authority_data\`<sup>Optional</sup> <a name=\\"cluster_certificate_authority_data\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\"></a>

\`\`\`python
cluster_certificate_authority_data: str
\`\`\`

- *Type:* str
- *Default:* if not specified \`cluster.clusterCertificateAuthorityData\` will throw an error

The certificate-authority-data for your cluster.

---

##### \`cluster_encryption_config_key_arn\`<sup>Optional</sup> <a name=\\"cluster_encryption_config_key_arn\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`python
cluster_encryption_config_key_arn: str
\`\`\`

- *Type:* str
- *Default:* if not specified \`cluster.clusterEncryptionConfigKeyArn\` will throw an error

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`cluster_endpoint\`<sup>Optional</sup> <a name=\\"cluster_endpoint\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEndpoint\\"></a>

\`\`\`python
cluster_endpoint: str
\`\`\`

- *Type:* str
- *Default:* if not specified \`cluster.clusterEndpoint\` will throw an error.

The API Server endpoint URL.

---

##### \`cluster_security_group_id\`<sup>Optional</sup> <a name=\\"cluster_security_group_id\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\"></a>

\`\`\`python
cluster_security_group_id: str
\`\`\`

- *Type:* str
- *Default:* if not specified \`cluster.clusterSecurityGroupId\` will throw an error

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlEnvironment\\"></a>

\`\`\`python
kubectl_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* no additional variables

Environment variables to use when running \`kubectl\` against this cluster.

---

##### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlLayer\\"></a>

\`\`\`python
kubectl_layer: ILayerVersion
\`\`\`

- *Type:* aws_cdk.aws_lambda.ILayerVersion
- *Default:* a layer bundled with this module.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

This layer is used by the kubectl handler to apply manifests and install helm charts.  The handler expects the layer to include the following executables:  \`\`\` helm/helm kubectl/kubectl awscli/aws \`\`\`

---

##### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlMemory\\"></a>

\`\`\`python
kubectl_memory: Size
\`\`\`

- *Type:* aws_cdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`kubectl_private_subnet_ids\`<sup>Optional</sup> <a name=\\"kubectl_private_subnet_ids\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\"></a>

\`\`\`python
kubectl_private_subnet_ids: typing.List[str]
\`\`\`

- *Type:* typing.List[str]
- *Default:* k8s endpoint is expected to be accessible publicly

Subnets to host the \`kubectl\` compute resources.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`kubectl_role_arn\`<sup>Optional</sup> <a name=\\"kubectl_role_arn\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlRoleArn\\"></a>

\`\`\`python
kubectl_role_arn: str
\`\`\`

- *Type:* str
- *Default:* if not specified, it not be possible to issue \`kubectl\` commands against an imported cluster.

An IAM role with cluster administrator and \\"system:masters\\" permissions.

---

##### \`kubectl_security_group_id\`<sup>Optional</sup> <a name=\\"kubectl_security_group_id\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\"></a>

\`\`\`python
kubectl_security_group_id: str
\`\`\`

- *Type:* str
- *Default:* k8s endpoint is expected to be accessible publicly

A security group to use for \`kubectl\` execution.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`open_id_connect_provider\`<sup>Optional</sup> <a name=\\"open_id_connect_provider\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.openIdConnectProvider\\"></a>

\`\`\`python
open_id_connect_provider: IOpenIdConnectProvider
\`\`\`

- *Type:* aws_cdk.aws_iam.IOpenIdConnectProvider
- *Default:* if not specified \`cluster.openIdConnectProvider\` and \`cluster.addServiceAccount\` will throw an error.

An Open ID Connect provider for this cluster that can be used to configure service accounts.

You can either import an existing provider using \`iam.OpenIdConnectProvider.fromProviderArn\`, or create a new provider using \`new eks.OpenIdConnectProvider\`

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.prune\\"></a>

\`\`\`python
prune: bool
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`security_group_ids\`<sup>Optional</sup> <a name=\\"security_group_ids\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.securityGroupIds\\"></a>

\`\`\`python
security_group_ids: typing.List[str]
\`\`\`

- *Type:* typing.List[str]
- *Default:* if not specified, no additional security groups will be considered in \`cluster.connections\`.

Additional security groups associated with this cluster.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* if not specified \`cluster.vpc\` will throw an error

The VPC in which this Cluster was created.

---

### ClusterOptions <a name=\\"ClusterOptions\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions\\"></a>

Options for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.ClusterOptions(
  version: KubernetesVersion,
  cluster_name: str = None,
  output_cluster_name: bool = None,
  output_config_command: bool = None,
  role: IRole = None,
  security_group: ISecurityGroup = None,
  vpc: IVpc = None,
  vpc_subnets: typing.List[SubnetSelection] = None,
  cluster_handler_environment: typing.Mapping[str] = None,
  core_dns_compute_type: CoreDnsComputeType = None,
  endpoint_access: EndpointAccess = None,
  kubectl_environment: typing.Mapping[str] = None,
  kubectl_layer: ILayerVersion = None,
  kubectl_memory: Size = None,
  masters_role: IRole = None,
  output_masters_role_arn: bool = None,
  place_cluster_handler_in_vpc: bool = None,
  prune: bool = None,
  secrets_encryption_key: IKey = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.clusterName\\">cluster_name</a></code> | <code>str</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputClusterName\\">output_cluster_name</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputConfigCommand\\">output_config_command</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.securityGroup\\">security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.vpcSubnets\\">vpc_subnets</a></code> | <code>typing.List[aws_cdk.aws_ec2.SubnetSelection]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\">cluster_handler_environment</a></code> | <code>typing.Mapping[str]</code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.coreDnsComputeType\\">core_dns_compute_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a></code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.endpointAccess\\">endpoint_access</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlEnvironment\\">kubectl_environment</a></code> | <code>typing.Mapping[str]</code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlLayer\\">kubectl_layer</a></code> | <code>aws_cdk.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlMemory\\">kubectl_memory</a></code> | <code>aws_cdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.mastersRole\\">masters_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputMastersRoleArn\\">output_masters_role_arn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\">place_cluster_handler_in_vpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.prune\\">prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.secretsEncryptionKey\\">secrets_encryption_key</a></code> | <code>aws_cdk.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.version\\"></a>

\`\`\`python
version: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`cluster_name\`<sup>Optional</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`output_cluster_name\`<sup>Optional</sup> <a name=\\"output_cluster_name\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputClusterName\\"></a>

\`\`\`python
output_cluster_name: bool
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`output_config_command\`<sup>Optional</sup> <a name=\\"output_config_command\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`python
output_config_command: bool
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.role\\"></a>

\`\`\`python
role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`security_group\`<sup>Optional</sup> <a name=\\"security_group\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.securityGroup\\"></a>

\`\`\`python
security_group: ISecurityGroup
\`\`\`

- *Type:* aws_cdk.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpc_subnets\`<sup>Optional</sup> <a name=\\"vpc_subnets\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.vpcSubnets\\"></a>

\`\`\`python
vpc_subnets: typing.List[SubnetSelection]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.SubnetSelection]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`cluster_handler_environment\`<sup>Optional</sup> <a name=\\"cluster_handler_environment\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\"></a>

\`\`\`python
cluster_handler_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`core_dns_compute_type\`<sup>Optional</sup> <a name=\\"core_dns_compute_type\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.coreDnsComputeType\\"></a>

\`\`\`python
core_dns_compute_type: CoreDnsComputeType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a>
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpoint_access\`<sup>Optional</sup> <a name=\\"endpoint_access\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.endpointAccess\\"></a>

\`\`\`python
endpoint_access: EndpointAccess
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlEnvironment\\"></a>

\`\`\`python
kubectl_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlLayer\\"></a>

\`\`\`python
kubectl_layer: ILayerVersion
\`\`\`

- *Type:* aws_cdk.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. layer = lambda_.LayerVersion(self, \\"kubectl-layer\\",     code=lambda_.Code.from_asset(f\\"{__dirname}/layer.zip\\") )# compatible_runtimes: [lambda.Runtime.PROVIDED] \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlMemory\\"></a>

\`\`\`python
kubectl_memory: Size
\`\`\`

- *Type:* aws_cdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`masters_role\`<sup>Optional</sup> <a name=\\"masters_role\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.mastersRole\\"></a>

\`\`\`python
masters_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`output_masters_role_arn\`<sup>Optional</sup> <a name=\\"output_masters_role_arn\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputMastersRoleArn\\"></a>

\`\`\`python
output_masters_role_arn: bool
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`place_cluster_handler_in_vpc\`<sup>Optional</sup> <a name=\\"place_cluster_handler_in_vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\"></a>

\`\`\`python
place_cluster_handler_in_vpc: bool
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.prune\\"></a>

\`\`\`python
prune: bool
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secrets_encryption_key\`<sup>Optional</sup> <a name=\\"secrets_encryption_key\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.secretsEncryptionKey\\"></a>

\`\`\`python
secrets_encryption_key: IKey
\`\`\`

- *Type:* aws_cdk.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

### ClusterProps <a name=\\"ClusterProps\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps\\"></a>

Common configuration props for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.ClusterProps(
  version: KubernetesVersion,
  cluster_name: str = None,
  output_cluster_name: bool = None,
  output_config_command: bool = None,
  role: IRole = None,
  security_group: ISecurityGroup = None,
  vpc: IVpc = None,
  vpc_subnets: typing.List[SubnetSelection] = None,
  cluster_handler_environment: typing.Mapping[str] = None,
  core_dns_compute_type: CoreDnsComputeType = None,
  endpoint_access: EndpointAccess = None,
  kubectl_environment: typing.Mapping[str] = None,
  kubectl_layer: ILayerVersion = None,
  kubectl_memory: Size = None,
  masters_role: IRole = None,
  output_masters_role_arn: bool = None,
  place_cluster_handler_in_vpc: bool = None,
  prune: bool = None,
  secrets_encryption_key: IKey = None,
  default_capacity: typing.Union[int, float] = None,
  default_capacity_instance: InstanceType = None,
  default_capacity_type: DefaultCapacityType = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.clusterName\\">cluster_name</a></code> | <code>str</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputClusterName\\">output_cluster_name</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputConfigCommand\\">output_config_command</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.securityGroup\\">security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.vpcSubnets\\">vpc_subnets</a></code> | <code>typing.List[aws_cdk.aws_ec2.SubnetSelection]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\">cluster_handler_environment</a></code> | <code>typing.Mapping[str]</code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.coreDnsComputeType\\">core_dns_compute_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a></code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.endpointAccess\\">endpoint_access</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlEnvironment\\">kubectl_environment</a></code> | <code>typing.Mapping[str]</code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlLayer\\">kubectl_layer</a></code> | <code>aws_cdk.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlMemory\\">kubectl_memory</a></code> | <code>aws_cdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.mastersRole\\">masters_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputMastersRoleArn\\">output_masters_role_arn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\">place_cluster_handler_in_vpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.prune\\">prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.secretsEncryptionKey\\">secrets_encryption_key</a></code> | <code>aws_cdk.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacity\\">default_capacity</a></code> | <code>typing.Union[int, float]</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityInstance\\">default_capacity_instance</a></code> | <code>aws_cdk.aws_ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityType\\">default_capacity_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType\\">DefaultCapacityType</a></code> | The default capacity type for the cluster. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.version\\"></a>

\`\`\`python
version: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`cluster_name\`<sup>Optional</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`output_cluster_name\`<sup>Optional</sup> <a name=\\"output_cluster_name\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputClusterName\\"></a>

\`\`\`python
output_cluster_name: bool
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`output_config_command\`<sup>Optional</sup> <a name=\\"output_config_command\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputConfigCommand\\"></a>

\`\`\`python
output_config_command: bool
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.role\\"></a>

\`\`\`python
role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`security_group\`<sup>Optional</sup> <a name=\\"security_group\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.securityGroup\\"></a>

\`\`\`python
security_group: ISecurityGroup
\`\`\`

- *Type:* aws_cdk.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpc_subnets\`<sup>Optional</sup> <a name=\\"vpc_subnets\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.vpcSubnets\\"></a>

\`\`\`python
vpc_subnets: typing.List[SubnetSelection]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.SubnetSelection]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`cluster_handler_environment\`<sup>Optional</sup> <a name=\\"cluster_handler_environment\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`python
cluster_handler_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`core_dns_compute_type\`<sup>Optional</sup> <a name=\\"core_dns_compute_type\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`python
core_dns_compute_type: CoreDnsComputeType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a>
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpoint_access\`<sup>Optional</sup> <a name=\\"endpoint_access\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.endpointAccess\\"></a>

\`\`\`python
endpoint_access: EndpointAccess
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`python
kubectl_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlLayer\\"></a>

\`\`\`python
kubectl_layer: ILayerVersion
\`\`\`

- *Type:* aws_cdk.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. layer = lambda_.LayerVersion(self, \\"kubectl-layer\\",     code=lambda_.Code.from_asset(f\\"{__dirname}/layer.zip\\") )# compatible_runtimes: [lambda.Runtime.PROVIDED] \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlMemory\\"></a>

\`\`\`python
kubectl_memory: Size
\`\`\`

- *Type:* aws_cdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`masters_role\`<sup>Optional</sup> <a name=\\"masters_role\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.mastersRole\\"></a>

\`\`\`python
masters_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`output_masters_role_arn\`<sup>Optional</sup> <a name=\\"output_masters_role_arn\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`python
output_masters_role_arn: bool
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`place_cluster_handler_in_vpc\`<sup>Optional</sup> <a name=\\"place_cluster_handler_in_vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`python
place_cluster_handler_in_vpc: bool
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.prune\\"></a>

\`\`\`python
prune: bool
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secrets_encryption_key\`<sup>Optional</sup> <a name=\\"secrets_encryption_key\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`python
secrets_encryption_key: IKey
\`\`\`

- *Type:* aws_cdk.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`default_capacity\`<sup>Optional</sup> <a name=\\"default_capacity\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacity\\"></a>

\`\`\`python
default_capacity: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`default_capacity_instance\`<sup>Optional</sup> <a name=\\"default_capacity_instance\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityInstance\\"></a>

\`\`\`python
default_capacity_instance: InstanceType
\`\`\`

- *Type:* aws_cdk.aws_ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`default_capacity_type\`<sup>Optional</sup> <a name=\\"default_capacity_type\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityType\\"></a>

\`\`\`python
default_capacity_type: DefaultCapacityType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType\\">DefaultCapacityType</a>
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

### CommonClusterOptions <a name=\\"CommonClusterOptions\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions\\"></a>

Options for configuring an EKS cluster.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CommonClusterOptions(
  version: KubernetesVersion,
  cluster_name: str = None,
  output_cluster_name: bool = None,
  output_config_command: bool = None,
  role: IRole = None,
  security_group: ISecurityGroup = None,
  vpc: IVpc = None,
  vpc_subnets: typing.List[SubnetSelection] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.clusterName\\">cluster_name</a></code> | <code>str</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputClusterName\\">output_cluster_name</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputConfigCommand\\">output_config_command</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.securityGroup\\">security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpcSubnets\\">vpc_subnets</a></code> | <code>typing.List[aws_cdk.aws_ec2.SubnetSelection]</code> | Where to place EKS Control Plane ENIs. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.version\\"></a>

\`\`\`python
version: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`cluster_name\`<sup>Optional</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`output_cluster_name\`<sup>Optional</sup> <a name=\\"output_cluster_name\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputClusterName\\"></a>

\`\`\`python
output_cluster_name: bool
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`output_config_command\`<sup>Optional</sup> <a name=\\"output_config_command\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`python
output_config_command: bool
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.role\\"></a>

\`\`\`python
role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`security_group\`<sup>Optional</sup> <a name=\\"security_group\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.securityGroup\\"></a>

\`\`\`python
security_group: ISecurityGroup
\`\`\`

- *Type:* aws_cdk.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpc_subnets\`<sup>Optional</sup> <a name=\\"vpc_subnets\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpcSubnets\\"></a>

\`\`\`python
vpc_subnets: typing.List[SubnetSelection]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.SubnetSelection]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

### EksOptimizedImageProps <a name=\\"EksOptimizedImageProps\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps\\"></a>

Properties for EksOptimizedImage.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.EksOptimizedImageProps(
  cpu_arch: CpuArch = None,
  kubernetes_version: str = None,
  node_type: NodeType = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.cpuArch\\">cpu_arch</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch\\">CpuArch</a></code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\">kubernetes_version</a></code> | <code>str</code> | The Kubernetes version to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.nodeType\\">node_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType\\">NodeType</a></code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`cpu_arch\`<sup>Optional</sup> <a name=\\"cpu_arch\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.cpuArch\\"></a>

\`\`\`python
cpu_arch: CpuArch
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CpuArch\\">CpuArch</a>
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`kubernetes_version\`<sup>Optional</sup> <a name=\\"kubernetes_version\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\"></a>

\`\`\`python
kubernetes_version: str
\`\`\`

- *Type:* str
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`node_type\`<sup>Optional</sup> <a name=\\"node_type\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.nodeType\\"></a>

\`\`\`python
node_type: NodeType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodeType\\">NodeType</a>
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

### EncryptionConfigProperty <a name=\\"EncryptionConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnCluster.EncryptionConfigProperty(
  provider: typing.Union[ProviderProperty, IResolvable] = None,
  resources: typing.List[str] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\">provider</a></code> | <code>typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty\\">ProviderProperty</a>, aws_cdk.IResolvable]</code> | \`CfnCluster.EncryptionConfigProperty.Provider\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\">resources</a></code> | <code>typing.List[str]</code> | \`CfnCluster.EncryptionConfigProperty.Resources\`. |

---

##### \`provider\`<sup>Optional</sup> <a name=\\"provider\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\"></a>

\`\`\`python
provider: typing.Union[ProviderProperty, IResolvable]
\`\`\`

- *Type:* typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty\\">ProviderProperty</a>, aws_cdk.IResolvable]

\`CfnCluster.EncryptionConfigProperty.Provider\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider)

---

##### \`resources\`<sup>Optional</sup> <a name=\\"resources\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\"></a>

\`\`\`python
resources: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`CfnCluster.EncryptionConfigProperty.Resources\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources)

---

### FargateClusterProps <a name=\\"FargateClusterProps\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps\\"></a>

Configuration props for EKS Fargate.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.FargateClusterProps(
  version: KubernetesVersion,
  cluster_name: str = None,
  output_cluster_name: bool = None,
  output_config_command: bool = None,
  role: IRole = None,
  security_group: ISecurityGroup = None,
  vpc: IVpc = None,
  vpc_subnets: typing.List[SubnetSelection] = None,
  cluster_handler_environment: typing.Mapping[str] = None,
  core_dns_compute_type: CoreDnsComputeType = None,
  endpoint_access: EndpointAccess = None,
  kubectl_environment: typing.Mapping[str] = None,
  kubectl_layer: ILayerVersion = None,
  kubectl_memory: Size = None,
  masters_role: IRole = None,
  output_masters_role_arn: bool = None,
  place_cluster_handler_in_vpc: bool = None,
  prune: bool = None,
  secrets_encryption_key: IKey = None,
  default_profile: FargateProfileOptions = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterName\\">cluster_name</a></code> | <code>str</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputClusterName\\">output_cluster_name</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputConfigCommand\\">output_config_command</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.role\\">role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.securityGroup\\">security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.vpcSubnets\\">vpc_subnets</a></code> | <code>typing.List[aws_cdk.aws_ec2.SubnetSelection]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\">cluster_handler_environment</a></code> | <code>typing.Mapping[str]</code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.coreDnsComputeType\\">core_dns_compute_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a></code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.endpointAccess\\">endpoint_access</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlEnvironment\\">kubectl_environment</a></code> | <code>typing.Mapping[str]</code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlLayer\\">kubectl_layer</a></code> | <code>aws_cdk.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlMemory\\">kubectl_memory</a></code> | <code>aws_cdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.mastersRole\\">masters_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\">output_masters_role_arn</a></code> | <code>bool</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\">place_cluster_handler_in_vpc</a></code> | <code>bool</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.prune\\">prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\">secrets_encryption_key</a></code> | <code>aws_cdk.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.defaultProfile\\">default_profile</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions\\">FargateProfileOptions</a></code> | Fargate Profile to create along with the cluster. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.version\\"></a>

\`\`\`python
version: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`cluster_name\`<sup>Optional</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`output_cluster_name\`<sup>Optional</sup> <a name=\\"output_cluster_name\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputClusterName\\"></a>

\`\`\`python
output_cluster_name: bool
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`output_config_command\`<sup>Optional</sup> <a name=\\"output_config_command\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputConfigCommand\\"></a>

\`\`\`python
output_config_command: bool
\`\`\`

- *Type:* bool
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.role\\"></a>

\`\`\`python
role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`security_group\`<sup>Optional</sup> <a name=\\"security_group\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.securityGroup\\"></a>

\`\`\`python
security_group: ISecurityGroup
\`\`\`

- *Type:* aws_cdk.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpc_subnets\`<sup>Optional</sup> <a name=\\"vpc_subnets\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.vpcSubnets\\"></a>

\`\`\`python
vpc_subnets: typing.List[SubnetSelection]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.SubnetSelection]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`cluster_handler_environment\`<sup>Optional</sup> <a name=\\"cluster_handler_environment\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`python
cluster_handler_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`core_dns_compute_type\`<sup>Optional</sup> <a name=\\"core_dns_compute_type\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`python
core_dns_compute_type: CoreDnsComputeType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a>
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpoint_access\`<sup>Optional</sup> <a name=\\"endpoint_access\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.endpointAccess\\"></a>

\`\`\`python
endpoint_access: EndpointAccess
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`python
kubectl_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlLayer\\"></a>

\`\`\`python
kubectl_layer: ILayerVersion
\`\`\`

- *Type:* aws_cdk.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`python # Example automatically generated from non-compiling source. May contain errors. layer = lambda_.LayerVersion(self, \\"kubectl-layer\\",     code=lambda_.Code.from_asset(f\\"{__dirname}/layer.zip\\") )# compatible_runtimes: [lambda.Runtime.PROVIDED] \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlMemory\\"></a>

\`\`\`python
kubectl_memory: Size
\`\`\`

- *Type:* aws_cdk.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`masters_role\`<sup>Optional</sup> <a name=\\"masters_role\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.mastersRole\\"></a>

\`\`\`python
masters_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`output_masters_role_arn\`<sup>Optional</sup> <a name=\\"output_masters_role_arn\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`python
output_masters_role_arn: bool
\`\`\`

- *Type:* bool
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`place_cluster_handler_in_vpc\`<sup>Optional</sup> <a name=\\"place_cluster_handler_in_vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`python
place_cluster_handler_in_vpc: bool
\`\`\`

- *Type:* bool
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.prune\\"></a>

\`\`\`python
prune: bool
\`\`\`

- *Type:* bool
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secrets_encryption_key\`<sup>Optional</sup> <a name=\\"secrets_encryption_key\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`python
secrets_encryption_key: IKey
\`\`\`

- *Type:* aws_cdk.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`default_profile\`<sup>Optional</sup> <a name=\\"default_profile\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.defaultProfile\\"></a>

\`\`\`python
default_profile: FargateProfileOptions
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions\\">FargateProfileOptions</a>
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---

### FargateProfileOptions <a name=\\"FargateProfileOptions\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions\\"></a>

Options for defining EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.FargateProfileOptions(
  selectors: typing.List[Selector],
  fargate_profile_name: str = None,
  pod_execution_role: IRole = None,
  subnet_selection: SubnetSelection = None,
  vpc: IVpc = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.selectors\\">selectors</a></code> | <code>typing.List[<a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.fargateProfileName\\">fargate_profile_name</a></code> | <code>str</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.podExecutionRole\\">pod_execution_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.subnetSelection\\">subnet_selection</a></code> | <code>aws_cdk.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.selectors\\"></a>

\`\`\`python
selectors: typing.List[Selector]
\`\`\`

- *Type:* typing.List[<a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargate_profile_name\`<sup>Optional</sup> <a name=\\"fargate_profile_name\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.fargateProfileName\\"></a>

\`\`\`python
fargate_profile_name: str
\`\`\`

- *Type:* str
- *Default:* generated

The name of the Fargate profile.

---

##### \`pod_execution_role\`<sup>Optional</sup> <a name=\\"pod_execution_role\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.podExecutionRole\\"></a>

\`\`\`python
pod_execution_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnet_selection\`<sup>Optional</sup> <a name=\\"subnet_selection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.subnetSelection\\"></a>

\`\`\`python
subnet_selection: SubnetSelection
\`\`\`

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

### FargateProfileProps <a name=\\"FargateProfileProps\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps\\"></a>

Configuration props for EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.FargateProfileProps(
  selectors: typing.List[Selector],
  fargate_profile_name: str = None,
  pod_execution_role: IRole = None,
  subnet_selection: SubnetSelection = None,
  vpc: IVpc = None,
  cluster: Cluster
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.selectors\\">selectors</a></code> | <code>typing.List[<a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.fargateProfileName\\">fargate_profile_name</a></code> | <code>str</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.podExecutionRole\\">pod_execution_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.subnetSelection\\">subnet_selection</a></code> | <code>aws_cdk.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a></code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.selectors\\"></a>

\`\`\`python
selectors: typing.List[Selector]
\`\`\`

- *Type:* typing.List[<a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargate_profile_name\`<sup>Optional</sup> <a name=\\"fargate_profile_name\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`python
fargate_profile_name: str
\`\`\`

- *Type:* str
- *Default:* generated

The name of the Fargate profile.

---

##### \`pod_execution_role\`<sup>Optional</sup> <a name=\\"pod_execution_role\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.podExecutionRole\\"></a>

\`\`\`python
pod_execution_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnet_selection\`<sup>Optional</sup> <a name=\\"subnet_selection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.subnetSelection\\"></a>

\`\`\`python
subnet_selection: SubnetSelection
\`\`\`

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.cluster\\"></a>

\`\`\`python
cluster: Cluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a>

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---

### HelmChartOptions <a name=\\"HelmChartOptions\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions\\"></a>

Helm Chart options.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.HelmChartOptions(
  chart: str,
  create_namespace: bool = None,
  namespace: str = None,
  release: str = None,
  repository: str = None,
  timeout: Duration = None,
  values: typing.Mapping[typing.Any] = None,
  version: str = None,
  wait: bool = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.chart\\">chart</a></code> | <code>str</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.createNamespace\\">create_namespace</a></code> | <code>bool</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.namespace\\">namespace</a></code> | <code>str</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.release\\">release</a></code> | <code>str</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.repository\\">repository</a></code> | <code>str</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.timeout\\">timeout</a></code> | <code>aws_cdk.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.values\\">values</a></code> | <code>typing.Mapping[typing.Any]</code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.version\\">version</a></code> | <code>str</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.wait\\">wait</a></code> | <code>bool</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.chart\\"></a>

\`\`\`python
chart: str
\`\`\`

- *Type:* str

The name of the chart.

---

##### \`create_namespace\`<sup>Optional</sup> <a name=\\"create_namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.createNamespace\\"></a>

\`\`\`python
create_namespace: bool
\`\`\`

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.namespace\\"></a>

\`\`\`python
namespace: str
\`\`\`

- *Type:* str
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.release\\"></a>

\`\`\`python
release: str
\`\`\`

- *Type:* str
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.repository\\"></a>

\`\`\`python
repository: str
\`\`\`

- *Type:* str
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.timeout\\"></a>

\`\`\`python
timeout: Duration
\`\`\`

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.values\\"></a>

\`\`\`python
values: typing.Mapping[typing.Any]
\`\`\`

- *Type:* typing.Mapping[typing.Any]
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.wait\\"></a>

\`\`\`python
wait: bool
\`\`\`

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

### HelmChartProps <a name=\\"HelmChartProps\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps\\"></a>

Helm Chart properties.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.HelmChartProps(
  chart: str,
  create_namespace: bool = None,
  namespace: str = None,
  release: str = None,
  repository: str = None,
  timeout: Duration = None,
  values: typing.Mapping[typing.Any] = None,
  version: str = None,
  wait: bool = None,
  cluster: ICluster
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.chart\\">chart</a></code> | <code>str</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.createNamespace\\">create_namespace</a></code> | <code>bool</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.namespace\\">namespace</a></code> | <code>str</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.release\\">release</a></code> | <code>str</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.repository\\">repository</a></code> | <code>str</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.timeout\\">timeout</a></code> | <code>aws_cdk.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.values\\">values</a></code> | <code>typing.Mapping[typing.Any]</code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.version\\">version</a></code> | <code>str</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.wait\\">wait</a></code> | <code>bool</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to apply this configuration to. |

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.chart\\"></a>

\`\`\`python
chart: str
\`\`\`

- *Type:* str

The name of the chart.

---

##### \`create_namespace\`<sup>Optional</sup> <a name=\\"create_namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.createNamespace\\"></a>

\`\`\`python
create_namespace: bool
\`\`\`

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.namespace\\"></a>

\`\`\`python
namespace: str
\`\`\`

- *Type:* str
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.release\\"></a>

\`\`\`python
release: str
\`\`\`

- *Type:* str
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.repository\\"></a>

\`\`\`python
repository: str
\`\`\`

- *Type:* str
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.timeout\\"></a>

\`\`\`python
timeout: Duration
\`\`\`

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.values\\"></a>

\`\`\`python
values: typing.Mapping[typing.Any]
\`\`\`

- *Type:* typing.Mapping[typing.Any]
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.wait\\"></a>

\`\`\`python
wait: bool
\`\`\`

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.cluster\\"></a>

\`\`\`python
cluster: ICluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### KubernetesManifestOptions <a name=\\"KubernetesManifestOptions\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions\\"></a>

Options for \`KubernetesManifest\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.KubernetesManifestOptions(
  prune: bool = None,
  skip_validation: bool = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.prune\\">prune</a></code> | <code>bool</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.skipValidation\\">skip_validation</a></code> | <code>bool</code> | A flag to signify if the manifest validation should be skipped. |

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.prune\\"></a>

\`\`\`python
prune: bool
\`\`\`

- *Type:* bool
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skip_validation\`<sup>Optional</sup> <a name=\\"skip_validation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.skipValidation\\"></a>

\`\`\`python
skip_validation: bool
\`\`\`

- *Type:* bool
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

### KubernetesManifestProps <a name=\\"KubernetesManifestProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps\\"></a>

Properties for KubernetesManifest.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.KubernetesManifestProps(
  prune: bool = None,
  skip_validation: bool = None,
  cluster: ICluster,
  manifest: typing.List[typing.Mapping[typing.Any]],
  overwrite: bool = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.prune\\">prune</a></code> | <code>bool</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.skipValidation\\">skip_validation</a></code> | <code>bool</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.manifest\\">manifest</a></code> | <code>typing.List[typing.Mapping[typing.Any]]</code> | The manifest to apply. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.overwrite\\">overwrite</a></code> | <code>bool</code> | Overwrite any existing resources. |

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.prune\\"></a>

\`\`\`python
prune: bool
\`\`\`

- *Type:* bool
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skip_validation\`<sup>Optional</sup> <a name=\\"skip_validation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.skipValidation\\"></a>

\`\`\`python
skip_validation: bool
\`\`\`

- *Type:* bool
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.cluster\\"></a>

\`\`\`python
cluster: ICluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.manifest\\"></a>

\`\`\`python
manifest: typing.List[typing.Mapping[typing.Any]]
\`\`\`

- *Type:* typing.List[typing.Mapping[typing.Any]]

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`overwrite\`<sup>Optional</sup> <a name=\\"overwrite\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.overwrite\\"></a>

\`\`\`python
overwrite: bool
\`\`\`

- *Type:* bool
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---

### KubernetesNetworkConfigProperty <a name=\\"KubernetesNetworkConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnCluster.KubernetesNetworkConfigProperty(
  service_ipv4_cidr: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\">service_ipv4_cidr</a></code> | <code>str</code> | \`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`. |

---

##### \`service_ipv4_cidr\`<sup>Optional</sup> <a name=\\"service_ipv4_cidr\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\"></a>

\`\`\`python
service_ipv4_cidr: str
\`\`\`

- *Type:* str

\`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr)

---

### KubernetesObjectValueProps <a name=\\"KubernetesObjectValueProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps\\"></a>

Properties for KubernetesObjectValue.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.KubernetesObjectValueProps(
  cluster: ICluster,
  json_path: str,
  object_name: str,
  object_type: str,
  object_namespace: str = None,
  timeout: Duration = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.jsonPath\\">json_path</a></code> | <code>str</code> | JSONPath to the specific value. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectName\\">object_name</a></code> | <code>str</code> | The name of the object to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectType\\">object_type</a></code> | <code>str</code> | The object type to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\">object_namespace</a></code> | <code>str</code> | The namespace the object belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.timeout\\">timeout</a></code> | <code>aws_cdk.Duration</code> | Timeout for waiting on a value. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.cluster\\"></a>

\`\`\`python
cluster: ICluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`json_path\`<sup>Required</sup> <a name=\\"json_path\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.jsonPath\\"></a>

\`\`\`python
json_path: str
\`\`\`

- *Type:* str

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`object_name\`<sup>Required</sup> <a name=\\"object_name\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectName\\"></a>

\`\`\`python
object_name: str
\`\`\`

- *Type:* str

The name of the object to query.

---

##### \`object_type\`<sup>Required</sup> <a name=\\"object_type\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectType\\"></a>

\`\`\`python
object_type: str
\`\`\`

- *Type:* str

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`object_namespace\`<sup>Optional</sup> <a name=\\"object_namespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\"></a>

\`\`\`python
object_namespace: str
\`\`\`

- *Type:* str
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.timeout\\"></a>

\`\`\`python
timeout: Duration
\`\`\`

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---

### KubernetesPatchProps <a name=\\"KubernetesPatchProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps\\"></a>

Properties for KubernetesPatch.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.KubernetesPatchProps(
  apply_patch: typing.Mapping[typing.Any],
  cluster: ICluster,
  resource_name: str,
  restore_patch: typing.Mapping[typing.Any],
  patch_type: PatchType = None,
  resource_namespace: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.applyPatch\\">apply_patch</a></code> | <code>typing.Mapping[typing.Any]</code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The cluster to apply the patch to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceName\\">resource_name</a></code> | <code>str</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.restorePatch\\">restore_patch</a></code> | <code>typing.Mapping[typing.Any]</code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.patchType\\">patch_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType\\">PatchType</a></code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceNamespace\\">resource_namespace</a></code> | <code>str</code> | The kubernetes API namespace. |

---

##### \`apply_patch\`<sup>Required</sup> <a name=\\"apply_patch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.applyPatch\\"></a>

\`\`\`python
apply_patch: typing.Mapping[typing.Any]
\`\`\`

- *Type:* typing.Mapping[typing.Any]

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.cluster\\"></a>

\`\`\`python
cluster: ICluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`resource_name\`<sup>Required</sup> <a name=\\"resource_name\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceName\\"></a>

\`\`\`python
resource_name: str
\`\`\`

- *Type:* str

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`restore_patch\`<sup>Required</sup> <a name=\\"restore_patch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.restorePatch\\"></a>

\`\`\`python
restore_patch: typing.Mapping[typing.Any]
\`\`\`

- *Type:* typing.Mapping[typing.Any]

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`patch_type\`<sup>Optional</sup> <a name=\\"patch_type\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.patchType\\"></a>

\`\`\`python
patch_type: PatchType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.PatchType\\">PatchType</a>
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`resource_namespace\`<sup>Optional</sup> <a name=\\"resource_namespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceNamespace\\"></a>

\`\`\`python
resource_namespace: str
\`\`\`

- *Type:* str
- *Default:* \\"default\\"

The kubernetes API namespace.

---

### LabelProperty <a name=\\"LabelProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnFargateProfile.LabelProperty(
  key: str,
  value: str
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.key\\">key</a></code> | <code>str</code> | \`CfnFargateProfile.LabelProperty.Key\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.value\\">value</a></code> | <code>str</code> | \`CfnFargateProfile.LabelProperty.Value\`. |

---

##### \`key\`<sup>Required</sup> <a name=\\"key\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.key\\"></a>

\`\`\`python
key: str
\`\`\`

- *Type:* str

\`CfnFargateProfile.LabelProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key)

---

##### \`value\`<sup>Required</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.value\\"></a>

\`\`\`python
value: str
\`\`\`

- *Type:* str

\`CfnFargateProfile.LabelProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value)

---

### LaunchTemplateSpec <a name=\\"LaunchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec\\"></a>

Launch template property specification.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.LaunchTemplateSpec(
  id: str,
  version: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.id\\">id</a></code> | <code>str</code> | The Launch template ID. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.version\\">version</a></code> | <code>str</code> | The launch template version to be used (optional). |

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.id\\"></a>

\`\`\`python
id: str
\`\`\`

- *Type:* str

The Launch template ID.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str
- *Default:* the default version of the launch template

The launch template version to be used (optional).

---

### LaunchTemplateSpecificationProperty <a name=\\"LaunchTemplateSpecificationProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty(
  id: str = None,
  name: str = None,
  version: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\">id</a></code> | <code>str</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\">name</a></code> | <code>str</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\">version</a></code> | <code>str</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`. |

---

##### \`id\`<sup>Optional</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\"></a>

\`\`\`python
id: str
\`\`\`

- *Type:* str

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\"></a>

\`\`\`python
name: str
\`\`\`

- *Type:* str

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version)

---

### NodegroupOptions <a name=\\"NodegroupOptions\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions\\"></a>

The Nodegroup Options for addNodeGroup() method.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.NodegroupOptions(
  ami_type: NodegroupAmiType = None,
  capacity_type: CapacityType = None,
  desired_size: typing.Union[int, float] = None,
  disk_size: typing.Union[int, float] = None,
  force_update: bool = None,
  instance_types: typing.List[InstanceType] = None,
  labels: typing.Mapping[str] = None,
  launch_template_spec: LaunchTemplateSpec = None,
  max_size: typing.Union[int, float] = None,
  min_size: typing.Union[int, float] = None,
  nodegroup_name: str = None,
  node_role: IRole = None,
  release_version: str = None,
  remote_access: NodegroupRemoteAccess = None,
  subnets: SubnetSelection = None,
  tags: typing.Mapping[str] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.amiType\\">ami_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a></code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.capacityType\\">capacity_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a></code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.desiredSize\\">desired_size</a></code> | <code>typing.Union[int, float]</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.diskSize\\">disk_size</a></code> | <code>typing.Union[int, float]</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.forceUpdate\\">force_update</a></code> | <code>bool</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.instanceTypes\\">instance_types</a></code> | <code>typing.List[aws_cdk.aws_ec2.InstanceType]</code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.labels\\">labels</a></code> | <code>typing.Mapping[str]</code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.launchTemplateSpec\\">launch_template_spec</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a></code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.maxSize\\">max_size</a></code> | <code>typing.Union[int, float]</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.minSize\\">min_size</a></code> | <code>typing.Union[int, float]</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.nodegroupName\\">nodegroup_name</a></code> | <code>str</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.nodeRole\\">node_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.releaseVersion\\">release_version</a></code> | <code>str</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.remoteAccess\\">remote_access</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a></code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.subnets\\">subnets</a></code> | <code>aws_cdk.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.tags\\">tags</a></code> | <code>typing.Mapping[str]</code> | The metadata to apply to the node group to assist with categorization and organization. |

---

##### \`ami_type\`<sup>Optional</sup> <a name=\\"ami_type\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.amiType\\"></a>

\`\`\`python
ami_type: NodegroupAmiType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a>
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacity_type\`<sup>Optional</sup> <a name=\\"capacity_type\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.capacityType\\"></a>

\`\`\`python
capacity_type: CapacityType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a>
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desired_size\`<sup>Optional</sup> <a name=\\"desired_size\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.desiredSize\\"></a>

\`\`\`python
desired_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`disk_size\`<sup>Optional</sup> <a name=\\"disk_size\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.diskSize\\"></a>

\`\`\`python
disk_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`force_update\`<sup>Optional</sup> <a name=\\"force_update\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.forceUpdate\\"></a>

\`\`\`python
force_update: bool
\`\`\`

- *Type:* bool
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`instance_types\`<sup>Optional</sup> <a name=\\"instance_types\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.instanceTypes\\"></a>

\`\`\`python
instance_types: typing.List[InstanceType]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.InstanceType]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.labels\\"></a>

\`\`\`python
labels: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launch_template_spec\`<sup>Optional</sup> <a name=\\"launch_template_spec\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.launchTemplateSpec\\"></a>

\`\`\`python
launch_template_spec: LaunchTemplateSpec
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a>
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`max_size\`<sup>Optional</sup> <a name=\\"max_size\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.maxSize\\"></a>

\`\`\`python
max_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`min_size\`<sup>Optional</sup> <a name=\\"min_size\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.minSize\\"></a>

\`\`\`python
min_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroup_name\`<sup>Optional</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.nodegroupName\\"></a>

\`\`\`python
nodegroup_name: str
\`\`\`

- *Type:* str
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`node_role\`<sup>Optional</sup> <a name=\\"node_role\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.nodeRole\\"></a>

\`\`\`python
node_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`release_version\`<sup>Optional</sup> <a name=\\"release_version\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.releaseVersion\\"></a>

\`\`\`python
release_version: str
\`\`\`

- *Type:* str
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remote_access\`<sup>Optional</sup> <a name=\\"remote_access\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.remoteAccess\\"></a>

\`\`\`python
remote_access: NodegroupRemoteAccess
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a>
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.subnets\\"></a>

\`\`\`python
subnets: SubnetSelection
\`\`\`

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.tags\\"></a>

\`\`\`python
tags: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

### NodegroupProps <a name=\\"NodegroupProps\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps\\"></a>

NodeGroup properties interface.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.NodegroupProps(
  ami_type: NodegroupAmiType = None,
  capacity_type: CapacityType = None,
  desired_size: typing.Union[int, float] = None,
  disk_size: typing.Union[int, float] = None,
  force_update: bool = None,
  instance_types: typing.List[InstanceType] = None,
  labels: typing.Mapping[str] = None,
  launch_template_spec: LaunchTemplateSpec = None,
  max_size: typing.Union[int, float] = None,
  min_size: typing.Union[int, float] = None,
  nodegroup_name: str = None,
  node_role: IRole = None,
  release_version: str = None,
  remote_access: NodegroupRemoteAccess = None,
  subnets: SubnetSelection = None,
  tags: typing.Mapping[str] = None,
  cluster: ICluster
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.amiType\\">ami_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a></code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.capacityType\\">capacity_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a></code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.desiredSize\\">desired_size</a></code> | <code>typing.Union[int, float]</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.diskSize\\">disk_size</a></code> | <code>typing.Union[int, float]</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.forceUpdate\\">force_update</a></code> | <code>bool</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.instanceTypes\\">instance_types</a></code> | <code>typing.List[aws_cdk.aws_ec2.InstanceType]</code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.labels\\">labels</a></code> | <code>typing.Mapping[str]</code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.launchTemplateSpec\\">launch_template_spec</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a></code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.maxSize\\">max_size</a></code> | <code>typing.Union[int, float]</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.minSize\\">min_size</a></code> | <code>typing.Union[int, float]</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.nodegroupName\\">nodegroup_name</a></code> | <code>str</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.nodeRole\\">node_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.releaseVersion\\">release_version</a></code> | <code>str</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.remoteAccess\\">remote_access</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a></code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.subnets\\">subnets</a></code> | <code>aws_cdk.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.tags\\">tags</a></code> | <code>typing.Mapping[str]</code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | Cluster resource. |

---

##### \`ami_type\`<sup>Optional</sup> <a name=\\"ami_type\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.amiType\\"></a>

\`\`\`python
ami_type: NodegroupAmiType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a>
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacity_type\`<sup>Optional</sup> <a name=\\"capacity_type\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.capacityType\\"></a>

\`\`\`python
capacity_type: CapacityType
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a>
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desired_size\`<sup>Optional</sup> <a name=\\"desired_size\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.desiredSize\\"></a>

\`\`\`python
desired_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`disk_size\`<sup>Optional</sup> <a name=\\"disk_size\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.diskSize\\"></a>

\`\`\`python
disk_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`force_update\`<sup>Optional</sup> <a name=\\"force_update\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.forceUpdate\\"></a>

\`\`\`python
force_update: bool
\`\`\`

- *Type:* bool
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`instance_types\`<sup>Optional</sup> <a name=\\"instance_types\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.instanceTypes\\"></a>

\`\`\`python
instance_types: typing.List[InstanceType]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.InstanceType]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.labels\\"></a>

\`\`\`python
labels: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launch_template_spec\`<sup>Optional</sup> <a name=\\"launch_template_spec\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.launchTemplateSpec\\"></a>

\`\`\`python
launch_template_spec: LaunchTemplateSpec
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a>
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`max_size\`<sup>Optional</sup> <a name=\\"max_size\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.maxSize\\"></a>

\`\`\`python
max_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`min_size\`<sup>Optional</sup> <a name=\\"min_size\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.minSize\\"></a>

\`\`\`python
min_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroup_name\`<sup>Optional</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.nodegroupName\\"></a>

\`\`\`python
nodegroup_name: str
\`\`\`

- *Type:* str
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`node_role\`<sup>Optional</sup> <a name=\\"node_role\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.nodeRole\\"></a>

\`\`\`python
node_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`release_version\`<sup>Optional</sup> <a name=\\"release_version\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.releaseVersion\\"></a>

\`\`\`python
release_version: str
\`\`\`

- *Type:* str
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remote_access\`<sup>Optional</sup> <a name=\\"remote_access\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.remoteAccess\\"></a>

\`\`\`python
remote_access: NodegroupRemoteAccess
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a>
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.subnets\\"></a>

\`\`\`python
subnets: SubnetSelection
\`\`\`

- *Type:* aws_cdk.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.tags\\"></a>

\`\`\`python
tags: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.cluster\\"></a>

\`\`\`python
cluster: ICluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

Cluster resource.

---

### NodegroupRemoteAccess <a name=\\"NodegroupRemoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\"></a>

The remote access (SSH) configuration to use with your node group.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.NodegroupRemoteAccess(
  ssh_key_name: str,
  source_security_groups: typing.List[ISecurityGroup] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\">ssh_key_name</a></code> | <code>str</code> | The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\">source_security_groups</a></code> | <code>typing.List[aws_cdk.aws_ec2.ISecurityGroup]</code> | The security groups that are allowed SSH access (port 22) to the worker nodes. |

---

##### \`ssh_key_name\`<sup>Required</sup> <a name=\\"ssh_key_name\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\"></a>

\`\`\`python
ssh_key_name: str
\`\`\`

- *Type:* str

The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group.

---

##### \`source_security_groups\`<sup>Optional</sup> <a name=\\"source_security_groups\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\"></a>

\`\`\`python
source_security_groups: typing.List[ISecurityGroup]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.ISecurityGroup]
- *Default:* port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

The security groups that are allowed SSH access (port 22) to the worker nodes.

If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0).

---

### OpenIdConnectProviderProps <a name=\\"OpenIdConnectProviderProps\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps\\"></a>

Initialization properties for \`OpenIdConnectProvider\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.OpenIdConnectProviderProps(
  url: str
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.property.url\\">url</a></code> | <code>str</code> | The URL of the identity provider. |

---

##### \`url\`<sup>Required</sup> <a name=\\"url\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.property.url\\"></a>

\`\`\`python
url: str
\`\`\`

- *Type:* str

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---

### ProviderProperty <a name=\\"ProviderProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnCluster.ProviderProperty(
  key_arn: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\">key_arn</a></code> | <code>str</code> | \`CfnCluster.ProviderProperty.KeyArn\`. |

---

##### \`key_arn\`<sup>Optional</sup> <a name=\\"key_arn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\"></a>

\`\`\`python
key_arn: str
\`\`\`

- *Type:* str

\`CfnCluster.ProviderProperty.KeyArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn)

---

### RemoteAccessProperty <a name=\\"RemoteAccessProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnNodegroup.RemoteAccessProperty(
  ec2_ssh_key: str,
  source_security_groups: typing.List[str] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\">ec2_ssh_key</a></code> | <code>str</code> | \`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\">source_security_groups</a></code> | <code>typing.List[str]</code> | \`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`. |

---

##### \`ec2_ssh_key\`<sup>Required</sup> <a name=\\"ec2_ssh_key\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\"></a>

\`\`\`python
ec2_ssh_key: str
\`\`\`

- *Type:* str

\`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey)

---

##### \`source_security_groups\`<sup>Optional</sup> <a name=\\"source_security_groups\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\"></a>

\`\`\`python
source_security_groups: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups)

---

### ResourcesVpcConfigProperty <a name=\\"ResourcesVpcConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnCluster.ResourcesVpcConfigProperty(
  subnet_ids: typing.List[str],
  security_group_ids: typing.List[str] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\">subnet_ids</a></code> | <code>typing.List[str]</code> | \`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\">security_group_ids</a></code> | <code>typing.List[str]</code> | \`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`. |

---

##### \`subnet_ids\`<sup>Required</sup> <a name=\\"subnet_ids\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\"></a>

\`\`\`python
subnet_ids: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids)

---

##### \`security_group_ids\`<sup>Optional</sup> <a name=\\"security_group_ids\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\"></a>

\`\`\`python
security_group_ids: typing.List[str]
\`\`\`

- *Type:* typing.List[str]

\`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids)

---

### ScalingConfigProperty <a name=\\"ScalingConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnNodegroup.ScalingConfigProperty(
  desired_size: typing.Union[int, float] = None,
  max_size: typing.Union[int, float] = None,
  min_size: typing.Union[int, float] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\">desired_size</a></code> | <code>typing.Union[int, float]</code> | \`CfnNodegroup.ScalingConfigProperty.DesiredSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\">max_size</a></code> | <code>typing.Union[int, float]</code> | \`CfnNodegroup.ScalingConfigProperty.MaxSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\">min_size</a></code> | <code>typing.Union[int, float]</code> | \`CfnNodegroup.ScalingConfigProperty.MinSize\`. |

---

##### \`desired_size\`<sup>Optional</sup> <a name=\\"desired_size\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\"></a>

\`\`\`python
desired_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]

\`CfnNodegroup.ScalingConfigProperty.DesiredSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize)

---

##### \`max_size\`<sup>Optional</sup> <a name=\\"max_size\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\"></a>

\`\`\`python
max_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]

\`CfnNodegroup.ScalingConfigProperty.MaxSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize)

---

##### \`min_size\`<sup>Optional</sup> <a name=\\"min_size\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\"></a>

\`\`\`python
min_size: typing.Union[int, float]
\`\`\`

- *Type:* typing.Union[int, float]

\`CfnNodegroup.ScalingConfigProperty.MinSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize)

---

### Selector <a name=\\"Selector\\" id=\\"aws-cdk-lib.aws_eks.Selector\\"></a>

Fargate profile selector.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.Selector.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.Selector(
  namespace: str,
  labels: typing.Mapping[str] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Selector.property.namespace\\">namespace</a></code> | <code>str</code> | The Kubernetes namespace that the selector should match. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Selector.property.labels\\">labels</a></code> | <code>typing.Mapping[str]</code> | The Kubernetes labels that the selector should match. |

---

##### \`namespace\`<sup>Required</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.Selector.property.namespace\\"></a>

\`\`\`python
namespace: str
\`\`\`

- *Type:* str

The Kubernetes namespace that the selector should match.

You must specify a namespace for a selector. The selector only matches pods that are created in this namespace, but you can create multiple selectors to target multiple namespaces.

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.Selector.property.labels\\"></a>

\`\`\`python
labels: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]
- *Default:* all pods within the namespace will be selected.

The Kubernetes labels that the selector should match.

A pod must contain all of the labels that are specified in the selector for it to be considered a match.

---

### SelectorProperty <a name=\\"SelectorProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnFargateProfile.SelectorProperty(
  namespace: str,
  labels: typing.Union[IResolvable, typing.List[typing.Union[LabelProperty, IResolvable]]] = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\">namespace</a></code> | <code>str</code> | \`CfnFargateProfile.SelectorProperty.Namespace\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\">labels</a></code> | <code>typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty\\">LabelProperty</a>, aws_cdk.IResolvable]]]</code> | \`CfnFargateProfile.SelectorProperty.Labels\`. |

---

##### \`namespace\`<sup>Required</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\"></a>

\`\`\`python
namespace: str
\`\`\`

- *Type:* str

\`CfnFargateProfile.SelectorProperty.Namespace\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\"></a>

\`\`\`python
labels: typing.Union[IResolvable, typing.List[typing.Union[LabelProperty, IResolvable]]]
\`\`\`

- *Type:* typing.Union[aws_cdk.IResolvable, typing.List[typing.Union[<a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty\\">LabelProperty</a>, aws_cdk.IResolvable]]]

\`CfnFargateProfile.SelectorProperty.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels)

---

### ServiceAccountOptions <a name=\\"ServiceAccountOptions\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions\\"></a>

Options for \`ServiceAccount\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.ServiceAccountOptions(
  name: str = None,
  namespace: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions.property.name\\">name</a></code> | <code>str</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions.property.namespace\\">namespace</a></code> | <code>str</code> | The namespace of the service account. |

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.property.name\\"></a>

\`\`\`python
name: str
\`\`\`

- *Type:* str
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.property.namespace\\"></a>

\`\`\`python
namespace: str
\`\`\`

- *Type:* str
- *Default:* \\"default\\"

The namespace of the service account.

---

### ServiceAccountProps <a name=\\"ServiceAccountProps\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps\\"></a>

Properties for defining service accounts.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.ServiceAccountProps(
  name: str = None,
  namespace: str = None,
  cluster: ICluster
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.name\\">name</a></code> | <code>str</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.namespace\\">namespace</a></code> | <code>str</code> | The namespace of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The cluster to apply the patch to. |

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.name\\"></a>

\`\`\`python
name: str
\`\`\`

- *Type:* str
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.namespace\\"></a>

\`\`\`python
namespace: str
\`\`\`

- *Type:* str
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.cluster\\"></a>

\`\`\`python
cluster: ICluster
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The cluster to apply the patch to.

---

### ServiceLoadBalancerAddressOptions <a name=\\"ServiceLoadBalancerAddressOptions\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions\\"></a>

Options for fetching a ServiceLoadBalancerAddress.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.ServiceLoadBalancerAddressOptions(
  namespace: str = None,
  timeout: Duration = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\">namespace</a></code> | <code>str</code> | The namespace the service belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\">timeout</a></code> | <code>aws_cdk.Duration</code> | Timeout for waiting on the load balancer address. |

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\"></a>

\`\`\`python
namespace: str
\`\`\`

- *Type:* str
- *Default:* 'default'

The namespace the service belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\"></a>

\`\`\`python
timeout: Duration
\`\`\`

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on the load balancer address.

---

### TaintProperty <a name=\\"TaintProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.CfnNodegroup.TaintProperty(
  effect: str = None,
  key: str = None,
  value: str = None
)
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.effect\\">effect</a></code> | <code>str</code> | \`CfnNodegroup.TaintProperty.Effect\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.key\\">key</a></code> | <code>str</code> | \`CfnNodegroup.TaintProperty.Key\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.value\\">value</a></code> | <code>str</code> | \`CfnNodegroup.TaintProperty.Value\`. |

---

##### \`effect\`<sup>Optional</sup> <a name=\\"effect\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.effect\\"></a>

\`\`\`python
effect: str
\`\`\`

- *Type:* str

\`CfnNodegroup.TaintProperty.Effect\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect)

---

##### \`key\`<sup>Optional</sup> <a name=\\"key\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.key\\"></a>

\`\`\`python
key: str
\`\`\`

- *Type:* str

\`CfnNodegroup.TaintProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key)

---

##### \`value\`<sup>Optional</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.value\\"></a>

\`\`\`python
value: str
\`\`\`

- *Type:* str

\`CfnNodegroup.TaintProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value)

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### EksOptimizedImage <a name=\\"EksOptimizedImage\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage\\"></a>

- *Implements:* aws_cdk.aws_ec2.IMachineImage

Construct an Amazon Linux 2 image from the latest EKS Optimized AMI published in SSM.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.EksOptimizedImage(
  cpu_arch: CpuArch = None,
  kubernetes_version: str = None,
  node_type: NodeType = None
)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.cpuArch\\">cpu_arch</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch\\">CpuArch</a></code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.kubernetesVersion\\">kubernetes_version</a></code> | <code>str</code> | The Kubernetes version to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.nodeType\\">node_type</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType\\">NodeType</a></code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`cpu_arch\`<sup>Optional</sup> <a name=\\"cpu_arch\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.cpuArch\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CpuArch\\">CpuArch</a>
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`kubernetes_version\`<sup>Optional</sup> <a name=\\"kubernetes_version\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.kubernetesVersion\\"></a>

- *Type:* str
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`node_type\`<sup>Optional</sup> <a name=\\"node_type\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.nodeType\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodeType\\">NodeType</a>
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.getImage\\">get_image</a></code> | Return the correct image. |

---

##### \`get_image\` <a name=\\"get_image\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.getImage\\"></a>

\`\`\`python
def get_image(
  scope: Construct
)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.getImage.parameter.scope\\"></a>

- *Type:* constructs.Construct

---




### EndpointAccess <a name=\\"EndpointAccess\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess\\"></a>

Endpoint access characteristics.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom\\">only_from</a></code> | Restrict public access to specific CIDR blocks. |

---

##### \`only_from\` <a name=\\"only_from\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom\\"></a>

\`\`\`python
def only_from(
  cidr: str
)
\`\`\`

###### \`cidr\`<sup>Required</sup> <a name=\\"cidr\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom.parameter.cidr\\"></a>

- *Type:* str

CIDR blocks.

---



#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PRIVATE\\">PRIVATE</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | The cluster endpoint is only accessible through your VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC\\">PUBLIC</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | The cluster endpoint is accessible from outside of your VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\">PUBLIC_AND_PRIVATE</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | The cluster endpoint is accessible from outside of your VPC. |

---

##### \`PRIVATE\`<sup>Required</sup> <a name=\\"PRIVATE\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PRIVATE\\"></a>

\`\`\`python
PRIVATE: EndpointAccess
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>

The cluster endpoint is only accessible through your VPC.

Worker node traffic to the endpoint will stay within your VPC.

---

##### \`PUBLIC\`<sup>Required</sup> <a name=\\"PUBLIC\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC\\"></a>

\`\`\`python
PUBLIC: EndpointAccess
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic will leave your VPC to connect to the endpoint.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

##### \`PUBLIC_AND_PRIVATE\`<sup>Required</sup> <a name=\\"PUBLIC_AND_PRIVATE\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\"></a>

\`\`\`python
PUBLIC_AND_PRIVATE: EndpointAccess
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic to the endpoint will stay within your VPC.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC_AND_PRIVATE.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

### KubernetesVersion <a name=\\"KubernetesVersion\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion\\"></a>

Kubernetes cluster version.


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.of\\">of</a></code> | Custom cluster version. |

---

##### \`of\` <a name=\\"of\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.of\\"></a>

\`\`\`python
from aws_cdk import aws_eks

aws_eks.KubernetesVersion.of(
  version: str
)
\`\`\`

###### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.of.parameter.version\\"></a>

- *Type:* str

custom version number.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.version\\">version</a></code> | <code>str</code> | cluster version number. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.version\\"></a>

\`\`\`python
version: str
\`\`\`

- *Type:* str

cluster version number.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_14\\">V1_14</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.14. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_15\\">V1_15</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.15. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_16\\">V1_16</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.16. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_17\\">V1_17</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.17. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_18\\">V1_18</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.18. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_19\\">V1_19</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.19. |

---

##### \`V1_14\`<sup>Required</sup> <a name=\\"V1_14\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_14\\"></a>

\`\`\`python
V1_14: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.14.

---

##### \`V1_15\`<sup>Required</sup> <a name=\\"V1_15\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_15\\"></a>

\`\`\`python
V1_15: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.15.

---

##### \`V1_16\`<sup>Required</sup> <a name=\\"V1_16\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_16\\"></a>

\`\`\`python
V1_16: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.16.

---

##### \`V1_17\`<sup>Required</sup> <a name=\\"V1_17\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_17\\"></a>

\`\`\`python
V1_17: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.17.

---

##### \`V1_18\`<sup>Required</sup> <a name=\\"V1_18\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_18\\"></a>

\`\`\`python
V1_18: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.18.

---

##### \`V1_19\`<sup>Required</sup> <a name=\\"V1_19\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_19\\"></a>

\`\`\`python
V1_19: KubernetesVersion
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.19.

---

## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### ICluster <a name=\\"ICluster\\" id=\\"aws-cdk-lib.aws_eks.ICluster\\"></a>

- *Extends:* aws_cdk.IResource, aws_cdk.aws_ec2.IConnectable

- *Implemented By:* <a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a>, <a href=\\"#aws-cdk-lib.aws_eks.FargateCluster\\">FargateCluster</a>, <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

An EKS cluster.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addCdk8sChart\\">add_cdk8s_chart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addHelmChart\\">add_helm_chart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addManifest\\">add_manifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addServiceAccount\\">add_service_account</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |

---

##### \`add_cdk8s_chart\` <a name=\\"add_cdk8s_chart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart\\"></a>

\`\`\`python
def add_cdk8s_chart(
  id: str,
  chart: Construct
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* str

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* constructs.Construct

the cdk8s chart.

---

##### \`add_helm_chart\` <a name=\\"add_helm_chart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart\\"></a>

\`\`\`python
def add_helm_chart(
  id: str,
  chart: str,
  create_namespace: bool = None,
  namespace: str = None,
  release: str = None,
  repository: str = None,
  timeout: Duration = None,
  values: typing.Mapping[typing.Any] = None,
  version: str = None,
  wait: bool = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.id\\"></a>

- *Type:* str

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.chart\\"></a>

- *Type:* str

The name of the chart.

---

###### \`create_namespace\`<sup>Optional</sup> <a name=\\"create_namespace\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.createNamespace\\"></a>

- *Type:* bool
- *Default:* true

create namespace if not exist.

---

###### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.namespace\\"></a>

- *Type:* str
- *Default:* default

The Kubernetes namespace scope of the requests.

---

###### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.release\\"></a>

- *Type:* str
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

###### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.repository\\"></a>

- *Type:* str
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

###### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.timeout\\"></a>

- *Type:* aws_cdk.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

###### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.values\\"></a>

- *Type:* typing.Mapping[typing.Any]
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

###### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.version\\"></a>

- *Type:* str
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

###### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.wait\\"></a>

- *Type:* bool
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`add_manifest\` <a name=\\"add_manifest\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest\\"></a>

\`\`\`python
def add_manifest(
  id: str,
  manifest: typing.Mapping[typing.Any]
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest.parameter.id\\"></a>

- *Type:* str

logical id of this manifest.

---

###### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest.parameter.manifest\\"></a>

- *Type:* typing.Mapping[typing.Any]

a list of Kubernetes resource specifications.

---

##### \`add_service_account\` <a name=\\"add_service_account\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount\\"></a>

\`\`\`python
def add_service_account(
  id: str,
  name: str = None,
  namespace: str = None
)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.id\\"></a>

- *Type:* str

logical id of service account.

---

###### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.name\\"></a>

- *Type:* str
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

###### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.namespace\\"></a>

- *Type:* str
- *Default:* \\"default\\"

The namespace of the service account.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.node\\">node</a></code> | <code>constructs.Node</code> | The tree node. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.env\\">env</a></code> | <code>aws_cdk.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.stack\\">stack</a></code> | <code>aws_cdk.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.connections\\">connections</a></code> | <code>aws_cdk.aws_ec2.Connections</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterArn\\">cluster_arn</a></code> | <code>str</code> | The unique ARN assigned to the service by AWS in the form of arn:aws:eks:. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterCertificateAuthorityData\\">cluster_certificate_authority_data</a></code> | <code>str</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\">cluster_encryption_config_key_arn</a></code> | <code>str</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterEndpoint\\">cluster_endpoint</a></code> | <code>str</code> | The API Server endpoint URL. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterName\\">cluster_name</a></code> | <code>str</code> | The physical name of the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroup\\">cluster_security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroupId\\">cluster_security_group_id</a></code> | <code>str</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.openIdConnectProvider\\">open_id_connect_provider</a></code> | <code>aws_cdk.aws_iam.IOpenIdConnectProvider</code> | The Open ID Connect Provider of the cluster used to configure Service Accounts. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.prune\\">prune</a></code> | <code>bool</code> | Indicates whether Kubernetes resources can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.vpc\\">vpc</a></code> | <code>aws_cdk.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlEnvironment\\">kubectl_environment</a></code> | <code>typing.Mapping[str]</code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlLayer\\">kubectl_layer</a></code> | <code>aws_cdk.aws_lambda.ILayerVersion</code> | An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlMemory\\">kubectl_memory</a></code> | <code>aws_cdk.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlPrivateSubnets\\">kubectl_private_subnets</a></code> | <code>typing.List[aws_cdk.aws_ec2.ISubnet]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlRole\\">kubectl_role</a></code> | <code>aws_cdk.aws_iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlSecurityGroup\\">kubectl_security_group</a></code> | <code>aws_cdk.aws_ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.node\\"></a>

\`\`\`python
node: Node
\`\`\`

- *Type:* constructs.Node

The tree node.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.env\\"></a>

\`\`\`python
env: ResourceEnvironment
\`\`\`

- *Type:* aws_cdk.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.stack\\"></a>

\`\`\`python
stack: Stack
\`\`\`

- *Type:* aws_cdk.Stack

The stack in which this resource is defined.

---

##### \`connections\`<sup>Required</sup> <a name=\\"connections\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.connections\\"></a>

\`\`\`python
connections: Connections
\`\`\`

- *Type:* aws_cdk.aws_ec2.Connections

---

##### \`cluster_arn\`<sup>Required</sup> <a name=\\"cluster_arn\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterArn\\"></a>

\`\`\`python
cluster_arn: str
\`\`\`

- *Type:* str

The unique ARN assigned to the service by AWS in the form of arn:aws:eks:.

---

##### \`cluster_certificate_authority_data\`<sup>Required</sup> <a name=\\"cluster_certificate_authority_data\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`python
cluster_certificate_authority_data: str
\`\`\`

- *Type:* str

The certificate-authority-data for your cluster.

---

##### \`cluster_encryption_config_key_arn\`<sup>Required</sup> <a name=\\"cluster_encryption_config_key_arn\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`python
cluster_encryption_config_key_arn: str
\`\`\`

- *Type:* str

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`cluster_endpoint\`<sup>Required</sup> <a name=\\"cluster_endpoint\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterEndpoint\\"></a>

\`\`\`python
cluster_endpoint: str
\`\`\`

- *Type:* str

The API Server endpoint URL.

---

##### \`cluster_name\`<sup>Required</sup> <a name=\\"cluster_name\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterName\\"></a>

\`\`\`python
cluster_name: str
\`\`\`

- *Type:* str

The physical name of the Cluster.

---

##### \`cluster_security_group\`<sup>Required</sup> <a name=\\"cluster_security_group\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroup\\"></a>

\`\`\`python
cluster_security_group: ISecurityGroup
\`\`\`

- *Type:* aws_cdk.aws_ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`cluster_security_group_id\`<sup>Required</sup> <a name=\\"cluster_security_group_id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroupId\\"></a>

\`\`\`python
cluster_security_group_id: str
\`\`\`

- *Type:* str

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`open_id_connect_provider\`<sup>Required</sup> <a name=\\"open_id_connect_provider\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.openIdConnectProvider\\"></a>

\`\`\`python
open_id_connect_provider: IOpenIdConnectProvider
\`\`\`

- *Type:* aws_cdk.aws_iam.IOpenIdConnectProvider

The Open ID Connect Provider of the cluster used to configure Service Accounts.

---

##### \`prune\`<sup>Required</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.prune\\"></a>

\`\`\`python
prune: bool
\`\`\`

- *Type:* bool

Indicates whether Kubernetes resources can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`vpc\`<sup>Required</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.vpc\\"></a>

\`\`\`python
vpc: IVpc
\`\`\`

- *Type:* aws_cdk.aws_ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`kubectl_environment\`<sup>Optional</sup> <a name=\\"kubectl_environment\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlEnvironment\\"></a>

\`\`\`python
kubectl_environment: typing.Mapping[str]
\`\`\`

- *Type:* typing.Mapping[str]

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`kubectl_layer\`<sup>Optional</sup> <a name=\\"kubectl_layer\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlLayer\\"></a>

\`\`\`python
kubectl_layer: ILayerVersion
\`\`\`

- *Type:* aws_cdk.aws_lambda.ILayerVersion

An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI.

If not defined, a default layer will be used.

---

##### \`kubectl_memory\`<sup>Optional</sup> <a name=\\"kubectl_memory\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlMemory\\"></a>

\`\`\`python
kubectl_memory: Size
\`\`\`

- *Type:* aws_cdk.Size

Amount of memory to allocate to the provider's lambda function.

---

##### \`kubectl_private_subnets\`<sup>Optional</sup> <a name=\\"kubectl_private_subnets\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`python
kubectl_private_subnets: typing.List[ISubnet]
\`\`\`

- *Type:* typing.List[aws_cdk.aws_ec2.ISubnet]

Subnets to host the \`kubectl\` compute resources.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

##### \`kubectl_role\`<sup>Optional</sup> <a name=\\"kubectl_role\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlRole\\"></a>

\`\`\`python
kubectl_role: IRole
\`\`\`

- *Type:* aws_cdk.aws_iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`kubectl_security_group\`<sup>Optional</sup> <a name=\\"kubectl_security_group\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlSecurityGroup\\"></a>

\`\`\`python
kubectl_security_group: ISecurityGroup
\`\`\`

- *Type:* aws_cdk.aws_ec2.ISecurityGroup

A security group to use for \`kubectl\` execution.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

### INodegroup <a name=\\"INodegroup\\" id=\\"aws-cdk-lib.aws_eks.INodegroup\\"></a>

- *Extends:* aws_cdk.IResource

- *Implemented By:* <a href=\\"#aws-cdk-lib.aws_eks.Nodegroup\\">Nodegroup</a>, <a href=\\"#aws-cdk-lib.aws_eks.INodegroup\\">INodegroup</a>

NodeGroup interface.


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.node\\">node</a></code> | <code>constructs.Node</code> | The tree node. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.env\\">env</a></code> | <code>aws_cdk.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.stack\\">stack</a></code> | <code>aws_cdk.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.nodegroupName\\">nodegroup_name</a></code> | <code>str</code> | Name of the nodegroup. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.node\\"></a>

\`\`\`python
node: Node
\`\`\`

- *Type:* constructs.Node

The tree node.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.env\\"></a>

\`\`\`python
env: ResourceEnvironment
\`\`\`

- *Type:* aws_cdk.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.stack\\"></a>

\`\`\`python
stack: Stack
\`\`\`

- *Type:* aws_cdk.Stack

The stack in which this resource is defined.

---

##### \`nodegroup_name\`<sup>Required</sup> <a name=\\"nodegroup_name\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.nodegroupName\\"></a>

\`\`\`python
nodegroup_name: str
\`\`\`

- *Type:* str

Name of the nodegroup.

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### CapacityType <a name=\\"CapacityType\\" id=\\"aws-cdk-lib.aws_eks.CapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType.SPOT\\">SPOT</a></code> | spot instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType.ON_DEMAND\\">ON_DEMAND</a></code> | on-demand instances. |

---

Capacity type of the managed node group.

#### \`SPOT\` <a name=\\"SPOT\\" id=\\"aws-cdk-lib.aws_eks.CapacityType.SPOT\\"></a>

spot instances.

---


#### \`ON_DEMAND\` <a name=\\"ON_DEMAND\\" id=\\"aws-cdk-lib.aws_eks.CapacityType.ON_DEMAND\\"></a>

on-demand instances.

---


### CoreDnsComputeType <a name=\\"CoreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType.EC2\\">EC2</a></code> | Deploy CoreDNS on EC2 instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType.FARGATE\\">FARGATE</a></code> | Deploy CoreDNS on Fargate-managed instances. |

---

The type of compute resources to use for CoreDNS.

#### \`EC2\` <a name=\\"EC2\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType.EC2\\"></a>

Deploy CoreDNS on EC2 instances.

---


#### \`FARGATE\` <a name=\\"FARGATE\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType.FARGATE\\"></a>

Deploy CoreDNS on Fargate-managed instances.

---


### CpuArch <a name=\\"CpuArch\\" id=\\"aws-cdk-lib.aws_eks.CpuArch\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch.ARM_64\\">ARM_64</a></code> | arm64 CPU type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch.X86_64\\">X86_64</a></code> | x86_64 CPU type. |

---

CPU architecture.

#### \`ARM_64\` <a name=\\"ARM_64\\" id=\\"aws-cdk-lib.aws_eks.CpuArch.ARM_64\\"></a>

arm64 CPU type.

---


#### \`X86_64\` <a name=\\"X86_64\\" id=\\"aws-cdk-lib.aws_eks.CpuArch.X86_64\\"></a>

x86_64 CPU type.

---


### DefaultCapacityType <a name=\\"DefaultCapacityType\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType.NODEGROUP\\">NODEGROUP</a></code> | managed node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType.EC2\\">EC2</a></code> | EC2 autoscaling group. |

---

The default capacity type for the cluster.

#### \`NODEGROUP\` <a name=\\"NODEGROUP\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType.NODEGROUP\\"></a>

managed node group.

---


#### \`EC2\` <a name=\\"EC2\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType.EC2\\"></a>

EC2 autoscaling group.

---


### MachineImageType <a name=\\"MachineImageType\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType.AMAZON_LINUX_2\\">AMAZON_LINUX_2</a></code> | Amazon EKS-optimized Linux AMI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType.BOTTLEROCKET\\">BOTTLEROCKET</a></code> | Bottlerocket AMI. |

---

The machine image type.

#### \`AMAZON_LINUX_2\` <a name=\\"AMAZON_LINUX_2\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType.AMAZON_LINUX_2\\"></a>

Amazon EKS-optimized Linux AMI.

---


#### \`BOTTLEROCKET\` <a name=\\"BOTTLEROCKET\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType.BOTTLEROCKET\\"></a>

Bottlerocket AMI.

---


### NodegroupAmiType <a name=\\"NodegroupAmiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64\\">AL2_X86_64</a></code> | Amazon Linux 2 (x86-64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\">AL2_X86_64_GPU</a></code> | Amazon Linux 2 with GPU support. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_ARM_64\\">AL2_ARM_64</a></code> | Amazon Linux 2 (ARM-64). |

---

The AMI type for your node group.

GPU instance types should use the \`AL2_x86_64_GPU\` AMI type, which uses the Amazon EKS-optimized Linux AMI with GPU support. Non-GPU instances should use the \`AL2_x86_64\` AMI type, which uses the Amazon EKS-optimized Linux AMI.

#### \`AL2_X86_64\` <a name=\\"AL2_X86_64\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64\\"></a>

Amazon Linux 2 (x86-64).

---


#### \`AL2_X86_64_GPU\` <a name=\\"AL2_X86_64_GPU\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\"></a>

Amazon Linux 2 with GPU support.

---


#### \`AL2_ARM_64\` <a name=\\"AL2_ARM_64\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_ARM_64\\"></a>

Amazon Linux 2 (ARM-64).

---


### NodeType <a name=\\"NodeType\\" id=\\"aws-cdk-lib.aws_eks.NodeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.STANDARD\\">STANDARD</a></code> | Standard instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.GPU\\">GPU</a></code> | GPU instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.INFERENTIA\\">INFERENTIA</a></code> | Inferentia instances. |

---

Whether the worker nodes should support GPU or just standard instances.

#### \`STANDARD\` <a name=\\"STANDARD\\" id=\\"aws-cdk-lib.aws_eks.NodeType.STANDARD\\"></a>

Standard instances.

---


#### \`GPU\` <a name=\\"GPU\\" id=\\"aws-cdk-lib.aws_eks.NodeType.GPU\\"></a>

GPU instances.

---


#### \`INFERENTIA\` <a name=\\"INFERENTIA\\" id=\\"aws-cdk-lib.aws_eks.NodeType.INFERENTIA\\"></a>

Inferentia instances.

---


### PatchType <a name=\\"PatchType\\" id=\\"aws-cdk-lib.aws_eks.PatchType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.JSON\\">JSON</a></code> | JSON Patch, RFC 6902. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.MERGE\\">MERGE</a></code> | JSON Merge patch. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.STRATEGIC\\">STRATEGIC</a></code> | Strategic merge patch. |

---

Values for \`kubectl patch\` --type argument.

#### \`JSON\` <a name=\\"JSON\\" id=\\"aws-cdk-lib.aws_eks.PatchType.JSON\\"></a>

JSON Patch, RFC 6902.

---


#### \`MERGE\` <a name=\\"MERGE\\" id=\\"aws-cdk-lib.aws_eks.PatchType.MERGE\\"></a>

JSON Merge patch.

---


#### \`STRATEGIC\` <a name=\\"STRATEGIC\\" id=\\"aws-cdk-lib.aws_eks.PatchType.STRATEGIC\\"></a>

Strategic merge patch.

---

"
`;

exports[`typescript for package 1`] = `
"# Amazon ECR Construct Library
<!--BEGIN STABILITY BANNER-->

---

![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---

<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`ts
const repository = new ecr.Repository(this, 'Repository');
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`ts
const repository = new ecr.Repository(stack, 'Repo', {
  imageScanOnPush: true
});
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`ts
repository.onImageScanCompleted('ImageScanComplete')
  .addTarget(...)
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`ts
import * as iam from '@aws-cdk/aws-iam';
import * as ecr from '@aws-cdk/aws-ecr';

const user = new iam.User(this, 'User', { ... });
ecr.AuthorizationToken.grantRead(user);
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`ts
import * as iam from '@aws-cdk/aws-iam';
import * as ecr from '@aws-cdk/aws-ecr';

const user = new iam.User(this, 'User', { ... });
ecr.PublicGalleryAuthorizationToken.grantRead(user);
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`ts
new ecr.Repository(stack, 'Repo', { imageTagMutability: ecr.TagMutability.IMMUTABLE });
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`ts
repository.addLifecycleRule({ tagPrefixList: ['prod'], maxImageCount: 9999 });
repository.addLifecycleRule({ maxImageAge: cdk.Duration.days(30) });
\`\`\`

# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### CfnPublicRepository <a name=\\"CfnPublicRepository\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository\\"></a>

- *Implements:* @aws-cdk/core.IInspectable

A CloudFormation \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer\\"></a>

\`\`\`typescript
import { CfnPublicRepository } from '@aws-cdk/aws-ecr'

new CfnPublicRepository(scope: Construct, id: string, props?: CfnPublicRepositoryProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\">scope</a></code> | <code>@aws-cdk/core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\">CfnPublicRepositoryProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\"></a>

- *Type:* @aws-cdk/core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\">CfnPublicRepositoryProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector\\"></a>

- *Type:* @aws-cdk/core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\">attrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\">tags</a></code> | <code>@aws-cdk/core.TagManager</code> | \`AWS::ECR::PublicRepository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\"></a>

\`\`\`typescript
public readonly attrArn: string;
\`\`\`

- *Type:* string

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\"></a>

\`\`\`typescript
public readonly tags: TagManager;
\`\`\`

- *Type:* @aws-cdk/core.TagManager

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

##### \`repositoryCatalogData\`<sup>Required</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\"></a>

\`\`\`typescript
public readonly repositoryCatalogData: any;
\`\`\`

- *Type:* any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryPolicyText\`<sup>Required</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\"></a>

\`\`\`typescript
public readonly repositoryPolicyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnRegistryPolicy <a name=\\"CfnRegistryPolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy\\"></a>

- *Implements:* @aws-cdk/core.IInspectable

A CloudFormation \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer\\"></a>

\`\`\`typescript
import { CfnRegistryPolicy } from '@aws-cdk/aws-ecr'

new CfnRegistryPolicy(scope: Construct, id: string, props: CfnRegistryPolicyProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\">scope</a></code> | <code>@aws-cdk/core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\">CfnRegistryPolicyProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\"></a>

- *Type:* @aws-cdk/core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\">CfnRegistryPolicyProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector\\"></a>

- *Type:* @aws-cdk/core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\">attrRegistryId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\">policyText</a></code> | <code>any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`attrRegistryId\`<sup>Required</sup> <a name=\\"attrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\"></a>

\`\`\`typescript
public readonly attrRegistryId: string;
\`\`\`

- *Type:* string

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\"></a>

\`\`\`typescript
public readonly policyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnReplicationConfiguration <a name=\\"CfnReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration\\"></a>

- *Implements:* @aws-cdk/core.IInspectable

A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer\\"></a>

\`\`\`typescript
import { CfnReplicationConfiguration } from '@aws-cdk/aws-ecr'

new CfnReplicationConfiguration(scope: Construct, id: string, props: CfnReplicationConfigurationProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\">scope</a></code> | <code>@aws-cdk/core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\">CfnReplicationConfigurationProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\"></a>

- *Type:* @aws-cdk/core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\">CfnReplicationConfigurationProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector\\"></a>

- *Type:* @aws-cdk/core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\">attrRegistryId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\">replicationConfiguration</a></code> | <code>@aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`attrRegistryId\`<sup>Required</sup> <a name=\\"attrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\"></a>

\`\`\`typescript
public readonly attrRegistryId: string;
\`\`\`

- *Type:* string

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\"></a>

\`\`\`typescript
public readonly replicationConfiguration: IResolvable | ReplicationConfigurationProperty;
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnRepository <a name=\\"CfnRepository\\" id=\\"@aws-cdk/aws-ecr.CfnRepository\\"></a>

- *Implements:* @aws-cdk/core.IInspectable

A CloudFormation \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer\\"></a>

\`\`\`typescript
import { CfnRepository } from '@aws-cdk/aws-ecr'

new CfnRepository(scope: Construct, id: string, props?: CfnRepositoryProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\">scope</a></code> | <code>@aws-cdk/core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps\\">CfnRepositoryProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\"></a>

- *Type:* @aws-cdk/core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps\\">CfnRepositoryProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector\\"></a>

- *Type:* @aws-cdk/core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\">attrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\">attrRepositoryUri</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.tags\\">tags</a></code> | <code>@aws-cdk/core.TagManager</code> | \`AWS::ECR::Repository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\">imageTagMutability</a></code> | <code>string</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>@aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | \`AWS::ECR::Repository.RepositoryName\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\"></a>

\`\`\`typescript
public readonly attrArn: string;
\`\`\`

- *Type:* string

---

##### \`attrRepositoryUri\`<sup>Required</sup> <a name=\\"attrRepositoryUri\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\"></a>

\`\`\`typescript
public readonly attrRepositoryUri: string;
\`\`\`

- *Type:* string

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.tags\\"></a>

\`\`\`typescript
public readonly tags: TagManager;
\`\`\`

- *Type:* @aws-cdk/core.TagManager

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

##### \`encryptionConfiguration\`<sup>Required</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\"></a>

\`\`\`typescript
public readonly encryptionConfiguration: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Required</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\"></a>

\`\`\`typescript
public readonly imageScanningConfiguration: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`repositoryPolicyText\`<sup>Required</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\"></a>

\`\`\`typescript
public readonly repositoryPolicyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\"></a>

\`\`\`typescript
public readonly imageTagMutability: string;
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\"></a>

\`\`\`typescript
public readonly lifecyclePolicy: IResolvable | LifecyclePolicyProperty;
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### Repository <a name=\\"Repository\\" id=\\"@aws-cdk/aws-ecr.Repository\\"></a>

Define an ECR repository.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

new Repository(scope: Construct, id: string, props?: RepositoryProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps\\">RepositoryProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryProps\\">RepositoryProps</a>

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addLifecycleRule\\">addLifecycleRule</a></code> | Add a life cycle rule to the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |

---

##### \`addLifecycleRule\` <a name=\\"addLifecycleRule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule\\"></a>

\`\`\`typescript
public addLifecycleRule(rule: LifecycleRule)
\`\`\`

###### \`rule\`<sup>Required</sup> <a name=\\"rule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rule\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\"></a>

\`\`\`typescript
public addToResourcePolicy(statement: PolicyStatement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* @aws-cdk/aws-iam.PolicyStatement

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\">arnForLocalRepository</a></code> | Returns an ECR ARN for a repository that resides in the same account/region as the current stack. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\">fromRepositoryArn</a></code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\">fromRepositoryAttributes</a></code> | Import a repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryName\\">fromRepositoryName</a></code> | *No description.* |

---

##### \`arnForLocalRepository\` <a name=\\"arnForLocalRepository\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

Repository.arnForLocalRepository(repositoryName: string, scope: IConstruct, account?: string)
\`\`\`

###### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName\\"></a>

- *Type:* string

---

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope\\"></a>

- *Type:* constructs.IConstruct

---

###### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account\\"></a>

- *Type:* string

---

##### \`fromRepositoryArn\` <a name=\\"fromRepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

Repository.fromRepositoryArn(scope: Construct, id: string, repositoryArn: string)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id\\"></a>

- *Type:* string

---

###### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn\\"></a>

- *Type:* string

---

##### \`fromRepositoryAttributes\` <a name=\\"fromRepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

Repository.fromRepositoryAttributes(scope: Construct, id: string, attrs: RepositoryAttributes)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id\\"></a>

- *Type:* string

---

###### \`attrs\`<sup>Required</sup> <a name=\\"attrs\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.attrs\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes\\">RepositoryAttributes</a>

---

##### \`fromRepositoryName\` <a name=\\"fromRepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

Repository.fromRepositoryName(scope: Construct, id: string, repositoryName: string)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id\\"></a>

- *Type:* string

---

###### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName\\"></a>

- *Type:* string

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | The name of the repository. |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryArn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

The name of the repository.

---


### RepositoryBase <a name=\\"RepositoryBase\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase\\"></a>

- *Implements:* <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Base class for ECR repository.

Reused between imported repositories and owned repositories.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer\\"></a>

\`\`\`typescript
import { RepositoryBase } from '@aws-cdk/aws-ecr'

new RepositoryBase(scope: Construct, id: string, props?: ResourceProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.props\\">props</a></code> | <code>@aws-cdk/core.ResourceProps</code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.props\\"></a>

- *Type:* @aws-cdk/core.ResourceProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPull\\">grantPull</a></code> | Grant the given identity permissions to use the images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\"></a>

\`\`\`typescript
public addToResourcePolicy(statement: PolicyStatement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* @aws-cdk/aws-iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant\\"></a>

\`\`\`typescript
public grant(grantee: IGrantable, actions: string)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions\\"></a>

- *Type:* string

---

##### \`grantPull\` <a name=\\"grantPull\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull\\"></a>

\`\`\`typescript
public grantPull(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

##### \`grantPullPush\` <a name=\\"grantPullPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\"></a>

\`\`\`typescript
public grantPullPush(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

##### \`onCloudTrailEvent\` <a name=\\"onCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\"></a>

\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnEventOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* @aws-cdk/aws-events.OnEventOptions

Options for adding the rule.

---

##### \`onCloudTrailImagePushed\` <a name=\\"onCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\"></a>

\`\`\`typescript
public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`onEvent\` <a name=\\"onEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent\\"></a>

\`\`\`typescript
public onEvent(id: string, options?: OnEventOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id\\"></a>

- *Type:* string

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.options\\"></a>

- *Type:* @aws-cdk/aws-events.OnEventOptions

---

##### \`onImageScanCompleted\` <a name=\\"onImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\"></a>

\`\`\`typescript
public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`repositoryUriForDigest\` <a name=\\"repositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\"></a>

\`\`\`typescript
public repositoryUriForDigest(digest?: string)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* string

Optional image digest.

---

##### \`repositoryUriForTag\` <a name=\\"repositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\"></a>

\`\`\`typescript
public repositoryUriForTag(tag?: string)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* string

Optional image tag.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\">repositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

The name of the repository.

---

##### \`repositoryUri\`<sup>Required</sup> <a name=\\"repositoryUri\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\"></a>

\`\`\`typescript
public readonly repositoryUri: string;
\`\`\`

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### CfnPublicRepositoryProps <a name=\\"CfnPublicRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.Initializer\\"></a>

\`\`\`typescript
import { CfnPublicRepositoryProps } from '@aws-cdk/aws-ecr'

const cfnPublicRepositoryProps: CfnPublicRepositoryProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\">tags</a></code> | <code>@aws-cdk/core.CfnTag[]</code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`repositoryCatalogData\`<sup>Optional</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\"></a>

\`\`\`typescript
public readonly repositoryCatalogData: any;
\`\`\`

- *Type:* any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`typescript
public readonly repositoryPolicyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\"></a>

\`\`\`typescript
public readonly tags: CfnTag[];
\`\`\`

- *Type:* @aws-cdk/core.CfnTag[]

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

### CfnRegistryPolicyProps <a name=\\"CfnRegistryPolicyProps\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\"></a>

Properties for defining a \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.Initializer\\"></a>

\`\`\`typescript
import { CfnRegistryPolicyProps } from '@aws-cdk/aws-ecr'

const cfnRegistryPolicyProps: CfnRegistryPolicyProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\">policyText</a></code> | <code>any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\"></a>

\`\`\`typescript
public readonly policyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

### CfnReplicationConfigurationProps <a name=\\"CfnReplicationConfigurationProps\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\"></a>

Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.Initializer\\"></a>

\`\`\`typescript
import { CfnReplicationConfigurationProps } from '@aws-cdk/aws-ecr'

const cfnReplicationConfigurationProps: CfnReplicationConfigurationProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\">replicationConfiguration</a></code> | <code>@aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\"></a>

\`\`\`typescript
public readonly replicationConfiguration: IResolvable | ReplicationConfigurationProperty;
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

### CfnRepositoryProps <a name=\\"CfnRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.Initializer\\"></a>

\`\`\`typescript
import { CfnRepositoryProps } from '@aws-cdk/aws-ecr'

const cfnRepositoryProps: CfnRepositoryProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\">imageTagMutability</a></code> | <code>string</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>@aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\">tags</a></code> | <code>@aws-cdk/core.CfnTag[]</code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`encryptionConfiguration\`<sup>Optional</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\"></a>

\`\`\`typescript
public readonly encryptionConfiguration: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Optional</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\"></a>

\`\`\`typescript
public readonly imageScanningConfiguration: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\"></a>

\`\`\`typescript
public readonly imageTagMutability: string;
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\"></a>

\`\`\`typescript
public readonly lifecyclePolicy: IResolvable | LifecyclePolicyProperty;
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`typescript
public readonly repositoryPolicyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\"></a>

\`\`\`typescript
public readonly tags: CfnTag[];
\`\`\`

- *Type:* @aws-cdk/core.CfnTag[]

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

### LifecyclePolicyProperty <a name=\\"LifecyclePolicyProperty\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.Initializer\\"></a>

\`\`\`typescript
import { LifecyclePolicyProperty } from '@aws-cdk/aws-ecr'

const lifecyclePolicyProperty: LifecyclePolicyProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\">lifecyclePolicyText</a></code> | <code>string</code> | \`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\">registryId</a></code> | <code>string</code> | \`CfnRepository.LifecyclePolicyProperty.RegistryId\`. |

---

##### \`lifecyclePolicyText\`<sup>Optional</sup> <a name=\\"lifecyclePolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\"></a>

\`\`\`typescript
public readonly lifecyclePolicyText: string;
\`\`\`

- *Type:* string

\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext)

---

##### \`registryId\`<sup>Optional</sup> <a name=\\"registryId\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\"></a>

\`\`\`typescript
public readonly registryId: string;
\`\`\`

- *Type:* string

\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid)

---

### LifecycleRule <a name=\\"LifecycleRule\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule\\"></a>

An ECR life cycle rule.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.Initializer\\"></a>

\`\`\`typescript
import { LifecycleRule } from '@aws-cdk/aws-ecr'

const lifecycleRule: LifecycleRule = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.description\\">description</a></code> | <code>string</code> | Describes the purpose of the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\">maxImageAge</a></code> | <code>@aws-cdk/core.Duration</code> | The maximum age of images to retain. The value must represent a number of days. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\">maxImageCount</a></code> | <code>number</code> | The maximum number of images to retain. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\">rulePriority</a></code> | <code>number</code> | Controls the order in which rules are evaluated (low to high). |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\">tagPrefixList</a></code> | <code>string[]</code> | Select images that have ALL the given prefixes in their tag. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\">tagStatus</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a></code> | Select images based on tags. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.description\\"></a>

\`\`\`typescript
public readonly description: string;
\`\`\`

- *Type:* string
- *Default:* No description

Describes the purpose of the rule.

---

##### \`maxImageAge\`<sup>Optional</sup> <a name=\\"maxImageAge\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\"></a>

\`\`\`typescript
public readonly maxImageAge: Duration;
\`\`\`

- *Type:* @aws-cdk/core.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`maxImageCount\`<sup>Optional</sup> <a name=\\"maxImageCount\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\"></a>

\`\`\`typescript
public readonly maxImageCount: number;
\`\`\`

- *Type:* number

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`rulePriority\`<sup>Optional</sup> <a name=\\"rulePriority\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\"></a>

\`\`\`typescript
public readonly rulePriority: number;
\`\`\`

- *Type:* number
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

##### \`tagPrefixList\`<sup>Optional</sup> <a name=\\"tagPrefixList\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\"></a>

\`\`\`typescript
public readonly tagPrefixList: string[];
\`\`\`

- *Type:* string[]

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

##### \`tagStatus\`<sup>Optional</sup> <a name=\\"tagStatus\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\"></a>

\`\`\`typescript
public readonly tagStatus: TagStatus;
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

### OnCloudTrailImagePushedOptions <a name=\\"OnCloudTrailImagePushedOptions\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\"></a>

Options for the onCloudTrailImagePushed method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.Initializer\\"></a>

\`\`\`typescript
import { OnCloudTrailImagePushedOptions } from '@aws-cdk/aws-ecr'

const onCloudTrailImagePushedOptions: OnCloudTrailImagePushedOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\">description</a></code> | <code>string</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\">eventPattern</a></code> | <code>@aws-cdk/aws-events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\">ruleName</a></code> | <code>string</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\">target</a></code> | <code>@aws-cdk/aws-events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\">imageTag</a></code> | <code>string</code> | Only watch changes to this image tag. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\"></a>

\`\`\`typescript
public readonly description: string;
\`\`\`

- *Type:* string
- *Default:* No description

A description of the rule's purpose.

---

##### \`eventPattern\`<sup>Optional</sup> <a name=\\"eventPattern\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\"></a>

\`\`\`typescript
public readonly eventPattern: EventPattern;
\`\`\`

- *Type:* @aws-cdk/aws-events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`ruleName\`<sup>Optional</sup> <a name=\\"ruleName\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\"></a>

\`\`\`typescript
public readonly ruleName: string;
\`\`\`

- *Type:* string
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\"></a>

\`\`\`typescript
public readonly target: IRuleTarget;
\`\`\`

- *Type:* @aws-cdk/aws-events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`imageTag\`<sup>Optional</sup> <a name=\\"imageTag\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\"></a>

\`\`\`typescript
public readonly imageTag: string;
\`\`\`

- *Type:* string
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

### OnImageScanCompletedOptions <a name=\\"OnImageScanCompletedOptions\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\"></a>

Options for the OnImageScanCompleted method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.Initializer\\"></a>

\`\`\`typescript
import { OnImageScanCompletedOptions } from '@aws-cdk/aws-ecr'

const onImageScanCompletedOptions: OnImageScanCompletedOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\">description</a></code> | <code>string</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\">eventPattern</a></code> | <code>@aws-cdk/aws-events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\">ruleName</a></code> | <code>string</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\">target</a></code> | <code>@aws-cdk/aws-events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\">imageTags</a></code> | <code>string[]</code> | Only watch changes to the image tags spedified. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\"></a>

\`\`\`typescript
public readonly description: string;
\`\`\`

- *Type:* string
- *Default:* No description

A description of the rule's purpose.

---

##### \`eventPattern\`<sup>Optional</sup> <a name=\\"eventPattern\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\"></a>

\`\`\`typescript
public readonly eventPattern: EventPattern;
\`\`\`

- *Type:* @aws-cdk/aws-events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`ruleName\`<sup>Optional</sup> <a name=\\"ruleName\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\"></a>

\`\`\`typescript
public readonly ruleName: string;
\`\`\`

- *Type:* string
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\"></a>

\`\`\`typescript
public readonly target: IRuleTarget;
\`\`\`

- *Type:* @aws-cdk/aws-events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`imageTags\`<sup>Optional</sup> <a name=\\"imageTags\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\"></a>

\`\`\`typescript
public readonly imageTags: string[];
\`\`\`

- *Type:* string[]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

### ReplicationConfigurationProperty <a name=\\"ReplicationConfigurationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.Initializer\\"></a>

\`\`\`typescript
import { ReplicationConfigurationProperty } from '@aws-cdk/aws-ecr'

const replicationConfigurationProperty: ReplicationConfigurationProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\">rules</a></code> | <code>@aws-cdk/core.IResolvable \\\\| @aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>[]</code> | \`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`. |

---

##### \`rules\`<sup>Required</sup> <a name=\\"rules\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\"></a>

\`\`\`typescript
public readonly rules: IResolvable | IResolvable | ReplicationRuleProperty[];
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>[]

\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules)

---

### ReplicationDestinationProperty <a name=\\"ReplicationDestinationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.Initializer\\"></a>

\`\`\`typescript
import { ReplicationDestinationProperty } from '@aws-cdk/aws-ecr'

const replicationDestinationProperty: ReplicationDestinationProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\">region</a></code> | <code>string</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\">registryId</a></code> | <code>string</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`. |

---

##### \`region\`<sup>Required</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\"></a>

\`\`\`typescript
public readonly region: string;
\`\`\`

- *Type:* string

\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region)

---

##### \`registryId\`<sup>Required</sup> <a name=\\"registryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\"></a>

\`\`\`typescript
public readonly registryId: string;
\`\`\`

- *Type:* string

\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid)

---

### ReplicationRuleProperty <a name=\\"ReplicationRuleProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.Initializer\\"></a>

\`\`\`typescript
import { ReplicationRuleProperty } from '@aws-cdk/aws-ecr'

const replicationRuleProperty: ReplicationRuleProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\">destinations</a></code> | <code>@aws-cdk/core.IResolvable \\\\| @aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>[]</code> | \`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`. |

---

##### \`destinations\`<sup>Required</sup> <a name=\\"destinations\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\"></a>

\`\`\`typescript
public readonly destinations: IResolvable | IResolvable | ReplicationDestinationProperty[];
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>[]

\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations)

---

### RepositoryAttributes <a name=\\"RepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.Initializer\\"></a>

\`\`\`typescript
import { RepositoryAttributes } from '@aws-cdk/aws-ecr'

const repositoryAttributes: RepositoryAttributes = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | *No description.* |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* string

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

---

### RepositoryProps <a name=\\"RepositoryProps\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.Initializer\\"></a>

\`\`\`typescript
import { RepositoryProps } from '@aws-cdk/aws-ecr'

const repositoryProps: RepositoryProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\">imageScanOnPush</a></code> | <code>boolean</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\">imageTagMutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\">lifecycleRegistryId</a></code> | <code>string</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\">lifecycleRules</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>[]</code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\">removalPolicy</a></code> | <code>@aws-cdk/core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | Name for this repository. |

---

##### \`imageScanOnPush\`<sup>Optional</sup> <a name=\\"imageScanOnPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\"></a>

\`\`\`typescript
public readonly imageScanOnPush: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\"></a>

\`\`\`typescript
public readonly imageTagMutability: TagMutability;
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycleRegistryId\`<sup>Optional</sup> <a name=\\"lifecycleRegistryId\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\"></a>

\`\`\`typescript
public readonly lifecycleRegistryId: string;
\`\`\`

- *Type:* string
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycleRules\`<sup>Optional</sup> <a name=\\"lifecycleRules\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\"></a>

\`\`\`typescript
public readonly lifecycleRules: LifecycleRule[];
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>[]
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removalPolicy\`<sup>Optional</sup> <a name=\\"removalPolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\"></a>

\`\`\`typescript
public readonly removalPolicy: RemovalPolicy;
\`\`\`

- *Type:* @aws-cdk/core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string
- *Default:* Automatically generated name.

Name for this repository.

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\">grantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`typescript
import { AuthorizationToken } from '@aws-cdk/aws-ecr'

AuthorizationToken.grantRead(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---



### PublicGalleryAuthorizationToken <a name=\\"PublicGalleryAuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken\\"></a>

Authorization token to access the global public ECR Gallery via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\">grantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\"></a>

\`\`\`typescript
import { PublicGalleryAuthorizationToken } from '@aws-cdk/aws-ecr'

PublicGalleryAuthorizationToken.grantRead(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---



## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* @aws-cdk/core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

\`\`\`typescript
public addToResourcePolicy(statement: PolicyStatement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* @aws-cdk/aws-iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

\`\`\`typescript
public grant(grantee: IGrantable, actions: string)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.actions\\"></a>

- *Type:* string

---

##### \`grantPull\` <a name=\\"grantPull\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

\`\`\`typescript
public grantPull(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

##### \`grantPullPush\` <a name=\\"grantPullPush\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

\`\`\`typescript
public grantPullPush(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

##### \`onCloudTrailEvent\` <a name=\\"onCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnEventOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* @aws-cdk/aws-events.OnEventOptions

Options for adding the rule.

---

##### \`onCloudTrailImagePushed\` <a name=\\"onCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

\`\`\`typescript
public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`onEvent\` <a name=\\"onEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

\`\`\`typescript
public onEvent(id: string, options?: OnEventOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id\\"></a>

- *Type:* string

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options\\"></a>

- *Type:* @aws-cdk/aws-events.OnEventOptions

---

##### \`onImageScanCompleted\` <a name=\\"onImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

\`\`\`typescript
public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`repositoryUriForDigest\` <a name=\\"repositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

\`\`\`typescript
public repositoryUriForDigest(digest?: string)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* string

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

##### \`repositoryUriForTag\` <a name=\\"repositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

\`\`\`typescript
public repositoryUriForTag(tag?: string)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* string

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code>@aws-cdk/core.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code>@aws-cdk/core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code>@aws-cdk/core.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

\`\`\`typescript
public readonly node: ConstructNode;
\`\`\`

- *Type:* @aws-cdk/core.ConstructNode

The construct tree node for this construct.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* @aws-cdk/core.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* @aws-cdk/core.Stack

The stack in which this resource is defined.

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

The name of the repository.

---

##### \`repositoryUri\`<sup>Required</sup> <a name=\\"repositoryUri\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

\`\`\`typescript
public readonly repositoryUri: string;
\`\`\`

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### TagMutability <a name=\\"TagMutability\\" id=\\"@aws-cdk/aws-ecr.TagMutability\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.MUTABLE\\">MUTABLE</a></code> | allow image tags to be overwritten. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\">IMMUTABLE</a></code> | all image tags within the repository will be immutable which will prevent them from being overwritten. |

---

The tag mutability setting for your repository.

#### \`MUTABLE\` <a name=\\"MUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.MUTABLE\\"></a>

allow image tags to be overwritten.

---


#### \`IMMUTABLE\` <a name=\\"IMMUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\"></a>

all image tags within the repository will be immutable which will prevent them from being overwritten.

---


### TagStatus <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.TagStatus\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.ANY\\">ANY</a></code> | Rule applies to all images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.TAGGED\\">TAGGED</a></code> | Rule applies to tagged images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\">UNTAGGED</a></code> | Rule applies to untagged images. |

---

Select images based on tags.

#### \`ANY\` <a name=\\"ANY\\" id=\\"@aws-cdk/aws-ecr.TagStatus.ANY\\"></a>

Rule applies to all images.

---


#### \`TAGGED\` <a name=\\"TAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.TAGGED\\"></a>

Rule applies to tagged images.

---


#### \`UNTAGGED\` <a name=\\"UNTAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\"></a>

Rule applies to untagged images.

---

"
`;

exports[`typescript snapshot - single module 1`] = `
"# Amazon ECR Construct Library
<!--BEGIN STABILITY BANNER-->

---

![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---

<!--END STABILITY BANNER-->

This package contains constructs for working with Amazon Elastic Container Registry.

## Repositories

Define a repository by creating a new instance of \`Repository\`. A repository
holds multiple verions of a single container image.

\`\`\`ts
const repository = new ecr.Repository(this, 'Repository');
\`\`\`

## Image scanning

Amazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new repository to scan on push, simply enable \`imageScanOnPush\` in the properties

\`\`\`ts
const repository = new ecr.Repository(stack, 'Repo', {
  imageScanOnPush: true
});
\`\`\`

To create an \`onImageScanCompleted\` event rule and trigger the event target

\`\`\`ts
repository.onImageScanCompleted('ImageScanComplete')
  .addTarget(...)
\`\`\`

### Authorization Token

Besides the Amazon ECR APIs, ECR also allows the Docker CLI or a language-specific Docker library to push and pull
images from an ECR repository. However, the Docker CLI does not support native IAM authentication methods and
additional steps must be taken so that Amazon ECR can authenticate and authorize Docker push and pull requests.
More information can be found at at [Registry Authentication](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth).

A Docker authorization token can be obtained using the \`GetAuthorizationToken\` ECR API. The following code snippets
grants an IAM user access to call this API.

\`\`\`ts
import * as iam from '@aws-cdk/aws-iam';
import * as ecr from '@aws-cdk/aws-ecr';

const user = new iam.User(this, 'User', { ... });
ecr.AuthorizationToken.grantRead(user);
\`\`\`

If you access images in the [Public ECR Gallery](https://gallery.ecr.aws/) as well, it is recommended you authenticate to the registry to benefit from
higher rate and bandwidth limits.

> See \`Pricing\` in https://aws.amazon.com/blogs/aws/amazon-ecr-public-a-new-public-container-registry/ and [Service quotas](https://docs.aws.amazon.com/AmazonECR/latest/public/public-service-quotas.html).

The following code snippet grants an IAM user access to retrieve an authorization token for the public gallery.

\`\`\`ts
import * as iam from '@aws-cdk/aws-iam';
import * as ecr from '@aws-cdk/aws-ecr';

const user = new iam.User(this, 'User', { ... });
ecr.PublicGalleryAuthorizationToken.grantRead(user);
\`\`\`

This user can then proceed to login to the registry using one of the [authentication methods](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth).

### Image tag immutability

You can set tag immutability on images in our repository using the \`imageTagMutability\` construct prop.

\`\`\`ts
new ecr.Repository(stack, 'Repo', { imageTagMutability: ecr.TagMutability.IMMUTABLE });
\`\`\`

## Automatically clean up repositories

You can set life cycle rules to automatically clean up old images from your
repository. The first life cycle rule that matches an image will be applied
against that image. For example, the following deletes images older than
30 days, while keeping all images tagged with prod (note that the order
is important here):

\`\`\`ts
repository.addLifecycleRule({ tagPrefixList: ['prod'], maxImageCount: 9999 });
repository.addLifecycleRule({ maxImageAge: cdk.Duration.days(30) });
\`\`\`

# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### CfnPublicRepository <a name=\\"CfnPublicRepository\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository\\"></a>

- *Implements:* @aws-cdk/core.IInspectable

A CloudFormation \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer\\"></a>

\`\`\`typescript
import { CfnPublicRepository } from '@aws-cdk/aws-ecr'

new CfnPublicRepository(scope: Construct, id: string, props?: CfnPublicRepositoryProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\">scope</a></code> | <code>@aws-cdk/core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\">CfnPublicRepositoryProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.scope\\"></a>

- *Type:* @aws-cdk/core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\">CfnPublicRepositoryProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.inspect.parameter.inspector\\"></a>

- *Type:* @aws-cdk/core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\">attrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\">tags</a></code> | <code>@aws-cdk/core.TagManager</code> | \`AWS::ECR::PublicRepository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.attrArn\\"></a>

\`\`\`typescript
public readonly attrArn: string;
\`\`\`

- *Type:* string

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.tags\\"></a>

\`\`\`typescript
public readonly tags: TagManager;
\`\`\`

- *Type:* @aws-cdk/core.TagManager

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

##### \`repositoryCatalogData\`<sup>Required</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryCatalogData\\"></a>

\`\`\`typescript
public readonly repositoryCatalogData: any;
\`\`\`

- *Type:* any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryPolicyText\`<sup>Required</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryPolicyText\\"></a>

\`\`\`typescript
public readonly repositoryPolicyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnRegistryPolicy <a name=\\"CfnRegistryPolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy\\"></a>

- *Implements:* @aws-cdk/core.IInspectable

A CloudFormation \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer\\"></a>

\`\`\`typescript
import { CfnRegistryPolicy } from '@aws-cdk/aws-ecr'

new CfnRegistryPolicy(scope: Construct, id: string, props: CfnRegistryPolicyProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\">scope</a></code> | <code>@aws-cdk/core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\">CfnRegistryPolicyProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.scope\\"></a>

- *Type:* @aws-cdk/core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\">CfnRegistryPolicyProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.inspect.parameter.inspector\\"></a>

- *Type:* @aws-cdk/core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\">attrRegistryId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\">policyText</a></code> | <code>any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`attrRegistryId\`<sup>Required</sup> <a name=\\"attrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.attrRegistryId\\"></a>

\`\`\`typescript
public readonly attrRegistryId: string;
\`\`\`

- *Type:* string

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.policyText\\"></a>

\`\`\`typescript
public readonly policyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicy.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnReplicationConfiguration <a name=\\"CfnReplicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration\\"></a>

- *Implements:* @aws-cdk/core.IInspectable

A CloudFormation \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer\\"></a>

\`\`\`typescript
import { CfnReplicationConfiguration } from '@aws-cdk/aws-ecr'

new CfnReplicationConfiguration(scope: Construct, id: string, props: CfnReplicationConfigurationProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\">scope</a></code> | <code>@aws-cdk/core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\">CfnReplicationConfigurationProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.scope\\"></a>

- *Type:* @aws-cdk/core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\">CfnReplicationConfigurationProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.inspect.parameter.inspector\\"></a>

- *Type:* @aws-cdk/core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\">attrRegistryId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\">replicationConfiguration</a></code> | <code>@aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`attrRegistryId\`<sup>Required</sup> <a name=\\"attrRegistryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.attrRegistryId\\"></a>

\`\`\`typescript
public readonly attrRegistryId: string;
\`\`\`

- *Type:* string

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.replicationConfiguration\\"></a>

\`\`\`typescript
public readonly replicationConfiguration: IResolvable | ReplicationConfigurationProperty;
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnRepository <a name=\\"CfnRepository\\" id=\\"@aws-cdk/aws-ecr.CfnRepository\\"></a>

- *Implements:* @aws-cdk/core.IInspectable

A CloudFormation \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer\\"></a>

\`\`\`typescript
import { CfnRepository } from '@aws-cdk/aws-ecr'

new CfnRepository(scope: Construct, id: string, props?: CfnRepositoryProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\">scope</a></code> | <code>@aws-cdk/core.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps\\">CfnRepositoryProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.scope\\"></a>

- *Type:* @aws-cdk/core.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps\\">CfnRepositoryProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.inspect.parameter.inspector\\"></a>

- *Type:* @aws-cdk/core.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\">attrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\">attrRepositoryUri</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.tags\\">tags</a></code> | <code>@aws-cdk/core.TagManager</code> | \`AWS::ECR::Repository.Tags\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\">imageTagMutability</a></code> | <code>string</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>@aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | \`AWS::ECR::Repository.RepositoryName\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrArn\\"></a>

\`\`\`typescript
public readonly attrArn: string;
\`\`\`

- *Type:* string

---

##### \`attrRepositoryUri\`<sup>Required</sup> <a name=\\"attrRepositoryUri\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.attrRepositoryUri\\"></a>

\`\`\`typescript
public readonly attrRepositoryUri: string;
\`\`\`

- *Type:* string

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.tags\\"></a>

\`\`\`typescript
public readonly tags: TagManager;
\`\`\`

- *Type:* @aws-cdk/core.TagManager

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

##### \`encryptionConfiguration\`<sup>Required</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.encryptionConfiguration\\"></a>

\`\`\`typescript
public readonly encryptionConfiguration: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Required</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageScanningConfiguration\\"></a>

\`\`\`typescript
public readonly imageScanningConfiguration: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`repositoryPolicyText\`<sup>Required</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryPolicyText\\"></a>

\`\`\`typescript
public readonly repositoryPolicyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.imageTagMutability\\"></a>

\`\`\`typescript
public readonly imageTagMutability: string;
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.lifecyclePolicy\\"></a>

\`\`\`typescript
public readonly lifecyclePolicy: IResolvable | LifecyclePolicyProperty;
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### Repository <a name=\\"Repository\\" id=\\"@aws-cdk/aws-ecr.Repository\\"></a>

Define an ECR repository.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

new Repository(scope: Construct, id: string, props?: RepositoryProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps\\">RepositoryProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.Repository.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryProps\\">RepositoryProps</a>

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addLifecycleRule\\">addLifecycleRule</a></code> | Add a life cycle rule to the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |

---

##### \`addLifecycleRule\` <a name=\\"addLifecycleRule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule\\"></a>

\`\`\`typescript
public addLifecycleRule(rule: LifecycleRule)
\`\`\`

###### \`rule\`<sup>Required</sup> <a name=\\"rule\\" id=\\"@aws-cdk/aws-ecr.Repository.addLifecycleRule.parameter.rule\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy\\"></a>

\`\`\`typescript
public addToResourcePolicy(statement: PolicyStatement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.Repository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* @aws-cdk/aws-iam.PolicyStatement

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\">arnForLocalRepository</a></code> | Returns an ECR ARN for a repository that resides in the same account/region as the current stack. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\">fromRepositoryArn</a></code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\">fromRepositoryAttributes</a></code> | Import a repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.fromRepositoryName\\">fromRepositoryName</a></code> | *No description.* |

---

##### \`arnForLocalRepository\` <a name=\\"arnForLocalRepository\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

Repository.arnForLocalRepository(repositoryName: string, scope: IConstruct, account?: string)
\`\`\`

###### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.repositoryName\\"></a>

- *Type:* string

---

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.scope\\"></a>

- *Type:* constructs.IConstruct

---

###### \`account\`<sup>Optional</sup> <a name=\\"account\\" id=\\"@aws-cdk/aws-ecr.Repository.arnForLocalRepository.parameter.account\\"></a>

- *Type:* string

---

##### \`fromRepositoryArn\` <a name=\\"fromRepositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

Repository.fromRepositoryArn(scope: Construct, id: string, repositoryArn: string)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.id\\"></a>

- *Type:* string

---

###### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryArn.parameter.repositoryArn\\"></a>

- *Type:* string

---

##### \`fromRepositoryAttributes\` <a name=\\"fromRepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

Repository.fromRepositoryAttributes(scope: Construct, id: string, attrs: RepositoryAttributes)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.id\\"></a>

- *Type:* string

---

###### \`attrs\`<sup>Required</sup> <a name=\\"attrs\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryAttributes.parameter.attrs\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes\\">RepositoryAttributes</a>

---

##### \`fromRepositoryName\` <a name=\\"fromRepositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName\\"></a>

\`\`\`typescript
import { Repository } from '@aws-cdk/aws-ecr'

Repository.fromRepositoryName(scope: Construct, id: string, repositoryName: string)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.id\\"></a>

- *Type:* string

---

###### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.fromRepositoryName.parameter.repositoryName\\"></a>

- *Type:* string

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.Repository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | The name of the repository. |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryArn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.Repository.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

The name of the repository.

---


### RepositoryBase <a name=\\"RepositoryBase\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase\\"></a>

- *Implements:* <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Base class for ECR repository.

Reused between imported repositories and owned repositories.

#### Initializers <a name=\\"Initializers\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer\\"></a>

\`\`\`typescript
import { RepositoryBase } from '@aws-cdk/aws-ecr'

new RepositoryBase(scope: Construct, id: string, props?: ResourceProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.props\\">props</a></code> | <code>@aws-cdk/core.ResourceProps</code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.Initializer.parameter.props\\"></a>

- *Type:* @aws-cdk/core.ResourceProps

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPull\\">grantPull</a></code> | Grant the given identity permissions to use the images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URL of the repository. Can be used in \`docker push/pull\`. |

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy\\"></a>

\`\`\`typescript
public addToResourcePolicy(statement: PolicyStatement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* @aws-cdk/aws-iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant\\"></a>

\`\`\`typescript
public grant(grantee: IGrantable, actions: string)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grant.parameter.actions\\"></a>

- *Type:* string

---

##### \`grantPull\` <a name=\\"grantPull\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull\\"></a>

\`\`\`typescript
public grantPull(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPull.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

##### \`grantPullPush\` <a name=\\"grantPullPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush\\"></a>

\`\`\`typescript
public grantPullPush(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.grantPullPush.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

##### \`onCloudTrailEvent\` <a name=\\"onCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent\\"></a>

\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnEventOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* @aws-cdk/aws-events.OnEventOptions

Options for adding the rule.

---

##### \`onCloudTrailImagePushed\` <a name=\\"onCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed\\"></a>

\`\`\`typescript
public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`onEvent\` <a name=\\"onEvent\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent\\"></a>

\`\`\`typescript
public onEvent(id: string, options?: OnEventOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.id\\"></a>

- *Type:* string

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onEvent.parameter.options\\"></a>

- *Type:* @aws-cdk/aws-events.OnEventOptions

---

##### \`onImageScanCompleted\` <a name=\\"onImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted\\"></a>

\`\`\`typescript
public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`repositoryUriForDigest\` <a name=\\"repositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest\\"></a>

\`\`\`typescript
public repositoryUriForDigest(digest?: string)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* string

Optional image digest.

---

##### \`repositoryUriForTag\` <a name=\\"repositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag\\"></a>

\`\`\`typescript
public repositoryUriForTag(tag?: string)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* string

Optional image tag.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\">repositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryArn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

The name of the repository.

---

##### \`repositoryUri\`<sup>Required</sup> <a name=\\"repositoryUri\\" id=\\"@aws-cdk/aws-ecr.RepositoryBase.property.repositoryUri\\"></a>

\`\`\`typescript
public readonly repositoryUri: string;
\`\`\`

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### CfnPublicRepositoryProps <a name=\\"CfnPublicRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::PublicRepository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.Initializer\\"></a>

\`\`\`typescript
import { CfnPublicRepositoryProps } from '@aws-cdk/aws-ecr'

const cfnPublicRepositoryProps: CfnPublicRepositoryProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\">repositoryCatalogData</a></code> | <code>any</code> | \`AWS::ECR::PublicRepository.RepositoryCatalogData\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | \`AWS::ECR::PublicRepository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>any</code> | \`AWS::ECR::PublicRepository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\">tags</a></code> | <code>@aws-cdk/core.CfnTag[]</code> | \`AWS::ECR::PublicRepository.Tags\`. |

---

##### \`repositoryCatalogData\`<sup>Optional</sup> <a name=\\"repositoryCatalogData\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryCatalogData\\"></a>

\`\`\`typescript
public readonly repositoryCatalogData: any;
\`\`\`

- *Type:* any

\`AWS::ECR::PublicRepository.RepositoryCatalogData\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

\`AWS::ECR::PublicRepository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`typescript
public readonly repositoryPolicyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::PublicRepository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnPublicRepositoryProps.property.tags\\"></a>

\`\`\`typescript
public readonly tags: CfnTag[];
\`\`\`

- *Type:* @aws-cdk/core.CfnTag[]

\`AWS::ECR::PublicRepository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags)

---

### CfnRegistryPolicyProps <a name=\\"CfnRegistryPolicyProps\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps\\"></a>

Properties for defining a \`AWS::ECR::RegistryPolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.Initializer\\"></a>

\`\`\`typescript
import { CfnRegistryPolicyProps } from '@aws-cdk/aws-ecr'

const cfnRegistryPolicyProps: CfnRegistryPolicyProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\">policyText</a></code> | <code>any</code> | \`AWS::ECR::RegistryPolicy.PolicyText\`. |

---

##### \`policyText\`<sup>Required</sup> <a name=\\"policyText\\" id=\\"@aws-cdk/aws-ecr.CfnRegistryPolicyProps.property.policyText\\"></a>

\`\`\`typescript
public readonly policyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::RegistryPolicy.PolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext)

---

### CfnReplicationConfigurationProps <a name=\\"CfnReplicationConfigurationProps\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps\\"></a>

Properties for defining a \`AWS::ECR::ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.Initializer\\"></a>

\`\`\`typescript
import { CfnReplicationConfigurationProps } from '@aws-cdk/aws-ecr'

const cfnReplicationConfigurationProps: CfnReplicationConfigurationProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\">replicationConfiguration</a></code> | <code>@aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a></code> | \`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`. |

---

##### \`replicationConfiguration\`<sup>Required</sup> <a name=\\"replicationConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps.property.replicationConfiguration\\"></a>

\`\`\`typescript
public readonly replicationConfiguration: IResolvable | ReplicationConfigurationProperty;
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\">ReplicationConfigurationProperty</a>

\`AWS::ECR::ReplicationConfiguration.ReplicationConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration)

---

### CfnRepositoryProps <a name=\\"CfnRepositoryProps\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps\\"></a>

Properties for defining a \`AWS::ECR::Repository\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.Initializer\\"></a>

\`\`\`typescript
import { CfnRepositoryProps } from '@aws-cdk/aws-ecr'

const cfnRepositoryProps: CfnRepositoryProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\">encryptionConfiguration</a></code> | <code>any</code> | \`AWS::ECR::Repository.EncryptionConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\">imageScanningConfiguration</a></code> | <code>any</code> | \`AWS::ECR::Repository.ImageScanningConfiguration\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\">imageTagMutability</a></code> | <code>string</code> | \`AWS::ECR::Repository.ImageTagMutability\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\">lifecyclePolicy</a></code> | <code>@aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a></code> | \`AWS::ECR::Repository.LifecyclePolicy\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | \`AWS::ECR::Repository.RepositoryName\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\">repositoryPolicyText</a></code> | <code>any</code> | \`AWS::ECR::Repository.RepositoryPolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\">tags</a></code> | <code>@aws-cdk/core.CfnTag[]</code> | \`AWS::ECR::Repository.Tags\`. |

---

##### \`encryptionConfiguration\`<sup>Optional</sup> <a name=\\"encryptionConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.encryptionConfiguration\\"></a>

\`\`\`typescript
public readonly encryptionConfiguration: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.EncryptionConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration)

---

##### \`imageScanningConfiguration\`<sup>Optional</sup> <a name=\\"imageScanningConfiguration\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageScanningConfiguration\\"></a>

\`\`\`typescript
public readonly imageScanningConfiguration: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.ImageScanningConfiguration\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration)

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.imageTagMutability\\"></a>

\`\`\`typescript
public readonly imageTagMutability: string;
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.ImageTagMutability\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability)

---

##### \`lifecyclePolicy\`<sup>Optional</sup> <a name=\\"lifecyclePolicy\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.lifecyclePolicy\\"></a>

\`\`\`typescript
public readonly lifecyclePolicy: IResolvable | LifecyclePolicyProperty;
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\">LifecyclePolicyProperty</a>

\`AWS::ECR::Repository.LifecyclePolicy\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy)

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

\`AWS::ECR::Repository.RepositoryName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname)

---

##### \`repositoryPolicyText\`<sup>Optional</sup> <a name=\\"repositoryPolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.repositoryPolicyText\\"></a>

\`\`\`typescript
public readonly repositoryPolicyText: any;
\`\`\`

- *Type:* any

\`AWS::ECR::Repository.RepositoryPolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"@aws-cdk/aws-ecr.CfnRepositoryProps.property.tags\\"></a>

\`\`\`typescript
public readonly tags: CfnTag[];
\`\`\`

- *Type:* @aws-cdk/core.CfnTag[]

\`AWS::ECR::Repository.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags)

---

### LifecyclePolicyProperty <a name=\\"LifecyclePolicyProperty\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.Initializer\\"></a>

\`\`\`typescript
import { LifecyclePolicyProperty } from '@aws-cdk/aws-ecr'

const lifecyclePolicyProperty: LifecyclePolicyProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\">lifecyclePolicyText</a></code> | <code>string</code> | \`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\">registryId</a></code> | <code>string</code> | \`CfnRepository.LifecyclePolicyProperty.RegistryId\`. |

---

##### \`lifecyclePolicyText\`<sup>Optional</sup> <a name=\\"lifecyclePolicyText\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.lifecyclePolicyText\\"></a>

\`\`\`typescript
public readonly lifecyclePolicyText: string;
\`\`\`

- *Type:* string

\`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext)

---

##### \`registryId\`<sup>Optional</sup> <a name=\\"registryId\\" id=\\"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty.property.registryId\\"></a>

\`\`\`typescript
public readonly registryId: string;
\`\`\`

- *Type:* string

\`CfnRepository.LifecyclePolicyProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid)

---

### LifecycleRule <a name=\\"LifecycleRule\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule\\"></a>

An ECR life cycle rule.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.Initializer\\"></a>

\`\`\`typescript
import { LifecycleRule } from '@aws-cdk/aws-ecr'

const lifecycleRule: LifecycleRule = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.description\\">description</a></code> | <code>string</code> | Describes the purpose of the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\">maxImageAge</a></code> | <code>@aws-cdk/core.Duration</code> | The maximum age of images to retain. The value must represent a number of days. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\">maxImageCount</a></code> | <code>number</code> | The maximum number of images to retain. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\">rulePriority</a></code> | <code>number</code> | Controls the order in which rules are evaluated (low to high). |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\">tagPrefixList</a></code> | <code>string[]</code> | Select images that have ALL the given prefixes in their tag. |
| <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\">tagStatus</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a></code> | Select images based on tags. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.description\\"></a>

\`\`\`typescript
public readonly description: string;
\`\`\`

- *Type:* string
- *Default:* No description

Describes the purpose of the rule.

---

##### \`maxImageAge\`<sup>Optional</sup> <a name=\\"maxImageAge\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageAge\\"></a>

\`\`\`typescript
public readonly maxImageAge: Duration;
\`\`\`

- *Type:* @aws-cdk/core.Duration

The maximum age of images to retain. The value must represent a number of days.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`maxImageCount\`<sup>Optional</sup> <a name=\\"maxImageCount\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.maxImageCount\\"></a>

\`\`\`typescript
public readonly maxImageCount: number;
\`\`\`

- *Type:* number

The maximum number of images to retain.

Specify exactly one of maxImageCount and maxImageAge.

---

##### \`rulePriority\`<sup>Optional</sup> <a name=\\"rulePriority\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.rulePriority\\"></a>

\`\`\`typescript
public readonly rulePriority: number;
\`\`\`

- *Type:* number
- *Default:* Automatically assigned

Controls the order in which rules are evaluated (low to high).

All rules must have a unique priority, where lower numbers have higher precedence. The first rule that matches is applied to an image.  There can only be one rule with a tagStatus of Any, and it must have the highest rulePriority.  All rules without a specified priority will have incrementing priorities automatically assigned to them, higher than any rules that DO have priorities.

---

##### \`tagPrefixList\`<sup>Optional</sup> <a name=\\"tagPrefixList\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagPrefixList\\"></a>

\`\`\`typescript
public readonly tagPrefixList: string[];
\`\`\`

- *Type:* string[]

Select images that have ALL the given prefixes in their tag.

Only if tagStatus == TagStatus.Tagged

---

##### \`tagStatus\`<sup>Optional</sup> <a name=\\"tagStatus\\" id=\\"@aws-cdk/aws-ecr.LifecycleRule.property.tagStatus\\"></a>

\`\`\`typescript
public readonly tagStatus: TagStatus;
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagStatus\\">TagStatus</a>
- *Default:* TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise

Select images based on tags.

Only one rule is allowed to select untagged images, and it must have the highest rulePriority.

---

### OnCloudTrailImagePushedOptions <a name=\\"OnCloudTrailImagePushedOptions\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\"></a>

Options for the onCloudTrailImagePushed method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.Initializer\\"></a>

\`\`\`typescript
import { OnCloudTrailImagePushedOptions } from '@aws-cdk/aws-ecr'

const onCloudTrailImagePushedOptions: OnCloudTrailImagePushedOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\">description</a></code> | <code>string</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\">eventPattern</a></code> | <code>@aws-cdk/aws-events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\">ruleName</a></code> | <code>string</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\">target</a></code> | <code>@aws-cdk/aws-events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\">imageTag</a></code> | <code>string</code> | Only watch changes to this image tag. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.description\\"></a>

\`\`\`typescript
public readonly description: string;
\`\`\`

- *Type:* string
- *Default:* No description

A description of the rule's purpose.

---

##### \`eventPattern\`<sup>Optional</sup> <a name=\\"eventPattern\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.eventPattern\\"></a>

\`\`\`typescript
public readonly eventPattern: EventPattern;
\`\`\`

- *Type:* @aws-cdk/aws-events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`ruleName\`<sup>Optional</sup> <a name=\\"ruleName\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.ruleName\\"></a>

\`\`\`typescript
public readonly ruleName: string;
\`\`\`

- *Type:* string
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.target\\"></a>

\`\`\`typescript
public readonly target: IRuleTarget;
\`\`\`

- *Type:* @aws-cdk/aws-events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`imageTag\`<sup>Optional</sup> <a name=\\"imageTag\\" id=\\"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions.property.imageTag\\"></a>

\`\`\`typescript
public readonly imageTag: string;
\`\`\`

- *Type:* string
- *Default:* Watch changes to all tags

Only watch changes to this image tag.

---

### OnImageScanCompletedOptions <a name=\\"OnImageScanCompletedOptions\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\"></a>

Options for the OnImageScanCompleted method.

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.Initializer\\"></a>

\`\`\`typescript
import { OnImageScanCompletedOptions } from '@aws-cdk/aws-ecr'

const onImageScanCompletedOptions: OnImageScanCompletedOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\">description</a></code> | <code>string</code> | A description of the rule's purpose. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\">eventPattern</a></code> | <code>@aws-cdk/aws-events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\">ruleName</a></code> | <code>string</code> | A name for the rule. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\">target</a></code> | <code>@aws-cdk/aws-events.IRuleTarget</code> | The target to register for the event. |
| <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\">imageTags</a></code> | <code>string[]</code> | Only watch changes to the image tags spedified. |

---

##### \`description\`<sup>Optional</sup> <a name=\\"description\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.description\\"></a>

\`\`\`typescript
public readonly description: string;
\`\`\`

- *Type:* string
- *Default:* No description

A description of the rule's purpose.

---

##### \`eventPattern\`<sup>Optional</sup> <a name=\\"eventPattern\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.eventPattern\\"></a>

\`\`\`typescript
public readonly eventPattern: EventPattern;
\`\`\`

- *Type:* @aws-cdk/aws-events.EventPattern
- *Default:* No additional filtering based on an event pattern.

Additional restrictions for the event to route to the specified target.

The method that generates the rule probably imposes some type of event filtering. The filtering implied by what you pass here is added on top of that filtering.

> [https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)

---

##### \`ruleName\`<sup>Optional</sup> <a name=\\"ruleName\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.ruleName\\"></a>

\`\`\`typescript
public readonly ruleName: string;
\`\`\`

- *Type:* string
- *Default:* AWS CloudFormation generates a unique physical ID.

A name for the rule.

---

##### \`target\`<sup>Optional</sup> <a name=\\"target\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.target\\"></a>

\`\`\`typescript
public readonly target: IRuleTarget;
\`\`\`

- *Type:* @aws-cdk/aws-events.IRuleTarget
- *Default:* No target is added to the rule. Use \`addTarget()\` to add a target.

The target to register for the event.

---

##### \`imageTags\`<sup>Optional</sup> <a name=\\"imageTags\\" id=\\"@aws-cdk/aws-ecr.OnImageScanCompletedOptions.property.imageTags\\"></a>

\`\`\`typescript
public readonly imageTags: string[];
\`\`\`

- *Type:* string[]
- *Default:* Watch the changes to the repository with all image tags

Only watch changes to the image tags spedified.

Leave it undefined to watch the full repository.

---

### ReplicationConfigurationProperty <a name=\\"ReplicationConfigurationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.Initializer\\"></a>

\`\`\`typescript
import { ReplicationConfigurationProperty } from '@aws-cdk/aws-ecr'

const replicationConfigurationProperty: ReplicationConfigurationProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\">rules</a></code> | <code>@aws-cdk/core.IResolvable \\\\| @aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>[]</code> | \`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`. |

---

##### \`rules\`<sup>Required</sup> <a name=\\"rules\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty.property.rules\\"></a>

\`\`\`typescript
public readonly rules: IResolvable | IResolvable | ReplicationRuleProperty[];
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\">ReplicationRuleProperty</a>[]

\`CfnReplicationConfiguration.ReplicationConfigurationProperty.Rules\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration-rules)

---

### ReplicationDestinationProperty <a name=\\"ReplicationDestinationProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.Initializer\\"></a>

\`\`\`typescript
import { ReplicationDestinationProperty } from '@aws-cdk/aws-ecr'

const replicationDestinationProperty: ReplicationDestinationProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\">region</a></code> | <code>string</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\">registryId</a></code> | <code>string</code> | \`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`. |

---

##### \`region\`<sup>Required</sup> <a name=\\"region\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.region\\"></a>

\`\`\`typescript
public readonly region: string;
\`\`\`

- *Type:* string

\`CfnReplicationConfiguration.ReplicationDestinationProperty.Region\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-region)

---

##### \`registryId\`<sup>Required</sup> <a name=\\"registryId\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty.property.registryId\\"></a>

\`\`\`typescript
public readonly registryId: string;
\`\`\`

- *Type:* string

\`CfnReplicationConfiguration.ReplicationDestinationProperty.RegistryId\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationdestination.html#cfn-ecr-replicationconfiguration-replicationdestination-registryid)

---

### ReplicationRuleProperty <a name=\\"ReplicationRuleProperty\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html)

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.Initializer\\"></a>

\`\`\`typescript
import { ReplicationRuleProperty } from '@aws-cdk/aws-ecr'

const replicationRuleProperty: ReplicationRuleProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\">destinations</a></code> | <code>@aws-cdk/core.IResolvable \\\\| @aws-cdk/core.IResolvable \\\\| <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>[]</code> | \`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`. |

---

##### \`destinations\`<sup>Required</sup> <a name=\\"destinations\\" id=\\"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty.property.destinations\\"></a>

\`\`\`typescript
public readonly destinations: IResolvable | IResolvable | ReplicationDestinationProperty[];
\`\`\`

- *Type:* @aws-cdk/core.IResolvable | @aws-cdk/core.IResolvable | <a href=\\"#@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty\\">ReplicationDestinationProperty</a>[]

\`CfnReplicationConfiguration.ReplicationRuleProperty.Destinations\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-replicationconfiguration-replicationrule.html#cfn-ecr-replicationconfiguration-replicationrule-destinations)

---

### RepositoryAttributes <a name=\\"RepositoryAttributes\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.Initializer\\"></a>

\`\`\`typescript
import { RepositoryAttributes } from '@aws-cdk/aws-ecr'

const repositoryAttributes: RepositoryAttributes = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | *No description.* |

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryArn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* string

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryAttributes.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

---

### RepositoryProps <a name=\\"RepositoryProps\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.Initializer\\"></a>

\`\`\`typescript
import { RepositoryProps } from '@aws-cdk/aws-ecr'

const repositoryProps: RepositoryProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\">imageScanOnPush</a></code> | <code>boolean</code> | Enable the scan on push when creating the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\">imageTagMutability</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a></code> | The tag mutability setting for the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\">lifecycleRegistryId</a></code> | <code>string</code> | The AWS account ID associated with the registry that contains the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\">lifecycleRules</a></code> | <code><a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>[]</code> | Life cycle rules to apply to this registry. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\">removalPolicy</a></code> | <code>@aws-cdk/core.RemovalPolicy</code> | Determine what happens to the repository when the resource/stack is deleted. |
| <code><a href=\\"#@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | Name for this repository. |

---

##### \`imageScanOnPush\`<sup>Optional</sup> <a name=\\"imageScanOnPush\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageScanOnPush\\"></a>

\`\`\`typescript
public readonly imageScanOnPush: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Enable the scan on push when creating the repository.

---

##### \`imageTagMutability\`<sup>Optional</sup> <a name=\\"imageTagMutability\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.imageTagMutability\\"></a>

\`\`\`typescript
public readonly imageTagMutability: TagMutability;
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.TagMutability\\">TagMutability</a>
- *Default:* TagMutability.MUTABLE

The tag mutability setting for the repository.

If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten.

---

##### \`lifecycleRegistryId\`<sup>Optional</sup> <a name=\\"lifecycleRegistryId\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRegistryId\\"></a>

\`\`\`typescript
public readonly lifecycleRegistryId: string;
\`\`\`

- *Type:* string
- *Default:* The default registry is assumed.

The AWS account ID associated with the registry that contains the repository.

> [https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html)

---

##### \`lifecycleRules\`<sup>Optional</sup> <a name=\\"lifecycleRules\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.lifecycleRules\\"></a>

\`\`\`typescript
public readonly lifecycleRules: LifecycleRule[];
\`\`\`

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.LifecycleRule\\">LifecycleRule</a>[]
- *Default:* No life cycle rules

Life cycle rules to apply to this registry.

---

##### \`removalPolicy\`<sup>Optional</sup> <a name=\\"removalPolicy\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.removalPolicy\\"></a>

\`\`\`typescript
public readonly removalPolicy: RemovalPolicy;
\`\`\`

- *Type:* @aws-cdk/core.RemovalPolicy
- *Default:* RemovalPolicy.Retain

Determine what happens to the repository when the resource/stack is deleted.

---

##### \`repositoryName\`<sup>Optional</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.RepositoryProps.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string
- *Default:* Automatically generated name.

Name for this repository.

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\">grantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`typescript
import { AuthorizationToken } from '@aws-cdk/aws-ecr'

AuthorizationToken.grantRead(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---



### PublicGalleryAuthorizationToken <a name=\\"PublicGalleryAuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken\\"></a>

Authorization token to access the global public ECR Gallery via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth](https://docs.aws.amazon.com/AmazonECR/latest/public/public-registries.html#public-registry-auth)


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\">grantRead</a></code> | Grant access to retrieve an authorization token. |

---

##### \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead\\"></a>

\`\`\`typescript
import { PublicGalleryAuthorizationToken } from '@aws-cdk/aws-ecr'

PublicGalleryAuthorizationToken.grantRead(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---



## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* @aws-cdk/core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\">addToResourcePolicy</a></code> | Add a policy statement to the repository's resource policy. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grant\\">grant</a></code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPull\\">grantPull</a></code> | Grant the given identity permissions to pull images in this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.grantPullPush\\">grantPullPush</a></code> | Grant the given identity permissions to pull and push images to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\">onCloudTrailEvent</a></code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\">onCloudTrailImagePushed</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onEvent\\">onEvent</a></code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\">onImageScanCompleted</a></code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\">repositoryUriForDigest</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\">repositoryUriForTag</a></code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

##### \`addToResourcePolicy\` <a name=\\"addToResourcePolicy\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy\\"></a>

\`\`\`typescript
public addToResourcePolicy(statement: PolicyStatement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement\\"></a>

- *Type:* @aws-cdk/aws-iam.PolicyStatement

---

##### \`grant\` <a name=\\"grant\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant\\"></a>

\`\`\`typescript
public grant(grantee: IGrantable, actions: string)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

###### \`actions\`<sup>Required</sup> <a name=\\"actions\\" id=\\"@aws-cdk/aws-ecr.IRepository.grant.parameter.actions\\"></a>

- *Type:* string

---

##### \`grantPull\` <a name=\\"grantPull\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull\\"></a>

\`\`\`typescript
public grantPull(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

##### \`grantPullPush\` <a name=\\"grantPullPush\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush\\"></a>

\`\`\`typescript
public grantPullPush(grantee: IGrantable)
\`\`\`

###### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee\\"></a>

- *Type:* @aws-cdk/aws-iam.IGrantable

---

##### \`onCloudTrailEvent\` <a name=\\"onCloudTrailEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent\\"></a>

\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnEventOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options\\"></a>

- *Type:* @aws-cdk/aws-events.OnEventOptions

Options for adding the rule.

---

##### \`onCloudTrailImagePushed\` <a name=\\"onCloudTrailImagePushed\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed\\"></a>

\`\`\`typescript
public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a>

Options for adding the rule.

---

##### \`onEvent\` <a name=\\"onEvent\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent\\"></a>

\`\`\`typescript
public onEvent(id: string, options?: OnEventOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id\\"></a>

- *Type:* string

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options\\"></a>

- *Type:* @aws-cdk/aws-events.OnEventOptions

---

##### \`onImageScanCompleted\` <a name=\\"onImageScanCompleted\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted\\"></a>

\`\`\`typescript
public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id\\"></a>

- *Type:* string

The id of the rule.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options\\"></a>

- *Type:* <a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a>

Options for adding the rule.

---

##### \`repositoryUriForDigest\` <a name=\\"repositoryUriForDigest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest\\"></a>

\`\`\`typescript
public repositoryUriForDigest(digest?: string)
\`\`\`

###### \`digest\`<sup>Optional</sup> <a name=\\"digest\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest\\"></a>

- *Type:* string

Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).

---

##### \`repositoryUriForTag\` <a name=\\"repositoryUriForTag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag\\"></a>

\`\`\`typescript
public repositoryUriForTag(tag?: string)
\`\`\`

###### \`tag\`<sup>Optional</sup> <a name=\\"tag\\" id=\\"@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag\\"></a>

- *Type:* string

Image tag to use (tools usually default to \\"latest\\" if omitted).

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.node\\">node</a></code> | <code>@aws-cdk/core.ConstructNode</code> | The construct tree node for this construct. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.env\\">env</a></code> | <code>@aws-cdk/core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.stack\\">stack</a></code> | <code>@aws-cdk/core.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\">repositoryArn</a></code> | <code>string</code> | The ARN of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryName\\">repositoryName</a></code> | <code>string</code> | The name of the repository. |
| <code><a href=\\"#@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\">repositoryUri</a></code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.node\\"></a>

\`\`\`typescript
public readonly node: ConstructNode;
\`\`\`

- *Type:* @aws-cdk/core.ConstructNode

The construct tree node for this construct.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.env\\"></a>

\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* @aws-cdk/core.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.stack\\"></a>

\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* @aws-cdk/core.Stack

The stack in which this resource is defined.

---

##### \`repositoryArn\`<sup>Required</sup> <a name=\\"repositoryArn\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryArn\\"></a>

\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* string

The ARN of the repository.

---

##### \`repositoryName\`<sup>Required</sup> <a name=\\"repositoryName\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryName\\"></a>

\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* string

The name of the repository.

---

##### \`repositoryUri\`<sup>Required</sup> <a name=\\"repositoryUri\\" id=\\"@aws-cdk/aws-ecr.IRepository.property.repositoryUri\\"></a>

\`\`\`typescript
public readonly repositoryUri: string;
\`\`\`

- *Type:* string

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### TagMutability <a name=\\"TagMutability\\" id=\\"@aws-cdk/aws-ecr.TagMutability\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.MUTABLE\\">MUTABLE</a></code> | allow image tags to be overwritten. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\">IMMUTABLE</a></code> | all image tags within the repository will be immutable which will prevent them from being overwritten. |

---

The tag mutability setting for your repository.

#### \`MUTABLE\` <a name=\\"MUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.MUTABLE\\"></a>

allow image tags to be overwritten.

---


#### \`IMMUTABLE\` <a name=\\"IMMUTABLE\\" id=\\"@aws-cdk/aws-ecr.TagMutability.IMMUTABLE\\"></a>

all image tags within the repository will be immutable which will prevent them from being overwritten.

---


### TagStatus <a name=\\"TagStatus\\" id=\\"@aws-cdk/aws-ecr.TagStatus\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.ANY\\">ANY</a></code> | Rule applies to all images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.TAGGED\\">TAGGED</a></code> | Rule applies to tagged images. |
| <code><a href=\\"#@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\">UNTAGGED</a></code> | Rule applies to untagged images. |

---

Select images based on tags.

#### \`ANY\` <a name=\\"ANY\\" id=\\"@aws-cdk/aws-ecr.TagStatus.ANY\\"></a>

Rule applies to all images.

---


#### \`TAGGED\` <a name=\\"TAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.TAGGED\\"></a>

Rule applies to tagged images.

---


#### \`UNTAGGED\` <a name=\\"UNTAGGED\\" id=\\"@aws-cdk/aws-ecr.TagStatus.UNTAGGED\\"></a>

Rule applies to untagged images.

---

"
`;

exports[`typescript snapshot - submodules 1`] = `
"# Amazon EKS Construct Library
<!--BEGIN STABILITY BANNER-->

---

![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---

<!--END STABILITY BANNER-->

This construct library allows you to define [Amazon Elastic Container Service for Kubernetes (EKS)](https://aws.amazon.com/eks/) clusters.
In addition, the library also supports defining Kubernetes resource manifests within EKS clusters.

## Table Of Contents

* [Quick Start](#quick-start)
* [API Reference](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-eks-readme.html)
* [Architectural Overview](#architectural-overview)
* [Provisioning clusters](#provisioning-clusters)
  * [Managed node groups](#managed-node-groups)
  * [Fargate Profiles](#fargate-profiles)
  * [Self-managed nodes](#self-managed-nodes)
  * [Endpoint Access](#endpoint-access)
  * [VPC Support](#vpc-support)
  * [Kubectl Support](#kubectl-support)
  * [ARM64 Support](#arm64-support)
  * [Masters Role](#masters-role)
  * [Encryption](#encryption)
* [Permissions and Security](#permissions-and-security)
* [Applying Kubernetes Resources](#applying-kubernetes-resources)
  * [Kubernetes Manifests](#kubernetes-manifests)
  * [Helm Charts](#helm-charts)
  * [CDK8s Charts](#cdk8s-charts)
* [Patching Kubernetes Resources](#patching-kubernetes-resources)
* [Querying Kubernetes Resources](#querying-kubernetes-resources)
* [Using existing clusters](#using-existing-clusters)
* [Known Issues and Limitations](#known-issues-and-limitations)

## Quick Start

This example defines an Amazon EKS cluster with the following configuration:

* Dedicated VPC with default configuration (Implicitly created using [ec2.Vpc](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#vpc))
* A Kubernetes pod with a container based on the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes) image.

\`\`\`ts
// provisiong a cluster
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
});

// apply a kubernetes manifest to the cluster
cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ]
      }
    ]
  }
});
\`\`\`

In order to interact with your cluster through \`kubectl\`, you can use the \`aws eks update-kubeconfig\` [AWS CLI command](https://docs.aws.amazon.com/cli/latest/reference/eks/update-kubeconfig.html)
to configure your local kubeconfig. The EKS module will define a CloudFormation output in your stack which contains the command to run. For example:

\`\`\`plaintext
Outputs:
ClusterConfigCommand43AAE40F = aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
\`\`\`

Execute the \`aws eks update-kubeconfig ...\` command in your terminal to create or update a local kubeconfig context:

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

And now you can simply use \`kubectl\`:

\`\`\`console
$ kubectl get all -n kube-system
NAME                           READY   STATUS    RESTARTS   AGE
pod/aws-node-fpmwv             1/1     Running   0          21m
pod/aws-node-m9htf             1/1     Running   0          21m
pod/coredns-5cb4fb54c7-q222j   1/1     Running   0          23m
pod/coredns-5cb4fb54c7-v9nxx   1/1     Running   0          23m
...
\`\`\`

## Architectural Overview

The following is a qualitative diagram of the various possible components involved in the cluster deployment.

\`\`\`text
 +-----------------------------------------------+               +-----------------+
 |                 EKS Cluster                   |    kubectl    |                 |
 |-----------------------------------------------|<-------------+| Kubectl Handler |
 |                                               |               |                 |
 |                                               |               +-----------------+
 | +--------------------+    +-----------------+ |
 | |                    |    |                 | |
 | | Managed Node Group |    | Fargate Profile | |               +-----------------+
 | |                    |    |                 | |               |                 |
 | +--------------------+    +-----------------+ |               | Cluster Handler |
 |                                               |               |                 |
 +-----------------------------------------------+               +-----------------+
    ^                                   ^                          +
    |                                   |                          |
    | connect self managed capacity     |                          | aws-sdk
    |                                   | create/update/delete     |
    +                                   |                          v
 +--------------------+                 +              +-------------------+
 |                    |                 --------------+| eks.amazonaws.com |
 | Auto Scaling Group |                                +-------------------+
 |                    |
 +--------------------+
\`\`\`

In a nutshell:

* \`EKS Cluster\` - The cluster endpoint created by EKS.
* \`Managed Node Group\` - EC2 worker nodes managed by EKS.
* \`Fargate Profile\` - Fargate worker nodes managed by EKS.
* \`Auto Scaling Group\` - EC2 worker nodes managed by the user.
* \`KubectlHandler\` - Lambda function for invoking \`kubectl\` commands on the cluster - created by CDK.
* \`ClusterHandler\` - Lambda function for interacting with EKS API to manage the cluster lifecycle - created by CDK.

A more detailed breakdown of each is provided further down this README.

## Provisioning clusters

Creating a new cluster is done using the \`Cluster\` or \`FargateCluster\` constructs. The only required property is the kubernetes \`version\`.

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

You can also use \`FargateCluster\` to provision a cluster that uses only fargate workers.

\`\`\`ts
new eks.FargateCluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

> **NOTE: Only 1 cluster per stack is supported.** If you have a use-case for multiple clusters per stack, or would like to understand more about this limitation, see <https://github.com/aws/aws-cdk/issues/10073>.

Below you'll find a few important cluster configuration options. First of which is Capacity.
Capacity is the amount and the type of worker nodes that are available to the cluster for deploying resources. Amazon EKS offers 3 ways of configuring capacity, which you can combine as you like:

### Managed node groups

Amazon EKS managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters.
With Amazon EKS managed node groups, you don’t need to separately provision or register the Amazon EC2 instances that provide compute capacity to run your Kubernetes applications. You can create, update, or terminate nodes for your cluster with a single operation. Nodes run using the latest Amazon EKS optimized AMIs in your AWS account while node updates and terminations gracefully drain nodes to ensure that your applications stay available.

> For more details visit [Amazon EKS Managed Node Groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).

**Managed Node Groups are the recommended way to allocate cluster capacity.**

By default, this library will allocate a managed node group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).

At cluster instantiation time, you can customize the number of instances and their type:

\`\`\`ts
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 5,
  defaultCapacityInstance: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.SMALL),
});
\`\`\`

To access the node group that was created on your behalf, you can use \`cluster.defaultNodegroup\`.

Additional customizations are available post instantiation. To apply them, set the default capacity to 0, and use the \`cluster.addNodegroupCapacity\` method:

\`\`\`ts
const cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacity: 0,
});

cluster.addNodegroupCapacity('custom-node-group', {
  instanceTypes: [new ec2.InstanceType('m5.large')],
  minSize: 4,
  diskSize: 100,
  amiType: eks.NodegroupAmiType.AL2_X86_64_GPU,
  ...
});
\`\`\`

#### Spot Instances Support

Use \`capacityType\` to create managed node groups comprised of spot instances. To maximize the availability of your applications while using
Spot Instances, we recommend that you configure a Spot managed node group to use multiple instance types with the \`instanceTypes\` property.

> For more details visit [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types).


\`\`\`ts
cluster.addNodegroupCapacity('extra-ng-spot', {
  instanceTypes: [
    new ec2.InstanceType('c5.large'),
    new ec2.InstanceType('c5a.large'),
    new ec2.InstanceType('c5d.large'),
  ],
  minSize: 3,
  capacityType: eks.CapacityType.SPOT,
});

\`\`\`

#### Launch Template Support

You can specify a launch template that the node group will use. For example, this can be useful if you want to use
a custom AMI or add custom user data.

When supplying a custom user data script, it must be encoded in the MIME multi-part archive format, since Amazon EKS merges with its own user data. Visit the [Launch Template Docs](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html#launch-template-user-data)
for mode details.

\`\`\`ts
const userData = \`MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\\"==MYBOUNDARY==\\"

--==MYBOUNDARY==
Content-Type: text/x-shellscript; charset=\\"us-ascii\\"

#!/bin/bash
echo \\"Running custom user data script\\"

--==MYBOUNDARY==--\\\\\\\\
\`;
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    instanceType: 't3.small',
    userData: Fn.base64(userData),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});

\`\`\`

Note that when using a custom AMI, Amazon EKS doesn't merge any user data. Which means you do not need the multi-part encoding. and are responsible for supplying the required bootstrap commands for nodes to join the cluster.
In the following example, \`/ect/eks/bootstrap.sh\` from the AMI will be used to bootstrap the node.

\`\`\`ts
const userData = ec2.UserData.forLinux();
userData.addCommands(
  'set -o xtrace',
  \`/etc/eks/bootstrap.sh \${cluster.clusterName}\`,
);
const lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {
  launchTemplateData: {
    imageId: 'some-ami-id', // custom AMI
    instanceType: 't3.small',
    userData: Fn.base64(userData.render()),
  },
});
cluster.addNodegroupCapacity('extra-ng', {
  launchTemplateSpec: {
    id: lt.ref,
    version: lt.attrLatestVersionNumber,
  },
});
\`\`\`

You may specify one \`instanceType\` in the launch template or multiple \`instanceTypes\` in the node group, **but not both**.

> For more details visit [Launch Template Support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).

Graviton 2 instance types are supported including \`c6g\`, \`m6g\`, \`r6g\` and \`t4g\`.

### Fargate profiles

AWS Fargate is a technology that provides on-demand, right-sized compute
capacity for containers. With AWS Fargate, you no longer have to provision,
configure, or scale groups of virtual machines to run containers. This removes
the need to choose server types, decide when to scale your node groups, or
optimize cluster packing.

You can control which pods start on Fargate and how they run with Fargate
Profiles, which are defined as part of your Amazon EKS cluster.

See [Fargate Considerations](https://docs.aws.amazon.com/eks/latest/userguide/fargate.html#fargate-considerations) in the AWS EKS User Guide.

You can add Fargate Profiles to any EKS cluster defined in your CDK app
through the \`addFargateProfile()\` method. The following example adds a profile
that will match all pods from the \\"default\\" namespace:

\`\`\`ts
cluster.addFargateProfile('MyProfile', {
  selectors: [ { namespace: 'default' } ]
});
\`\`\`

You can also directly use the \`FargateProfile\` construct to create profiles under different scopes:

\`\`\`ts
new eks.FargateProfile(scope, 'MyProfile', {
  cluster,
  ...
});
\`\`\`

To create an EKS cluster that **only** uses Fargate capacity, you can use \`FargateCluster\`.
The following code defines an Amazon EKS cluster with a default Fargate Profile that matches all pods from the \\"kube-system\\" and \\"default\\" namespaces. It is also configured to [run CoreDNS on Fargate](https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html#fargate-gs-coredns).

\`\`\`ts
const cluster = new eks.FargateCluster(this, 'MyCluster', {
  version: eks.KubernetesVersion.V1_19,
});
\`\`\`

**NOTE**: Classic Load Balancers and Network Load Balancers are not supported on
pods running on Fargate. For ingress, we recommend that you use the [ALB Ingress
Controller](https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html)
on Amazon EKS (minimum version v1.1.4).

### Self-managed nodes

Another way of allocating capacity to an EKS cluster is by using self-managed nodes.
EC2 instances that are part of the auto-scaling group will serve as worker nodes for the cluster.
This type of capacity is also commonly referred to as *EC2 Capacity** or *EC2 Nodes*.

For a detailed overview please visit [Self Managed Nodes](https://docs.aws.amazon.com/eks/latest/userguide/worker.html).

Creating an auto-scaling group and connecting it to the cluster is done using the \`cluster.addAutoScalingGroupCapacity\` method:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('frontend-nodes', {
  instanceType: new ec2.InstanceType('t2.medium'),
  minCapacity: 3,
  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC }
});
\`\`\`

To connect an already initialized auto-scaling group, use the \`cluster.connectAutoScalingGroupCapacity()\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...);
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

In both cases, the [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html#cluster-sg) will be automatically attached to
the auto-scaling group, allowing for traffic to flow freely between managed and self-managed nodes.

> **Note:** The default \`updateType\` for auto-scaling groups does not replace existing nodes. Since security groups are determined at launch time, self-managed nodes that were provisioned with version \`1.78.0\` or lower, will not be updated.
> To apply the new configuration on all your self-managed nodes, you'll need to replace the nodes using the \`UpdateType.REPLACING_UPDATE\` policy for the [\`updateType\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-autoscaling.AutoScalingGroup.html#updatetypespan-classapi-icon-api-icon-deprecated-titlethis-api-element-is-deprecated-its-use-is-not-recommended%EF%B8%8Fspan) property.

You can customize the [/etc/eks/boostrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh) script, which is responsible
for bootstrapping the node to the EKS cluster. For example, you can use \`kubeletExtraArgs\` to add custom node labels or taints.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  instanceType: new ec2.InstanceType('t3.large'),
  minCapacity: 2,
  bootstrapOptions: {
    kubeletExtraArgs: '--node-labels foo=bar,goo=far',
    awsApiRetryAttempts: 5
  }
});
\`\`\`

To disable bootstrapping altogether (i.e. to fully customize user-data), set \`bootstrapEnabled\` to \`false\`.
You can also configure the cluster to use an auto-scaling group as the default capacity:

\`\`\`ts
cluster = new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  defaultCapacityType: eks.DefaultCapacityType.EC2,
});
\`\`\`

This will allocate an auto-scaling group with 2 *m5.large* instances (this instance type suits most common use-cases, and is good value for money).
To access the \`AutoScalingGroup\` that was created on your behalf, you can use \`cluster.defaultCapacity\`.
You can also independently create an \`AutoScalingGroup\` and connect it to the cluster using the \`cluster.connectAutoScalingGroupCapacity\` method:

\`\`\`ts
const asg = new ec2.AutoScalingGroup(...)
cluster.connectAutoScalingGroupCapacity(asg);
\`\`\`

This will add the necessary user-data to access the apiserver and configure all connections, roles, and tags needed for the instances in the auto-scaling group to properly join the cluster.

#### Spot Instances

When using self-managed nodes, you can configure the capacity to use spot instances, greatly reducing capacity cost.
To enable spot capacity, use the \`spotPrice\` property:

\`\`\`ts
cluster.addAutoScalingGroupCapacity('spot', {
  spotPrice: '0.1094',
  instanceType: new ec2.InstanceType('t3.large'),
  maxCapacity: 10
});
\`\`\`

> Spot instance nodes will be labeled with \`lifecycle=Ec2Spot\` and tainted with \`PreferNoSchedule\`.

The [AWS Node Termination Handler](https://github.com/aws/aws-node-termination-handler) \`DaemonSet\` will be
installed from [Amazon EKS Helm chart repository](https://github.com/aws/eks-charts/tree/master/stable/aws-node-termination-handler) on these nodes.
The termination handler ensures that the Kubernetes control plane responds appropriately to events that
can cause your EC2 instance to become unavailable, such as [EC2 maintenance events](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html)
and [EC2 Spot interruptions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html) and helps gracefully stop all pods running on spot nodes that are about to be
terminated.

> Handler Version: [1.7.0](https://github.com/aws/aws-node-termination-handler/releases/tag/v1.7.0)
>
> Chart Version: [0.9.5](https://github.com/aws/eks-charts/blob/v0.0.28/stable/aws-node-termination-handler/Chart.yaml)

To disable the installation of the termination handler, set the \`spotInterruptHandler\` property to \`false\`. This applies both to \`addAutoScalingGroupCapacity\` and \`connectAutoScalingGroupCapacity\`.

#### Bottlerocket

[Bottlerocket](https://aws.amazon.com/bottlerocket/) is a Linux-based open-source operating system that is purpose-built by Amazon Web Services for running containers on virtual machines or bare metal hosts.
At this moment, \`Bottlerocket\` is only supported when using self-managed auto-scaling groups.

> **NOTICE**: Bottlerocket is only available in [some supported AWS regions](https://github.com/bottlerocket-os/bottlerocket/blob/develop/QUICKSTART-EKS.md#finding-an-ami).

The following example will create an auto-scaling group of 2 \`t3.small\` Linux instances running with the \`Bottlerocket\` AMI.

\`\`\`ts
cluster.addAutoScalingGroupCapacity('BottlerocketNodes', {
  instanceType: new ec2.InstanceType('t3.small'),
  minCapacity:  2,
  machineImageType: eks.MachineImageType.BOTTLEROCKET
});
\`\`\`

The specific Bottlerocket AMI variant will be auto selected according to the k8s version for the \`x86_64\` architecture.
For example, if the Amazon EKS cluster version is \`1.17\`, the Bottlerocket AMI variant will be auto selected as
\`aws-k8s-1.17\` behind the scene.

> See [Variants](https://github.com/bottlerocket-os/bottlerocket/blob/develop/README.md#variants) for more details.

Please note Bottlerocket does not allow to customize bootstrap options and \`bootstrapOptions\` properties is not supported when you create the \`Bottlerocket\` capacity.

### Endpoint Access

When you create a new cluster, Amazon EKS creates an endpoint for the managed Kubernetes API server that you use to communicate with your cluster (using Kubernetes management tools such as \`kubectl\`)

By default, this API server endpoint is public to the internet, and access to the API server is secured using a combination of
AWS Identity and Access Management (IAM) and native Kubernetes [Role Based Access Control](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) (RBAC).

You can configure the [cluster endpoint access](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) by using the \`endpointAccess\` property:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  endpointAccess: eks.EndpointAccess.PRIVATE // No access outside of your VPC.
});
\`\`\`

The default value is \`eks.EndpointAccess.PUBLIC_AND_PRIVATE\`. Which means the cluster endpoint is accessible from outside of your VPC, but worker node traffic and \`kubectl\` commands issued by this library stay within your VPC.

### VPC Support

You can specify the VPC of the cluster using the \`vpc\` and \`vpcSubnets\` properties:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');

new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  vpc,
  vpcSubnets: [{ subnetType: ec2.SubnetType.PRIVATE }]
});
\`\`\`

> Note: Isolated VPCs (i.e with no internet access) are not currently supported. See https://github.com/aws/aws-cdk/issues/12171

If you do not specify a VPC, one will be created on your behalf, which you can then access via \`cluster.vpc\`. The cluster VPC will be associated to any EKS managed capacity (i.e Managed Node Groups and Fargate Profiles).

If you allocate self managed capacity, you can specify which subnets should the auto-scaling group use:

\`\`\`ts
const vpc = new ec2.Vpc(this, 'Vpc');
cluster.addAutoScalingGroupCapacity('nodes', {
  vpcSubnets: { subnets: vpc.privateSubnets }
});
\`\`\`

There are two additional components you might want to provision within the VPC.

#### Kubectl Handler

The \`KubectlHandler\` is a Lambda function responsible to issuing \`kubectl\` and \`helm\` commands against the cluster when you add resource manifests to the cluster.

The handler association to the VPC is derived from the \`endpointAccess\` configuration. The rule of thumb is: *If the cluster VPC can be associated, it will be*.

Breaking this down, it means that if the endpoint exposes private access (via \`EndpointAccess.PRIVATE\` or \`EndpointAccess.PUBLIC_AND_PRIVATE\`), and the VPC contains **private** subnets, the Lambda function will be provisioned inside the VPC and use the private subnets to interact with the cluster. This is the common use-case.

If the endpoint does not expose private access (via \`EndpointAccess.PUBLIC\`) **or** the VPC does not contain private subnets, the function will not be provisioned within the VPC.

#### Cluster Handler

The \`ClusterHandler\` is a Lambda function responsible to interact with the EKS API in order to control the cluster lifecycle. To provision this function inside the VPC, set the \`placeClusterHandlerInVpc\` property to \`true\`. This will place the function inside the private subnets of the VPC based on the selection strategy specified in the [\`vpcSubnets\`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-eks.Cluster.html#vpcsubnetsspan-classapi-icon-api-icon-experimental-titlethis-api-element-is-experimental-it-may-change-without-noticespan) property.

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  clusterHandlerEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

### Kubectl Support

The resources are created in the cluster by running \`kubectl apply\` from a python lambda function.

#### Environment

You can configure the environment of this function by specifying it at cluster instantiation. For example, this can be useful in order to configure an http proxy:

\`\`\`ts
const cluster = new eks.Cluster(this, 'hello-eks', {
  version: eks.KubernetesVersion.V1_19,
  kubectlEnvironment: {
    'http_proxy': 'http://proxy.myproxy.com'
  }
});
\`\`\`

#### Runtime

The kubectl handler uses \`kubectl\`, \`helm\` and the \`aws\` CLI in order to
interact with the cluster. These are bundled into AWS Lambda layers included in
the \`@aws-cdk/lambda-layer-awscli\` and \`@aws-cdk/lambda-layer-kubectl\` modules.

You can specify a custom \`lambda.LayerVersion\` if you wish to use a different
version of these tools. The handler expects the layer to include the following
three executables:

\`\`\`text
helm/helm
kubectl/kubectl
awscli/aws
\`\`\`

See more information in the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-awscli/layer) for @aws-cdk/lambda-layer-awscli
and the
[Dockerfile](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/lambda-layer-kubectl/layer) for @aws-cdk/lambda-layer-kubectl.

\`\`\`ts
const layer = new lambda.LayerVersion(this, 'KubectlLayer', {
  code: lambda.Code.fromAsset('layer.zip'),
});
\`\`\`

Now specify when the cluster is defined:

\`\`\`ts
const cluster = new eks.Cluster(this, 'MyCluster', {
  kubectlLayer: layer,
});

// or
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlLayer: layer,
});
\`\`\`

#### Memory

By default, the kubectl provider is configured with 1024MiB of memory. You can use the \`kubectlMemory\` option to specify the memory size for the AWS Lambda function:

\`\`\`ts
import { Size } from 'aws-cdk-lib';

new eks.Cluster(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});

// or
eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  kubectlMemory: Size.gibibytes(4)
});
\`\`\`

### ARM64 Support

Instance types with \`ARM64\` architecture are supported in both managed nodegroup and self-managed capacity. Simply specify an ARM64 \`instanceType\` (such as \`m6g.medium\`), and the latest
Amazon Linux 2 AMI for ARM64 will be automatically selected.

\`\`\`ts
// add a managed ARM64 nodegroup
cluster.addNodegroupCapacity('extra-ng-arm', {
  instanceTypes: [new ec2.InstanceType('m6g.medium')],
  minSize: 2,
});

// add a self-managed ARM64 nodegroup
cluster.addAutoScalingGroupCapacity('self-ng-arm', {
  instanceType: new ec2.InstanceType('m6g.medium'),
  minCapacity: 2,
})
\`\`\`

### Masters Role

When you create a cluster, you can specify a \`mastersRole\`. The \`Cluster\` construct will associate this role with the \`system:masters\` [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) group, giving it super-user access to the cluster.

\`\`\`ts
const role = new iam.Role(...);
new eks.Cluster(this, 'HelloEKS', {
  version: eks.KubernetesVersion.V1_19,
  mastersRole: role,
});
\`\`\`

If you do not specify it, a default role will be created on your behalf, that can be assumed by anyone in the account with \`sts:AssumeRole\` permissions for this role.

This is the role you see as part of the stack outputs mentioned in the [Quick Start](#quick-start).

\`\`\`console
$ aws eks update-kubeconfig --name cluster-xxxxx --role-arn arn:aws:iam::112233445566:role/yyyyy
Added new context arn:aws:eks:rrrrr:112233445566:cluster/cluster-xxxxx to /home/boom/.kube/config
\`\`\`

### Encryption

When you create an Amazon EKS cluster, envelope encryption of Kubernetes secrets using the AWS Key Management Service (AWS KMS) can be enabled.
The documentation on [creating a cluster](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html)
can provide more details about the customer master key (CMK) that can be used for the encryption.

You can use the \`secretsEncryptionKey\` to configure which key the cluster will use to encrypt Kubernetes secrets. By default, an AWS Managed key will be used.

> This setting can only be specified when the cluster is created and cannot be updated.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.Cluster(this, 'MyCluster', {
  secretsEncryptionKey: secretsKey,
  // ...
});
\`\`\`

You can also use a similar configuration for running a cluster built using the FargateCluster construct.

\`\`\`ts
const secretsKey = new kms.Key(this, 'SecretsKey');
const cluster = new eks.FargateCluster(this, 'MyFargateCluster', {
  secretsEncryptionKey: secretsKey
});
\`\`\`

The Amazon Resource Name (ARN) for that CMK can be retrieved.

\`\`\`ts
const clusterEncryptionConfigKeyArn = cluster.clusterEncryptionConfigKeyArn;
\`\`\`

## Permissions and Security

Amazon EKS provides several mechanism of securing the cluster and granting permissions to specific IAM users and roles.

### AWS IAM Mapping

As described in the [Amazon EKS User Guide](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html), you can map AWS IAM users and roles to [Kubernetes Role-based access control (RBAC)](https://kubernetes.io/docs/reference/access-authn-authz/rbac).

The Amazon EKS construct manages the *aws-auth* \`ConfigMap\` Kubernetes resource on your behalf and exposes an API through the \`cluster.awsAuth\` for mapping
users, roles and accounts.

Furthermore, when auto-scaling group capacity is added to the cluster, the IAM instance role of the auto-scaling group will be automatically mapped to RBAC so nodes can connect to the cluster. No manual mapping is required.

For example, let's say you want to grant an IAM user administrative privileges on your cluster:

\`\`\`ts
const adminUser = new iam.User(this, 'Admin');
cluster.awsAuth.addUserMapping(adminUser, { groups: [ 'system:masters' ]});
\`\`\`

A convenience method for mapping a role to the \`system:masters\` group is also available:

\`\`\`ts
cluster.awsAuth.addMastersRole(role)
\`\`\`

### Cluster Security Group

When you create an Amazon EKS cluster, a [cluster security group](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
is automatically created as well. This security group is designed to allow all traffic from the control plane and managed node groups to flow freely
between each other.

The ID for that security group can be retrieved after creating the cluster.

\`\`\`ts
const clusterSecurityGroupId = cluster.clusterSecurityGroupId;
\`\`\`

### Node SSH Access

If you want to be able to SSH into your worker nodes, you must already have an SSH key in the region you're connecting to and pass it when
you add capacity to the cluster. You must also be able to connect to the hosts (meaning they must have a public IP and you
should be allowed to connect to them on port 22):

See [SSH into nodes](test/example.ssh-into-nodes.lit.ts) for a code example.

If you want to SSH into nodes in a private subnet, you should set up a bastion host in a public subnet. That setup is recommended, but is
unfortunately beyond the scope of this documentation.

### Service Accounts

With services account you can provide Kubernetes Pods access to AWS resources.

\`\`\`ts
// add service account
const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

const mypod = cluster.addManifest('mypod', {
  apiVersion: 'v1',
  kind: 'Pod',
  metadata: { name: 'mypod' },
  spec: {
    serviceAccountName: sa.serviceAccountName
    containers: [
      {
        name: 'hello',
        image: 'paulbouwer/hello-kubernetes:1.5',
        ports: [ { containerPort: 8080 } ],

      }
    ]
  }
});

// create the resource after the service account.
mypod.node.addDependency(sa);

// print the IAM role arn for this service account
new cdk.CfnOutput(this, 'ServiceAccountIamRole', { value: sa.role.roleArn })
\`\`\`

Note that using \`sa.serviceAccountName\` above **does not** translate into a resource dependency.
This is why an explicit dependency is needed. See <https://github.com/aws/aws-cdk/issues/9910> for more details.

You can also add service accounts to existing clusters.
To do so, pass the \`openIdConnectProvider\` property when you import the cluster into the application.

\`\`\`ts
// you can import an existing provider
const provider = eks.OpenIdConnectProvider.fromOpenIdConnectProviderArn(this, 'Provider', 'arn:aws:iam::123456:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/AB123456ABC');

// or create a new one using an existing issuer url
const provider = new eks.OpenIdConnectProvider(this, 'Provider', issuerUrl);

const cluster = eks.Cluster.fromClusterAttributes({
  clusterName: 'Cluster',
  openIdConnectProvider: provider,
  kubectlRoleArn: 'arn:aws:iam::123456:role/service-role/k8sservicerole',
});

const sa = cluster.addServiceAccount('MyServiceAccount');

const bucket = new Bucket(this, 'Bucket');
bucket.grantReadWrite(serviceAccount);

// ...
\`\`\`

Note that adding service accounts requires running \`kubectl\` commands against the cluster.
This means you must also pass the \`kubectlRoleArn\` when importing the cluster.
See [Using existing Clusters](https://github.com/aws/aws-cdk/tree/master/packages/@aws-cdk/aws-eks#using-existing-clusters).

## Applying Kubernetes Resources

The library supports several popular resource deployment mechanisms, among which are:

### Kubernetes Manifests

The \`KubernetesManifest\` construct or \`cluster.addManifest\` method can be used
to apply Kubernetes resource manifests to this cluster.

> When using \`cluster.addManifest\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new KubernetesManifest\` to create the manifest in the scope of the other stack.

The following examples will deploy the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes)
service on the cluster:

\`\`\`ts
const appLabel = { app: \\"hello-kubernetes\\" };

const deployment = {
  apiVersion: \\"apps/v1\\",
  kind: \\"Deployment\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    replicas: 3,
    selector: { matchLabels: appLabel },
    template: {
      metadata: { labels: appLabel },
      spec: {
        containers: [
          {
            name: \\"hello-kubernetes\\",
            image: \\"paulbouwer/hello-kubernetes:1.5\\",
            ports: [ { containerPort: 8080 } ]
          }
        ]
      }
    }
  }
};

const service = {
  apiVersion: \\"v1\\",
  kind: \\"Service\\",
  metadata: { name: \\"hello-kubernetes\\" },
  spec: {
    type: \\"LoadBalancer\\",
    ports: [ { port: 80, targetPort: 8080 } ],
    selector: appLabel
  }
};

// option 1: use a construct
new KubernetesManifest(this, 'hello-kub', {
  cluster,
  manifest: [ deployment, service ]
});

// or, option2: use \`addManifest\`
cluster.addManifest('hello-kub', service, deployment);
\`\`\`

#### Adding resources from a URL

The following example will deploy the resource manifest hosting on remote server:

\`\`\`ts
import * as yaml from 'js-yaml';
import * as request from 'sync-request';

const manifestUrl = 'https://url/of/manifest.yaml';
const manifest = yaml.safeLoadAll(request('GET', manifestUrl).getBody());
cluster.addManifest('my-resource', ...manifest);
\`\`\`

#### Dependencies

There are cases where Kubernetes resources must be deployed in a specific order.
For example, you cannot define a resource in a Kubernetes namespace before the
namespace was created.

You can represent dependencies between \`KubernetesManifest\`s using
\`resource.node.addDependency()\`:

\`\`\`ts
const namespace = cluster.addManifest('my-namespace', {
  apiVersion: 'v1',
  kind: 'Namespace',
  metadata: { name: 'my-app' }
});

const service = cluster.addManifest('my-service', {
  metadata: {
    name: 'myservice',
    namespace: 'my-app'
  },
  spec: // ...
});

service.node.addDependency(namespace); // will apply \`my-namespace\` before \`my-service\`.
\`\`\`

**NOTE:** when a \`KubernetesManifest\` includes multiple resources (either directly
or through \`cluster.addManifest()\`) (e.g. \`cluster.addManifest('foo', r1, r2,
r3,...)\`), these resources will be applied as a single manifest via \`kubectl\`
and will be applied sequentially (the standard behavior in \`kubectl\`).

---

Since Kubernetes manifests are implemented as CloudFormation resources in the
CDK. This means that if the manifest is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`kubectl delete\` command and the
Kubernetes resources in that manifest will be deleted.

#### Resource Pruning

When a resource is deleted from a Kubernetes manifest, the EKS module will
automatically delete these resources by injecting a _prune label_ to all
manifest resources. This label is then passed to [\`kubectl apply --prune\`].

[\`kubectl apply --prune\`]: https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label

Pruning is enabled by default but can be disabled through the \`prune\` option
when a cluster is defined:

\`\`\`ts
new Cluster(this, 'MyCluster', {
  prune: false
});
\`\`\`

#### Manifests Validation

The \`kubectl\` CLI supports applying a manifest by skipping the validation.
This can be accomplished by setting the \`skipValidation\` flag to \`true\` in the \`KubernetesManifest\` props.

\`\`\`ts
new eks.KubernetesManifest(this, 'HelloAppWithoutValidation', {
  cluster: this.cluster,
  manifest: [ deployment, service ],
  skipValidation: true,
});
\`\`\`

### Helm Charts

The \`HelmChart\` construct or \`cluster.addHelmChart\` method can be used
to add Kubernetes resources to this cluster using Helm.

> When using \`cluster.addHelmChart\`, the manifest construct is defined within the cluster's stack scope. If the manifest contains
> attributes from a different stack which depend on the cluster stack, a circular dependency will be created and you will get a synth time error.
> To avoid this, directly use \`new HelmChart\` to create the chart in the scope of the other stack.

The following example will install the [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/) to your cluster using Helm.

\`\`\`ts
// option 1: use a construct
new HelmChart(this, 'NginxIngress', {
  cluster,
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});

// or, option2: use \`addHelmChart\`
cluster.addHelmChart('NginxIngress', {
  chart: 'nginx-ingress',
  repository: 'https://helm.nginx.com/stable',
  namespace: 'kube-system'
});
\`\`\`

Helm charts will be installed and updated using \`helm upgrade --install\`, where a few parameters
are being passed down (such as \`repo\`, \`values\`, \`version\`, \`namespace\`, \`wait\`, \`timeout\`, etc).
This means that if the chart is added to CDK with the same release name, it will try to update
the chart in the cluster.

Helm charts are implemented as CloudFormation resources in CDK.
This means that if the chart is deleted from your code (or the stack is
deleted), the next \`cdk deploy\` will issue a \`helm uninstall\` command and the
Helm chart will be deleted.

When there is no \`release\` defined, a unique ID will be allocated for the release based
on the construct path.

By default, all Helm charts will be installed concurrently. In some cases, this
could cause race conditions where two Helm charts attempt to deploy the same
resource or if Helm charts depend on each other. You can use
\`chart.node.addDependency()\` in order to declare a dependency order between
charts:

\`\`\`ts
const chart1 = cluster.addHelmChart(...);
const chart2 = cluster.addHelmChart(...);

chart2.node.addDependency(chart1);
\`\`\`

#### CDK8s Charts

[CDK8s](https://cdk8s.io/) is an open-source library that enables Kubernetes manifest authoring using familiar programming languages. It is founded on the same technologies as the AWS CDK, such as [\`constructs\`](https://github.com/aws/constructs) and [\`jsii\`](https://github.com/aws/jsii).

> To learn more about cdk8s, visit the [Getting Started](https://github.com/awslabs/cdk8s/tree/master/docs/getting-started) tutorials.

The EKS module natively integrates with cdk8s and allows you to apply cdk8s charts on AWS EKS clusters via the \`cluster.addCdk8sChart\` method.

In addition to \`cdk8s\`, you can also use [\`cdk8s+\`](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-plus), which provides higher level abstraction for the core kubernetes api objects.
You can think of it like the \`L2\` constructs for Kubernetes. Any other \`cdk8s\` based libraries are also supported, for example [\`cdk8s-debore\`](https://github.com/toricls/cdk8s-debore).

To get started, add the following dependencies to your \`package.json\` file:

\`\`\`json
\\"dependencies\\": {
  \\"cdk8s\\": \\"0.30.0\\",
  \\"cdk8s-plus\\": \\"0.30.0\\",
  \\"constructs\\": \\"3.0.4\\"
}
\`\`\`

> Note that the version of \`cdk8s\` must be \`>=0.30.0\`.

Similarly to how you would create a stack by extending \`@aws-cdk/core.Stack\`, we recommend you create a chart of your own that extends \`cdk8s.Chart\`,
and add your kubernetes resources to it. You can use \`aws-cdk\` construct attributes and properties inside your \`cdk8s\` construct freely.

In this example we create a chart that accepts an \`s3.Bucket\` and passes its name to a kubernetes pod as an environment variable.

Notice that the chart must accept a \`constructs.Construct\` type as its scope, not an \`@aws-cdk/core.Construct\` as you would normally use.
For this reason, to avoid possible confusion, we will create the chart in a separate file:

\`+ my-chart.ts\`

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface MyChartProps {
  readonly bucket: s3.Bucket;
}

export class MyChart extends cdk8s.Chart {
  constructor(scope: constructs.Construct, id: string, props: MyChartProps) {
    super(scope, id);

    new kplus.Pod(this, 'Pod', {
      spec: {
        containers: [
          new kplus.Container({
            image: 'my-image',
            env: {
              BUCKET_NAME: kplus.EnvValue.fromValue(props.bucket.bucketName),
            },
          }),
        ],
      },
    });
  }
}
\`\`\`

Then, in your AWS CDK app:

\`\`\`ts
import { aws_s3 as s3 } from 'aws-cdk-lib';
import * as cdk8s from 'cdk8s';
import { MyChart } from './my-chart';

// some bucket..
const bucket = new s3.Bucket(this, 'Bucket');

// create a cdk8s chart and use \`cdk8s.App\` as the scope.
const myChart = new MyChart(new cdk8s.App(), 'MyChart', { bucket });

// add the cdk8s chart to the cluster
cluster.addCdk8sChart('my-chart', myChart);
\`\`\`

##### Custom CDK8s Constructs

You can also compose a few stock \`cdk8s+\` constructs into your own custom construct. However, since mixing scopes between \`aws-cdk\` and \`cdk8s\` is currently not supported, the \`Construct\` class
you'll need to use is the one from the [\`constructs\`](https://github.com/aws/constructs) module, and not from \`@aws-cdk/core\` like you normally would.
This is why we used \`new cdk8s.App()\` as the scope of the chart above.

\`\`\`ts
import * as constructs from 'constructs';
import * as cdk8s from 'cdk8s';
import * as kplus from 'cdk8s-plus';

export interface LoadBalancedWebService {
  readonly port: number;
  readonly image: string;
  readonly replicas: number;
}

export class LoadBalancedWebService extends constructs.Construct {
  constructor(scope: constructs.Construct, id: string, props: LoadBalancedWebService) {
    super(scope, id);

    const deployment = new kplus.Deployment(chart, 'Deployment', {
      spec: {
        replicas: props.replicas,
        podSpecTemplate: {
          containers: [ new kplus.Container({ image: props.image }) ]
        }
      },
    });

    deployment.expose({port: props.port, serviceType: kplus.ServiceType.LOAD_BALANCER})

  }
}
\`\`\`

##### Manually importing k8s specs and CRD's

If you find yourself unable to use \`cdk8s+\`, or just like to directly use the \`k8s\` native objects or CRD's, you can do so by manually importing them using the \`cdk8s-cli\`.

See [Importing kubernetes objects](https://github.com/awslabs/cdk8s/tree/master/packages/cdk8s-cli#import) for detailed instructions.

## Patching Kubernetes Resources

The \`KubernetesPatch\` construct can be used to update existing kubernetes
resources. The following example can be used to patch the \`hello-kubernetes\`
deployment from the example above with 5 replicas.

\`\`\`ts
new KubernetesPatch(this, 'hello-kub-deployment-label', {
  cluster,
  resourceName: \\"deployment/hello-kubernetes\\",
  applyPatch: { spec: { replicas: 5 } },
  restorePatch: { spec: { replicas: 3 } }
})
\`\`\`

## Querying Kubernetes Resources

The \`KubernetesObjectValue\` construct can be used to query for information about kubernetes objects,
and use that as part of your CDK application.

For example, you can fetch the address of a [\`LoadBalancer\`](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer) type service:

\`\`\`ts
// query the load balancer address
const myServiceAddress = new KubernetesObjectValue(this, 'LoadBalancerAttribute', {
  cluster: cluster,
  objectType: 'service',
  objectName: 'my-service',
  jsonPath: '.status.loadBalancer.ingress[0].hostname', // https://kubernetes.io/docs/reference/kubectl/jsonpath/
});

// pass the address to a lambda function
const proxyFunction = new lambda.Function(this, 'ProxyFunction', {
  ...
  environment: {
    myServiceAddress: myServiceAddress.value
  },
})
\`\`\`

Specifically, since the above use-case is quite common, there is an easier way to access that information:

\`\`\`ts
const loadBalancerAddress = cluster.getServiceLoadBalancerAddress('my-service');
\`\`\`

## Using existing clusters

The Amazon EKS library allows defining Kubernetes resources such as [Kubernetes
manifests](#kubernetes-resources) and [Helm charts](#helm-charts) on clusters
that are not defined as part of your CDK app.

First, you'll need to \\"import\\" a cluster to your CDK app. To do that, use the
\`eks.Cluster.fromClusterAttributes()\` static method:

\`\`\`ts
const cluster = eks.Cluster.fromClusterAttributes(this, 'MyCluster', {
  clusterName: 'my-cluster-name',
  kubectlRoleArn: 'arn:aws:iam::1111111:role/iam-role-that-has-masters-access',
});
\`\`\`

Then, you can use \`addManifest\` or \`addHelmChart\` to define resources inside
your Kubernetes cluster. For example:

\`\`\`ts
cluster.addManifest('Test', {
  apiVersion: 'v1',
  kind: 'ConfigMap',
  metadata: {
    name: 'myconfigmap',
  },
  data: {
    Key: 'value',
    Another: '123454',
  },
});
\`\`\`

At the minimum, when importing clusters for \`kubectl\` management, you will need
to specify:

* \`clusterName\` - the name of the cluster.
* \`kubectlRoleArn\` - the ARN of an IAM role mapped to the \`system:masters\` RBAC
  role. If the cluster you are importing was created using the AWS CDK, the
  CloudFormation stack has an output that includes an IAM role that can be used.
  Otherwise, you can create an IAM role and map it to \`system:masters\` manually.
  The trust policy of this role should include the the
  \`arn:aws::iam::\${accountId}:root\` principal in order to allow the execution
  role of the kubectl resource to assume it.

If the cluster is configured with private-only or private and restricted public
Kubernetes [endpoint access](#endpoint-access), you must also specify:

* \`kubectlSecurityGroupId\` - the ID of an EC2 security group that is allowed
  connections to the cluster's control security group. For example, the EKS managed [cluster security group](#cluster-security-group).
* \`kubectlPrivateSubnetIds\` - a list of private VPC subnets IDs that will be used
  to access the Kubernetes endpoint.

## Known Issues and Limitations

* [One cluster per stack](https://github.com/aws/aws-cdk/issues/10073)
* [Service Account dependencies](https://github.com/aws/aws-cdk/issues/9910)
* [Support isolated VPCs](https://github.com/aws/aws-cdk/issues/12171)

# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Constructs <a name=\\"Constructs\\" id=\\"Constructs\\"></a>

### AwsAuth <a name=\\"AwsAuth\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth\\"></a>

Manages mapping between IAM users and roles to Kubernetes RBAC configuration.

> [https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.AwsAuth(scope: Construct, id: string, props: AwsAuthProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthProps\\">AwsAuthProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.AwsAuthProps\\">AwsAuthProps</a>

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addAccount\\">addAccount</a></code> | Additional AWS account to add to the aws-auth configmap. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addMastersRole\\">addMastersRole</a></code> | Adds the specified IAM role to the \`system:masters\` RBAC group, which means that anyone that can assume it will be able to administer this Kubernetes system. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping\\">addRoleMapping</a></code> | Adds a mapping between an IAM role to a Kubernetes user and groups. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth.addUserMapping\\">addUserMapping</a></code> | Adds a mapping between an IAM user to a Kubernetes user and groups. |

---

##### \`addAccount\` <a name=\\"addAccount\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addAccount\\"></a>

\`\`\`typescript
public addAccount(accountId: string)
\`\`\`

###### \`accountId\`<sup>Required</sup> <a name=\\"accountId\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addAccount.parameter.accountId\\"></a>

- *Type:* string

account number.

---

##### \`addMastersRole\` <a name=\\"addMastersRole\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole\\"></a>

\`\`\`typescript
public addMastersRole(role: IRole, username?: string)
\`\`\`

###### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole.parameter.role\\"></a>

- *Type:* aws-cdk-lib.aws_iam.IRole

The IAM role to add.

---

###### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addMastersRole.parameter.username\\"></a>

- *Type:* string

Optional user (defaults to the role ARN).

---

##### \`addRoleMapping\` <a name=\\"addRoleMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping\\"></a>

\`\`\`typescript
public addRoleMapping(role: IRole, mapping: AwsAuthMapping)
\`\`\`

###### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.role\\"></a>

- *Type:* aws-cdk-lib.aws_iam.IRole

The IAM role to map.

---

###### \`mapping\`<sup>Required</sup> <a name=\\"mapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addRoleMapping.parameter.mapping\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping\\">AwsAuthMapping</a>

Mapping to k8s user name and groups.

---

##### \`addUserMapping\` <a name=\\"addUserMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping\\"></a>

\`\`\`typescript
public addUserMapping(user: IUser, mapping: AwsAuthMapping)
\`\`\`

###### \`user\`<sup>Required</sup> <a name=\\"user\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.user\\"></a>

- *Type:* aws-cdk-lib.aws_iam.IUser

The IAM user to map.

---

###### \`mapping\`<sup>Required</sup> <a name=\\"mapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuth.addUserMapping.parameter.mapping\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping\\">AwsAuthMapping</a>

Mapping to k8s user name and groups.

---




### CfnAddon <a name=\\"CfnAddon\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon\\"></a>

- *Implements:* aws-cdk-lib.IInspectable

A CloudFormation \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.CfnAddon(scope: Construct, id: string, props: CfnAddonProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps\\">CfnAddonProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps\\">CfnAddonProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.inspect.parameter.inspector\\"></a>

- *Type:* aws-cdk-lib.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.attrArn\\">attrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.tags\\">tags</a></code> | <code>aws-cdk-lib.TagManager</code> | \`AWS::EKS::Addon.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.addonName\\">addonName</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.clusterName\\">clusterName</a></code> | <code>string</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.addonVersion\\">addonVersion</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.resolveConflicts\\">resolveConflicts</a></code> | <code>string</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.serviceAccountRoleArn\\">serviceAccountRoleArn</a></code> | <code>string</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.attrArn\\"></a>

\`\`\`typescript
public readonly attrArn: string;
\`\`\`

- *Type:* string

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.tags\\"></a>

\`\`\`typescript
public readonly tags: TagManager;
\`\`\`

- *Type:* aws-cdk-lib.TagManager

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

##### \`addonName\`<sup>Required</sup> <a name=\\"addonName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.addonName\\"></a>

\`\`\`typescript
public readonly addonName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addonVersion\`<sup>Optional</sup> <a name=\\"addonVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.addonVersion\\"></a>

\`\`\`typescript
public readonly addonVersion: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolveConflicts\`<sup>Optional</sup> <a name=\\"resolveConflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.resolveConflicts\\"></a>

\`\`\`typescript
public readonly resolveConflicts: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`serviceAccountRoleArn\`<sup>Optional</sup> <a name=\\"serviceAccountRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.serviceAccountRoleArn\\"></a>

\`\`\`typescript
public readonly serviceAccountRoleArn: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnAddon.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnCluster <a name=\\"CfnCluster\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster\\"></a>

- *Implements:* aws-cdk-lib.IInspectable

A CloudFormation \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.CfnCluster(scope: Construct, id: string, props: CfnClusterProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps\\">CfnClusterProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps\\">CfnClusterProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.inspect.parameter.inspector\\"></a>

- *Type:* aws-cdk-lib.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrArn\\">attrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\">attrCertificateAuthorityData</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\">attrClusterSecurityGroupId</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\">attrEncryptionConfigKeyArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrEndpoint\\">attrEndpoint</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\">attrOpenIdConnectIssuerUrl</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.resourcesVpcConfig\\">resourcesVpcConfig</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.roleArn\\">roleArn</a></code> | <code>string</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.encryptionConfig\\">encryptionConfig</a></code> | <code>aws-cdk-lib.IResolvable \\\\| <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a> \\\\| aws-cdk-lib.IResolvable[]</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\">kubernetesNetworkConfig</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.name\\">name</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.version\\">version</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrArn\\"></a>

\`\`\`typescript
public readonly attrArn: string;
\`\`\`

- *Type:* string

---

##### \`attrCertificateAuthorityData\`<sup>Required</sup> <a name=\\"attrCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrCertificateAuthorityData\\"></a>

\`\`\`typescript
public readonly attrCertificateAuthorityData: string;
\`\`\`

- *Type:* string

---

##### \`attrClusterSecurityGroupId\`<sup>Required</sup> <a name=\\"attrClusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrClusterSecurityGroupId\\"></a>

\`\`\`typescript
public readonly attrClusterSecurityGroupId: string;
\`\`\`

- *Type:* string

---

##### \`attrEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"attrEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrEncryptionConfigKeyArn\\"></a>

\`\`\`typescript
public readonly attrEncryptionConfigKeyArn: string;
\`\`\`

- *Type:* string

---

##### \`attrEndpoint\`<sup>Required</sup> <a name=\\"attrEndpoint\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrEndpoint\\"></a>

\`\`\`typescript
public readonly attrEndpoint: string;
\`\`\`

- *Type:* string

---

##### \`attrOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"attrOpenIdConnectIssuerUrl\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.attrOpenIdConnectIssuerUrl\\"></a>

\`\`\`typescript
public readonly attrOpenIdConnectIssuerUrl: string;
\`\`\`

- *Type:* string

---

##### \`resourcesVpcConfig\`<sup>Required</sup> <a name=\\"resourcesVpcConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.resourcesVpcConfig\\"></a>

\`\`\`typescript
public readonly resourcesVpcConfig: ResourcesVpcConfigProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`roleArn\`<sup>Required</sup> <a name=\\"roleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.roleArn\\"></a>

\`\`\`typescript
public readonly roleArn: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryptionConfig\`<sup>Optional</sup> <a name=\\"encryptionConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.encryptionConfig\\"></a>

\`\`\`typescript
public readonly encryptionConfig: IResolvable | EncryptionConfigProperty | IResolvable[];
\`\`\`

- *Type:* aws-cdk-lib.IResolvable | <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a> | aws-cdk-lib.IResolvable[]

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"kubernetesNetworkConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.kubernetesNetworkConfig\\"></a>

\`\`\`typescript
public readonly kubernetesNetworkConfig: KubernetesNetworkConfigProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.name\\"></a>

\`\`\`typescript
public readonly name: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnFargateProfile <a name=\\"CfnFargateProfile\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile\\"></a>

- *Implements:* aws-cdk-lib.IInspectable

A CloudFormation \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.CfnFargateProfile(scope: Construct, id: string, props: CfnFargateProfileProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps\\">CfnFargateProfileProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps\\">CfnFargateProfileProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.inspect.parameter.inspector\\"></a>

- *Type:* aws-cdk-lib.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.attrArn\\">attrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.tags\\">tags</a></code> | <code>aws-cdk-lib.TagManager</code> | \`AWS::EKS::FargateProfile.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.clusterName\\">clusterName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\">podExecutionRoleArn</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.selectors\\">selectors</a></code> | <code>aws-cdk-lib.IResolvable \\\\| <a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a> \\\\| aws-cdk-lib.IResolvable[]</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.fargateProfileName\\">fargateProfileName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.subnets\\">subnets</a></code> | <code>string[]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.attrArn\\"></a>

\`\`\`typescript
public readonly attrArn: string;
\`\`\`

- *Type:* string

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.tags\\"></a>

\`\`\`typescript
public readonly tags: TagManager;
\`\`\`

- *Type:* aws-cdk-lib.TagManager

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`podExecutionRoleArn\`<sup>Required</sup> <a name=\\"podExecutionRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.podExecutionRoleArn\\"></a>

\`\`\`typescript
public readonly podExecutionRoleArn: string;
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.selectors\\"></a>

\`\`\`typescript
public readonly selectors: IResolvable | SelectorProperty | IResolvable[];
\`\`\`

- *Type:* aws-cdk-lib.IResolvable | <a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a> | aws-cdk-lib.IResolvable[]

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.fargateProfileName\\"></a>

\`\`\`typescript
public readonly fargateProfileName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.subnets\\"></a>

\`\`\`typescript
public readonly subnets: string[];
\`\`\`

- *Type:* string[]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### CfnNodegroup <a name=\\"CfnNodegroup\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup\\"></a>

- *Implements:* aws-cdk-lib.IInspectable

A CloudFormation \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.CfnNodegroup(scope: Construct, id: string, props: CfnNodegroupProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | - scope in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.id\\">id</a></code> | <code>string</code> | - scoped id of the resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps\\">CfnNodegroupProps</a></code> | - resource properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

scope in which this resource is defined.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.id\\"></a>

- *Type:* string

scoped id of the resource.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps\\">CfnNodegroupProps</a>

resource properties.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.inspect\\">inspect</a></code> | Examines the CloudFormation resource and discloses attributes. |

---

##### \`inspect\` <a name=\\"inspect\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.inspect\\"></a>

\`\`\`typescript
public inspect(inspector: TreeInspector)
\`\`\`

###### \`inspector\`<sup>Required</sup> <a name=\\"inspector\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.inspect.parameter.inspector\\"></a>

- *Type:* aws-cdk-lib.TreeInspector

tree inspector to collect and process attributes.

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrArn\\">attrArn</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrClusterName\\">attrClusterName</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.attrNodegroupName\\">attrNodegroupName</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.tags\\">tags</a></code> | <code>aws-cdk-lib.TagManager</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.clusterName\\">clusterName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.labels\\">labels</a></code> | <code>any</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.nodeRole\\">nodeRole</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.subnets\\">subnets</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.amiType\\">amiType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.capacityType\\">capacityType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.diskSize\\">diskSize</a></code> | <code>number</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\">forceUpdateEnabled</a></code> | <code>boolean \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.instanceTypes\\">instanceTypes</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.launchTemplate\\">launchTemplate</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.releaseVersion\\">releaseVersion</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.remoteAccess\\">remoteAccess</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.scalingConfig\\">scalingConfig</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.taints\\">taints</a></code> | <code>aws-cdk-lib.IResolvable \\\\| <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a> \\\\| aws-cdk-lib.IResolvable[]</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.version\\">version</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`attrArn\`<sup>Required</sup> <a name=\\"attrArn\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrArn\\"></a>

\`\`\`typescript
public readonly attrArn: string;
\`\`\`

- *Type:* string

---

##### \`attrClusterName\`<sup>Required</sup> <a name=\\"attrClusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrClusterName\\"></a>

\`\`\`typescript
public readonly attrClusterName: string;
\`\`\`

- *Type:* string

---

##### \`attrNodegroupName\`<sup>Required</sup> <a name=\\"attrNodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.attrNodegroupName\\"></a>

\`\`\`typescript
public readonly attrNodegroupName: string;
\`\`\`

- *Type:* string

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.tags\\"></a>

\`\`\`typescript
public readonly tags: TagManager;
\`\`\`

- *Type:* aws-cdk-lib.TagManager

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`labels\`<sup>Required</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.labels\\"></a>

\`\`\`typescript
public readonly labels: any;
\`\`\`

- *Type:* any

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`nodeRole\`<sup>Required</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.nodeRole\\"></a>

\`\`\`typescript
public readonly nodeRole: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.subnets\\"></a>

\`\`\`typescript
public readonly subnets: string[];
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.amiType\\"></a>

\`\`\`typescript
public readonly amiType: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.capacityType\\"></a>

\`\`\`typescript
public readonly capacityType: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.diskSize\\"></a>

\`\`\`typescript
public readonly diskSize: number;
\`\`\`

- *Type:* number

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`forceUpdateEnabled\`<sup>Optional</sup> <a name=\\"forceUpdateEnabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.forceUpdateEnabled\\"></a>

\`\`\`typescript
public readonly forceUpdateEnabled: boolean | IResolvable;
\`\`\`

- *Type:* boolean | aws-cdk-lib.IResolvable

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.instanceTypes\\"></a>

\`\`\`typescript
public readonly instanceTypes: string[];
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`launchTemplate\`<sup>Optional</sup> <a name=\\"launchTemplate\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.launchTemplate\\"></a>

\`\`\`typescript
public readonly launchTemplate: LaunchTemplateSpecificationProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.nodegroupName\\"></a>

\`\`\`typescript
public readonly nodegroupName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.releaseVersion\\"></a>

\`\`\`typescript
public readonly releaseVersion: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.remoteAccess\\"></a>

\`\`\`typescript
public readonly remoteAccess: RemoteAccessProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scalingConfig\`<sup>Optional</sup> <a name=\\"scalingConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.scalingConfig\\"></a>

\`\`\`typescript
public readonly scalingConfig: ScalingConfigProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.taints\\"></a>

\`\`\`typescript
public readonly taints: IResolvable | TaintProperty | IResolvable[];
\`\`\`

- *Type:* aws-cdk-lib.IResolvable | <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a> | aws-cdk-lib.IResolvable[]

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\">CFN_RESOURCE_TYPE_NAME</a></code> | <code>string</code> | The CloudFormation resource type name for this resource class. |

---

##### \`CFN_RESOURCE_TYPE_NAME\`<sup>Required</sup> <a name=\\"CFN_RESOURCE_TYPE_NAME\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.property.CFN_RESOURCE_TYPE_NAME\\"></a>

\`\`\`typescript
public readonly CFN_RESOURCE_TYPE_NAME: string;
\`\`\`

- *Type:* string

The CloudFormation resource type name for this resource class.

---

### Cluster <a name=\\"Cluster\\" id=\\"aws-cdk-lib.aws_eks.Cluster\\"></a>

- *Implements:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

A Cluster represents a managed Kubernetes Service (EKS).

This is a fully managed cluster of API Servers (control-plane) The user is still required to create the worker nodes.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.Cluster(scope: Construct, id: string, props: ClusterProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | a Construct, most likely a cdk.Stack created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.id\\">id</a></code> | <code>string</code> | the id of the Construct to create. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps\\">ClusterProps</a></code> | properties in the IClusterProps interface. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

a Construct, most likely a cdk.Stack created.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.id\\"></a>

- *Type:* string

the id of the Construct to create.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.Cluster.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ClusterProps\\">ClusterProps</a>

properties in the IClusterProps interface.

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity\\">addAutoScalingGroupCapacity</a></code> | Add nodes to this EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addCdk8sChart\\">addCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addFargateProfile\\">addFargateProfile</a></code> | Adds a Fargate profile to this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addHelmChart\\">addHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addManifest\\">addManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity\\">addNodegroupCapacity</a></code> | Add managed nodegroup to this Amazon EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.addServiceAccount\\">addServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity\\">connectAutoScalingGroupCapacity</a></code> | Connect capacity in the form of an existing AutoScalingGroup to the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress\\">getServiceLoadBalancerAddress</a></code> | Fetch the load balancer address of a service of type 'LoadBalancer'. |

---

##### \`addAutoScalingGroupCapacity\` <a name=\\"addAutoScalingGroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity\\"></a>

\`\`\`typescript
public addAutoScalingGroupCapacity(id: string, options: AutoScalingGroupCapacityOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.id\\"></a>

- *Type:* string

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions\\">AutoScalingGroupCapacityOptions</a>

---

##### \`addCdk8sChart\` <a name=\\"addCdk8sChart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart\\"></a>

\`\`\`typescript
public addCdk8sChart(id: string, chart: Construct)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* constructs.Construct

the cdk8s chart.

---

##### \`addFargateProfile\` <a name=\\"addFargateProfile\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile\\"></a>

\`\`\`typescript
public addFargateProfile(id: string, options: FargateProfileOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.id\\"></a>

- *Type:* string

the id of this profile.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addFargateProfile.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions\\">FargateProfileOptions</a>

profile options.

---

##### \`addHelmChart\` <a name=\\"addHelmChart\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart\\"></a>

\`\`\`typescript
public addHelmChart(id: string, options: HelmChartOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addHelmChart.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions\\">HelmChartOptions</a>

options of this chart.

---

##### \`addManifest\` <a name=\\"addManifest\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest\\"></a>

\`\`\`typescript
public addManifest(id: string, manifest: {[ key: string ]: any})
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest.parameter.id\\"></a>

- *Type:* string

logical id of this manifest.

---

###### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addManifest.parameter.manifest\\"></a>

- *Type:* {[ key: string ]: any}

a list of Kubernetes resource specifications.

---

##### \`addNodegroupCapacity\` <a name=\\"addNodegroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity\\"></a>

\`\`\`typescript
public addNodegroupCapacity(id: string, options?: NodegroupOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.id\\"></a>

- *Type:* string

The ID of the nodegroup.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addNodegroupCapacity.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions\\">NodegroupOptions</a>

options for creating a new nodegroup.

---

##### \`addServiceAccount\` <a name=\\"addServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount\\"></a>

\`\`\`typescript
public addServiceAccount(id: string, options?: ServiceAccountOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.id\\"></a>

- *Type:* string

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.addServiceAccount.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions\\">ServiceAccountOptions</a>

---

##### \`connectAutoScalingGroupCapacity\` <a name=\\"connectAutoScalingGroupCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity\\"></a>

\`\`\`typescript
public connectAutoScalingGroupCapacity(autoScalingGroup: AutoScalingGroup, options: AutoScalingGroupOptions)
\`\`\`

###### \`autoScalingGroup\`<sup>Required</sup> <a name=\\"autoScalingGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.autoScalingGroup\\"></a>

- *Type:* aws-cdk-lib.aws_autoscaling.AutoScalingGroup

[disable-awslint:ref-via-interface].

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.connectAutoScalingGroupCapacity.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions\\">AutoScalingGroupOptions</a>

options for adding auto scaling groups, like customizing the bootstrap script.

---

##### \`getServiceLoadBalancerAddress\` <a name=\\"getServiceLoadBalancerAddress\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress\\"></a>

\`\`\`typescript
public getServiceLoadBalancerAddress(serviceName: string, options?: ServiceLoadBalancerAddressOptions)
\`\`\`

###### \`serviceName\`<sup>Required</sup> <a name=\\"serviceName\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.serviceName\\"></a>

- *Type:* string

The name of the service.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.Cluster.getServiceLoadBalancerAddress.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions\\">ServiceLoadBalancerAddressOptions</a>

Additional operation options.

---

#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes\\">fromClusterAttributes</a></code> | Import an existing cluster. |

---

##### \`fromClusterAttributes\` <a name=\\"fromClusterAttributes\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

aws_eks.Cluster.fromClusterAttributes(scope: Construct, id: string, attrs: ClusterAttributes)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.scope\\"></a>

- *Type:* constructs.Construct

the construct scope, in most cases 'this'.

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.id\\"></a>

- *Type:* string

the id or name to import as.

---

###### \`attrs\`<sup>Required</sup> <a name=\\"attrs\\" id=\\"aws-cdk-lib.aws_eks.Cluster.fromClusterAttributes.parameter.attrs\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes\\">ClusterAttributes</a>

the cluster properties to use for importing information.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.adminRole\\">adminRole</a></code> | <code>aws-cdk-lib.aws_iam.Role</code> | An IAM role with administrative permissions to create or update the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.awsAuth\\">awsAuth</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuth\\">AwsAuth</a></code> | Lazily creates the AwsAuth resource, which manages AWS authentication mapping. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterArn\\">clusterArn</a></code> | <code>string</code> | The AWS generated ARN for the Cluster resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>string</code> | The endpoint URL for the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterName\\">clusterName</a></code> | <code>string</code> | The Name of the created EKS Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\">clusterOpenIdConnectIssuer</a></code> | <code>string</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\">clusterOpenIdConnectIssuerUrl</a></code> | <code>string</code> | If this cluster is kubectl-enabled, returns the OpenID Connect issuer url. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroup\\">clusterSecurityGroup</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>string</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.connections\\">connections</a></code> | <code>aws-cdk-lib.aws_ec2.Connections</code> | Manages connection rules (Security Group Rules) for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>aws-cdk-lib.aws_iam.IOpenIdConnectProvider</code> | An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.prune\\">prune</a></code> | <code>boolean</code> | Determines if Kubernetes resources can be pruned automatically. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.role\\">role</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | IAM role assumed by the EKS Control Plane. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.defaultCapacity\\">defaultCapacity</a></code> | <code>aws-cdk-lib.aws_autoscaling.AutoScalingGroup</code> | The auto scaling group that hosts the default capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.defaultNodegroup\\">defaultNodegroup</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup\\">Nodegroup</a></code> | The node group that hosts the default capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlLayer\\">kubectlLayer</a></code> | <code>aws-cdk-lib.aws_lambda.ILayerVersion</code> | The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlMemory\\">kubectlMemory</a></code> | <code>aws-cdk-lib.Size</code> | The amount of memory allocated to the kubectl provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlPrivateSubnets\\">kubectlPrivateSubnets</a></code> | <code>aws-cdk-lib.aws_ec2.ISubnet[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlRole\\">kubectlRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster.property.kubectlSecurityGroup\\">kubectlSecurityGroup</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`adminRole\`<sup>Required</sup> <a name=\\"adminRole\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.adminRole\\"></a>

\`\`\`typescript
public readonly adminRole: Role;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.Role

An IAM role with administrative permissions to create or update the cluster.

This role also has \`systems:master\` permissions.

---

##### \`awsAuth\`<sup>Required</sup> <a name=\\"awsAuth\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.awsAuth\\"></a>

\`\`\`typescript
public readonly awsAuth: AwsAuth;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.AwsAuth\\">AwsAuth</a>

Lazily creates the AwsAuth resource, which manages AWS authentication mapping.

---

##### \`clusterArn\`<sup>Required</sup> <a name=\\"clusterArn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterArn\\"></a>

\`\`\`typescript
public readonly clusterArn: string;
\`\`\`

- *Type:* string

The AWS generated ARN for the Cluster resource.

---

##### \`clusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`typescript
public readonly clusterCertificateAuthorityData: string;
\`\`\`

- *Type:* string

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`typescript
public readonly clusterEncryptionConfigKeyArn: string;
\`\`\`

- *Type:* string

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Required</sup> <a name=\\"clusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterEndpoint\\"></a>

\`\`\`typescript
public readonly clusterEndpoint: string;
\`\`\`

- *Type:* string

The endpoint URL for the Cluster.

This is the URL inside the kubeconfig file to use with kubectl

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

The Name of the created EKS Cluster.

---

##### \`clusterOpenIdConnectIssuer\`<sup>Required</sup> <a name=\\"clusterOpenIdConnectIssuer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuer\\"></a>

\`\`\`typescript
public readonly clusterOpenIdConnectIssuer: string;
\`\`\`

- *Type:* string

If this cluster is kubectl-enabled, returns the OpenID Connect issuer.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`clusterOpenIdConnectIssuerUrl\`<sup>Required</sup> <a name=\\"clusterOpenIdConnectIssuerUrl\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterOpenIdConnectIssuerUrl\\"></a>

\`\`\`typescript
public readonly clusterOpenIdConnectIssuerUrl: string;
\`\`\`

- *Type:* string

If this cluster is kubectl-enabled, returns the OpenID Connect issuer url.

This is because the values is only be retrieved by the API and not exposed by CloudFormation. If this cluster is not kubectl-enabled (i.e. uses the stock \`CfnCluster\`), this is \`undefined\`.

---

##### \`clusterSecurityGroup\`<sup>Required</sup> <a name=\\"clusterSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroup\\"></a>

\`\`\`typescript
public readonly clusterSecurityGroup: ISecurityGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`clusterSecurityGroupId\`<sup>Required</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.clusterSecurityGroupId\\"></a>

\`\`\`typescript
public readonly clusterSecurityGroupId: string;
\`\`\`

- *Type:* string

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`connections\`<sup>Required</sup> <a name=\\"connections\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.connections\\"></a>

\`\`\`typescript
public readonly connections: Connections;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.Connections

Manages connection rules (Security Group Rules) for the cluster.

---

##### \`openIdConnectProvider\`<sup>Required</sup> <a name=\\"openIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.openIdConnectProvider\\"></a>

\`\`\`typescript
public readonly openIdConnectProvider: IOpenIdConnectProvider;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IOpenIdConnectProvider

An \`OpenIdConnectProvider\` resource associated with this cluster, and which can be used to link this cluster to AWS IAM.

A provider will only be defined if this property is accessed (lazy initialization).

---

##### \`prune\`<sup>Required</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.prune\\"></a>

\`\`\`typescript
public readonly prune: boolean;
\`\`\`

- *Type:* boolean

Determines if Kubernetes resources can be pruned automatically.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.role\\"></a>

\`\`\`typescript
public readonly role: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole

IAM role assumed by the EKS Control Plane.

---

##### \`vpc\`<sup>Required</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`defaultCapacity\`<sup>Optional</sup> <a name=\\"defaultCapacity\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.defaultCapacity\\"></a>

\`\`\`typescript
public readonly defaultCapacity: AutoScalingGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_autoscaling.AutoScalingGroup

The auto scaling group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is not \`EC2\` or \`defaultCapacityType\` is \`EC2\` but default capacity is set to 0.

---

##### \`defaultNodegroup\`<sup>Optional</sup> <a name=\\"defaultNodegroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.defaultNodegroup\\"></a>

\`\`\`typescript
public readonly defaultNodegroup: Nodegroup;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Nodegroup\\">Nodegroup</a>

The node group that hosts the default capacity for this cluster.

This will be \`undefined\` if the \`defaultCapacityType\` is \`EC2\` or \`defaultCapacityType\` is \`NODEGROUP\` but default capacity is set to 0.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlEnvironment\\"></a>

\`\`\`typescript
public readonly kubectlEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlLayer\\"></a>

\`\`\`typescript
public readonly kubectlLayer: ILayerVersion;
\`\`\`

- *Type:* aws-cdk-lib.aws_lambda.ILayerVersion

The AWS Lambda layer that contains \`kubectl\`, \`helm\` and the AWS CLI.

If undefined, a SAR app that contains this layer will be used.

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlMemory\\"></a>

\`\`\`typescript
public readonly kubectlMemory: Size;
\`\`\`

- *Type:* aws-cdk-lib.Size

The amount of memory allocated to the kubectl provider's lambda function.

---

##### \`kubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnets\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`typescript
public readonly kubectlPrivateSubnets: ISubnet[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISubnet[]
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

Subnets to host the \`kubectl\` compute resources.

---

##### \`kubectlRole\`<sup>Optional</sup> <a name=\\"kubectlRole\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlRole\\"></a>

\`\`\`typescript
public readonly kubectlRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`kubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.Cluster.property.kubectlSecurityGroup\\"></a>

\`\`\`typescript
public readonly kubectlSecurityGroup: ISecurityGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup
- *Default:* If not specified, the k8s endpoint is expected to be accessible publicly.

A security group to use for \`kubectl\` execution.

---


### FargateCluster <a name=\\"FargateCluster\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster\\"></a>

Defines an EKS cluster that runs entirely on AWS Fargate.

The cluster is created with a default Fargate Profile that matches the \\"default\\" and \\"kube-system\\" namespaces. You can add additional profiles using \`addFargateProfile\`.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.FargateCluster(scope: Construct, id: string, props: FargateClusterProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps\\">FargateClusterProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.FargateCluster.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps\\">FargateClusterProps</a>

---





### FargateProfile <a name=\\"FargateProfile\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile\\"></a>

- *Implements:* aws-cdk-lib.ITaggable

Fargate profiles allows an administrator to declare which pods run on Fargate.

This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and optional labels. You must define a namespace for every selector. The label field consists of multiple optional key-value pairs. Pods that match a selector (by matching a namespace for the selector and all of the labels specified in the selector) are scheduled on Fargate. If a namespace selector is defined without any labels, Amazon EKS will attempt to schedule all pods that run in that namespace onto Fargate using the profile. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is scheduled on Fargate.  If a pod matches multiple Fargate profiles, Amazon EKS picks one of the matches at random. In this case, you can specify which profile a pod should use by adding the following Kubernetes label to the pod specification: eks.amazonaws.com/fargate-profile: profile_name. However, the pod must still match a selector in that profile in order to be scheduled onto Fargate.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.FargateProfile(scope: Construct, id: string, props: FargateProfileProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps\\">FargateProfileProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps\\">FargateProfileProps</a>

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileArn\\">fargateProfileArn</a></code> | <code>string</code> | The full Amazon Resource Name (ARN) of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileName\\">fargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.podExecutionRole\\">podExecutionRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfile.property.tags\\">tags</a></code> | <code>aws-cdk-lib.TagManager</code> | Resource tags. |

---

##### \`fargateProfileArn\`<sup>Required</sup> <a name=\\"fargateProfileArn\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileArn\\"></a>

\`\`\`typescript
public readonly fargateProfileArn: string;
\`\`\`

- *Type:* string

The full Amazon Resource Name (ARN) of the Fargate profile.

---

##### \`fargateProfileName\`<sup>Required</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.fargateProfileName\\"></a>

\`\`\`typescript
public readonly fargateProfileName: string;
\`\`\`

- *Type:* string

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Required</sup> <a name=\\"podExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.podExecutionRole\\"></a>

\`\`\`typescript
public readonly podExecutionRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

---

##### \`tags\`<sup>Required</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.FargateProfile.property.tags\\"></a>

\`\`\`typescript
public readonly tags: TagManager;
\`\`\`

- *Type:* aws-cdk-lib.TagManager

Resource tags.

---


### HelmChart <a name=\\"HelmChart\\" id=\\"aws-cdk-lib.aws_eks.HelmChart\\"></a>

Represents a helm chart within the Kubernetes system.

Applies/deletes the resources using \`kubectl\` in sync with the resource.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.HelmChart(scope: Construct, id: string, props: HelmChartProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps\\">HelmChartProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps\\">HelmChartProps</a>

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChart.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>string</code> | The CloudFormation resource type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.HelmChart.property.RESOURCE_TYPE\\"></a>

\`\`\`typescript
public readonly RESOURCE_TYPE: string;
\`\`\`

- *Type:* string

The CloudFormation resource type.

---

### KubernetesManifest <a name=\\"KubernetesManifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest\\"></a>

Represents a manifest within the Kubernetes system.

Alternatively, you can use \`cluster.addManifest(resource[, resource, ...])\` to define resources on this cluster.  Applies/deletes the manifest using \`kubectl\`.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.KubernetesManifest(scope: Construct, id: string, props: KubernetesManifestProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps\\">KubernetesManifestProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps\\">KubernetesManifestProps</a>

---




#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>string</code> | The CloudFormation reosurce type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifest.property.RESOURCE_TYPE\\"></a>

\`\`\`typescript
public readonly RESOURCE_TYPE: string;
\`\`\`

- *Type:* string

The CloudFormation reosurce type.

---

### KubernetesObjectValue <a name=\\"KubernetesObjectValue\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue\\"></a>

Represents a value of a specific object deployed in the cluster.

Use this to fetch any information available by the \`kubectl get\` command.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.KubernetesObjectValue(scope: Construct, id: string, props: KubernetesObjectValueProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps\\">KubernetesObjectValueProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps\\">KubernetesObjectValueProps</a>

---



#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.property.value\\">value</a></code> | <code>string</code> | The value as a string token. |

---

##### \`value\`<sup>Required</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.property.value\\"></a>

\`\`\`typescript
public readonly value: string;
\`\`\`

- *Type:* string

The value as a string token.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\">RESOURCE_TYPE</a></code> | <code>string</code> | The CloudFormation reosurce type. |

---

##### \`RESOURCE_TYPE\`<sup>Required</sup> <a name=\\"RESOURCE_TYPE\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValue.property.RESOURCE_TYPE\\"></a>

\`\`\`typescript
public readonly RESOURCE_TYPE: string;
\`\`\`

- *Type:* string

The CloudFormation reosurce type.

---

### KubernetesPatch <a name=\\"KubernetesPatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch\\"></a>

A CloudFormation resource which applies/restores a JSON patch into a Kubernetes resource.

> [https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/](https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.KubernetesPatch(scope: Construct, id: string, props: KubernetesPatchProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps\\">KubernetesPatchProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatch.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps\\">KubernetesPatchProps</a>

---





### Nodegroup <a name=\\"Nodegroup\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup\\"></a>

- *Implements:* <a href=\\"#aws-cdk-lib.aws_eks.INodegroup\\">INodegroup</a>

The Nodegroup resource class.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.Nodegroup(scope: Construct, id: string, props: NodegroupProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps\\">NodegroupProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps\\">NodegroupProps</a>

---


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName\\">fromNodegroupName</a></code> | Import the Nodegroup from attributes. |

---

##### \`fromNodegroupName\` <a name=\\"fromNodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

aws_eks.Nodegroup.fromNodegroupName(scope: Construct, id: string, nodegroupName: string)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.id\\"></a>

- *Type:* string

---

###### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.fromNodegroupName.parameter.nodegroupName\\"></a>

- *Type:* string

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | the Amazon EKS cluster resource. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupArn\\">nodegroupArn</a></code> | <code>string</code> | ARN of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>string</code> | Nodegroup name. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Nodegroup.property.role\\">role</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | IAM role of the instance profile for the nodegroup. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: ICluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

the Amazon EKS cluster resource.

---

##### \`nodegroupArn\`<sup>Required</sup> <a name=\\"nodegroupArn\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupArn\\"></a>

\`\`\`typescript
public readonly nodegroupArn: string;
\`\`\`

- *Type:* string

ARN of the nodegroup.

---

##### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.nodegroupName\\"></a>

\`\`\`typescript
public readonly nodegroupName: string;
\`\`\`

- *Type:* string

Nodegroup name.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.Nodegroup.property.role\\"></a>

\`\`\`typescript
public readonly role: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole

IAM role of the instance profile for the nodegroup.

---


### OpenIdConnectProvider <a name=\\"OpenIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider\\"></a>

IAM OIDC identity providers are entities in IAM that describe an external identity provider (IdP) service that supports the OpenID Connect (OIDC) standard, such as Google or Salesforce.

You use an IAM OIDC identity provider when you want to establish trust between an OIDC-compatible IdP and your AWS account.  This implementation has default values for thumbprints and clientIds props that will be compatible with the eks cluster

> [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html)

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.OpenIdConnectProvider(scope: Construct, id: string, props: OpenIdConnectProviderProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | The definition scope. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\">id</a></code> | <code>string</code> | Construct ID. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProviderProps\\">OpenIdConnectProviderProps</a></code> | Initialization properties. |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

The definition scope.

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.id\\"></a>

- *Type:* string

Construct ID.

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProvider.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProviderProps\\">OpenIdConnectProviderProps</a>

Initialization properties.

---





### ServiceAccount <a name=\\"ServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount\\"></a>

- *Implements:* aws-cdk-lib.aws_iam.IPrincipal

Service Account.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.ServiceAccount(scope: Construct, id: string, props: ServiceAccountProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.scope\\">scope</a></code> | <code>constructs.Construct</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.id\\">id</a></code> | <code>string</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps\\">ServiceAccountProps</a></code> | *No description.* |

---

##### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.scope\\"></a>

- *Type:* constructs.Construct

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.id\\"></a>

- *Type:* string

---

##### \`props\`<sup>Required</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps\\">ServiceAccountProps</a>

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy\\">addToPrincipalPolicy</a></code> | Add to the policy of this principal. |

---

##### \`addToPrincipalPolicy\` <a name=\\"addToPrincipalPolicy\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy\\"></a>

\`\`\`typescript
public addToPrincipalPolicy(statement: PolicyStatement)
\`\`\`

###### \`statement\`<sup>Required</sup> <a name=\\"statement\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.addToPrincipalPolicy.parameter.statement\\"></a>

- *Type:* aws-cdk-lib.aws_iam.PolicyStatement

---


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.assumeRoleAction\\">assumeRoleAction</a></code> | <code>string</code> | When this Principal is used in an AssumeRole policy, the action to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.grantPrincipal\\">grantPrincipal</a></code> | <code>aws-cdk-lib.aws_iam.IPrincipal</code> | The principal to grant permissions to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.policyFragment\\">policyFragment</a></code> | <code>aws-cdk-lib.aws_iam.PrincipalPolicyFragment</code> | Return the policy fragment that identifies this principal in a Policy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.role\\">role</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | The role which is linked to the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountName\\">serviceAccountName</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountNamespace\\">serviceAccountNamespace</a></code> | <code>string</code> | The namespace where the service account is located in. |

---

##### \`assumeRoleAction\`<sup>Required</sup> <a name=\\"assumeRoleAction\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.assumeRoleAction\\"></a>

\`\`\`typescript
public readonly assumeRoleAction: string;
\`\`\`

- *Type:* string

When this Principal is used in an AssumeRole policy, the action to use.

---

##### \`grantPrincipal\`<sup>Required</sup> <a name=\\"grantPrincipal\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.grantPrincipal\\"></a>

\`\`\`typescript
public readonly grantPrincipal: IPrincipal;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IPrincipal

The principal to grant permissions to.

---

##### \`policyFragment\`<sup>Required</sup> <a name=\\"policyFragment\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.policyFragment\\"></a>

\`\`\`typescript
public readonly policyFragment: PrincipalPolicyFragment;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.PrincipalPolicyFragment

Return the policy fragment that identifies this principal in a Policy.

---

##### \`role\`<sup>Required</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.role\\"></a>

\`\`\`typescript
public readonly role: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole

The role which is linked to the service account.

---

##### \`serviceAccountName\`<sup>Required</sup> <a name=\\"serviceAccountName\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountName\\"></a>

\`\`\`typescript
public readonly serviceAccountName: string;
\`\`\`

- *Type:* string

The name of the service account.

---

##### \`serviceAccountNamespace\`<sup>Required</sup> <a name=\\"serviceAccountNamespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccount.property.serviceAccountNamespace\\"></a>

\`\`\`typescript
public readonly serviceAccountNamespace: string;
\`\`\`

- *Type:* string

The namespace where the service account is located in.

---


## Structs <a name=\\"Structs\\" id=\\"Structs\\"></a>

### AutoScalingGroupCapacityOptions <a name=\\"AutoScalingGroupCapacityOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions\\"></a>

Options for adding worker nodes.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const autoScalingGroupCapacityOptions: aws_eks.AutoScalingGroupCapacityOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\">allowAllOutbound</a></code> | <code>boolean</code> | Whether the instances can initiate connections to anywhere by default. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\">associatePublicIpAddress</a></code> | <code>boolean</code> | Whether instances in the Auto Scaling Group should have public IP addresses associated with them. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\">autoScalingGroupName</a></code> | <code>string</code> | The name of the Auto Scaling group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\">blockDevices</a></code> | <code>aws-cdk-lib.aws_autoscaling.BlockDevice[]</code> | Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\">cooldown</a></code> | <code>aws-cdk-lib.Duration</code> | Default scaling cooldown for this AutoScalingGroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\">desiredCapacity</a></code> | <code>number</code> | Initial amount of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\">groupMetrics</a></code> | <code>aws-cdk-lib.aws_autoscaling.GroupMetrics[]</code> | Enable monitoring for group metrics, these metrics describe the group rather than any of its instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\">healthCheck</a></code> | <code>aws-cdk-lib.aws_autoscaling.HealthCheck</code> | Configuration for health checks. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\">ignoreUnmodifiedSizeProperties</a></code> | <code>boolean</code> | If the ASG has scheduled actions, don't reset unchanged group sizes. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\">instanceMonitoring</a></code> | <code>aws-cdk-lib.aws_autoscaling.Monitoring</code> | Controls whether instances in this group are launched with detailed or basic monitoring. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\">keyName</a></code> | <code>string</code> | Name of SSH keypair to grant access to instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\">maxCapacity</a></code> | <code>number</code> | Maximum number of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\">maxInstanceLifetime</a></code> | <code>aws-cdk-lib.Duration</code> | The maximum amount of time that an instance can be in service. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\">minCapacity</a></code> | <code>number</code> | Minimum number of instances in the fleet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\">newInstancesProtectedFromScaleIn</a></code> | <code>boolean</code> | Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\">notifications</a></code> | <code>aws-cdk-lib.aws_autoscaling.NotificationConfiguration[]</code> | Configure autoscaling group to send notifications about fleet changes to an SNS topic(s). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\">signals</a></code> | <code>aws-cdk-lib.aws_autoscaling.Signals</code> | Configure waiting for signals during deployment. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\">spotPrice</a></code> | <code>string</code> | The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\">updatePolicy</a></code> | <code>aws-cdk-lib.aws_autoscaling.UpdatePolicy</code> | What to do when an AutoScalingGroup's instance configuration is changed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection</code> | Where to place instances within the VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\">instanceType</a></code> | <code>aws-cdk-lib.aws_ec2.InstanceType</code> | Instance type of the instances to start. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\">bootstrapEnabled</a></code> | <code>boolean</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\">bootstrapOptions</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a></code> | EKS node bootstrapping options. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\">machineImageType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a></code> | Machine image type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\">mapRole</a></code> | <code>boolean</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\">spotInterruptHandler</a></code> | <code>boolean</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`allowAllOutbound\`<sup>Optional</sup> <a name=\\"allowAllOutbound\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.allowAllOutbound\\"></a>

\`\`\`typescript
public readonly allowAllOutbound: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Whether the instances can initiate connections to anywhere by default.

---

##### \`associatePublicIpAddress\`<sup>Optional</sup> <a name=\\"associatePublicIpAddress\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.associatePublicIpAddress\\"></a>

\`\`\`typescript
public readonly associatePublicIpAddress: boolean;
\`\`\`

- *Type:* boolean
- *Default:* Use subnet setting.

Whether instances in the Auto Scaling Group should have public IP addresses associated with them.

---

##### \`autoScalingGroupName\`<sup>Optional</sup> <a name=\\"autoScalingGroupName\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.autoScalingGroupName\\"></a>

\`\`\`typescript
public readonly autoScalingGroupName: string;
\`\`\`

- *Type:* string
- *Default:* Auto generated by CloudFormation

The name of the Auto Scaling group.

This name must be unique per Region per account.

---

##### \`blockDevices\`<sup>Optional</sup> <a name=\\"blockDevices\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.blockDevices\\"></a>

\`\`\`typescript
public readonly blockDevices: BlockDevice[];
\`\`\`

- *Type:* aws-cdk-lib.aws_autoscaling.BlockDevice[]
- *Default:* Uses the block device mapping of the AMI

Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.

Each instance that is launched has an associated root device volume, either an Amazon EBS volume or an instance store volume. You can use block device mappings to specify additional EBS volumes or instance store volumes to attach to an instance when it is launched.

> [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)

---

##### \`cooldown\`<sup>Optional</sup> <a name=\\"cooldown\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.cooldown\\"></a>

\`\`\`typescript
public readonly cooldown: Duration;
\`\`\`

- *Type:* aws-cdk-lib.Duration
- *Default:* Duration.minutes(5)

Default scaling cooldown for this AutoScalingGroup.

---

##### \`desiredCapacity\`<sup>Optional</sup> <a name=\\"desiredCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.desiredCapacity\\"></a>

\`\`\`typescript
public readonly desiredCapacity: number;
\`\`\`

- *Type:* number
- *Default:* minCapacity, and leave unchanged during deployment

Initial amount of instances in the fleet.

If this is set to a number, every deployment will reset the amount of instances to this number. It is recommended to leave this value blank.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity)

---

##### \`groupMetrics\`<sup>Optional</sup> <a name=\\"groupMetrics\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.groupMetrics\\"></a>

\`\`\`typescript
public readonly groupMetrics: GroupMetrics[];
\`\`\`

- *Type:* aws-cdk-lib.aws_autoscaling.GroupMetrics[]
- *Default:* no group metrics will be reported

Enable monitoring for group metrics, these metrics describe the group rather than any of its instances.

To report all group metrics use \`GroupMetrics.all()\` Group metrics are reported in a granularity of 1 minute at no additional charge.

---

##### \`healthCheck\`<sup>Optional</sup> <a name=\\"healthCheck\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.healthCheck\\"></a>

\`\`\`typescript
public readonly healthCheck: HealthCheck;
\`\`\`

- *Type:* aws-cdk-lib.aws_autoscaling.HealthCheck
- *Default:* HealthCheck.ec2 with no grace period

Configuration for health checks.

---

##### \`ignoreUnmodifiedSizeProperties\`<sup>Optional</sup> <a name=\\"ignoreUnmodifiedSizeProperties\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.ignoreUnmodifiedSizeProperties\\"></a>

\`\`\`typescript
public readonly ignoreUnmodifiedSizeProperties: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

If the ASG has scheduled actions, don't reset unchanged group sizes.

Only used if the ASG has scheduled actions (which may scale your ASG up or down regardless of cdk deployments). If true, the size of the group will only be reset if it has been changed in the CDK app. If false, the sizes will always be changed back to what they were in the CDK app on deployment.

---

##### \`instanceMonitoring\`<sup>Optional</sup> <a name=\\"instanceMonitoring\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceMonitoring\\"></a>

\`\`\`typescript
public readonly instanceMonitoring: Monitoring;
\`\`\`

- *Type:* aws-cdk-lib.aws_autoscaling.Monitoring
- *Default:* Monitoring.DETAILED

Controls whether instances in this group are launched with detailed or basic monitoring.

When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.

> [https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics](https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics)

---

##### \`keyName\`<sup>Optional</sup> <a name=\\"keyName\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.keyName\\"></a>

\`\`\`typescript
public readonly keyName: string;
\`\`\`

- *Type:* string
- *Default:* No SSH access will be possible.

Name of SSH keypair to grant access to instances.

---

##### \`maxCapacity\`<sup>Optional</sup> <a name=\\"maxCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxCapacity\\"></a>

\`\`\`typescript
public readonly maxCapacity: number;
\`\`\`

- *Type:* number
- *Default:* desiredCapacity

Maximum number of instances in the fleet.

---

##### \`maxInstanceLifetime\`<sup>Optional</sup> <a name=\\"maxInstanceLifetime\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.maxInstanceLifetime\\"></a>

\`\`\`typescript
public readonly maxInstanceLifetime: Duration;
\`\`\`

- *Type:* aws-cdk-lib.Duration
- *Default:* none

The maximum amount of time that an instance can be in service.

The maximum duration applies to all current and future instances in the group. As an instance approaches its maximum duration, it is terminated and replaced, and cannot be used again.  You must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, leave this property undefined.

> [https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)

---

##### \`minCapacity\`<sup>Optional</sup> <a name=\\"minCapacity\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.minCapacity\\"></a>

\`\`\`typescript
public readonly minCapacity: number;
\`\`\`

- *Type:* number
- *Default:* 1

Minimum number of instances in the fleet.

---

##### \`newInstancesProtectedFromScaleIn\`<sup>Optional</sup> <a name=\\"newInstancesProtectedFromScaleIn\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.newInstancesProtectedFromScaleIn\\"></a>

\`\`\`typescript
public readonly newInstancesProtectedFromScaleIn: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.

By default, Auto Scaling can terminate an instance at any time after launch when scaling in an Auto Scaling Group, subject to the group's termination policy. However, you may wish to protect newly-launched instances from being scaled in if they are going to run critical applications that should not be prematurely terminated.  This flag must be enabled if the Auto Scaling Group will be associated with an ECS Capacity Provider with managed termination protection.

---

##### \`notifications\`<sup>Optional</sup> <a name=\\"notifications\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.notifications\\"></a>

\`\`\`typescript
public readonly notifications: NotificationConfiguration[];
\`\`\`

- *Type:* aws-cdk-lib.aws_autoscaling.NotificationConfiguration[]
- *Default:* No fleet change notifications will be sent.

Configure autoscaling group to send notifications about fleet changes to an SNS topic(s).

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations)

---

##### \`signals\`<sup>Optional</sup> <a name=\\"signals\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.signals\\"></a>

\`\`\`typescript
public readonly signals: Signals;
\`\`\`

- *Type:* aws-cdk-lib.aws_autoscaling.Signals
- *Default:* Do not wait for signals

Configure waiting for signals during deployment.

Use this to pause the CloudFormation deployment to wait for the instances in the AutoScalingGroup to report successful startup during creation and updates. The UserData script needs to invoke \`cfn-signal\` with a success or failure code after it is done setting up the instance.  Without waiting for signals, the CloudFormation deployment will proceed as soon as the AutoScalingGroup has been created or updated but before the instances in the group have been started.  For example, to have instances wait for an Elastic Load Balancing health check before they signal success, add a health-check verification by using the cfn-init helper script. For an example, see the verify_instance_health command in the Auto Scaling rolling updates sample template:  https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml

---

##### \`spotPrice\`<sup>Optional</sup> <a name=\\"spotPrice\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotPrice\\"></a>

\`\`\`typescript
public readonly spotPrice: string;
\`\`\`

- *Type:* string
- *Default:* none

The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request.

Spot Instances are launched when the price you specify exceeds the current Spot market price.

---

##### \`updatePolicy\`<sup>Optional</sup> <a name=\\"updatePolicy\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.updatePolicy\\"></a>

\`\`\`typescript
public readonly updatePolicy: UpdatePolicy;
\`\`\`

- *Type:* aws-cdk-lib.aws_autoscaling.UpdatePolicy
- *Default:* \`UpdatePolicy.rollingUpdate()\` if using \`init\`, \`UpdatePolicy.none()\` otherwise

What to do when an AutoScalingGroup's instance configuration is changed.

This is applied when any of the settings on the ASG are changed that affect how the instances should be created (VPC, instance type, startup scripts, etc.). It indicates how the existing instances should be replaced with new instances matching the new config. By default, nothing is done and only new instances are launched with the new config.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.vpcSubnets\\"></a>

\`\`\`typescript
public readonly vpcSubnets: SubnetSelection;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection
- *Default:* All Private subnets.

Where to place instances within the VPC.

---

##### \`instanceType\`<sup>Required</sup> <a name=\\"instanceType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.instanceType\\"></a>

\`\`\`typescript
public readonly instanceType: InstanceType;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.InstanceType

Instance type of the instances to start.

---

##### \`bootstrapEnabled\`<sup>Optional</sup> <a name=\\"bootstrapEnabled\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapEnabled\\"></a>

\`\`\`typescript
public readonly bootstrapEnabled: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`bootstrapOptions\`<sup>Optional</sup> <a name=\\"bootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.bootstrapOptions\\"></a>

\`\`\`typescript
public readonly bootstrapOptions: BootstrapOptions;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a>
- *Default:* none

EKS node bootstrapping options.

---

##### \`machineImageType\`<sup>Optional</sup> <a name=\\"machineImageType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.machineImageType\\"></a>

\`\`\`typescript
public readonly machineImageType: MachineImageType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a>
- *Default:* MachineImageType.AMAZON_LINUX_2

Machine image type.

---

##### \`mapRole\`<sup>Optional</sup> <a name=\\"mapRole\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.mapRole\\"></a>

\`\`\`typescript
public readonly mapRole: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`spotInterruptHandler\`<sup>Optional</sup> <a name=\\"spotInterruptHandler\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupCapacityOptions.property.spotInterruptHandler\\"></a>

\`\`\`typescript
public readonly spotInterruptHandler: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is used.

---

### AutoScalingGroupOptions <a name=\\"AutoScalingGroupOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions\\"></a>

Options for adding an AutoScalingGroup as capacity.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const autoScalingGroupOptions: aws_eks.AutoScalingGroupOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\">bootstrapEnabled</a></code> | <code>boolean</code> | Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\">bootstrapOptions</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a></code> | Allows options for node bootstrapping through EC2 user data. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.machineImageType\\">machineImageType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a></code> | Allow options to specify different machine image type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.mapRole\\">mapRole</a></code> | <code>boolean</code> | Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\">spotInterruptHandler</a></code> | <code>boolean</code> | Installs the AWS spot instance interrupt handler on the cluster if it's not already added. |

---

##### \`bootstrapEnabled\`<sup>Optional</sup> <a name=\\"bootstrapEnabled\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapEnabled\\"></a>

\`\`\`typescript
public readonly bootstrapEnabled: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke \`/etc/eks/bootstrap.sh\`) and associate it with the EKS cluster.

If you wish to provide a custom user data script, set this to \`false\` and manually invoke \`autoscalingGroup.addUserData()\`.

---

##### \`bootstrapOptions\`<sup>Optional</sup> <a name=\\"bootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.bootstrapOptions\\"></a>

\`\`\`typescript
public readonly bootstrapOptions: BootstrapOptions;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions\\">BootstrapOptions</a>
- *Default:* default options

Allows options for node bootstrapping through EC2 user data.

---

##### \`machineImageType\`<sup>Optional</sup> <a name=\\"machineImageType\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.machineImageType\\"></a>

\`\`\`typescript
public readonly machineImageType: MachineImageType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.MachineImageType\\">MachineImageType</a>
- *Default:* MachineImageType.AMAZON_LINUX_2

Allow options to specify different machine image type.

---

##### \`mapRole\`<sup>Optional</sup> <a name=\\"mapRole\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.mapRole\\"></a>

\`\`\`typescript
public readonly mapRole: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true if the cluster has kubectl enabled (which is the default).

Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC.

This cannot be explicitly set to \`true\` if the cluster has kubectl disabled.

---

##### \`spotInterruptHandler\`<sup>Optional</sup> <a name=\\"spotInterruptHandler\\" id=\\"aws-cdk-lib.aws_eks.AutoScalingGroupOptions.property.spotInterruptHandler\\"></a>

\`\`\`typescript
public readonly spotInterruptHandler: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Installs the AWS spot instance interrupt handler on the cluster if it's not already added.

Only relevant if \`spotPrice\` is configured on the auto-scaling group.

---

### AwsAuthMapping <a name=\\"AwsAuthMapping\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping\\"></a>

AwsAuth mapping.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const awsAuthMapping: aws_eks.AwsAuthMapping = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping.property.groups\\">groups</a></code> | <code>string[]</code> | A list of groups within Kubernetes to which the role is mapped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthMapping.property.username\\">username</a></code> | <code>string</code> | The user name within Kubernetes to map to the IAM role. |

---

##### \`groups\`<sup>Required</sup> <a name=\\"groups\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.property.groups\\"></a>

\`\`\`typescript
public readonly groups: string[];
\`\`\`

- *Type:* string[]

A list of groups within Kubernetes to which the role is mapped.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`username\`<sup>Optional</sup> <a name=\\"username\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthMapping.property.username\\"></a>

\`\`\`typescript
public readonly username: string;
\`\`\`

- *Type:* string
- *Default:* By default, the user name is the ARN of the IAM role.

The user name within Kubernetes to map to the IAM role.

---

### AwsAuthProps <a name=\\"AwsAuthProps\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps\\"></a>

Configuration props for the AwsAuth construct.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const awsAuthProps: aws_eks.AwsAuthProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.AwsAuthProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a></code> | The EKS cluster to apply this configuration to. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.AwsAuthProps.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: Cluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a>

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### BootstrapOptions <a name=\\"BootstrapOptions\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions\\"></a>

EKS node bootstrapping options.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const bootstrapOptions: aws_eks.BootstrapOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.additionalArgs\\">additionalArgs</a></code> | <code>string</code> | Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\">awsApiRetryAttempts</a></code> | <code>number</code> | Number of retry attempts for AWS API call (DescribeCluster). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.dnsClusterIp\\">dnsClusterIp</a></code> | <code>string</code> | Overrides the IP address to use for DNS queries within the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.dockerConfigJson\\">dockerConfigJson</a></code> | <code>string</code> | The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.enableDockerBridge\\">enableDockerBridge</a></code> | <code>boolean</code> | Restores the docker default bridge network. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\">kubeletExtraArgs</a></code> | <code>string</code> | Extra arguments to add to the kubelet. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.BootstrapOptions.property.useMaxPods\\">useMaxPods</a></code> | <code>boolean</code> | Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance. |

---

##### \`additionalArgs\`<sup>Optional</sup> <a name=\\"additionalArgs\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.additionalArgs\\"></a>

\`\`\`typescript
public readonly additionalArgs: string;
\`\`\`

- *Type:* string
- *Default:* none

Additional command line arguments to pass to the \`/etc/eks/bootstrap.sh\` command.

> [https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh)

---

##### \`awsApiRetryAttempts\`<sup>Optional</sup> <a name=\\"awsApiRetryAttempts\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.awsApiRetryAttempts\\"></a>

\`\`\`typescript
public readonly awsApiRetryAttempts: number;
\`\`\`

- *Type:* number
- *Default:* 3

Number of retry attempts for AWS API call (DescribeCluster).

---

##### \`dnsClusterIp\`<sup>Optional</sup> <a name=\\"dnsClusterIp\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.dnsClusterIp\\"></a>

\`\`\`typescript
public readonly dnsClusterIp: string;
\`\`\`

- *Type:* string
- *Default:* 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface.

Overrides the IP address to use for DNS queries within the cluster.

---

##### \`dockerConfigJson\`<sup>Optional</sup> <a name=\\"dockerConfigJson\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.dockerConfigJson\\"></a>

\`\`\`typescript
public readonly dockerConfigJson: string;
\`\`\`

- *Type:* string
- *Default:* none

The contents of the \`/etc/docker/daemon.json\` file. Useful if you want a custom config differing from the default one in the EKS AMI.

---

##### \`enableDockerBridge\`<sup>Optional</sup> <a name=\\"enableDockerBridge\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.enableDockerBridge\\"></a>

\`\`\`typescript
public readonly enableDockerBridge: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Restores the docker default bridge network.

---

##### \`kubeletExtraArgs\`<sup>Optional</sup> <a name=\\"kubeletExtraArgs\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.kubeletExtraArgs\\"></a>

\`\`\`typescript
public readonly kubeletExtraArgs: string;
\`\`\`

- *Type:* string
- *Default:* none

Extra arguments to add to the kubelet.

Useful for adding labels or taints.

---

##### \`useMaxPods\`<sup>Optional</sup> <a name=\\"useMaxPods\\" id=\\"aws-cdk-lib.aws_eks.BootstrapOptions.property.useMaxPods\\"></a>

\`\`\`typescript
public readonly useMaxPods: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Sets \`--max-pods\` for the kubelet based on the capacity of the EC2 instance.

---

### CfnAddonProps <a name=\\"CfnAddonProps\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps\\"></a>

Properties for defining a \`AWS::EKS::Addon\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const cfnAddonProps: aws_eks.CfnAddonProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.addonName\\">addonName</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.clusterName\\">clusterName</a></code> | <code>string</code> | \`AWS::EKS::Addon.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.addonVersion\\">addonVersion</a></code> | <code>string</code> | \`AWS::EKS::Addon.AddonVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.resolveConflicts\\">resolveConflicts</a></code> | <code>string</code> | \`AWS::EKS::Addon.ResolveConflicts\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\">serviceAccountRoleArn</a></code> | <code>string</code> | \`AWS::EKS::Addon.ServiceAccountRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnAddonProps.property.tags\\">tags</a></code> | <code>aws-cdk-lib.CfnTag[]</code> | \`AWS::EKS::Addon.Tags\`. |

---

##### \`addonName\`<sup>Required</sup> <a name=\\"addonName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.addonName\\"></a>

\`\`\`typescript
public readonly addonName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname)

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername)

---

##### \`addonVersion\`<sup>Optional</sup> <a name=\\"addonVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.addonVersion\\"></a>

\`\`\`typescript
public readonly addonVersion: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.AddonVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion)

---

##### \`resolveConflicts\`<sup>Optional</sup> <a name=\\"resolveConflicts\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.resolveConflicts\\"></a>

\`\`\`typescript
public readonly resolveConflicts: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ResolveConflicts\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts)

---

##### \`serviceAccountRoleArn\`<sup>Optional</sup> <a name=\\"serviceAccountRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.serviceAccountRoleArn\\"></a>

\`\`\`typescript
public readonly serviceAccountRoleArn: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Addon.ServiceAccountRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnAddonProps.property.tags\\"></a>

\`\`\`typescript
public readonly tags: CfnTag[];
\`\`\`

- *Type:* aws-cdk-lib.CfnTag[]

\`AWS::EKS::Addon.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags)

---

### CfnClusterProps <a name=\\"CfnClusterProps\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps\\"></a>

Properties for defining a \`AWS::EKS::Cluster\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const cfnClusterProps: aws_eks.CfnClusterProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\">resourcesVpcConfig</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Cluster.ResourcesVpcConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.roleArn\\">roleArn</a></code> | <code>string</code> | \`AWS::EKS::Cluster.RoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.encryptionConfig\\">encryptionConfig</a></code> | <code>aws-cdk-lib.IResolvable \\\\| <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a> \\\\| aws-cdk-lib.IResolvable[]</code> | \`AWS::EKS::Cluster.EncryptionConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\">kubernetesNetworkConfig</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Cluster.KubernetesNetworkConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.name\\">name</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnClusterProps.property.version\\">version</a></code> | <code>string</code> | \`AWS::EKS::Cluster.Version\`. |

---

##### \`resourcesVpcConfig\`<sup>Required</sup> <a name=\\"resourcesVpcConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.resourcesVpcConfig\\"></a>

\`\`\`typescript
public readonly resourcesVpcConfig: ResourcesVpcConfigProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\">ResourcesVpcConfigProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Cluster.ResourcesVpcConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig)

---

##### \`roleArn\`<sup>Required</sup> <a name=\\"roleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.roleArn\\"></a>

\`\`\`typescript
public readonly roleArn: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.RoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn)

---

##### \`encryptionConfig\`<sup>Optional</sup> <a name=\\"encryptionConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.encryptionConfig\\"></a>

\`\`\`typescript
public readonly encryptionConfig: IResolvable | EncryptionConfigProperty | IResolvable[];
\`\`\`

- *Type:* aws-cdk-lib.IResolvable | <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\">EncryptionConfigProperty</a> | aws-cdk-lib.IResolvable[]

\`AWS::EKS::Cluster.EncryptionConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig)

---

##### \`kubernetesNetworkConfig\`<sup>Optional</sup> <a name=\\"kubernetesNetworkConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.kubernetesNetworkConfig\\"></a>

\`\`\`typescript
public readonly kubernetesNetworkConfig: KubernetesNetworkConfigProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\">KubernetesNetworkConfigProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Cluster.KubernetesNetworkConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.name\\"></a>

\`\`\`typescript
public readonly name: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnClusterProps.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Cluster.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version)

---

### CfnFargateProfileProps <a name=\\"CfnFargateProfileProps\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps\\"></a>

Properties for defining a \`AWS::EKS::FargateProfile\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const cfnFargateProfileProps: aws_eks.CfnFargateProfileProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.clusterName\\">clusterName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\">podExecutionRoleArn</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.PodExecutionRoleArn\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.selectors\\">selectors</a></code> | <code>aws-cdk-lib.IResolvable \\\\| <a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a> \\\\| aws-cdk-lib.IResolvable[]</code> | \`AWS::EKS::FargateProfile.Selectors\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\">fargateProfileName</a></code> | <code>string</code> | \`AWS::EKS::FargateProfile.FargateProfileName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.subnets\\">subnets</a></code> | <code>string[]</code> | \`AWS::EKS::FargateProfile.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.tags\\">tags</a></code> | <code>aws-cdk-lib.CfnTag[]</code> | \`AWS::EKS::FargateProfile.Tags\`. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername)

---

##### \`podExecutionRoleArn\`<sup>Required</sup> <a name=\\"podExecutionRoleArn\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.podExecutionRoleArn\\"></a>

\`\`\`typescript
public readonly podExecutionRoleArn: string;
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.PodExecutionRoleArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn)

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.selectors\\"></a>

\`\`\`typescript
public readonly selectors: IResolvable | SelectorProperty | IResolvable[];
\`\`\`

- *Type:* aws-cdk-lib.IResolvable | <a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\">SelectorProperty</a> | aws-cdk-lib.IResolvable[]

\`AWS::EKS::FargateProfile.Selectors\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors)

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`typescript
public readonly fargateProfileName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::FargateProfile.FargateProfileName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.subnets\\"></a>

\`\`\`typescript
public readonly subnets: string[];
\`\`\`

- *Type:* string[]

\`AWS::EKS::FargateProfile.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfileProps.property.tags\\"></a>

\`\`\`typescript
public readonly tags: CfnTag[];
\`\`\`

- *Type:* aws-cdk-lib.CfnTag[]

\`AWS::EKS::FargateProfile.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags)

---

### CfnNodegroupProps <a name=\\"CfnNodegroupProps\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps\\"></a>

Properties for defining a \`AWS::EKS::Nodegroup\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const cfnNodegroupProps: aws_eks.CfnNodegroupProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.clusterName\\">clusterName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ClusterName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodeRole\\">nodeRole</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodeRole\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.subnets\\">subnets</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.Subnets\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.amiType\\">amiType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.AmiType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.capacityType\\">capacityType</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.CapacityType\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.diskSize\\">diskSize</a></code> | <code>number</code> | \`AWS::EKS::Nodegroup.DiskSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\">forceUpdateEnabled</a></code> | <code>boolean \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Nodegroup.ForceUpdateEnabled\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.instanceTypes\\">instanceTypes</a></code> | <code>string[]</code> | \`AWS::EKS::Nodegroup.InstanceTypes\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.labels\\">labels</a></code> | <code>any</code> | \`AWS::EKS::Nodegroup.Labels\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.launchTemplate\\">launchTemplate</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Nodegroup.LaunchTemplate\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodegroupName\\">nodegroupName</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.NodegroupName\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.releaseVersion\\">releaseVersion</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.ReleaseVersion\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.remoteAccess\\">remoteAccess</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Nodegroup.RemoteAccess\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.scalingConfig\\">scalingConfig</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`AWS::EKS::Nodegroup.ScalingConfig\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.tags\\">tags</a></code> | <code>any</code> | \`AWS::EKS::Nodegroup.Tags\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.taints\\">taints</a></code> | <code>aws-cdk-lib.IResolvable \\\\| <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a> \\\\| aws-cdk-lib.IResolvable[]</code> | \`AWS::EKS::Nodegroup.Taints\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroupProps.property.version\\">version</a></code> | <code>string</code> | \`AWS::EKS::Nodegroup.Version\`. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ClusterName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername)

---

##### \`nodeRole\`<sup>Required</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodeRole\\"></a>

\`\`\`typescript
public readonly nodeRole: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodeRole\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole)

---

##### \`subnets\`<sup>Required</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.subnets\\"></a>

\`\`\`typescript
public readonly subnets: string[];
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.Subnets\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets)

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.amiType\\"></a>

\`\`\`typescript
public readonly amiType: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.AmiType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype)

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.capacityType\\"></a>

\`\`\`typescript
public readonly capacityType: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.CapacityType\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype)

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.diskSize\\"></a>

\`\`\`typescript
public readonly diskSize: number;
\`\`\`

- *Type:* number

\`AWS::EKS::Nodegroup.DiskSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize)

---

##### \`forceUpdateEnabled\`<sup>Optional</sup> <a name=\\"forceUpdateEnabled\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.forceUpdateEnabled\\"></a>

\`\`\`typescript
public readonly forceUpdateEnabled: boolean | IResolvable;
\`\`\`

- *Type:* boolean | aws-cdk-lib.IResolvable

\`AWS::EKS::Nodegroup.ForceUpdateEnabled\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled)

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.instanceTypes\\"></a>

\`\`\`typescript
public readonly instanceTypes: string[];
\`\`\`

- *Type:* string[]

\`AWS::EKS::Nodegroup.InstanceTypes\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.labels\\"></a>

\`\`\`typescript
public readonly labels: any;
\`\`\`

- *Type:* any

\`AWS::EKS::Nodegroup.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels)

---

##### \`launchTemplate\`<sup>Optional</sup> <a name=\\"launchTemplate\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.launchTemplate\\"></a>

\`\`\`typescript
public readonly launchTemplate: LaunchTemplateSpecificationProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\">LaunchTemplateSpecificationProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Nodegroup.LaunchTemplate\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate)

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.nodegroupName\\"></a>

\`\`\`typescript
public readonly nodegroupName: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.NodegroupName\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname)

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.releaseVersion\\"></a>

\`\`\`typescript
public readonly releaseVersion: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.ReleaseVersion\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion)

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.remoteAccess\\"></a>

\`\`\`typescript
public readonly remoteAccess: RemoteAccessProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\">RemoteAccessProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Nodegroup.RemoteAccess\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess)

---

##### \`scalingConfig\`<sup>Optional</sup> <a name=\\"scalingConfig\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.scalingConfig\\"></a>

\`\`\`typescript
public readonly scalingConfig: ScalingConfigProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\">ScalingConfigProperty</a> | aws-cdk-lib.IResolvable

\`AWS::EKS::Nodegroup.ScalingConfig\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig)

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.tags\\"></a>

\`\`\`typescript
public readonly tags: any;
\`\`\`

- *Type:* any

\`AWS::EKS::Nodegroup.Tags\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags)

---

##### \`taints\`<sup>Optional</sup> <a name=\\"taints\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.taints\\"></a>

\`\`\`typescript
public readonly taints: IResolvable | TaintProperty | IResolvable[];
\`\`\`

- *Type:* aws-cdk-lib.IResolvable | <a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\">TaintProperty</a> | aws-cdk-lib.IResolvable[]

\`AWS::EKS::Nodegroup.Taints\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroupProps.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string

\`AWS::EKS::Nodegroup.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version)

---

### ClusterAttributes <a name=\\"ClusterAttributes\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes\\"></a>

Attributes for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const clusterAttributes: aws_eks.ClusterAttributes = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterName\\">clusterName</a></code> | <code>string</code> | The physical name of the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>string</code> | The API Server endpoint URL. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>string</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Environment variables to use when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlLayer\\">kubectlLayer</a></code> | <code>aws-cdk-lib.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlMemory\\">kubectlMemory</a></code> | <code>aws-cdk-lib.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\">kubectlPrivateSubnetIds</a></code> | <code>string[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlRoleArn\\">kubectlRoleArn</a></code> | <code>string</code> | An IAM role with cluster administrator and \\"system:masters\\" permissions. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\">kubectlSecurityGroupId</a></code> | <code>string</code> | A security group to use for \`kubectl\` execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>aws-cdk-lib.aws_iam.IOpenIdConnectProvider</code> | An Open ID Connect provider for this cluster that can be used to configure service accounts. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.prune\\">prune</a></code> | <code>boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.securityGroupIds\\">securityGroupIds</a></code> | <code>string[]</code> | Additional security groups associated with this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterAttributes.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

The physical name of the Cluster.

---

##### \`clusterCertificateAuthorityData\`<sup>Optional</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterCertificateAuthorityData\\"></a>

\`\`\`typescript
public readonly clusterCertificateAuthorityData: string;
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterCertificateAuthorityData\` will throw an error

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Optional</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`typescript
public readonly clusterEncryptionConfigKeyArn: string;
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterEncryptionConfigKeyArn\` will throw an error

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Optional</sup> <a name=\\"clusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterEndpoint\\"></a>

\`\`\`typescript
public readonly clusterEndpoint: string;
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterEndpoint\` will throw an error.

The API Server endpoint URL.

---

##### \`clusterSecurityGroupId\`<sup>Optional</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.clusterSecurityGroupId\\"></a>

\`\`\`typescript
public readonly clusterSecurityGroupId: string;
\`\`\`

- *Type:* string
- *Default:* if not specified \`cluster.clusterSecurityGroupId\` will throw an error

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlEnvironment\\"></a>

\`\`\`typescript
public readonly kubectlEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* no additional variables

Environment variables to use when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlLayer\\"></a>

\`\`\`typescript
public readonly kubectlLayer: ILayerVersion;
\`\`\`

- *Type:* aws-cdk-lib.aws_lambda.ILayerVersion
- *Default:* a layer bundled with this module.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

This layer is used by the kubectl handler to apply manifests and install helm charts.  The handler expects the layer to include the following executables:      helm/helm     kubectl/kubectl     awscli/aws

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlMemory\\"></a>

\`\`\`typescript
public readonly kubectlMemory: Size;
\`\`\`

- *Type:* aws-cdk-lib.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`kubectlPrivateSubnetIds\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnetIds\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlPrivateSubnetIds\\"></a>

\`\`\`typescript
public readonly kubectlPrivateSubnetIds: string[];
\`\`\`

- *Type:* string[]
- *Default:* k8s endpoint is expected to be accessible publicly

Subnets to host the \`kubectl\` compute resources.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`kubectlRoleArn\`<sup>Optional</sup> <a name=\\"kubectlRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlRoleArn\\"></a>

\`\`\`typescript
public readonly kubectlRoleArn: string;
\`\`\`

- *Type:* string
- *Default:* if not specified, it not be possible to issue \`kubectl\` commands against an imported cluster.

An IAM role with cluster administrator and \\"system:masters\\" permissions.

---

##### \`kubectlSecurityGroupId\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.kubectlSecurityGroupId\\"></a>

\`\`\`typescript
public readonly kubectlSecurityGroupId: string;
\`\`\`

- *Type:* string
- *Default:* k8s endpoint is expected to be accessible publicly

A security group to use for \`kubectl\` execution.

If not specified, the k8s endpoint is expected to be accessible publicly.

---

##### \`openIdConnectProvider\`<sup>Optional</sup> <a name=\\"openIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.openIdConnectProvider\\"></a>

\`\`\`typescript
public readonly openIdConnectProvider: IOpenIdConnectProvider;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IOpenIdConnectProvider
- *Default:* if not specified \`cluster.openIdConnectProvider\` and \`cluster.addServiceAccount\` will throw an error.

An Open ID Connect provider for this cluster that can be used to configure service accounts.

You can either import an existing provider using \`iam.OpenIdConnectProvider.fromProviderArn\`, or create a new provider using \`new eks.OpenIdConnectProvider\`

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.prune\\"></a>

\`\`\`typescript
public readonly prune: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`securityGroupIds\`<sup>Optional</sup> <a name=\\"securityGroupIds\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.securityGroupIds\\"></a>

\`\`\`typescript
public readonly securityGroupIds: string[];
\`\`\`

- *Type:* string[]
- *Default:* if not specified, no additional security groups will be considered in \`cluster.connections\`.

Additional security groups associated with this cluster.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterAttributes.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc
- *Default:* if not specified \`cluster.vpc\` will throw an error

The VPC in which this Cluster was created.

---

### ClusterOptions <a name=\\"ClusterOptions\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions\\"></a>

Options for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const clusterOptions: aws_eks.ClusterOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.clusterName\\">clusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputClusterName\\">outputClusterName</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.role\\">role</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.securityGroup\\">securityGroup</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a></code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.endpointAccess\\">endpointAccess</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlLayer\\">kubectlLayer</a></code> | <code>aws-cdk-lib.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlMemory\\">kubectlMemory</a></code> | <code>aws-cdk-lib.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.mastersRole\\">mastersRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.prune\\">prune</a></code> | <code>boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterOptions.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>aws-cdk-lib.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.version\\"></a>

\`\`\`typescript
public readonly version: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputClusterName\\"></a>

\`\`\`typescript
public readonly outputClusterName: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`typescript
public readonly outputConfigCommand: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.role\\"></a>

\`\`\`typescript
public readonly role: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.securityGroup\\"></a>

\`\`\`typescript
public readonly securityGroup: ISecurityGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.vpcSubnets\\"></a>

\`\`\`typescript
public readonly vpcSubnets: SubnetSelection[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`ts vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.clusterHandlerEnvironment\\"></a>

\`\`\`typescript
public readonly clusterHandlerEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.coreDnsComputeType\\"></a>

\`\`\`typescript
public readonly coreDnsComputeType: CoreDnsComputeType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a>
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.endpointAccess\\"></a>

\`\`\`typescript
public readonly endpointAccess: EndpointAccess;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlEnvironment\\"></a>

\`\`\`typescript
public readonly kubectlEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlLayer\\"></a>

\`\`\`typescript
public readonly kubectlLayer: ILayerVersion;
\`\`\`

- *Type:* aws-cdk-lib.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`ts const layer = new lambda.LayerVersion(this, 'kubectl-layer', {    code: lambda.Code.fromAsset(\`\${__dirname}/layer.zip\`)),    compatibleRuntimes: [lambda.Runtime.PROVIDED] }) \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.kubectlMemory\\"></a>

\`\`\`typescript
public readonly kubectlMemory: Size;
\`\`\`

- *Type:* aws-cdk-lib.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.mastersRole\\"></a>

\`\`\`typescript
public readonly mastersRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.outputMastersRoleArn\\"></a>

\`\`\`typescript
public readonly outputMastersRoleArn: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.placeClusterHandlerInVpc\\"></a>

\`\`\`typescript
public readonly placeClusterHandlerInVpc: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.prune\\"></a>

\`\`\`typescript
public readonly prune: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.ClusterOptions.property.secretsEncryptionKey\\"></a>

\`\`\`typescript
public readonly secretsEncryptionKey: IKey;
\`\`\`

- *Type:* aws-cdk-lib.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

### ClusterProps <a name=\\"ClusterProps\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps\\"></a>

Common configuration props for EKS clusters.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const clusterProps: aws_eks.ClusterProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.clusterName\\">clusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputClusterName\\">outputClusterName</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.role\\">role</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.securityGroup\\">securityGroup</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.vpcSubnets\\">vpcSubnets</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a></code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.endpointAccess\\">endpointAccess</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlLayer\\">kubectlLayer</a></code> | <code>aws-cdk-lib.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.kubectlMemory\\">kubectlMemory</a></code> | <code>aws-cdk-lib.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.mastersRole\\">mastersRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.prune\\">prune</a></code> | <code>boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>aws-cdk-lib.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacity\\">defaultCapacity</a></code> | <code>number</code> | Number of instances to allocate as an initial capacity for this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityInstance\\">defaultCapacityInstance</a></code> | <code>aws-cdk-lib.aws_ec2.InstanceType</code> | The instance type to use for the default capacity. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityType\\">defaultCapacityType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType\\">DefaultCapacityType</a></code> | The default capacity type for the cluster. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.version\\"></a>

\`\`\`typescript
public readonly version: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputClusterName\\"></a>

\`\`\`typescript
public readonly outputClusterName: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputConfigCommand\\"></a>

\`\`\`typescript
public readonly outputConfigCommand: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.role\\"></a>

\`\`\`typescript
public readonly role: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.securityGroup\\"></a>

\`\`\`typescript
public readonly securityGroup: ISecurityGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.vpcSubnets\\"></a>

\`\`\`typescript
public readonly vpcSubnets: SubnetSelection[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`ts vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`typescript
public readonly clusterHandlerEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`typescript
public readonly coreDnsComputeType: CoreDnsComputeType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a>
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.endpointAccess\\"></a>

\`\`\`typescript
public readonly endpointAccess: EndpointAccess;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`typescript
public readonly kubectlEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlLayer\\"></a>

\`\`\`typescript
public readonly kubectlLayer: ILayerVersion;
\`\`\`

- *Type:* aws-cdk-lib.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`ts const layer = new lambda.LayerVersion(this, 'kubectl-layer', {    code: lambda.Code.fromAsset(\`\${__dirname}/layer.zip\`)),    compatibleRuntimes: [lambda.Runtime.PROVIDED] }) \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.kubectlMemory\\"></a>

\`\`\`typescript
public readonly kubectlMemory: Size;
\`\`\`

- *Type:* aws-cdk-lib.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.mastersRole\\"></a>

\`\`\`typescript
public readonly mastersRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`typescript
public readonly outputMastersRoleArn: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`typescript
public readonly placeClusterHandlerInVpc: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.prune\\"></a>

\`\`\`typescript
public readonly prune: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`typescript
public readonly secretsEncryptionKey: IKey;
\`\`\`

- *Type:* aws-cdk-lib.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultCapacity\`<sup>Optional</sup> <a name=\\"defaultCapacity\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacity\\"></a>

\`\`\`typescript
public readonly defaultCapacity: number;
\`\`\`

- *Type:* number
- *Default:* 2

Number of instances to allocate as an initial capacity for this cluster.

Instance type can be configured through \`defaultCapacityInstanceType\`, which defaults to \`m5.large\`.  Use \`cluster.addAutoScalingGroupCapacity\` to add additional customized capacity. Set this to \`0\` is you wish to avoid the initial capacity allocation.

---

##### \`defaultCapacityInstance\`<sup>Optional</sup> <a name=\\"defaultCapacityInstance\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityInstance\\"></a>

\`\`\`typescript
public readonly defaultCapacityInstance: InstanceType;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.InstanceType
- *Default:* m5.large

The instance type to use for the default capacity.

This will only be taken into account if \`defaultCapacity\` is > 0.

---

##### \`defaultCapacityType\`<sup>Optional</sup> <a name=\\"defaultCapacityType\\" id=\\"aws-cdk-lib.aws_eks.ClusterProps.property.defaultCapacityType\\"></a>

\`\`\`typescript
public readonly defaultCapacityType: DefaultCapacityType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType\\">DefaultCapacityType</a>
- *Default:* NODEGROUP

The default capacity type for the cluster.

---

### CommonClusterOptions <a name=\\"CommonClusterOptions\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions\\"></a>

Options for configuring an EKS cluster.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const commonClusterOptions: aws_eks.CommonClusterOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.clusterName\\">clusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputClusterName\\">outputClusterName</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.role\\">role</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.securityGroup\\">securityGroup</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpcSubnets\\">vpcSubnets</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.version\\"></a>

\`\`\`typescript
public readonly version: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputClusterName\\"></a>

\`\`\`typescript
public readonly outputClusterName: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.outputConfigCommand\\"></a>

\`\`\`typescript
public readonly outputConfigCommand: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.role\\"></a>

\`\`\`typescript
public readonly role: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.securityGroup\\"></a>

\`\`\`typescript
public readonly securityGroup: ISecurityGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.CommonClusterOptions.property.vpcSubnets\\"></a>

\`\`\`typescript
public readonly vpcSubnets: SubnetSelection[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`ts vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

### EksOptimizedImageProps <a name=\\"EksOptimizedImageProps\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps\\"></a>

Properties for EksOptimizedImage.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const eksOptimizedImageProps: aws_eks.EksOptimizedImageProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.cpuArch\\">cpuArch</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch\\">CpuArch</a></code> | What cpu architecture to retrieve the image for (arm64 or x86_64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\">kubernetesVersion</a></code> | <code>string</code> | The Kubernetes version to use. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.nodeType\\">nodeType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType\\">NodeType</a></code> | What instance type to retrieve the image for (standard or GPU-optimized). |

---

##### \`cpuArch\`<sup>Optional</sup> <a name=\\"cpuArch\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.cpuArch\\"></a>

\`\`\`typescript
public readonly cpuArch: CpuArch;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CpuArch\\">CpuArch</a>
- *Default:* CpuArch.X86_64

What cpu architecture to retrieve the image for (arm64 or x86_64).

---

##### \`kubernetesVersion\`<sup>Optional</sup> <a name=\\"kubernetesVersion\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.kubernetesVersion\\"></a>

\`\`\`typescript
public readonly kubernetesVersion: string;
\`\`\`

- *Type:* string
- *Default:* The latest version

The Kubernetes version to use.

---

##### \`nodeType\`<sup>Optional</sup> <a name=\\"nodeType\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImageProps.property.nodeType\\"></a>

\`\`\`typescript
public readonly nodeType: NodeType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodeType\\">NodeType</a>
- *Default:* NodeType.STANDARD

What instance type to retrieve the image for (standard or GPU-optimized).

---

### EncryptionConfigProperty <a name=\\"EncryptionConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const encryptionConfigProperty: aws_eks.CfnCluster.EncryptionConfigProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\">provider</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty\\">ProviderProperty</a> \\\\| aws-cdk-lib.IResolvable</code> | \`CfnCluster.EncryptionConfigProperty.Provider\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\">resources</a></code> | <code>string[]</code> | \`CfnCluster.EncryptionConfigProperty.Resources\`. |

---

##### \`provider\`<sup>Optional</sup> <a name=\\"provider\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.provider\\"></a>

\`\`\`typescript
public readonly provider: ProviderProperty | IResolvable;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty\\">ProviderProperty</a> | aws-cdk-lib.IResolvable

\`CfnCluster.EncryptionConfigProperty.Provider\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider)

---

##### \`resources\`<sup>Optional</sup> <a name=\\"resources\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.EncryptionConfigProperty.property.resources\\"></a>

\`\`\`typescript
public readonly resources: string[];
\`\`\`

- *Type:* string[]

\`CfnCluster.EncryptionConfigProperty.Resources\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources)

---

### FargateClusterProps <a name=\\"FargateClusterProps\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps\\"></a>

Configuration props for EKS Fargate.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const fargateClusterProps: aws_eks.FargateClusterProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.version\\">version</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | The Kubernetes version to run in the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterName\\">clusterName</a></code> | <code>string</code> | Name for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputClusterName\\">outputClusterName</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the name of the cluster will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputConfigCommand\\">outputConfigCommand</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.role\\">role</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.securityGroup\\">securityGroup</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup</code> | Security Group to use for Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC in which to create the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.vpcSubnets\\">vpcSubnets</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection[]</code> | Where to place EKS Control Plane ENIs. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\">clusterHandlerEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.coreDnsComputeType\\">coreDnsComputeType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a></code> | Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.endpointAccess\\">endpointAccess</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | Configure access to the Kubernetes API server endpoint.. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Environment variables for the kubectl execution. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlLayer\\">kubectlLayer</a></code> | <code>aws-cdk-lib.aws_lambda.ILayerVersion</code> | An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlMemory\\">kubectlMemory</a></code> | <code>aws-cdk-lib.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.mastersRole\\">mastersRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\">outputMastersRoleArn</a></code> | <code>boolean</code> | Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\">placeClusterHandlerInVpc</a></code> | <code>boolean</code> | If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.prune\\">prune</a></code> | <code>boolean</code> | Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\">secretsEncryptionKey</a></code> | <code>aws-cdk-lib.aws_kms.IKey</code> | KMS secret for envelope encryption for Kubernetes secrets. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateClusterProps.property.defaultProfile\\">defaultProfile</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions\\">FargateProfileOptions</a></code> | Fargate Profile to create along with the cluster. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.version\\"></a>

\`\`\`typescript
public readonly version: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

The Kubernetes version to run in the cluster.

---

##### \`clusterName\`<sup>Optional</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string
- *Default:* Automatically generated name

Name for the cluster.

---

##### \`outputClusterName\`<sup>Optional</sup> <a name=\\"outputClusterName\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputClusterName\\"></a>

\`\`\`typescript
public readonly outputClusterName: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Determines whether a CloudFormation output with the name of the cluster will be synthesized.

---

##### \`outputConfigCommand\`<sup>Optional</sup> <a name=\\"outputConfigCommand\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputConfigCommand\\"></a>

\`\`\`typescript
public readonly outputConfigCommand: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Determines whether a CloudFormation output with the \`aws eks update-kubeconfig\` command will be synthesized.

This command will include the cluster name and, if applicable, the ARN of the masters IAM role.

---

##### \`role\`<sup>Optional</sup> <a name=\\"role\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.role\\"></a>

\`\`\`typescript
public readonly role: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* A role is automatically created for you

Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

---

##### \`securityGroup\`<sup>Optional</sup> <a name=\\"securityGroup\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.securityGroup\\"></a>

\`\`\`typescript
public readonly securityGroup: ISecurityGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup
- *Default:* A security group is automatically created

Security Group to use for Control Plane ENIs.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc
- *Default:* a VPC with default configuration will be created and can be accessed through \`cluster.vpc\`.

The VPC in which to create the Cluster.

---

##### \`vpcSubnets\`<sup>Optional</sup> <a name=\\"vpcSubnets\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.vpcSubnets\\"></a>

\`\`\`typescript
public readonly vpcSubnets: SubnetSelection[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection[]
- *Default:* All public and private subnets

Where to place EKS Control Plane ENIs.

If you want to create public load balancers, this must include public subnets.  For example, to only select private subnets, supply the following:  \`\`\`ts vpcSubnets: [    { subnetType: ec2.SubnetType.Private } ] \`\`\`

---

##### \`clusterHandlerEnvironment\`<sup>Optional</sup> <a name=\\"clusterHandlerEnvironment\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.clusterHandlerEnvironment\\"></a>

\`\`\`typescript
public readonly clusterHandlerEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* No environment variables.

Custom environment variables when interacting with the EKS endpoint to manage the cluster lifecycle.

---

##### \`coreDnsComputeType\`<sup>Optional</sup> <a name=\\"coreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.coreDnsComputeType\\"></a>

\`\`\`typescript
public readonly coreDnsComputeType: CoreDnsComputeType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType\\">CoreDnsComputeType</a>
- *Default:* CoreDnsComputeType.EC2 (for \`FargateCluster\` the default is FARGATE)

Controls the \\"eks.amazonaws.com/compute-type\\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS.

---

##### \`endpointAccess\`<sup>Optional</sup> <a name=\\"endpointAccess\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.endpointAccess\\"></a>

\`\`\`typescript
public readonly endpointAccess: EndpointAccess;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>
- *Default:* EndpointAccess.PUBLIC_AND_PRIVATE

Configure access to the Kubernetes API server endpoint..

> [https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlEnvironment\\"></a>

\`\`\`typescript
public readonly kubectlEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* No environment variables.

Environment variables for the kubectl execution.

Only relevant for kubectl enabled clusters.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlLayer\\"></a>

\`\`\`typescript
public readonly kubectlLayer: ILayerVersion;
\`\`\`

- *Type:* aws-cdk-lib.aws_lambda.ILayerVersion
- *Default:* the layer provided by the \`aws-lambda-layer-kubectl\` SAR app.

An AWS Lambda Layer which includes \`kubectl\`, Helm and the AWS CLI.

By default, the provider will use the layer included in the \\"aws-lambda-layer-kubectl\\" SAR application which is available in all commercial regions.  To deploy the layer locally, visit https://github.com/aws-samples/aws-lambda-layer-kubectl/blob/master/cdk/README.md for instructions on how to prepare the .zip file and then define it in your app as follows:  \`\`\`ts const layer = new lambda.LayerVersion(this, 'kubectl-layer', {    code: lambda.Code.fromAsset(\`\${__dirname}/layer.zip\`)),    compatibleRuntimes: [lambda.Runtime.PROVIDED] }) \`\`\`

> [https://github.com/aws-samples/aws-lambda-layer-kubectl](https://github.com/aws-samples/aws-lambda-layer-kubectl)

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.kubectlMemory\\"></a>

\`\`\`typescript
public readonly kubectlMemory: Size;
\`\`\`

- *Type:* aws-cdk-lib.Size
- *Default:* Size.gibibytes(1)

Amount of memory to allocate to the provider's lambda function.

---

##### \`mastersRole\`<sup>Optional</sup> <a name=\\"mastersRole\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.mastersRole\\"></a>

\`\`\`typescript
public readonly mastersRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* a role that assumable by anyone with permissions in the same account will automatically be defined

An IAM role that will be added to the \`system:masters\` Kubernetes RBAC group.

> [https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings)

---

##### \`outputMastersRoleArn\`<sup>Optional</sup> <a name=\\"outputMastersRoleArn\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.outputMastersRoleArn\\"></a>

\`\`\`typescript
public readonly outputMastersRoleArn: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Determines whether a CloudFormation output with the ARN of the \\"masters\\" IAM role will be synthesized (if \`mastersRole\` is specified).

---

##### \`placeClusterHandlerInVpc\`<sup>Optional</sup> <a name=\\"placeClusterHandlerInVpc\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.placeClusterHandlerInVpc\\"></a>

\`\`\`typescript
public readonly placeClusterHandlerInVpc: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

If set to true, the cluster handler functions will be placed in the private subnets of the cluster vpc, subject to the \`vpcSubnets\` selection strategy.

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.prune\\"></a>

\`\`\`typescript
public readonly prune: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Indicates whether Kubernetes resources added through \`addManifest()\` can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`secretsEncryptionKey\`<sup>Optional</sup> <a name=\\"secretsEncryptionKey\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.secretsEncryptionKey\\"></a>

\`\`\`typescript
public readonly secretsEncryptionKey: IKey;
\`\`\`

- *Type:* aws-cdk-lib.aws_kms.IKey
- *Default:* By default, Kubernetes stores all secret object data within etcd and   all etcd volumes used by Amazon EKS are encrypted at the disk-level   using AWS-Managed encryption keys.

KMS secret for envelope encryption for Kubernetes secrets.

---

##### \`defaultProfile\`<sup>Optional</sup> <a name=\\"defaultProfile\\" id=\\"aws-cdk-lib.aws_eks.FargateClusterProps.property.defaultProfile\\"></a>

\`\`\`typescript
public readonly defaultProfile: FargateProfileOptions;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions\\">FargateProfileOptions</a>
- *Default:* A profile called \\"default\\" with 'default' and 'kube-system'   selectors will be created if this is left undefined.

Fargate Profile to create along with the cluster.

---

### FargateProfileOptions <a name=\\"FargateProfileOptions\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions\\"></a>

Options for defining EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const fargateProfileOptions: aws_eks.FargateProfileOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.selectors\\">selectors</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>[]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.fargateProfileName\\">fargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.podExecutionRole\\">podExecutionRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.subnetSelection\\">subnetSelection</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileOptions.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.selectors\\"></a>

\`\`\`typescript
public readonly selectors: Selector[];
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>[]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.fargateProfileName\\"></a>

\`\`\`typescript
public readonly fargateProfileName: string;
\`\`\`

- *Type:* string
- *Default:* generated

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Optional</sup> <a name=\\"podExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.podExecutionRole\\"></a>

\`\`\`typescript
public readonly podExecutionRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnetSelection\`<sup>Optional</sup> <a name=\\"subnetSelection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.subnetSelection\\"></a>

\`\`\`typescript
public readonly subnetSelection: SubnetSelection;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileOptions.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

### FargateProfileProps <a name=\\"FargateProfileProps\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps\\"></a>

Configuration props for EKS Fargate Profiles.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const fargateProfileProps: aws_eks.FargateProfileProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.selectors\\">selectors</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>[]</code> | The selectors to match for pods to use this Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.fargateProfileName\\">fargateProfileName</a></code> | <code>string</code> | The name of the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.podExecutionRole\\">podExecutionRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | The pod execution role to use for pods that match the selectors in the Fargate profile. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.subnetSelection\\">subnetSelection</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection</code> | Select which subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC from which to select subnets to launch your pods into. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.FargateProfileProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a></code> | The EKS cluster to apply the Fargate profile to. |

---

##### \`selectors\`<sup>Required</sup> <a name=\\"selectors\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.selectors\\"></a>

\`\`\`typescript
public readonly selectors: Selector[];
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Selector\\">Selector</a>[]

The selectors to match for pods to use this Fargate profile.

Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace.  At least one selector is required and you may specify up to five selectors.

---

##### \`fargateProfileName\`<sup>Optional</sup> <a name=\\"fargateProfileName\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.fargateProfileName\\"></a>

\`\`\`typescript
public readonly fargateProfileName: string;
\`\`\`

- *Type:* string
- *Default:* generated

The name of the Fargate profile.

---

##### \`podExecutionRole\`<sup>Optional</sup> <a name=\\"podExecutionRole\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.podExecutionRole\\"></a>

\`\`\`typescript
public readonly podExecutionRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* a role will be automatically created

The pod execution role to use for pods that match the selectors in the Fargate profile.

The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories.

> [https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)

---

##### \`subnetSelection\`<sup>Optional</sup> <a name=\\"subnetSelection\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.subnetSelection\\"></a>

\`\`\`typescript
public readonly subnetSelection: SubnetSelection;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection
- *Default:* all private subnets of the VPC are selected.

Select which subnets to launch your pods into.

At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are allowed.

---

##### \`vpc\`<sup>Optional</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc
- *Default:* all private subnets used by theEKS cluster

The VPC from which to select subnets to launch your pods into.

By default, all private subnets are selected. You can customize this using \`subnetSelection\`.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.FargateProfileProps.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: Cluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a>

The EKS cluster to apply the Fargate profile to.

[disable-awslint:ref-via-interface]

---

### HelmChartOptions <a name=\\"HelmChartOptions\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions\\"></a>

Helm Chart options.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const helmChartOptions: aws_eks.HelmChartOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.chart\\">chart</a></code> | <code>string</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.createNamespace\\">createNamespace</a></code> | <code>boolean</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.namespace\\">namespace</a></code> | <code>string</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.release\\">release</a></code> | <code>string</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.repository\\">repository</a></code> | <code>string</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.timeout\\">timeout</a></code> | <code>aws-cdk-lib.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.values\\">values</a></code> | <code>{[ key: string ]: any}</code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.version\\">version</a></code> | <code>string</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions.property.wait\\">wait</a></code> | <code>boolean</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.chart\\"></a>

\`\`\`typescript
public readonly chart: string;
\`\`\`

- *Type:* string

The name of the chart.

---

##### \`createNamespace\`<sup>Optional</sup> <a name=\\"createNamespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.createNamespace\\"></a>

\`\`\`typescript
public readonly createNamespace: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.namespace\\"></a>

\`\`\`typescript
public readonly namespace: string;
\`\`\`

- *Type:* string
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.release\\"></a>

\`\`\`typescript
public readonly release: string;
\`\`\`

- *Type:* string
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.repository\\"></a>

\`\`\`typescript
public readonly repository: string;
\`\`\`

- *Type:* string
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.timeout\\"></a>

\`\`\`typescript
public readonly timeout: Duration;
\`\`\`

- *Type:* aws-cdk-lib.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.values\\"></a>

\`\`\`typescript
public readonly values: {[ key: string ]: any};
\`\`\`

- *Type:* {[ key: string ]: any}
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChartOptions.property.wait\\"></a>

\`\`\`typescript
public readonly wait: boolean;
\`\`\`

- *Type:* boolean
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

### HelmChartProps <a name=\\"HelmChartProps\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps\\"></a>

Helm Chart properties.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const helmChartProps: aws_eks.HelmChartProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.chart\\">chart</a></code> | <code>string</code> | The name of the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.createNamespace\\">createNamespace</a></code> | <code>boolean</code> | create namespace if not exist. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.namespace\\">namespace</a></code> | <code>string</code> | The Kubernetes namespace scope of the requests. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.release\\">release</a></code> | <code>string</code> | The name of the release. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.repository\\">repository</a></code> | <code>string</code> | The repository which contains the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.timeout\\">timeout</a></code> | <code>aws-cdk-lib.Duration</code> | Amount of time to wait for any individual Kubernetes operation. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.values\\">values</a></code> | <code>{[ key: string ]: any}</code> | The values to be used by the chart. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.version\\">version</a></code> | <code>string</code> | The chart version to install. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.wait\\">wait</a></code> | <code>boolean</code> | Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.HelmChartProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to apply this configuration to. |

---

##### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.chart\\"></a>

\`\`\`typescript
public readonly chart: string;
\`\`\`

- *Type:* string

The name of the chart.

---

##### \`createNamespace\`<sup>Optional</sup> <a name=\\"createNamespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.createNamespace\\"></a>

\`\`\`typescript
public readonly createNamespace: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

create namespace if not exist.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.namespace\\"></a>

\`\`\`typescript
public readonly namespace: string;
\`\`\`

- *Type:* string
- *Default:* default

The Kubernetes namespace scope of the requests.

---

##### \`release\`<sup>Optional</sup> <a name=\\"release\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.release\\"></a>

\`\`\`typescript
public readonly release: string;
\`\`\`

- *Type:* string
- *Default:* If no release name is given, it will use the last 53 characters of the node's unique id.

The name of the release.

---

##### \`repository\`<sup>Optional</sup> <a name=\\"repository\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.repository\\"></a>

\`\`\`typescript
public readonly repository: string;
\`\`\`

- *Type:* string
- *Default:* No repository will be used, which means that the chart needs to be an absolute URL.

The repository which contains the chart.

For example: https://kubernetes-charts.storage.googleapis.com/

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.timeout\\"></a>

\`\`\`typescript
public readonly timeout: Duration;
\`\`\`

- *Type:* aws-cdk-lib.Duration
- *Default:* Duration.minutes(5)

Amount of time to wait for any individual Kubernetes operation.

Maximum 15 minutes.

---

##### \`values\`<sup>Optional</sup> <a name=\\"values\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.values\\"></a>

\`\`\`typescript
public readonly values: {[ key: string ]: any};
\`\`\`

- *Type:* {[ key: string ]: any}
- *Default:* No values are provided to the chart.

The values to be used by the chart.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string
- *Default:* If this is not specified, the latest version is installed

The chart version to install.

---

##### \`wait\`<sup>Optional</sup> <a name=\\"wait\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.wait\\"></a>

\`\`\`typescript
public readonly wait: boolean;
\`\`\`

- *Type:* boolean
- *Default:* Helm will not wait before marking release as successful

Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.HelmChartProps.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: ICluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to apply this configuration to.

[disable-awslint:ref-via-interface]

---

### KubernetesManifestOptions <a name=\\"KubernetesManifestOptions\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions\\"></a>

Options for \`KubernetesManifest\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const kubernetesManifestOptions: aws_eks.KubernetesManifestOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.prune\\">prune</a></code> | <code>boolean</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.skipValidation\\">skipValidation</a></code> | <code>boolean</code> | A flag to signify if the manifest validation should be skipped. |

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.prune\\"></a>

\`\`\`typescript
public readonly prune: boolean;
\`\`\`

- *Type:* boolean
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skipValidation\`<sup>Optional</sup> <a name=\\"skipValidation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestOptions.property.skipValidation\\"></a>

\`\`\`typescript
public readonly skipValidation: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

### KubernetesManifestProps <a name=\\"KubernetesManifestProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps\\"></a>

Properties for KubernetesManifest.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const kubernetesManifestProps: aws_eks.KubernetesManifestProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.prune\\">prune</a></code> | <code>boolean</code> | When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.skipValidation\\">skipValidation</a></code> | <code>boolean</code> | A flag to signify if the manifest validation should be skipped. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to apply this manifest to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.manifest\\">manifest</a></code> | <code>{[ key: string ]: any}[]</code> | The manifest to apply. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesManifestProps.property.overwrite\\">overwrite</a></code> | <code>boolean</code> | Overwrite any existing resources. |

---

##### \`prune\`<sup>Optional</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.prune\\"></a>

\`\`\`typescript
public readonly prune: boolean;
\`\`\`

- *Type:* boolean
- *Default:* based on the prune option of the cluster, which is \`true\` unless otherwise specified.

When a resource is removed from a Kubernetes manifest, it no longer appears in the manifest, and there is no way to know that this resource needs to be deleted.

To address this, \`kubectl apply\` has a \`--prune\` option which will query the cluster for all resources with a specific label and will remove all the labeld resources that are not part of the applied manifest. If this option is disabled and a resource is removed, it will become \\"orphaned\\" and will not be deleted from the cluster.  When this option is enabled (default), the construct will inject a label to all Kubernetes resources included in this manifest which will be used to prune resources when the manifest changes via \`kubectl apply --prune\`.  The label name will be \`aws.cdk.eks/prune-<ADDR>\` where \`<ADDR>\` is the 42-char unique address of this construct in the construct tree. Value is empty.

> [https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/#alternative-kubectl-apply-f-directory-prune-l-your-label)

---

##### \`skipValidation\`<sup>Optional</sup> <a name=\\"skipValidation\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.skipValidation\\"></a>

\`\`\`typescript
public readonly skipValidation: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

A flag to signify if the manifest validation should be skipped.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: ICluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to apply this manifest to.

[disable-awslint:ref-via-interface]

---

##### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.manifest\\"></a>

\`\`\`typescript
public readonly manifest: {[ key: string ]: any}[];
\`\`\`

- *Type:* {[ key: string ]: any}[]

The manifest to apply.

Consists of any number of child resources.  When the resources are created/updated, this manifest will be applied to the cluster through \`kubectl apply\` and when the resources or the stack is deleted, the resources in the manifest will be deleted through \`kubectl delete\`.

---

##### \`overwrite\`<sup>Optional</sup> <a name=\\"overwrite\\" id=\\"aws-cdk-lib.aws_eks.KubernetesManifestProps.property.overwrite\\"></a>

\`\`\`typescript
public readonly overwrite: boolean;
\`\`\`

- *Type:* boolean
- *Default:* false

Overwrite any existing resources.

If this is set, we will use \`kubectl apply\` instead of \`kubectl create\` when the resource is created. Otherwise, if there is already a resource in the cluster with the same name, the operation will fail.

---

### KubernetesNetworkConfigProperty <a name=\\"KubernetesNetworkConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const kubernetesNetworkConfigProperty: aws_eks.CfnCluster.KubernetesNetworkConfigProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\">serviceIpv4Cidr</a></code> | <code>string</code> | \`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`. |

---

##### \`serviceIpv4Cidr\`<sup>Optional</sup> <a name=\\"serviceIpv4Cidr\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.KubernetesNetworkConfigProperty.property.serviceIpv4Cidr\\"></a>

\`\`\`typescript
public readonly serviceIpv4Cidr: string;
\`\`\`

- *Type:* string

\`CfnCluster.KubernetesNetworkConfigProperty.ServiceIpv4Cidr\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr)

---

### KubernetesObjectValueProps <a name=\\"KubernetesObjectValueProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps\\"></a>

Properties for KubernetesObjectValue.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const kubernetesObjectValueProps: aws_eks.KubernetesObjectValueProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The EKS cluster to fetch attributes from. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.jsonPath\\">jsonPath</a></code> | <code>string</code> | JSONPath to the specific value. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectName\\">objectName</a></code> | <code>string</code> | The name of the object to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectType\\">objectType</a></code> | <code>string</code> | The object type to query. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\">objectNamespace</a></code> | <code>string</code> | The namespace the object belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.timeout\\">timeout</a></code> | <code>aws-cdk-lib.Duration</code> | Timeout for waiting on a value. |

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: ICluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The EKS cluster to fetch attributes from.

[disable-awslint:ref-via-interface]

---

##### \`jsonPath\`<sup>Required</sup> <a name=\\"jsonPath\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.jsonPath\\"></a>

\`\`\`typescript
public readonly jsonPath: string;
\`\`\`

- *Type:* string

JSONPath to the specific value.

> [https://kubernetes.io/docs/reference/kubectl/jsonpath/](https://kubernetes.io/docs/reference/kubectl/jsonpath/)

---

##### \`objectName\`<sup>Required</sup> <a name=\\"objectName\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectName\\"></a>

\`\`\`typescript
public readonly objectName: string;
\`\`\`

- *Type:* string

The name of the object to query.

---

##### \`objectType\`<sup>Required</sup> <a name=\\"objectType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectType\\"></a>

\`\`\`typescript
public readonly objectType: string;
\`\`\`

- *Type:* string

The object type to query.

(e.g 'service', 'pod'...)

---

##### \`objectNamespace\`<sup>Optional</sup> <a name=\\"objectNamespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.objectNamespace\\"></a>

\`\`\`typescript
public readonly objectNamespace: string;
\`\`\`

- *Type:* string
- *Default:* 'default'

The namespace the object belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.KubernetesObjectValueProps.property.timeout\\"></a>

\`\`\`typescript
public readonly timeout: Duration;
\`\`\`

- *Type:* aws-cdk-lib.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on a value.

---

### KubernetesPatchProps <a name=\\"KubernetesPatchProps\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps\\"></a>

Properties for KubernetesPatch.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const kubernetesPatchProps: aws_eks.KubernetesPatchProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.applyPatch\\">applyPatch</a></code> | <code>{[ key: string ]: any}</code> | The JSON object to pass to \`kubectl patch\` when the resource is created/updated. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The cluster to apply the patch to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceName\\">resourceName</a></code> | <code>string</code> | The full name of the resource to patch (e.g. \`deployment/coredns\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.restorePatch\\">restorePatch</a></code> | <code>{[ key: string ]: any}</code> | The JSON object to pass to \`kubectl patch\` when the resource is removed. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.patchType\\">patchType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType\\">PatchType</a></code> | The patch type to pass to \`kubectl patch\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceNamespace\\">resourceNamespace</a></code> | <code>string</code> | The kubernetes API namespace. |

---

##### \`applyPatch\`<sup>Required</sup> <a name=\\"applyPatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.applyPatch\\"></a>

\`\`\`typescript
public readonly applyPatch: {[ key: string ]: any};
\`\`\`

- *Type:* {[ key: string ]: any}

The JSON object to pass to \`kubectl patch\` when the resource is created/updated.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: ICluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The cluster to apply the patch to.

[disable-awslint:ref-via-interface]

---

##### \`resourceName\`<sup>Required</sup> <a name=\\"resourceName\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceName\\"></a>

\`\`\`typescript
public readonly resourceName: string;
\`\`\`

- *Type:* string

The full name of the resource to patch (e.g. \`deployment/coredns\`).

---

##### \`restorePatch\`<sup>Required</sup> <a name=\\"restorePatch\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.restorePatch\\"></a>

\`\`\`typescript
public readonly restorePatch: {[ key: string ]: any};
\`\`\`

- *Type:* {[ key: string ]: any}

The JSON object to pass to \`kubectl patch\` when the resource is removed.

---

##### \`patchType\`<sup>Optional</sup> <a name=\\"patchType\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.patchType\\"></a>

\`\`\`typescript
public readonly patchType: PatchType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.PatchType\\">PatchType</a>
- *Default:* PatchType.STRATEGIC

The patch type to pass to \`kubectl patch\`.

The default type used by \`kubectl patch\` is \\"strategic\\".

---

##### \`resourceNamespace\`<sup>Optional</sup> <a name=\\"resourceNamespace\\" id=\\"aws-cdk-lib.aws_eks.KubernetesPatchProps.property.resourceNamespace\\"></a>

\`\`\`typescript
public readonly resourceNamespace: string;
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The kubernetes API namespace.

---

### LabelProperty <a name=\\"LabelProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const labelProperty: aws_eks.CfnFargateProfile.LabelProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.key\\">key</a></code> | <code>string</code> | \`CfnFargateProfile.LabelProperty.Key\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.value\\">value</a></code> | <code>string</code> | \`CfnFargateProfile.LabelProperty.Value\`. |

---

##### \`key\`<sup>Required</sup> <a name=\\"key\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.key\\"></a>

\`\`\`typescript
public readonly key: string;
\`\`\`

- *Type:* string

\`CfnFargateProfile.LabelProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key)

---

##### \`value\`<sup>Required</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty.property.value\\"></a>

\`\`\`typescript
public readonly value: string;
\`\`\`

- *Type:* string

\`CfnFargateProfile.LabelProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value)

---

### LaunchTemplateSpec <a name=\\"LaunchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec\\"></a>

Launch template property specification.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const launchTemplateSpec: aws_eks.LaunchTemplateSpec = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.id\\">id</a></code> | <code>string</code> | The Launch template ID. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.version\\">version</a></code> | <code>string</code> | The launch template version to be used (optional). |

---

##### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.id\\"></a>

\`\`\`typescript
public readonly id: string;
\`\`\`

- *Type:* string

The Launch template ID.

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.LaunchTemplateSpec.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string
- *Default:* the default version of the launch template

The launch template version to be used (optional).

---

### LaunchTemplateSpecificationProperty <a name=\\"LaunchTemplateSpecificationProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const launchTemplateSpecificationProperty: aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\">id</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\">name</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\">version</a></code> | <code>string</code> | \`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`. |

---

##### \`id\`<sup>Optional</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.id\\"></a>

\`\`\`typescript
public readonly id: string;
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Id\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id)

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.name\\"></a>

\`\`\`typescript
public readonly name: string;
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Name\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name)

---

##### \`version\`<sup>Optional</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.LaunchTemplateSpecificationProperty.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string

\`CfnNodegroup.LaunchTemplateSpecificationProperty.Version\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version)

---

### NodegroupOptions <a name=\\"NodegroupOptions\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions\\"></a>

The Nodegroup Options for addNodeGroup() method.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const nodegroupOptions: aws_eks.NodegroupOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.amiType\\">amiType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a></code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.capacityType\\">capacityType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a></code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.desiredSize\\">desiredSize</a></code> | <code>number</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.diskSize\\">diskSize</a></code> | <code>number</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.forceUpdate\\">forceUpdate</a></code> | <code>boolean</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.instanceTypes\\">instanceTypes</a></code> | <code>aws-cdk-lib.aws_ec2.InstanceType[]</code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.labels\\">labels</a></code> | <code>{[ key: string ]: string}</code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.launchTemplateSpec\\">launchTemplateSpec</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a></code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.maxSize\\">maxSize</a></code> | <code>number</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.minSize\\">minSize</a></code> | <code>number</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.nodegroupName\\">nodegroupName</a></code> | <code>string</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.nodeRole\\">nodeRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.releaseVersion\\">releaseVersion</a></code> | <code>string</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.remoteAccess\\">remoteAccess</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a></code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.subnets\\">subnets</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupOptions.property.tags\\">tags</a></code> | <code>{[ key: string ]: string}</code> | The metadata to apply to the node group to assist with categorization and organization. |

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.amiType\\"></a>

\`\`\`typescript
public readonly amiType: NodegroupAmiType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a>
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.capacityType\\"></a>

\`\`\`typescript
public readonly capacityType: CapacityType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a>
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.desiredSize\\"></a>

\`\`\`typescript
public readonly desiredSize: number;
\`\`\`

- *Type:* number
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.diskSize\\"></a>

\`\`\`typescript
public readonly diskSize: number;
\`\`\`

- *Type:* number
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`forceUpdate\`<sup>Optional</sup> <a name=\\"forceUpdate\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.forceUpdate\\"></a>

\`\`\`typescript
public readonly forceUpdate: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.instanceTypes\\"></a>

\`\`\`typescript
public readonly instanceTypes: InstanceType[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.InstanceType[]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.labels\\"></a>

\`\`\`typescript
public readonly labels: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launchTemplateSpec\`<sup>Optional</sup> <a name=\\"launchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.launchTemplateSpec\\"></a>

\`\`\`typescript
public readonly launchTemplateSpec: LaunchTemplateSpec;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a>
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.maxSize\\"></a>

\`\`\`typescript
public readonly maxSize: number;
\`\`\`

- *Type:* number
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.minSize\\"></a>

\`\`\`typescript
public readonly minSize: number;
\`\`\`

- *Type:* number
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.nodegroupName\\"></a>

\`\`\`typescript
public readonly nodegroupName: string;
\`\`\`

- *Type:* string
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`nodeRole\`<sup>Optional</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.nodeRole\\"></a>

\`\`\`typescript
public readonly nodeRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.releaseVersion\\"></a>

\`\`\`typescript
public readonly releaseVersion: string;
\`\`\`

- *Type:* string
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.remoteAccess\\"></a>

\`\`\`typescript
public readonly remoteAccess: NodegroupRemoteAccess;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a>
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.subnets\\"></a>

\`\`\`typescript
public readonly subnets: SubnetSelection;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.NodegroupOptions.property.tags\\"></a>

\`\`\`typescript
public readonly tags: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

### NodegroupProps <a name=\\"NodegroupProps\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps\\"></a>

NodeGroup properties interface.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const nodegroupProps: aws_eks.NodegroupProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.amiType\\">amiType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a></code> | The AMI type for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.capacityType\\">capacityType</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a></code> | The capacity type of the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.desiredSize\\">desiredSize</a></code> | <code>number</code> | The current number of worker nodes that the managed node group should maintain. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.diskSize\\">diskSize</a></code> | <code>number</code> | The root device disk size (in GiB) for your node group instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.forceUpdate\\">forceUpdate</a></code> | <code>boolean</code> | Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.instanceTypes\\">instanceTypes</a></code> | <code>aws-cdk-lib.aws_ec2.InstanceType[]</code> | The instance types to use for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.labels\\">labels</a></code> | <code>{[ key: string ]: string}</code> | The Kubernetes labels to be applied to the nodes in the node group when they are created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.launchTemplateSpec\\">launchTemplateSpec</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a></code> | Launch template specification used for the nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.maxSize\\">maxSize</a></code> | <code>number</code> | The maximum number of worker nodes that the managed node group can scale out to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.minSize\\">minSize</a></code> | <code>number</code> | The minimum number of worker nodes that the managed node group can scale in to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.nodegroupName\\">nodegroupName</a></code> | <code>string</code> | Name of the Nodegroup. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.nodeRole\\">nodeRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | The IAM role to associate with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.releaseVersion\\">releaseVersion</a></code> | <code>string</code> | The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.remoteAccess\\">remoteAccess</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a></code> | The remote access (SSH) configuration to use with your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.subnets\\">subnets</a></code> | <code>aws-cdk-lib.aws_ec2.SubnetSelection</code> | The subnets to use for the Auto Scaling group that is created for your node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.tags\\">tags</a></code> | <code>{[ key: string ]: string}</code> | The metadata to apply to the node group to assist with categorization and organization. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | Cluster resource. |

---

##### \`amiType\`<sup>Optional</sup> <a name=\\"amiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.amiType\\"></a>

\`\`\`typescript
public readonly amiType: NodegroupAmiType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType\\">NodegroupAmiType</a>
- *Default:* auto-determined from the instanceTypes property.

The AMI type for your node group.

---

##### \`capacityType\`<sup>Optional</sup> <a name=\\"capacityType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.capacityType\\"></a>

\`\`\`typescript
public readonly capacityType: CapacityType;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.CapacityType\\">CapacityType</a>
- *Default:* ON_DEMAND

The capacity type of the nodegroup.

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.desiredSize\\"></a>

\`\`\`typescript
public readonly desiredSize: number;
\`\`\`

- *Type:* number
- *Default:* 2

The current number of worker nodes that the managed node group should maintain.

If not specified, the nodewgroup will initially create \`minSize\` instances.

---

##### \`diskSize\`<sup>Optional</sup> <a name=\\"diskSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.diskSize\\"></a>

\`\`\`typescript
public readonly diskSize: number;
\`\`\`

- *Type:* number
- *Default:* 20

The root device disk size (in GiB) for your node group instances.

---

##### \`forceUpdate\`<sup>Optional</sup> <a name=\\"forceUpdate\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.forceUpdate\\"></a>

\`\`\`typescript
public readonly forceUpdate: boolean;
\`\`\`

- *Type:* boolean
- *Default:* true

Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.

If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

---

##### \`instanceTypes\`<sup>Optional</sup> <a name=\\"instanceTypes\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.instanceTypes\\"></a>

\`\`\`typescript
public readonly instanceTypes: InstanceType[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.InstanceType[]
- *Default:* t3.medium will be used according to the cloudformation document.

The instance types to use for your node group.

> [- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes](- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.labels\\"></a>

\`\`\`typescript
public readonly labels: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* None

The Kubernetes labels to be applied to the nodes in the node group when they are created.

---

##### \`launchTemplateSpec\`<sup>Optional</sup> <a name=\\"launchTemplateSpec\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.launchTemplateSpec\\"></a>

\`\`\`typescript
public readonly launchTemplateSpec: LaunchTemplateSpec;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.LaunchTemplateSpec\\">LaunchTemplateSpec</a>
- *Default:* no launch template

Launch template specification used for the nodegroup.

> [- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html](- https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.maxSize\\"></a>

\`\`\`typescript
public readonly maxSize: number;
\`\`\`

- *Type:* number
- *Default:* desiredSize

The maximum number of worker nodes that the managed node group can scale out to.

Managed node groups can support up to 100 nodes by default.

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.minSize\\"></a>

\`\`\`typescript
public readonly minSize: number;
\`\`\`

- *Type:* number
- *Default:* 1

The minimum number of worker nodes that the managed node group can scale in to.

This number must be greater than zero.

---

##### \`nodegroupName\`<sup>Optional</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.nodegroupName\\"></a>

\`\`\`typescript
public readonly nodegroupName: string;
\`\`\`

- *Type:* string
- *Default:* resource ID

Name of the Nodegroup.

---

##### \`nodeRole\`<sup>Optional</sup> <a name=\\"nodeRole\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.nodeRole\\"></a>

\`\`\`typescript
public readonly nodeRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole
- *Default:* None. Auto-generated if not specified.

The IAM role to associate with your node group.

The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.

---

##### \`releaseVersion\`<sup>Optional</sup> <a name=\\"releaseVersion\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.releaseVersion\\"></a>

\`\`\`typescript
public readonly releaseVersion: string;
\`\`\`

- *Type:* string
- *Default:* The latest available AMI version for the node group's current Kubernetes version is used.

The AMI version of the Amazon EKS-optimized AMI to use with your node group (for example, \`1.14.7-YYYYMMDD\`).

---

##### \`remoteAccess\`<sup>Optional</sup> <a name=\\"remoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.remoteAccess\\"></a>

\`\`\`typescript
public readonly remoteAccess: NodegroupRemoteAccess;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\">NodegroupRemoteAccess</a>
- *Default:* disabled

The remote access (SSH) configuration to use with your node group.

Disabled by default, however, if you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

---

##### \`subnets\`<sup>Optional</sup> <a name=\\"subnets\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.subnets\\"></a>

\`\`\`typescript
public readonly subnets: SubnetSelection;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.SubnetSelection
- *Default:* private subnets

The subnets to use for the Auto Scaling group that is created for your node group.

By specifying the SubnetSelection, the selected subnets will automatically apply required tags i.e. \`kubernetes.io/cluster/CLUSTER_NAME\` with a value of \`shared\`, where \`CLUSTER_NAME\` is replaced with the name of your cluster.

---

##### \`tags\`<sup>Optional</sup> <a name=\\"tags\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.tags\\"></a>

\`\`\`typescript
public readonly tags: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* None

The metadata to apply to the node group to assist with categorization and organization.

Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.NodegroupProps.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: ICluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

Cluster resource.

---

### NodegroupRemoteAccess <a name=\\"NodegroupRemoteAccess\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess\\"></a>

The remote access (SSH) configuration to use with your node group.

> [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const nodegroupRemoteAccess: aws_eks.NodegroupRemoteAccess = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\">sshKeyName</a></code> | <code>string</code> | The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\">sourceSecurityGroups</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup[]</code> | The security groups that are allowed SSH access (port 22) to the worker nodes. |

---

##### \`sshKeyName\`<sup>Required</sup> <a name=\\"sshKeyName\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sshKeyName\\"></a>

\`\`\`typescript
public readonly sshKeyName: string;
\`\`\`

- *Type:* string

The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group.

---

##### \`sourceSecurityGroups\`<sup>Optional</sup> <a name=\\"sourceSecurityGroups\\" id=\\"aws-cdk-lib.aws_eks.NodegroupRemoteAccess.property.sourceSecurityGroups\\"></a>

\`\`\`typescript
public readonly sourceSecurityGroups: ISecurityGroup[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup[]
- *Default:* port 22 on the worker nodes is opened to the internet (0.0.0.0/0)

The security groups that are allowed SSH access (port 22) to the worker nodes.

If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0).

---

### OpenIdConnectProviderProps <a name=\\"OpenIdConnectProviderProps\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps\\"></a>

Initialization properties for \`OpenIdConnectProvider\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const openIdConnectProviderProps: aws_eks.OpenIdConnectProviderProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.property.url\\">url</a></code> | <code>string</code> | The URL of the identity provider. |

---

##### \`url\`<sup>Required</sup> <a name=\\"url\\" id=\\"aws-cdk-lib.aws_eks.OpenIdConnectProviderProps.property.url\\"></a>

\`\`\`typescript
public readonly url: string;
\`\`\`

- *Type:* string

The URL of the identity provider.

The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com.  You can find your OIDC Issuer URL by: aws eks describe-cluster --name %cluster_name% --query \\"cluster.identity.oidc.issuer\\" --output text

---

### ProviderProperty <a name=\\"ProviderProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const providerProperty: aws_eks.CfnCluster.ProviderProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\">keyArn</a></code> | <code>string</code> | \`CfnCluster.ProviderProperty.KeyArn\`. |

---

##### \`keyArn\`<sup>Optional</sup> <a name=\\"keyArn\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ProviderProperty.property.keyArn\\"></a>

\`\`\`typescript
public readonly keyArn: string;
\`\`\`

- *Type:* string

\`CfnCluster.ProviderProperty.KeyArn\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn)

---

### RemoteAccessProperty <a name=\\"RemoteAccessProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const remoteAccessProperty: aws_eks.CfnNodegroup.RemoteAccessProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\">ec2SshKey</a></code> | <code>string</code> | \`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\">sourceSecurityGroups</a></code> | <code>string[]</code> | \`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`. |

---

##### \`ec2SshKey\`<sup>Required</sup> <a name=\\"ec2SshKey\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.ec2SshKey\\"></a>

\`\`\`typescript
public readonly ec2SshKey: string;
\`\`\`

- *Type:* string

\`CfnNodegroup.RemoteAccessProperty.Ec2SshKey\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey)

---

##### \`sourceSecurityGroups\`<sup>Optional</sup> <a name=\\"sourceSecurityGroups\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.RemoteAccessProperty.property.sourceSecurityGroups\\"></a>

\`\`\`typescript
public readonly sourceSecurityGroups: string[];
\`\`\`

- *Type:* string[]

\`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups)

---

### ResourcesVpcConfigProperty <a name=\\"ResourcesVpcConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const resourcesVpcConfigProperty: aws_eks.CfnCluster.ResourcesVpcConfigProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\">subnetIds</a></code> | <code>string[]</code> | \`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\">securityGroupIds</a></code> | <code>string[]</code> | \`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`. |

---

##### \`subnetIds\`<sup>Required</sup> <a name=\\"subnetIds\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.subnetIds\\"></a>

\`\`\`typescript
public readonly subnetIds: string[];
\`\`\`

- *Type:* string[]

\`CfnCluster.ResourcesVpcConfigProperty.SubnetIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids)

---

##### \`securityGroupIds\`<sup>Optional</sup> <a name=\\"securityGroupIds\\" id=\\"aws-cdk-lib.aws_eks.CfnCluster.ResourcesVpcConfigProperty.property.securityGroupIds\\"></a>

\`\`\`typescript
public readonly securityGroupIds: string[];
\`\`\`

- *Type:* string[]

\`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids)

---

### ScalingConfigProperty <a name=\\"ScalingConfigProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const scalingConfigProperty: aws_eks.CfnNodegroup.ScalingConfigProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\">desiredSize</a></code> | <code>number</code> | \`CfnNodegroup.ScalingConfigProperty.DesiredSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\">maxSize</a></code> | <code>number</code> | \`CfnNodegroup.ScalingConfigProperty.MaxSize\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\">minSize</a></code> | <code>number</code> | \`CfnNodegroup.ScalingConfigProperty.MinSize\`. |

---

##### \`desiredSize\`<sup>Optional</sup> <a name=\\"desiredSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.desiredSize\\"></a>

\`\`\`typescript
public readonly desiredSize: number;
\`\`\`

- *Type:* number

\`CfnNodegroup.ScalingConfigProperty.DesiredSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize)

---

##### \`maxSize\`<sup>Optional</sup> <a name=\\"maxSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.maxSize\\"></a>

\`\`\`typescript
public readonly maxSize: number;
\`\`\`

- *Type:* number

\`CfnNodegroup.ScalingConfigProperty.MaxSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize)

---

##### \`minSize\`<sup>Optional</sup> <a name=\\"minSize\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.ScalingConfigProperty.property.minSize\\"></a>

\`\`\`typescript
public readonly minSize: number;
\`\`\`

- *Type:* number

\`CfnNodegroup.ScalingConfigProperty.MinSize\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize)

---

### Selector <a name=\\"Selector\\" id=\\"aws-cdk-lib.aws_eks.Selector\\"></a>

Fargate profile selector.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.Selector.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const selector: aws_eks.Selector = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Selector.property.namespace\\">namespace</a></code> | <code>string</code> | The Kubernetes namespace that the selector should match. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.Selector.property.labels\\">labels</a></code> | <code>{[ key: string ]: string}</code> | The Kubernetes labels that the selector should match. |

---

##### \`namespace\`<sup>Required</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.Selector.property.namespace\\"></a>

\`\`\`typescript
public readonly namespace: string;
\`\`\`

- *Type:* string

The Kubernetes namespace that the selector should match.

You must specify a namespace for a selector. The selector only matches pods that are created in this namespace, but you can create multiple selectors to target multiple namespaces.

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.Selector.property.labels\\"></a>

\`\`\`typescript
public readonly labels: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}
- *Default:* all pods within the namespace will be selected.

The Kubernetes labels that the selector should match.

A pod must contain all of the labels that are specified in the selector for it to be considered a match.

---

### SelectorProperty <a name=\\"SelectorProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const selectorProperty: aws_eks.CfnFargateProfile.SelectorProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\">namespace</a></code> | <code>string</code> | \`CfnFargateProfile.SelectorProperty.Namespace\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\">labels</a></code> | <code>aws-cdk-lib.IResolvable \\\\| <a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty\\">LabelProperty</a> \\\\| aws-cdk-lib.IResolvable[]</code> | \`CfnFargateProfile.SelectorProperty.Labels\`. |

---

##### \`namespace\`<sup>Required</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.namespace\\"></a>

\`\`\`typescript
public readonly namespace: string;
\`\`\`

- *Type:* string

\`CfnFargateProfile.SelectorProperty.Namespace\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace)

---

##### \`labels\`<sup>Optional</sup> <a name=\\"labels\\" id=\\"aws-cdk-lib.aws_eks.CfnFargateProfile.SelectorProperty.property.labels\\"></a>

\`\`\`typescript
public readonly labels: IResolvable | LabelProperty | IResolvable[];
\`\`\`

- *Type:* aws-cdk-lib.IResolvable | <a href=\\"#aws-cdk-lib.aws_eks.CfnFargateProfile.LabelProperty\\">LabelProperty</a> | aws-cdk-lib.IResolvable[]

\`CfnFargateProfile.SelectorProperty.Labels\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels)

---

### ServiceAccountOptions <a name=\\"ServiceAccountOptions\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions\\"></a>

Options for \`ServiceAccount\`.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const serviceAccountOptions: aws_eks.ServiceAccountOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions.property.name\\">name</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions.property.namespace\\">namespace</a></code> | <code>string</code> | The namespace of the service account. |

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.property.name\\"></a>

\`\`\`typescript
public readonly name: string;
\`\`\`

- *Type:* string
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountOptions.property.namespace\\"></a>

\`\`\`typescript
public readonly namespace: string;
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The namespace of the service account.

---

### ServiceAccountProps <a name=\\"ServiceAccountProps\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps\\"></a>

Properties for defining service accounts.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const serviceAccountProps: aws_eks.ServiceAccountProps = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.name\\">name</a></code> | <code>string</code> | The name of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.namespace\\">namespace</a></code> | <code>string</code> | The namespace of the service account. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountProps.property.cluster\\">cluster</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a></code> | The cluster to apply the patch to. |

---

##### \`name\`<sup>Optional</sup> <a name=\\"name\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.name\\"></a>

\`\`\`typescript
public readonly name: string;
\`\`\`

- *Type:* string
- *Default:* If no name is given, it will use the id of the resource.

The name of the service account.

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.namespace\\"></a>

\`\`\`typescript
public readonly namespace: string;
\`\`\`

- *Type:* string
- *Default:* \\"default\\"

The namespace of the service account.

---

##### \`cluster\`<sup>Required</sup> <a name=\\"cluster\\" id=\\"aws-cdk-lib.aws_eks.ServiceAccountProps.property.cluster\\"></a>

\`\`\`typescript
public readonly cluster: ICluster;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

The cluster to apply the patch to.

---

### ServiceLoadBalancerAddressOptions <a name=\\"ServiceLoadBalancerAddressOptions\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions\\"></a>

Options for fetching a ServiceLoadBalancerAddress.

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const serviceLoadBalancerAddressOptions: aws_eks.ServiceLoadBalancerAddressOptions = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\">namespace</a></code> | <code>string</code> | The namespace the service belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\">timeout</a></code> | <code>aws-cdk-lib.Duration</code> | Timeout for waiting on the load balancer address. |

---

##### \`namespace\`<sup>Optional</sup> <a name=\\"namespace\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.namespace\\"></a>

\`\`\`typescript
public readonly namespace: string;
\`\`\`

- *Type:* string
- *Default:* 'default'

The namespace the service belongs to.

---

##### \`timeout\`<sup>Optional</sup> <a name=\\"timeout\\" id=\\"aws-cdk-lib.aws_eks.ServiceLoadBalancerAddressOptions.property.timeout\\"></a>

\`\`\`typescript
public readonly timeout: Duration;
\`\`\`

- *Type:* aws-cdk-lib.Duration
- *Default:* Duration.minutes(5)

Timeout for waiting on the load balancer address.

---

### TaintProperty <a name=\\"TaintProperty\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty\\"></a>

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html)

#### Initializer <a name=\\"Initializer\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

const taintProperty: aws_eks.CfnNodegroup.TaintProperty = { ... }
\`\`\`

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.effect\\">effect</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Effect\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.key\\">key</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Key\`. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.value\\">value</a></code> | <code>string</code> | \`CfnNodegroup.TaintProperty.Value\`. |

---

##### \`effect\`<sup>Optional</sup> <a name=\\"effect\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.effect\\"></a>

\`\`\`typescript
public readonly effect: string;
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Effect\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect)

---

##### \`key\`<sup>Optional</sup> <a name=\\"key\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.key\\"></a>

\`\`\`typescript
public readonly key: string;
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Key\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key)

---

##### \`value\`<sup>Optional</sup> <a name=\\"value\\" id=\\"aws-cdk-lib.aws_eks.CfnNodegroup.TaintProperty.property.value\\"></a>

\`\`\`typescript
public readonly value: string;
\`\`\`

- *Type:* string

\`CfnNodegroup.TaintProperty.Value\`.

> [http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value)

---

## Classes <a name=\\"Classes\\" id=\\"Classes\\"></a>

### EksOptimizedImage <a name=\\"EksOptimizedImage\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage\\"></a>

- *Implements:* aws-cdk-lib.aws_ec2.IMachineImage

Construct an Amazon Linux 2 image from the latest EKS Optimized AMI published in SSM.

#### Initializers <a name=\\"Initializers\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

new aws_eks.EksOptimizedImage(props?: EksOptimizedImageProps)
\`\`\`

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.props\\">props</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps\\">EksOptimizedImageProps</a></code> | *No description.* |

---

##### \`props\`<sup>Optional</sup> <a name=\\"props\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.Initializer.parameter.props\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImageProps\\">EksOptimizedImageProps</a>

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EksOptimizedImage.getImage\\">getImage</a></code> | Return the correct image. |

---

##### \`getImage\` <a name=\\"getImage\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.getImage\\"></a>

\`\`\`typescript
public getImage(scope: Construct)
\`\`\`

###### \`scope\`<sup>Required</sup> <a name=\\"scope\\" id=\\"aws-cdk-lib.aws_eks.EksOptimizedImage.getImage.parameter.scope\\"></a>

- *Type:* constructs.Construct

---




### EndpointAccess <a name=\\"EndpointAccess\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess\\"></a>

Endpoint access characteristics.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom\\">onlyFrom</a></code> | Restrict public access to specific CIDR blocks. |

---

##### \`onlyFrom\` <a name=\\"onlyFrom\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom\\"></a>

\`\`\`typescript
public onlyFrom(cidr: string)
\`\`\`

###### \`cidr\`<sup>Required</sup> <a name=\\"cidr\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.onlyFrom.parameter.cidr\\"></a>

- *Type:* string

CIDR blocks.

---



#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PRIVATE\\">PRIVATE</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | The cluster endpoint is only accessible through your VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC\\">PUBLIC</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | The cluster endpoint is accessible from outside of your VPC. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\">PUBLIC_AND_PRIVATE</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a></code> | The cluster endpoint is accessible from outside of your VPC. |

---

##### \`PRIVATE\`<sup>Required</sup> <a name=\\"PRIVATE\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PRIVATE\\"></a>

\`\`\`typescript
public readonly PRIVATE: EndpointAccess;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>

The cluster endpoint is only accessible through your VPC.

Worker node traffic to the endpoint will stay within your VPC.

---

##### \`PUBLIC\`<sup>Required</sup> <a name=\\"PUBLIC\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC\\"></a>

\`\`\`typescript
public readonly PUBLIC: EndpointAccess;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic will leave your VPC to connect to the endpoint.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

##### \`PUBLIC_AND_PRIVATE\`<sup>Required</sup> <a name=\\"PUBLIC_AND_PRIVATE\\" id=\\"aws-cdk-lib.aws_eks.EndpointAccess.property.PUBLIC_AND_PRIVATE\\"></a>

\`\`\`typescript
public readonly PUBLIC_AND_PRIVATE: EndpointAccess;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.EndpointAccess\\">EndpointAccess</a>

The cluster endpoint is accessible from outside of your VPC.

Worker node traffic to the endpoint will stay within your VPC.  By default, the endpoint is exposed to all adresses. You can optionally limit the CIDR blocks that can access the public endpoint using the \`PUBLIC_AND_PRIVATE.onlyFrom\` method. If you limit access to specific CIDR blocks, you must ensure that the CIDR blocks that you specify include the addresses that worker nodes and Fargate pods (if you use them) access the public endpoint from.

---

### KubernetesVersion <a name=\\"KubernetesVersion\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion\\"></a>

Kubernetes cluster version.


#### Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.of\\">of</a></code> | Custom cluster version. |

---

##### \`of\` <a name=\\"of\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.of\\"></a>

\`\`\`typescript
import { aws_eks } from 'aws-cdk-lib'

aws_eks.KubernetesVersion.of(version: string)
\`\`\`

###### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.of.parameter.version\\"></a>

- *Type:* string

custom version number.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.version\\">version</a></code> | <code>string</code> | cluster version number. |

---

##### \`version\`<sup>Required</sup> <a name=\\"version\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.version\\"></a>

\`\`\`typescript
public readonly version: string;
\`\`\`

- *Type:* string

cluster version number.

---

#### Constants <a name=\\"Constants\\" id=\\"Constants\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_14\\">V1_14</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.14. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_15\\">V1_15</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.15. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_16\\">V1_16</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.16. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_17\\">V1_17</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.17. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_18\\">V1_18</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.18. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_19\\">V1_19</a></code> | <code><a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a></code> | Kubernetes version 1.19. |

---

##### \`V1_14\`<sup>Required</sup> <a name=\\"V1_14\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_14\\"></a>

\`\`\`typescript
public readonly V1_14: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.14.

---

##### \`V1_15\`<sup>Required</sup> <a name=\\"V1_15\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_15\\"></a>

\`\`\`typescript
public readonly V1_15: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.15.

---

##### \`V1_16\`<sup>Required</sup> <a name=\\"V1_16\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_16\\"></a>

\`\`\`typescript
public readonly V1_16: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.16.

---

##### \`V1_17\`<sup>Required</sup> <a name=\\"V1_17\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_17\\"></a>

\`\`\`typescript
public readonly V1_17: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.17.

---

##### \`V1_18\`<sup>Required</sup> <a name=\\"V1_18\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_18\\"></a>

\`\`\`typescript
public readonly V1_18: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.18.

---

##### \`V1_19\`<sup>Required</sup> <a name=\\"V1_19\\" id=\\"aws-cdk-lib.aws_eks.KubernetesVersion.property.V1_19\\"></a>

\`\`\`typescript
public readonly V1_19: KubernetesVersion;
\`\`\`

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.KubernetesVersion\\">KubernetesVersion</a>

Kubernetes version 1.19.

---

## Protocols <a name=\\"Protocols\\" id=\\"Protocols\\"></a>

### ICluster <a name=\\"ICluster\\" id=\\"aws-cdk-lib.aws_eks.ICluster\\"></a>

- *Extends:* aws-cdk-lib.IResource, aws-cdk-lib.aws_ec2.IConnectable

- *Implemented By:* <a href=\\"#aws-cdk-lib.aws_eks.Cluster\\">Cluster</a>, <a href=\\"#aws-cdk-lib.aws_eks.FargateCluster\\">FargateCluster</a>, <a href=\\"#aws-cdk-lib.aws_eks.ICluster\\">ICluster</a>

An EKS cluster.

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addCdk8sChart\\">addCdk8sChart</a></code> | Defines a CDK8s chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addHelmChart\\">addHelmChart</a></code> | Defines a Helm chart in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addManifest\\">addManifest</a></code> | Defines a Kubernetes resource in this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.addServiceAccount\\">addServiceAccount</a></code> | Creates a new service account with corresponding IAM Role (IRSA). |

---

##### \`addCdk8sChart\` <a name=\\"addCdk8sChart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart\\"></a>

\`\`\`typescript
public addCdk8sChart(id: string, chart: Construct)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`chart\`<sup>Required</sup> <a name=\\"chart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addCdk8sChart.parameter.chart\\"></a>

- *Type:* constructs.Construct

the cdk8s chart.

---

##### \`addHelmChart\` <a name=\\"addHelmChart\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart\\"></a>

\`\`\`typescript
public addHelmChart(id: string, options: HelmChartOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.id\\"></a>

- *Type:* string

logical id of this chart.

---

###### \`options\`<sup>Required</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addHelmChart.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.HelmChartOptions\\">HelmChartOptions</a>

options of this chart.

---

##### \`addManifest\` <a name=\\"addManifest\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest\\"></a>

\`\`\`typescript
public addManifest(id: string, manifest: {[ key: string ]: any})
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest.parameter.id\\"></a>

- *Type:* string

logical id of this manifest.

---

###### \`manifest\`<sup>Required</sup> <a name=\\"manifest\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addManifest.parameter.manifest\\"></a>

- *Type:* {[ key: string ]: any}

a list of Kubernetes resource specifications.

---

##### \`addServiceAccount\` <a name=\\"addServiceAccount\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount\\"></a>

\`\`\`typescript
public addServiceAccount(id: string, options?: ServiceAccountOptions)
\`\`\`

###### \`id\`<sup>Required</sup> <a name=\\"id\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.id\\"></a>

- *Type:* string

logical id of service account.

---

###### \`options\`<sup>Optional</sup> <a name=\\"options\\" id=\\"aws-cdk-lib.aws_eks.ICluster.addServiceAccount.parameter.options\\"></a>

- *Type:* <a href=\\"#aws-cdk-lib.aws_eks.ServiceAccountOptions\\">ServiceAccountOptions</a>

service account options.

---

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.node\\">node</a></code> | <code>constructs.Node</code> | The tree node. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.env\\">env</a></code> | <code>aws-cdk-lib.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.stack\\">stack</a></code> | <code>aws-cdk-lib.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.connections\\">connections</a></code> | <code>aws-cdk-lib.aws_ec2.Connections</code> | *No description.* |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterArn\\">clusterArn</a></code> | <code>string</code> | The unique ARN assigned to the service by AWS in the form of arn:aws:eks:. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterCertificateAuthorityData\\">clusterCertificateAuthorityData</a></code> | <code>string</code> | The certificate-authority-data for your cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\">clusterEncryptionConfigKeyArn</a></code> | <code>string</code> | Amazon Resource Name (ARN) or alias of the customer master key (CMK). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterEndpoint\\">clusterEndpoint</a></code> | <code>string</code> | The API Server endpoint URL. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterName\\">clusterName</a></code> | <code>string</code> | The physical name of the Cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroup\\">clusterSecurityGroup</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup</code> | The cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroupId\\">clusterSecurityGroupId</a></code> | <code>string</code> | The id of the cluster security group that was created by Amazon EKS for the cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.openIdConnectProvider\\">openIdConnectProvider</a></code> | <code>aws-cdk-lib.aws_iam.IOpenIdConnectProvider</code> | The Open ID Connect Provider of the cluster used to configure Service Accounts. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.prune\\">prune</a></code> | <code>boolean</code> | Indicates whether Kubernetes resources can be automatically pruned. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.vpc\\">vpc</a></code> | <code>aws-cdk-lib.aws_ec2.IVpc</code> | The VPC in which this Cluster was created. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlEnvironment\\">kubectlEnvironment</a></code> | <code>{[ key: string ]: string}</code> | Custom environment variables when running \`kubectl\` against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlLayer\\">kubectlLayer</a></code> | <code>aws-cdk-lib.aws_lambda.ILayerVersion</code> | An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlMemory\\">kubectlMemory</a></code> | <code>aws-cdk-lib.Size</code> | Amount of memory to allocate to the provider's lambda function. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlPrivateSubnets\\">kubectlPrivateSubnets</a></code> | <code>aws-cdk-lib.aws_ec2.ISubnet[]</code> | Subnets to host the \`kubectl\` compute resources. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlRole\\">kubectlRole</a></code> | <code>aws-cdk-lib.aws_iam.IRole</code> | An IAM role that can perform kubectl operations against this cluster. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.ICluster.property.kubectlSecurityGroup\\">kubectlSecurityGroup</a></code> | <code>aws-cdk-lib.aws_ec2.ISecurityGroup</code> | A security group to use for \`kubectl\` execution. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.node\\"></a>

\`\`\`typescript
public readonly node: Node;
\`\`\`

- *Type:* constructs.Node

The tree node.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.env\\"></a>

\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* aws-cdk-lib.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.stack\\"></a>

\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* aws-cdk-lib.Stack

The stack in which this resource is defined.

---

##### \`connections\`<sup>Required</sup> <a name=\\"connections\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.connections\\"></a>

\`\`\`typescript
public readonly connections: Connections;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.Connections

---

##### \`clusterArn\`<sup>Required</sup> <a name=\\"clusterArn\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterArn\\"></a>

\`\`\`typescript
public readonly clusterArn: string;
\`\`\`

- *Type:* string

The unique ARN assigned to the service by AWS in the form of arn:aws:eks:.

---

##### \`clusterCertificateAuthorityData\`<sup>Required</sup> <a name=\\"clusterCertificateAuthorityData\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterCertificateAuthorityData\\"></a>

\`\`\`typescript
public readonly clusterCertificateAuthorityData: string;
\`\`\`

- *Type:* string

The certificate-authority-data for your cluster.

---

##### \`clusterEncryptionConfigKeyArn\`<sup>Required</sup> <a name=\\"clusterEncryptionConfigKeyArn\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterEncryptionConfigKeyArn\\"></a>

\`\`\`typescript
public readonly clusterEncryptionConfigKeyArn: string;
\`\`\`

- *Type:* string

Amazon Resource Name (ARN) or alias of the customer master key (CMK).

---

##### \`clusterEndpoint\`<sup>Required</sup> <a name=\\"clusterEndpoint\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterEndpoint\\"></a>

\`\`\`typescript
public readonly clusterEndpoint: string;
\`\`\`

- *Type:* string

The API Server endpoint URL.

---

##### \`clusterName\`<sup>Required</sup> <a name=\\"clusterName\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterName\\"></a>

\`\`\`typescript
public readonly clusterName: string;
\`\`\`

- *Type:* string

The physical name of the Cluster.

---

##### \`clusterSecurityGroup\`<sup>Required</sup> <a name=\\"clusterSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroup\\"></a>

\`\`\`typescript
public readonly clusterSecurityGroup: ISecurityGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup

The cluster security group that was created by Amazon EKS for the cluster.

---

##### \`clusterSecurityGroupId\`<sup>Required</sup> <a name=\\"clusterSecurityGroupId\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.clusterSecurityGroupId\\"></a>

\`\`\`typescript
public readonly clusterSecurityGroupId: string;
\`\`\`

- *Type:* string

The id of the cluster security group that was created by Amazon EKS for the cluster.

---

##### \`openIdConnectProvider\`<sup>Required</sup> <a name=\\"openIdConnectProvider\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.openIdConnectProvider\\"></a>

\`\`\`typescript
public readonly openIdConnectProvider: IOpenIdConnectProvider;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IOpenIdConnectProvider

The Open ID Connect Provider of the cluster used to configure Service Accounts.

---

##### \`prune\`<sup>Required</sup> <a name=\\"prune\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.prune\\"></a>

\`\`\`typescript
public readonly prune: boolean;
\`\`\`

- *Type:* boolean

Indicates whether Kubernetes resources can be automatically pruned.

When this is enabled (default), prune labels will be allocated and injected to each resource. These labels will then be used when issuing the \`kubectl apply\` operation with the \`--prune\` switch.

---

##### \`vpc\`<sup>Required</sup> <a name=\\"vpc\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.vpc\\"></a>

\`\`\`typescript
public readonly vpc: IVpc;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.IVpc

The VPC in which this Cluster was created.

---

##### \`kubectlEnvironment\`<sup>Optional</sup> <a name=\\"kubectlEnvironment\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlEnvironment\\"></a>

\`\`\`typescript
public readonly kubectlEnvironment: {[ key: string ]: string};
\`\`\`

- *Type:* {[ key: string ]: string}

Custom environment variables when running \`kubectl\` against this cluster.

---

##### \`kubectlLayer\`<sup>Optional</sup> <a name=\\"kubectlLayer\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlLayer\\"></a>

\`\`\`typescript
public readonly kubectlLayer: ILayerVersion;
\`\`\`

- *Type:* aws-cdk-lib.aws_lambda.ILayerVersion

An AWS Lambda layer that includes \`kubectl\`, \`helm\` and the \`aws\` CLI.

If not defined, a default layer will be used.

---

##### \`kubectlMemory\`<sup>Optional</sup> <a name=\\"kubectlMemory\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlMemory\\"></a>

\`\`\`typescript
public readonly kubectlMemory: Size;
\`\`\`

- *Type:* aws-cdk-lib.Size

Amount of memory to allocate to the provider's lambda function.

---

##### \`kubectlPrivateSubnets\`<sup>Optional</sup> <a name=\\"kubectlPrivateSubnets\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlPrivateSubnets\\"></a>

\`\`\`typescript
public readonly kubectlPrivateSubnets: ISubnet[];
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISubnet[]

Subnets to host the \`kubectl\` compute resources.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

##### \`kubectlRole\`<sup>Optional</sup> <a name=\\"kubectlRole\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlRole\\"></a>

\`\`\`typescript
public readonly kubectlRole: IRole;
\`\`\`

- *Type:* aws-cdk-lib.aws_iam.IRole

An IAM role that can perform kubectl operations against this cluster.

The role should be mapped to the \`system:masters\` Kubernetes RBAC role.

---

##### \`kubectlSecurityGroup\`<sup>Optional</sup> <a name=\\"kubectlSecurityGroup\\" id=\\"aws-cdk-lib.aws_eks.ICluster.property.kubectlSecurityGroup\\"></a>

\`\`\`typescript
public readonly kubectlSecurityGroup: ISecurityGroup;
\`\`\`

- *Type:* aws-cdk-lib.aws_ec2.ISecurityGroup

A security group to use for \`kubectl\` execution.

If this is undefined, the k8s endpoint is expected to be accessible publicly.

---

### INodegroup <a name=\\"INodegroup\\" id=\\"aws-cdk-lib.aws_eks.INodegroup\\"></a>

- *Extends:* aws-cdk-lib.IResource

- *Implemented By:* <a href=\\"#aws-cdk-lib.aws_eks.Nodegroup\\">Nodegroup</a>, <a href=\\"#aws-cdk-lib.aws_eks.INodegroup\\">INodegroup</a>

NodeGroup interface.


#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Name** | **Type** | **Description** |
| --- | --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.node\\">node</a></code> | <code>constructs.Node</code> | The tree node. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.env\\">env</a></code> | <code>aws-cdk-lib.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.stack\\">stack</a></code> | <code>aws-cdk-lib.Stack</code> | The stack in which this resource is defined. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.INodegroup.property.nodegroupName\\">nodegroupName</a></code> | <code>string</code> | Name of the nodegroup. |

---

##### \`node\`<sup>Required</sup> <a name=\\"node\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.node\\"></a>

\`\`\`typescript
public readonly node: Node;
\`\`\`

- *Type:* constructs.Node

The tree node.

---

##### \`env\`<sup>Required</sup> <a name=\\"env\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.env\\"></a>

\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* aws-cdk-lib.ResourceEnvironment

The environment this resource belongs to.

For resources that are created and managed by the CDK (generally, those created by creating new class instances like Role, Bucket, etc.), this is always the same as the environment of the stack they belong to; however, for imported resources (those obtained from static methods like fromRoleArn, fromBucketName, etc.), that might be different than the stack they were imported into.

---

##### \`stack\`<sup>Required</sup> <a name=\\"stack\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.stack\\"></a>

\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* aws-cdk-lib.Stack

The stack in which this resource is defined.

---

##### \`nodegroupName\`<sup>Required</sup> <a name=\\"nodegroupName\\" id=\\"aws-cdk-lib.aws_eks.INodegroup.property.nodegroupName\\"></a>

\`\`\`typescript
public readonly nodegroupName: string;
\`\`\`

- *Type:* string

Name of the nodegroup.

---

## Enums <a name=\\"Enums\\" id=\\"Enums\\"></a>

### CapacityType <a name=\\"CapacityType\\" id=\\"aws-cdk-lib.aws_eks.CapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType.SPOT\\">SPOT</a></code> | spot instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CapacityType.ON_DEMAND\\">ON_DEMAND</a></code> | on-demand instances. |

---

Capacity type of the managed node group.

#### \`SPOT\` <a name=\\"SPOT\\" id=\\"aws-cdk-lib.aws_eks.CapacityType.SPOT\\"></a>

spot instances.

---


#### \`ON_DEMAND\` <a name=\\"ON_DEMAND\\" id=\\"aws-cdk-lib.aws_eks.CapacityType.ON_DEMAND\\"></a>

on-demand instances.

---


### CoreDnsComputeType <a name=\\"CoreDnsComputeType\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType.EC2\\">EC2</a></code> | Deploy CoreDNS on EC2 instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CoreDnsComputeType.FARGATE\\">FARGATE</a></code> | Deploy CoreDNS on Fargate-managed instances. |

---

The type of compute resources to use for CoreDNS.

#### \`EC2\` <a name=\\"EC2\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType.EC2\\"></a>

Deploy CoreDNS on EC2 instances.

---


#### \`FARGATE\` <a name=\\"FARGATE\\" id=\\"aws-cdk-lib.aws_eks.CoreDnsComputeType.FARGATE\\"></a>

Deploy CoreDNS on Fargate-managed instances.

---


### CpuArch <a name=\\"CpuArch\\" id=\\"aws-cdk-lib.aws_eks.CpuArch\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch.ARM_64\\">ARM_64</a></code> | arm64 CPU type. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.CpuArch.X86_64\\">X86_64</a></code> | x86_64 CPU type. |

---

CPU architecture.

#### \`ARM_64\` <a name=\\"ARM_64\\" id=\\"aws-cdk-lib.aws_eks.CpuArch.ARM_64\\"></a>

arm64 CPU type.

---


#### \`X86_64\` <a name=\\"X86_64\\" id=\\"aws-cdk-lib.aws_eks.CpuArch.X86_64\\"></a>

x86_64 CPU type.

---


### DefaultCapacityType <a name=\\"DefaultCapacityType\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType.NODEGROUP\\">NODEGROUP</a></code> | managed node group. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.DefaultCapacityType.EC2\\">EC2</a></code> | EC2 autoscaling group. |

---

The default capacity type for the cluster.

#### \`NODEGROUP\` <a name=\\"NODEGROUP\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType.NODEGROUP\\"></a>

managed node group.

---


#### \`EC2\` <a name=\\"EC2\\" id=\\"aws-cdk-lib.aws_eks.DefaultCapacityType.EC2\\"></a>

EC2 autoscaling group.

---


### MachineImageType <a name=\\"MachineImageType\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType.AMAZON_LINUX_2\\">AMAZON_LINUX_2</a></code> | Amazon EKS-optimized Linux AMI. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.MachineImageType.BOTTLEROCKET\\">BOTTLEROCKET</a></code> | Bottlerocket AMI. |

---

The machine image type.

#### \`AMAZON_LINUX_2\` <a name=\\"AMAZON_LINUX_2\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType.AMAZON_LINUX_2\\"></a>

Amazon EKS-optimized Linux AMI.

---


#### \`BOTTLEROCKET\` <a name=\\"BOTTLEROCKET\\" id=\\"aws-cdk-lib.aws_eks.MachineImageType.BOTTLEROCKET\\"></a>

Bottlerocket AMI.

---


### NodegroupAmiType <a name=\\"NodegroupAmiType\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64\\">AL2_X86_64</a></code> | Amazon Linux 2 (x86-64). |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\">AL2_X86_64_GPU</a></code> | Amazon Linux 2 with GPU support. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_ARM_64\\">AL2_ARM_64</a></code> | Amazon Linux 2 (ARM-64). |

---

The AMI type for your node group.

GPU instance types should use the \`AL2_x86_64_GPU\` AMI type, which uses the Amazon EKS-optimized Linux AMI with GPU support. Non-GPU instances should use the \`AL2_x86_64\` AMI type, which uses the Amazon EKS-optimized Linux AMI.

#### \`AL2_X86_64\` <a name=\\"AL2_X86_64\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64\\"></a>

Amazon Linux 2 (x86-64).

---


#### \`AL2_X86_64_GPU\` <a name=\\"AL2_X86_64_GPU\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_X86_64_GPU\\"></a>

Amazon Linux 2 with GPU support.

---


#### \`AL2_ARM_64\` <a name=\\"AL2_ARM_64\\" id=\\"aws-cdk-lib.aws_eks.NodegroupAmiType.AL2_ARM_64\\"></a>

Amazon Linux 2 (ARM-64).

---


### NodeType <a name=\\"NodeType\\" id=\\"aws-cdk-lib.aws_eks.NodeType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.STANDARD\\">STANDARD</a></code> | Standard instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.GPU\\">GPU</a></code> | GPU instances. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.NodeType.INFERENTIA\\">INFERENTIA</a></code> | Inferentia instances. |

---

Whether the worker nodes should support GPU or just standard instances.

#### \`STANDARD\` <a name=\\"STANDARD\\" id=\\"aws-cdk-lib.aws_eks.NodeType.STANDARD\\"></a>

Standard instances.

---


#### \`GPU\` <a name=\\"GPU\\" id=\\"aws-cdk-lib.aws_eks.NodeType.GPU\\"></a>

GPU instances.

---


#### \`INFERENTIA\` <a name=\\"INFERENTIA\\" id=\\"aws-cdk-lib.aws_eks.NodeType.INFERENTIA\\"></a>

Inferentia instances.

---


### PatchType <a name=\\"PatchType\\" id=\\"aws-cdk-lib.aws_eks.PatchType\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.JSON\\">JSON</a></code> | JSON Patch, RFC 6902. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.MERGE\\">MERGE</a></code> | JSON Merge patch. |
| <code><a href=\\"#aws-cdk-lib.aws_eks.PatchType.STRATEGIC\\">STRATEGIC</a></code> | Strategic merge patch. |

---

Values for \`kubectl patch\` --type argument.

#### \`JSON\` <a name=\\"JSON\\" id=\\"aws-cdk-lib.aws_eks.PatchType.JSON\\"></a>

JSON Patch, RFC 6902.

---


#### \`MERGE\` <a name=\\"MERGE\\" id=\\"aws-cdk-lib.aws_eks.PatchType.MERGE\\"></a>

JSON Merge patch.

---


#### \`STRATEGIC\` <a name=\\"STRATEGIC\\" id=\\"aws-cdk-lib.aws_eks.PatchType.STRATEGIC\\"></a>

Strategic merge patch.

---

"
`;
